(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{"+NK8":function(e,r,t){"use strict";t.r(r),r.default='<div>\r\n    <div class="inline-block display-flex">\r\n        <h3 class="po-head lead">Receiving Log Report</h3>\r\n     \r\n      \r\n    </div>\r\n    <p-table #dt\r\n             class="rpo-table-cstm rro-table-cstm"\r\n             [value]="receivingLogReportList"\r\n             [first]="0"\r\n             [rows]="pageSize"\r\n             [paginator]="true"\r\n             [pageLinks]="3"\r\n             [rowsPerPageOptions]="[10, 20, 50, 100]"\r\n             [columns]="headers"\r\n             selectionMode="multiple"\r\n             expandableRows="true"\r\n             rowExpandMode="single"\r\n             [lazy]="true"\r\n             (onLazyLoad)="loadData($event)"\r\n             [resizableColumns]="true"\r\n             [reorderableColumns]="true"\r\n             [totalRecords]="totalRecords"\r\n             [scrollable]="true"\r\n             [metaKeySelection]="true"\r\n             scrollHeight="450px">\r\n        <ng-template pTemplate="caption">\r\n            <div style="text-align: right;margin-left:-6px !important;min-height: 30px;">\r\n\r\n                <h5 style="text-align:left">Management Structure Search</h5>\r\n                <div class="inline-block display-flex">\r\n              \r\n                   <div class="card" style="width:90%">\r\n                    \r\n                    <div class="inline-block display-flex" style="margin-top:10px">\r\n                     \r\n                    <div class="form-group col-sm-2" style="margin-left:10px">\r\n                        <select class="form-control" name="company" [(ngModel)]="managementStructure.companyId" \r\n                        (change)="selectedLegalEntity(managementStructure.companyId);" #companyName="ngModel" required>\r\n                            <option value="0">Select Legal Entity</option>\r\n                            <option *ngFor="let name of legalEntityList" [ngValue]="name.value">{{name.label}}</option>\r\n                        </select>\r\n                        <div *ngIf="companyName.invalid && (companyName.dirty || companyName.touched)" class="alert alert-danger alert-danger-cstm">\r\n                                <div *ngIf="companyName.errors.required">\r\n                                    <small> Legal Entity Name is required </small>\r\n                                </div>\r\n                        </div>        \r\n                    </div>\r\n                    <div class="form-group  col-sm-2" style="margin-left:10px">\r\n                        <select class="form-control" [(ngModel)]="managementStructure.buId" name="buId" (change)="selectedBusinessUnit(managementStructure.buId)">\r\n                            <option value="0">-- Select --</option>\r\n                            <option *ngFor="let name of businessUnitList" [ngValue]="name.value">{{name.label}}</option>\r\n                        </select>\r\n                    </div>\r\n                    <div class="form-group  col-sm-2" style="margin-left:10px">\r\n                        <select class="form-control " [(ngModel)]="managementStructure.divisionId" name="divisionId" (change)="selectedDivision(managementStructure.divisionId)">\r\n                            <option value="0">-- Select --</option>\r\n                            <option *ngFor="let name of divisionList" [ngValue]="name.value">{{name.label}}</option>\r\n                        </select>\r\n                    </div>\r\n                    <div class="form-group  col-sm-2" style="margin-left:10px">\r\n                        <select class="form-control " [(ngModel)]="managementStructure.departmentId" name="departmentId" (change)="selectedDepartment(managementStructure.departmentId)">\r\n                            <option value="0">-- Select --</option>\r\n                            <option *ngFor="let name of departmentList" [ngValue]="name.value">{{name.label}}</option>\r\n                        </select>\r\n                    </div>\r\n                    <button type="button" pButton icon="fa fa-search"\r\n                    class="btn btn-primary" \r\n                     style="padding: 4px 12px !important;height:25px"></button>\r\n                    </div>\r\n                  \r\n                  \r\n            </div>\r\n            <div style="text-align: right;">\r\n                    \r\n              \r\n    \r\n                   <button type="button"\r\n                           class="btn btn-primary"\r\n\r\n                           pButton\r\n                           icon="fa-download"\r\n                           iconPos="left"\r\n                           label="Download" matTooltip="Download" matTooltipPosition="above"\r\n                           (click)="downloadStockLineReport()"></button>\r\n                          \r\n    </div>\r\n            </div>\r\n           \r\n   \r\n          \r\n          \r\n        </div>\r\n        </ng-template>\r\n        <ng-template pTemplate="colgroup" let-columns>\r\n            <colgroup>\r\n                <col *ngFor="let col of columns" style="width:130px">\r\n            </colgroup>\r\n        </ng-template>\r\n        <ng-template pTemplate="header" let-columns>\r\n            <tr>\r\n\r\n                <th *ngFor="let col of columns" pResizableColumn pReorderableColumn\r\n                    [pSortableColumn]="col.field" style="text-align:center;">\r\n                    {{ col.header }}\r\n                    <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                </th>\r\n            </tr>\r\n            <tr>\r\n                <th style="width:120px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                    \x3c!-- <input type="text" style="width:100%;" pInputText   (keyup)="filterData($event)"> --\x3e\r\n                    <input style="width:100%;" pInputText type="text" (input)="dt.filter($event.target.value, col.field, \'contains\');">\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate="body"\r\n                     let-rowData\r\n                     let-rowIndex="rowIndex"\r\n                     let-expanded="expanded"\r\n                     let-columns="columns">\r\n            <tr class="ui-widget-header">\r\n                <td *ngFor="let col of columns" style="text-overflow: ellipsis; overflow: hidden;">\r\n                    {{rowData[col.field]}}\r\n                </td>\r\n\r\n\r\n\r\n\r\n            </tr>\r\n\r\n        </ng-template>\r\n        <ng-template pTemplate="summary" id="footer">\r\n            <label id="footer" class="footer">Total:</label>\r\n            <input style="width: 5%;"\r\n                   [(ngModel)]="totalRecords"\r\n                   [disabled]="true"\r\n                   pInputText\r\n                   type="text" />\r\n            &nbsp;&nbsp;\r\n            <label id="footer" class="footer1">Pages Count:</label>\r\n            <input style="width: 5%;"\r\n                   [(ngModel)]="totalPages"\r\n                   [disabled]="true"\r\n                   pInputText\r\n                   type="text" />\r\n        </ng-template>\r\n    </p-table>\r\n</div>\r\n'},"+RlG":function(e,r,t){"use strict";t.r(r),r.default='\r\n<div>\r\n    <button type="button" class="btn btn-primary" (click)="ExpandAllCustomerDetailsModel()">\r\n        Open All\r\n    </button>\r\n    <button type="button" class="btn btn-secondary" (click)="CloseAllCustomerDetailsModel()">\r\n        Close All\r\n    </button> \r\n     \x3c!-- {{workFlowWorkOrderId1}} --\x3e\r\n</div>\r\n<div class="panel-group mt-2 tear_down_cls work_order_teardown" id="accordion" >\r\n    <div class="panel panel-default" *ngIf="saveTearDownData.isRemovalReasons">\r\n        <div class="panel-heading" >\r\n            <h4 class="panel-title">\r\n                <div></div>\r\n                <input type="checkbox"  class="set_cds"\r\n                [(ngModel)]="saveTearDownData.isRemovalReasons" disabled>\r\n                <a data-toggle="collapse" class=" ac_cs" href="#step1" >Removal Reasons</a>\r\n            </h4>\r\n        </div>\r\n        <div id="step1" class="panel-collapse collapse in show">\r\n            <div class="panel-body">\r\n                <div class="form-row">\r\n                    <p style="width:100%"><strong> Reason :</strong>  <span *ngIf="saveTearDownData && saveTearDownData.removalReason">{{saveTearDownData.removalReason}}</span></p>\r\n                    <p><strong>Memo :</strong>  <span *ngIf="saveTearDownData && saveTearDownData.removalReasonsMemo" [innerHTML]="saveTearDownData.removalReasonsMemo"></span></p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n    <div class="panel panel-default" *ngIf="saveTearDownData.isPmaDerBulletins">\r\n        <div class="panel-heading">\r\n            <h4 class="panel-title">\r\n                <input type="checkbox" name="contract2"  class="set_cds" disabled\r\n                [(ngModel)]="saveTearDownData.isPmaDerBulletins">\r\n                <a class="collapsed ac_cs" data-toggle="collapse" href="#step2">PMA/DER & Bulletins</a>\r\n            </h4>\r\n        </div>\r\n        <div id="step2" class="panel-collapse  collapse" >\r\n            <div class="panel-body m-lr-7">\r\n               <p><strong>Mandatory Service Bulletins:</strong> <span *ngIf="saveTearDownData && saveTearDownData.mandatoryService">{{saveTearDownData.mandatoryService}}</span></p>\r\n                <p><strong>Requested Service Bulletins :</strong> <span *ngIf="saveTearDownData && saveTearDownData.requestedService">{{saveTearDownData.requestedService}}</span> </p>\r\n                <p><strong> Service Letters :</strong>  <span *ngIf="saveTearDownData && saveTearDownData.serviceLetters">{{saveTearDownData.serviceLetters}}</span></p>\r\n                <p><strong>Pma Parts :</strong><span *ngIf="saveTearDownData && saveTearDownData.pmaParts">{{saveTearDownData.pmaParts}}</span> </p>\r\n                <p><strong>Der Repairs :</strong> <span *ngIf="saveTearDownData && saveTearDownData.derRepairs">{{saveTearDownData.derRepairs}}</span></p>\r\n </div>\r\n        </div>\r\n    </div>\r\n    <div class="panel panel-default" *ngIf="saveTearDownData.isPreliinaryReview">\r\n        <div class="panel-heading">\r\n            <h4 class="panel-title">\r\n                <input type="checkbox" name="contract44"  class="set_cds" disabled\r\n                [(ngModel)]="saveTearDownData.isPreliinaryReview">\r\n                <a class="collapsed ac_cs" data-toggle="collapse" href="#step3"> Preliinary Review</a>\r\n            </h4>\r\n        </div>\r\n        <div id="step3" class="panel-collapse  collapse" >\r\n            <div class="panel-body aircraft-panel">\r\n              <p><strong>Reason :</strong><span  *ngIf="saveTearDownData && saveTearDownData.preliinaryReviewReason">{{saveTearDownData.preliinaryReviewReason}}</span> </p>\r\n <p><strong>Memo :</strong><span  *ngIf="saveTearDownData && saveTearDownData.preliinaryReviewMemo" [innerHTML]="saveTearDownData.preliinaryReviewMemo"></span> </p>\r\n  <p><strong>Inspector :</strong> <span *ngIf="saveTearDownData && saveTearDownData.preliinaryReviewInspector">{{saveTearDownData.preliinaryReviewInspector}}</span></p>\r\n <p><strong>Date :</strong><span *ngIf="saveTearDownData && saveTearDownData.preliinaryReviewInspectorDate">{{saveTearDownData.preliinaryReviewInspectorDate | date: \'dd-MM-yyyy\'}}</span> </p>\r\n  </div>\r\n        </div>\r\n    </div>\r\n    <div class="panel panel-default" *ngIf="saveTearDownData.isPreAssmentResults">\r\n        <div class="panel-heading">\r\n            <h4 class="panel-title">\r\n                <input type="checkbox" name="contract54"  class="set_cds" disabled\r\n                [(ngModel)]="saveTearDownData.isPreAssmentResults">\r\n                <a class="collapsed ac_cs" data-toggle="collapse" href="#step4">Pre-Assessment Results</a>\r\n            </h4>\r\n        </div>\r\n        <div id="step4" class="panel-collapse collapse" >\r\n            <div class="panel-body">\r\n                <p><strong>Reason :</strong><span *ngIf="saveTearDownData && saveTearDownData.assmentResultsReason">{{saveTearDownData.assmentResultsReason}}</span> </p>\r\n                <p><strong>Memo :</strong><span *ngIf="saveTearDownData && saveTearDownData.assmentResultsMemo" [innerHTML]="saveTearDownData.assmentResultsMemo"></span> </p>\r\n                <p><strong>Technician :</strong><span *ngIf="saveTearDownData && saveTearDownData.assmentResultsTechnician">{{saveTearDownData.assmentResultsTechnician}}</span> </p>\r\n                <p><strong>Date :</strong><span *ngIf="saveTearDownData && saveTearDownData.assmentResultsTechnicianDate">{{saveTearDownData.assmentResultsTechnicianDate | date: \'dd-MM-yyyy\'}}</span> </p>\r\n                <p><strong>Inspector :</strong><span *ngIf="saveTearDownData && saveTearDownData.assmentResultsInspector">{{saveTearDownData.assmentResultsInspector}}</span></p>\r\n                <p><strong>Date :</strong> <span *ngIf="saveTearDownData && saveTearDownData.assmentResultsInspectorDate">{{saveTearDownData.assmentResultsInspectorDate | date: \'dd-MM-yyyy\'}}</span></p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="panel panel-default" *ngIf="saveTearDownData.isDiscovery">\r\n        <div class="panel-heading">\r\n            <h4 class="panel-title">\r\n                <input type="checkbox" name="contract74"  class="set_cds" disabled\r\n                [(ngModel)]="saveTearDownData.isDiscovery">\r\n                <a class="collapsed ac_cs" data-toggle="collapse" href="#step5">Teardown Discovery</a>\r\n            </h4>\r\n        </div>\r\n        <div id="step5" class="panel-collapse collapse">\r\n            <div class="panel-body">\r\n                <p><strong>Reason :</strong><span *ngIf="saveTearDownData && saveTearDownData.discoveryReason">{{saveTearDownData.discoveryReason}}</span> </p>\r\n            \r\n                <p><strong>Memo :</strong><span *ngIf="saveTearDownData && saveTearDownData.discoveryMemo" [innerHTML]="saveTearDownData.discoveryMemo"></span> </p>\r\n                <p><strong>Technician :</strong> <span *ngIf="saveTearDownData && saveTearDownData.discoveryTechnician">{{saveTearDownData.discoveryTechnician}}</span></p>\r\n                <p><strong>Date :</strong> <span *ngIf="saveTearDownData && saveTearDownData.discoveryTechnicianDate">{{saveTearDownData.discoveryTechnicianDate | date: \'dd-MM-yyyy\'}}</span></p>\r\n                <p><strong>Inspector :</strong> <span *ngIf="saveTearDownData && saveTearDownData.discoveryInspector">{{saveTearDownData.discoveryInspector}}</span></p>\r\n                <p><strong>Date :</strong><span *ngIf="saveTearDownData && saveTearDownData.discoveryInspectorDate">{{saveTearDownData.discoveryInspectorDate | date: \'dd-MM-yyyy\'}}</span> </p>\r\n </div>\r\n        </div>\r\n    </div>\r\n    <div class="panel panel-default" *ngIf="saveTearDownData.isPreAssemblyInspection">\r\n        <div class="panel-heading">\r\n            <h4 class="panel-title">\r\n                <input type="checkbox" name="contract85"  class="set_cds" disabled\r\n                [(ngModel)]="saveTearDownData.isPreAssemblyInspection">\r\n                <a class="collapsed ac_cs" data-toggle="collapse" href="#step6">Pre Assembly Inspection</a>\r\n            </h4>\r\n        </div>\r\n        <div id="step6" class="panel-collapse  collapse">\r\n            <div class="panel-body m-lr-7">\r\n                <p><strong>Reason :</strong><span *ngIf="saveTearDownData && saveTearDownData.assemblyInspectionReason">{{saveTearDownData.assemblyInspectionReason}}</span> </p>\r\n                <p><strong>Memo :</strong><span *ngIf="saveTearDownData && saveTearDownData.assemblyInspectionMemo" [innerHTML]="saveTearDownData.assemblyInspectionMemo"></span> </p>\r\n                <p><strong>Technician :</strong><span *ngIf="saveTearDownData && saveTearDownData.assemblyInspectionTechnician">{{saveTearDownData.assemblyInspectionTechnician}}</span> </p>\r\n                <p><strong>Date :</strong><span *ngIf="saveTearDownData && saveTearDownData.assemblyInspectionTechnicianDate">{{saveTearDownData.assemblyInspectionTechnicianDate | date: \'dd-MM-yyyy\'}}</span> </p>\r\n                <p><strong>Inspector :</strong><span *ngIf="saveTearDownData && saveTearDownData.assemblyInspectionInspector">{{saveTearDownData.assemblyInspectionInspector}}</span> </p>\r\n                <p><strong>Date :</strong><span *ngIf="saveTearDownData && saveTearDownData.assemblyInspectionInspectorDate">{{saveTearDownData.assemblyInspectionInspectorDate | date: \'dd-MM-yyyy\'}}</span> </p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="panel panel-default" *ngIf="saveTearDownData.isWorkPerformed">\r\n        <div class="panel-heading">\r\n            <h4 class="panel-title">\r\n                <input type="checkbox" name="contract35"  class="set_cds" disabled\r\n                [(ngModel)]="saveTearDownData.isWorkPerformed">\r\n                <a class="collapsed ac_cs" data-toggle="collapse" href="#step7">Worked Performed</a>\r\n            </h4>\r\n        </div>\r\n        <div id="step7" class="panel-collapse  collapse">\r\n            <div class="panel-body m-lr-7">\r\n                <p><strong>Reason :</strong><span *ngIf="saveTearDownData && saveTearDownData.workPerformedReason">{{saveTearDownData.workPerformedReason}}</span> </p>\r\n                <p><strong>Memo :</strong><span *ngIf="saveTearDownData && saveTearDownData.workPerformedMemo" [innerHTML]="saveTearDownData.workPerformedMemo"></span> </p>\r\n                <p><strong>Technician :</strong><span *ngIf="saveTearDownData && saveTearDownData.workPerformedTechnician">{{saveTearDownData.workPerformedTechnician}}</span> </p>\r\n                <p><strong>Date :</strong><span *ngIf="saveTearDownData && saveTearDownData.workPerformedTechnicianDate">{{saveTearDownData.workPerformedTechnicianDate | date: \'dd-MM-yyyy\'}}</span> </p>\r\n                <p><strong>Inspector :</strong><span *ngIf="saveTearDownData && saveTearDownData.workPerformedInspector">{{saveTearDownData.workPerformedInspector}}</span> </p>\r\n                <p><strong>Date :</strong><span *ngIf="saveTearDownData && saveTearDownData.workPerformedInspectorDate">{{saveTearDownData.workPerformedInspectorDate | date: \'dd-MM-yyyy\'}}</span> </p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="panel panel-default" *ngIf="saveTearDownData.isTestDataUsed">\r\n        <div class="panel-heading">\r\n            <h4 class="panel-title">\r\n                <input type="checkbox" name="contract85"  class="set_cds" disabled\r\n                [(ngModel)]="saveTearDownData.isTestDataUsed">\r\n                <a class="collapsed ac_cs" data-toggle="collapse" href="#step8">Test Data Used</a>\r\n            </h4>\r\n        </div>\r\n        <div id="step8" class="panel-collapse collapse">\r\n            <div class="panel-body">\r\n                <p><strong>Reason :</strong> <span *ngIf="saveTearDownData && saveTearDownData.datausedReason">{{saveTearDownData.datausedReason}}</span></p>\r\n                <p><strong>Memo :</strong> <span *ngIf="saveTearDownData && saveTearDownData.dataUsedMemo" [innerHTML]="saveTearDownData.dataUsedMemo" ></span></p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="panel panel-default" *ngIf="saveTearDownData.isBulletinsModification">\r\n        <div class="panel-heading">\r\n            <h4 class="panel-title">\r\n                <input type="checkbox" name="contract345"  class="set_cds" disabled\r\n                [(ngModel)]="saveTearDownData.isBulletinsModification">\r\n                <a class="collapsed ac_cs" data-toggle="collapse" href="#step9">Bulletins And Modifications</a>\r\n            </h4>\r\n        </div>\r\n        <div id="step9" class="panel-collapse  collapse">\r\n            <div class="panel-body">\r\n                <p><strong>Reason :</strong><span *ngIf="saveTearDownData && saveTearDownData.bulletinsModificationReason">{{saveTearDownData.bulletinsModificationReason}}</span> </p>\r\n                <p><strong>Memo :</strong><span *ngIf="saveTearDownData && saveTearDownData.bulletinsModificationMemo" [innerHTML]="saveTearDownData.bulletinsModificationMemo" ></span> </p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="panel panel-default" *ngIf="saveTearDownData.isFinalTest">\r\n        <div class="panel-heading">\r\n            <h4 class="panel-title">\r\n                <input type="checkbox" name="contract553"  class="set_cds" disabled\r\n                [(ngModel)]="saveTearDownData.isFinalTest">\r\n                <a class="collapsed ac_cs " data-toggle="collapse" href="#step10">Final Test</a>\r\n            </h4>\r\n        </div>\r\n        <div id="step10" class="panel-collapse  collapse">\r\n            <div class="panel-body m-lr-7">\r\n                <p><strong>Reason :</strong><span *ngIf="saveTearDownData && saveTearDownData.finalTestReason">{{saveTearDownData.finalTestReason}}</span> </p>\r\n                <p><strong>Memo :</strong><span *ngIf="saveTearDownData && saveTearDownData.finalTestMemo" [innerHTML]="saveTearDownData.finalTestMemo"></span> </p>\r\n                <p><strong>Technician :</strong> <span *ngIf="saveTearDownData && saveTearDownData.finalTestTechnician">{{saveTearDownData.finalTestTechnician}}</span></p>\r\n                <p><strong>Date :</strong><span *ngIf="saveTearDownData && saveTearDownData.finalTestTechnicianDate">{{saveTearDownData.finalTestTechnicianDate | date: \'dd-MM-yyyy\'}}</span> </p>\r\n                <p><strong>Inspector :</strong><span *ngIf="saveTearDownData && saveTearDownData.finalTestInspector">{{saveTearDownData.finalTestInspector}}</span> </p>\r\n                <p><strong>Date :</strong> <span *ngIf="saveTearDownData && saveTearDownData.finalTestInspectorDate">{{saveTearDownData.finalTestInspectorDate | date: \'dd-MM-yyyy\'}}</span></p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="panel panel-default" *ngIf="saveTearDownData.isFinalInspection">\r\n        <div class="panel-heading">\r\n            <h4 class="panel-title">\r\n                <input type="checkbox" name="contract866"  class="set_cds" disabled\r\n                [(ngModel)]="saveTearDownData.isFinalInspection">\r\n                <a class="collapsed ac_cs" data-toggle="collapse" href="#step11">Final Inspection</a>\r\n            </h4>\r\n        </div>\r\n        <div id="step11" class="panel-collapse  collapse">\r\n            <p><strong>Reason :</strong><span *ngIf="saveTearDownData && saveTearDownData.finalInspectionReason">{{saveTearDownData.finalInspectionReason}}</span> </p>\r\n            <p><strong>Memo :</strong><span *ngIf="saveTearDownData && saveTearDownData.finalInspectionMemo" [innerHTML]="saveTearDownData.finalInspectionMemo"></span> </p>\r\n            <p><strong>Inspector :</strong><span *ngIf="saveTearDownData && saveTearDownData.finalInspectionInspector">{{saveTearDownData.finalInspectionInspector}}</span> </p>\r\n            <p><strong>Date :</strong><span *ngIf="saveTearDownData && saveTearDownData.finalInspectionInspectorDate">{{saveTearDownData.finalInspectionInspectorDate | date: \'dd-MM-yyyy\'}}</span> </p>\r\n            <div class="panel-body m-lr-7">\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="panel panel-default" *ngIf="saveTearDownData.isAdditionalComments"> \r\n        <div class="panel-heading">\r\n            <h4 class="panel-title">\r\n                <input type="checkbox" name="contract234"  class="set_cds" disabled\r\n                [(ngModel)]="saveTearDownData.isAdditionalComments">\r\n                <a class="collapsed ac_cs" data-toggle="collapse" href="#step12">Additional Comments</a>\r\n            </h4>\r\n        </div>\r\n        <div id="step12" class="panel-collapse  collapse">\r\n            <div class="panel-body m-lr-7">\r\n                <p><strong>Reason :</strong> <span *ngIf="saveTearDownData && saveTearDownData.additionalCommentsReason">{{saveTearDownData.additionalCommentsReason}}</span></p>\r\n                <p><strong>Memo :</strong> <span *ngIf="saveTearDownData && saveTearDownData.additionalCommentsMemo" [innerHTML]="saveTearDownData.additionalCommentsMemo"></span></p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n\r\n<div class="preloader" *ngIf="isSpinnerVisible">\r\n    <div class="loading">\r\n        <div class="lds-roller">\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    </div>\r\n</div>'},"+XBk":function(e,r,t){"use strict";t.r(r),r.default='<div [@fadeInOut] class="page-content">\r\n    <div class="right_col" role="main">\r\n        <div class="col-md-12">\r\n            <div class="x_panel" style="">\r\n                <div class="x_content">\r\n                    <nav aria-label="breadcrumb">\r\n                        <ol class="breadcrumb">\r\n                            <li class="breadcrumb-item"><a routerLink="/">Dashboard</a></li>\r\n                            <li class="breadcrumb-item"><a routerLink="/">WO Setup</a></li>\r\n                            <li class="breadcrumb-item active" aria-current="page">Add Equipment</li>\r\n                        </ol>\r\n                    </nav>\r\n                    <div class="pheading">\r\n                        <h4 class="page-heading clr-green">WO Setup - Equipment</h4>\r\n                        <div class="clear mtop10"></div>\r\n\r\n                    </div>\r\n                    <div class="cdetails-top">\r\n                        <div class="col-sm-12">\r\n                            <label>Company</label>\r\n                            <span>Silverxis</span>\r\n                        </div>\r\n                        <div class="col-sm-12">\r\n                            <label>BU</label>\r\n                            <span>Adso</span>\r\n                        </div>\r\n                        <div class="col-sm-12">\r\n                            <label>Division</label>\r\n                            <span>Development</span>\r\n                        </div>\r\n                        <div class="col-sm-12">\r\n                            <label>Dept</label>\r\n                            <span>Java</span>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div class="clear"></div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class="col-md-12 col-sm-12 col-12 po-ro-setup">\r\n            <div class="x_panel">\r\n                <div class="tab-content">\r\n\r\n                    <div class="table-responsive" id="workflow-attributes-block">\r\n\r\n                        <table class="table table-bordered table-striped">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th colspan="8">EQUIPMENT &nbsp; &nbsp;<i class="fa fa-plus plus-icon"></i></th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th colspan="4"></th>\r\n                                    <th colspan="4">TOLERANCE</th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>Equipment #</th>\r\n                                    <th>Equipment Description</th>\r\n                                    <th>Item Classification</th>\r\n                                    <th>Qty</th>\r\n                                    <th>Min</th>\r\n                                    <th>Max</th>\r\n                                    <th>Expected</th>\r\n                                    <th>Findings</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>\r\n                                        <div class="inner-addon right-addon autosuggesions-add inline-block w100">\r\n                                            <i class="fa fa-search"></i>\r\n                                            <input type="text" class="form-control numberids " id="" name="" value="12345" />\r\n                                        </div>\r\n                                        <a routerLink="/app-item-master-equipment-setup" target="_blank" class="add-icon"><i class="fa fa-plus"></i></a>\r\n                                    </td>\r\n                                    <td>\r\n                                        <div class="inner-addon right-addon autosuggesions-add inline-block">\r\n                                            <input type="text" class="form-control numberids" id="" name="" value="Description" />\r\n                                        </div>\r\n                                        <a routerLink="/app-item-master-equipment-setup" target="_blank" class="add-icon"><i class="fa fa-plus"></i></a>\r\n                                    </td>\r\n                                    <td>\r\n                                        <select class="form-control w100">\r\n                                            <option value="Consumables">Consumables</option>\r\n                                            <option value="CalibratedEquipmemt">Calibrated Equipmemt</option>\r\n                                            <option value="Equipmemt" selected>Equipmemt</option>\r\n                                            <option value="Expendables">Expendables</option>\r\n                                            <option value="Kit">Kit</option>\r\n                                            <option value="Rotables">Rotables</option>\r\n                                        </select>\r\n                                    </td>\r\n                                    <td><input type="number" class="form-control w50" value="4"></td>\r\n                                    <td><input type="number" class="form-control w50" value="1"></td>\r\n                                    <td><input type="number" class="form-control w50" value="10"></td>\r\n                                    <td><input type="number" class="form-control w50" name="" value="9"></td>\r\n                                    <td><textarea placeholder="Findings Memo" class="w250" style="height:50px;padding 3px;"></textarea></td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <a routerLink="/app-work-order-equipment-check-in-out" class="btn btn-info pull-right">Equipment Check In-Out</a>\r\n\r\n\r\n                </div>\r\n                <div class="clear"></div>\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</div>'},"+Yay":function(e,r,t){"use strict";t.r(r),r.default="/* #accordion h4 a.collapsed {\r\n  font-size: 12px !important;\r\n}\r\n#accordion h4 a {\r\n  font-size: 12px !important;\r\n} */\r\n@media (min-width: 768px) {\r\n  #checkIn .col-md-3 {\r\n      max-width: 22%;\r\n      margin-right: 15px;\r\n  }\r\n}\r\n.ptable-wo-btns {\r\n  margin: 0 !important;\r\n  padding: 0 !important;\r\n  background-color: transparent !important;\r\n  border: navajowhite;\r\n  position: relative;\r\n  top: 2px;\r\n}\r\n.text-center{\r\n  padding: 5px 3px;\r\n}\r\n.asset_tablee  thead{\r\n  color: #fff;\r\n  background: #337ab7;\r\n  }\r\n.asset_tablee  tr{\r\n    padding: 4px;\r\n    border: 1px solid #ddd;\r\n    }\r\n.asset_tablee  td{\r\n  padding: 4px;\r\n  border: 1px solid #ddd;\r\n      }\r\n.cust_ma{\r\n        background: #fff;\r\n        margin-top: 30px;\r\n      }"},"/5t3":function(e,r,t){"use strict";t.r(r),r.default='<div class="card new-card" style="padding: 10px;">\r\n    \x3c!-- <div class="col-md-12">\r\n        <h4 class="po-head-sm">\r\n            Direct Labor and OH Cost\r\n            <a matTooltip="Create Direct Labor" class="plusicon-cstm new-margin" [routerLink]="[\r\n                \'/workordersmodule/workorderspages/app-direct-labour-add\'\r\n            ]">\r\n                <i class="fa fa-plus-circle fa-lg"></i>\r\n            </a>\r\n        </h4>\r\n        <hr />\r\n    </div> --\x3e\r\n    <div class="card-header bg-primary new-card-header">\r\n        <div class="row">\r\n          <div class="col">\r\n            <h4 class="new-card-heading">Direct Labor and OH Cost</h4>\r\n          </div>\r\n          <div>\r\n            <button\r\n              type="button"\r\n              class="btn-sm new-btn-primary"\r\n              [routerLink]="[\'/workordersmodule/workorderspages/app-direct-labour-add\']"\r\n            >\r\n            Create Direct Labor\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class="card-body new-card-body">\r\n\r\n    <p-table class="rpo-table-cstm rro-table-cstm" #dt [value]="directLaborList"\r\n        [rows]="pageSize" [metaKeySelection]="true" [paginator]="true" [pageLinks]="3"\r\n        [rowsPerPageOptions]="[10,20,50,100]" [columns]="selectedColumns" selectionMode="multiple"\r\n        [(selection)]="selectedColumn" [resizableColumns]="true" [reorderableColumns]="true" [scrollable]="true"\r\n        scrollHeight="450px">\r\n        <ng-template pTemplate="caption">\r\n            <div class="row">\r\n                <div class="col">\r\n                <p-multiSelect [options]="cols" [(ngModel)]="selectedColumns" optionLabel="header"\r\n                    selectedItemsLabel="{0} columns selected" [style]="{minWidth: \'200px\'}"\r\n                    defaultLabel="Choose Columns" style="float:left"></p-multiSelect>\r\n                </div>\r\n                <div class="col">\r\n                  <div\r\n                    style="width: auto !important; float: right;"\r\n                    class="inner-addon right-addon w50 inline-block g-filter-search-cstm"\r\n                  >\r\n                    <i class="fa fa-search"></i>\r\n                    <input type="text" pInputText size="50"\r\n                     class="form-control"\r\n                        (input)="dt.filterGlobal($event.target.value, \'contains\')"\r\n                        placeholder=" Filter">\r\n                    </div>\r\n                </div>\r\n              </div>\r\n              <div class="row">\r\n                <div class="col">\r\n                <button type="button" class="btn btn-primary new-table-button" pButton icon="fa-download" iconPos="left"\r\n                    label="Export Data" matTooltip="Download Data" matTooltipPosition="above"\r\n                    style="padding: 5px 12px !important;" (click)="dt.exportCSV()"></button>\r\n                <button type="button" class="btn btn-primary new-table-button" pButton icon="fa-download" iconPos="left"\r\n                    label="Export Selected Data" matTooltip="Download Selected Data" matTooltipPosition="above"\r\n                    style="padding: 5px 12px !important;"\r\n                    (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n            </div>\r\n            </div>\r\n\r\n            <div class="clear"></div>\r\n        </ng-template>\r\n\r\n        <ng-template pTemplate="colgroup" let-columns>\r\n            <colgroup>\r\n                <col *ngFor="let col of columns" style="width:130px">\r\n            </colgroup>\r\n        </ng-template>\r\n\r\n        <ng-template pTemplate="header" let-columns>\r\n            <tr>\r\n                \x3c!-- <ng-container *ngFor="let col of columns">\r\n                    <th class="text-center"\r\n                        *ngIf="col.field!=\'levelCode1\' && col.field!=\'levelCode2\' && col.field!=\'levelCode3\' && col.field!=\'levelCode4\'"\r\n                        pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n                        {{col.header}}\r\n                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                    </th>\r\n                    <th class="text-center" *ngIf="col.field==\'level1\'" colspan="4" pResizableColumn pReorderableColumn\r\n                        [pSortableColumn]="col.field">\r\n                        Management Structure\r\n                    </th>\r\n                </ng-container> --\x3e\r\n                <ng-container>\r\n                    <th class="text-center" colspan="4">\r\n                        Management Structure\r\n                    </th>\r\n                    <th class="text-center" colspan="3">\r\n                        Direct Labor (Technician/Mechanic)\r\n                    </th>\r\n                    <th class="text-center" colspan="2">\r\n                        Overhead Burden Rate\r\n                    </th>\r\n                    <th style="width: 120px; position:sticky">Actions</th>\r\n                </ng-container>\r\n\r\n            </tr>\r\n            <tr>\r\n                \x3c!-- <th *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                    <ng-container *ngIf="col.field!=\'isVerified\'">\r\n                        <input style="width:100%;" pInputText type="text"\r\n                            (input)="dt.filter($event.target.value, col.field, \'contains\')">\r\n                    </ng-container>\r\n                </th> --\x3e\r\n                <ng-container *ngFor="let col of columns">\r\n                    <th *ngIf="col.field==\'levelCode1\' || col.field==\'levelCode2\' || col.field==\'levelCode3\' || col.field==\'levelCode4\'" [ngSwitch]="col.field">\r\n                        <input style="width:100%;" pInputText type="text" (input)="dt.filter($event.target.value, col.field, col.filterMatchMode)">\r\n                    </th>\r\n                </ng-container>  \r\n                <th class="text-center" colspan="2" style="font-size: 11px !important;">\r\n                    LR to WO \r\n                    <a matTooltipPosition="above" matTooltip="What Labor Rate To Use On Work Orders?">\r\n                        <i class="fa fa-eye view_icon_adjust"></i>\r\n                    </a>\r\n                </th>  \x3c!--What Labor Rate To Use On Work Orders?--\x3e\r\n                <th class="text-center" style="font-size: 11px !important;">\r\n                    Hrs to WO \r\n                    <a matTooltipPosition="above" matTooltip="How To Apply Hours To Work Orders?">\r\n                        <i class="fa fa-eye view_icon_adjust"></i>\r\n                    </a>\r\n                </th>    \x3c!--How To Apply Hours To Work Orders?--\x3e\r\n                <th colspan="2"></th>          \r\n                <th style="width: 120px; position:sticky"></th>\r\n            </tr>\r\n            \x3c!--\r\n            <tr>\r\n                <th *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                    <input style="width:100%;" pInputText type="text" (input)="dt.filter($event.target.value, col.field, col.filterMatchMode)">\r\n\r\n                </th>\r\n            </tr>\r\n            --\x3e\r\n        </ng-template>\r\n\r\n        <ng-template pTemplate="body" let-rowIndex="rowIndex" let-rowData let-columns="columns">\r\n            <tr [pSelectableRow]="rowData" [pSelectableRowDblClick]="rowData" pReorderableRowHandle (dblclick)="viewSelectedRowdbl(rowData)">\r\n\r\n                <td *ngFor="let col of columns" class="ui-resizable-column" pReorderableRowHandle>                  \r\n                    <ng-container *ngIf="col.field!=\'averageRate\' && col.field!=\'flatAmount\'">\r\n                        {{rowData[col.field]}}\r\n                    </ng-container>\r\n                    <ng-container *ngIf="col.field==\'averageRate\' || col.field==\'flatAmount\'">\r\n                        <p class="m-0 p-0 text-right">{{rowData[col.field]}}</p>\r\n                    </ng-container> \r\n                </td>\r\n\r\n                <td style="width:120px">\r\n                    <p-inputSwitch\r\n\t\t\t\t\t[(ngModel)]="rowData[\'isActive\']"\r\n\t\t\t\t\tname="isActive{{ rowIndex }}"\r\n\t\t\t\t\t(onChange)="changeStatus(rowData)"\r\n\t\t\t\t\tmatTooltip="{{rowData[\'isActive\']==true ? \'Active\' : \'In Active\'}}" matTooltipPosition="above"\r\n\t\t\t\t    ></p-inputSwitch>\r\n                    <span> <a class="btn btn-info boxed-float-btn nobg" data-toggle="modal" data-target="#viewLabor" (click)="viewSelectedRow(rowData)" matTooltip="View" matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n                    <span><a class="btn nobg" \r\n                    (click)="onEdit(rowData)" matTooltip="Edit" \r\n                    matTooltipPosition="above"><i class="fa fa-pencil"></i></a> </span>                   \r\n                    <span data-toggle="modal" data-target="#deleteLabor"><a class="btn nobg" (click)="delete(rowData)" matTooltip="Delete" matTooltipPosition="above"><i class="fa fa-trash"></i></a></span>\r\n                    <span data-toggle="modal" data-target="#auditLabor"><a class="btn nobg" matTooltip="History" matTooltipPosition="above" (click)="getAuditHistoryById(rowData)"><i class="fa fa-history"></i></a></span>\r\n                </td>\r\n\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate="emptymessage" let-columns *ngIf="directLaborList?.length == 0">\r\n            <tr>\r\n                <td [attr.colspan]="10" class="no-records-cstm">\r\n                    No records found\r\n                </td>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate="summary" id="footer">\r\n            <label id="footer" class="footer">Total:</label>\r\n            <input style="width: 5%;" [ngModelOptions]="{standalone: true}"\r\n                [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText type="text" />\r\n            &nbsp;&nbsp;\r\n            <label id="footer" class="footer1">Pages Count:</label>\r\n            <input style="width: 5%;" [ngModelOptions]="{standalone: true}"\r\n                [ngModel]="getPageCount(dt._totalRecords, pageSize)" [disabled]="true"\r\n                pInputText type="text" />\r\n        </ng-template>\r\n    </p-table>\r\n    </div>\r\n</div>\r\n\r\n<div class="modal fade" id="deleteLabor" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-sm">\r\n      <div class="modal-content">\r\n        <div class="modal-header">\r\n          <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n          <h4 class="modal-title">Are You Sure Want to Delete?</h4>\r\n        </div>\r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-primary" data-dismiss="modal" (click)="deleteDirectLabor()">Yes</button>\r\n            <button type="button" class="btn btn-danger" data-dismiss="modal">No</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n</div>\r\n\r\n<div id="auditLabor" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-xl">  \r\n      \x3c!-- Modal content--\x3e\r\n      <div class="modal-content">\r\n        <div class="modal-header">\r\n          <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n          <h4 class="modal-title">History of Purchase Order</h4>\r\n        </div>\r\n        <div class="modal-body">\r\n            <div class="table-responsive">\r\n                <table class="table table-bordered" *ngIf="auditHistory.length> 0 else noDatavailable">\r\n                    <thead>\r\n                        <tr>\r\n                            <th colspan="4">Management Structure</th>\r\n                            <th colspan="3">Direct Labor (Technician/Mechanic)</th>\r\n                            <th colspan="2">Overhead Burden Rate</th>\r\n                            <th>IsActive</th>\r\n                            <th>Created By</th>\r\n                            <th>Created Date</th>\r\n                            <th>Updated By</th>\r\n                            <th>Updated Date</th>\r\n                        </tr>\r\n                        <tr>\r\n                            <th colspan="4"></th>\r\n                            <th colspan="2">What Labor Rate To Use On Work Orders?</th>\r\n                            <th>How To Apply Hours To Work Orders?</th>\r\n                            <th colspan="2"></th>\r\n                            <th></th>\r\n                            <th></th>\r\n                            <th></th>\r\n                            <th></th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody class="audithistory-cstm"> \r\n                        <tr *ngFor="let audit of auditHistory; let i = index;">\r\n                                <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'levelCode1\', audit.levelCode1)  ? \'black\' : \'red\'  }">{{audit.levelCode1}}</td>\r\n                                <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'levelCode2\', audit.levelCode2)  ? \'black\' : \'red\'  }">{{audit.levelCode2}}</td>\r\n                                <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'levelCode3\', audit.levelCode3)  ? \'black\' : \'red\'  }">{{audit.levelCode3}}</td>\r\n                                <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'levelCode4\', audit.levelCode4)  ? \'black\' : \'red\'  }">{{audit.levelCode4}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'laborRateIdText\', audit.laborRateIdText)  ? \'black\' : \'red\'  }">{{audit.laborRateIdText}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'laborRateId\', audit.laborRateId)  ? \'black\' : \'red\'  }">{{audit.laborRateId}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'laborHoursIdText\', audit.laborHoursIdText)  ? \'black\' : \'red\'  }">{{audit.laborHoursIdText}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'burdenRateIdText\', audit.burdenRateIdText)  ? \'black\' : \'red\'  }">{{audit.burdenRateIdText}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'averageRate\', audit.averageRate)  ? \'black\' : \'red\'  }">{{audit.averageRate}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'isActive\', audit.isActive)  ? \'black\' : \'red\'  }">{{audit.isActive}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'createdBy\', audit.createdBy)  ? \'black\' : \'red\'  }">{{audit.createdBy}}</td>\r\n                                <td>{{audit.createdDate | date: \'MM-dd-yyyy\'}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'updatedBy\', audit.updatedBy)  ? \'black\' : \'red\'  }">{{audit.updatedBy}}</td>\r\n                                <td>{{audit.updatedDate | date: \'MM-dd-yyyy\'}}</td>\r\n                            </tr>\r\n                    </tbody>                        \r\n                </table>\r\n                <ng-template #noDatavailable>\r\n                    <div class="text-center"> \r\n                            <img src="../../../assets/images/binoculars.png" style="height: 100px; width: 100px;">\r\n                            <h4 style="color: #ff5663;">No History Found </h4>\r\n                    </div>\r\n                </ng-template>  \r\n            </div>\r\n        </div>\r\n        <div class="modal-footer">\r\n          <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n        </div>\r\n      </div>\r\n  \r\n    </div>\r\n</div>\r\n\r\n<div class="modal fade" id="viewLabor" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-xl">\r\n      <div class="modal-content">\r\n        <div class="modal-header">\r\n          <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n          <div class="col-sm-3">\r\n            <h4 class="modal-title">Details of Direct Labor</h4>\r\n          </div>\r\n        </div>\r\n        <div class="modal-body modal-body-cstm">\r\n          <div>\r\n            <div class="card">\r\n                <div class="card-body">\r\n                    <div>\r\n                        <div class="form-row">\r\n                            <div class="col-md-6">\r\n                                <div>\r\n                                    <h4 class="po-head-sm">Direct Labor (Technician/Mechanic)</h4>\r\n                                    <hr />\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <div>\r\n                                        <label>\r\n                                            What Labor Rate to use on Work Orders? <span class="clr-red">*</span>\r\n                                        </label>\r\n                                        <div>\r\n                                            <label class="radio-cstm wauto" style="font-weight: normal; width: 100% !important; margin-top: 7px !important;">\r\n                                                <input type="radio" name="laborRateId" class="form-control" value="1" [(ngModel)]="directLaborData.laborRateId" disabled>\r\n                                                <span class="checkmark"></span>Use Individual Technician/Mechanic Labor Rate</label>\r\n                                        </div>\r\n                                        <div>\r\n                                            <label class="radio-cstm wauto" style="font-weight: normal; width: 100% !important; margin-top: 7px !important;">\r\n                                                <input type="radio" name="laborRateId" class="form-control" value="2" [(ngModel)]="directLaborData.laborRateId" disabled>\r\n                                                <span class="checkmark"></span>Use Average Rate of All Technician/Mechanic</label>\r\n                                        </div>\r\n                                        <div>\r\n                                            <p class="full-width"><span class="label"><b>Value: </b></span><span class="value">{{directLaborData.averageRate ? directLaborData.averageRate : \'-\'}}</span></p>\r\n                                        </div>\r\n                                    </div>            \r\n                                </div>\r\n                                <div class="form-group p-t-10">\r\n                                    <div>\r\n                                        <label>\r\n                                           How to Apply Hours to Work Orders? <span class="clr-red">*</span>\r\n                                        </label> \r\n                                        <div>\r\n                                            <label class="radio-cstm wauto" style="font-weight: normal; width: 100% !important;margin-top: 7px !important;">\r\n                                                <input type="radio" name="laborHoursId" class="form-control" value="1" [(ngModel)]="directLaborData.laborHoursId" disabled>\r\n                                                <span class="checkmark"></span>Assign Hours by Specific Actions</label>\r\n                                        </div>\r\n                                        <div>\r\n                                            <label class="radio-cstm wauto" style="font-weight: normal; width: 100% !important; margin-top: 7px !important;">\r\n                                                <input type="radio" name="laborHoursId" class="form-control" value="2" [(ngModel)]="directLaborData.laborHoursId" disabled>\r\n                                                <span class="checkmark"></span>Assign Total Hours to Work Order</label>\r\n                                        </div>\r\n                                    </div>        \r\n                                </div>\r\n\r\n                                <div class="p-t-10" style="clear: both;">\r\n                                    <h4 class="po-head-sm">Overhead Burden Rate</h4>\r\n                                    <hr />\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <div *ngIf="directLaborData.burdenRateId == \'1\'">\r\n                                        \x3c!-- <label>\r\n                                            <input type="radio" name="burdenRateId" [(ngModel)]="directLaborData.burdenRateId" value="1" disabled>\r\n                                            As A% of Technician/Mechanic Hourly Rate \r\n                                            <span class="clr-red">*</span>\r\n                                        </label> --\x3e\r\n                                        <div>\r\n                                            <label class="radio-cstm wauto" style="font-weight: normal; width: 100% !important; margin-top: 7px !important;">\r\n                                                <input type="radio" name="burdenRateId" class="form-control" value="1" [(ngModel)]="directLaborData.burdenRateId" disabled>\r\n                                                <span class="checkmark"></span>As A% of Technician/Mechanic Hourly Rate\r\n                                                <span class="clr-red">*</span>\r\n                                            </label>\r\n                                        </div>\r\n                                        <div class="form-row m-b-10">\r\n                                            <p class="full-width"><span class="label"><b>Value: </b></span><span class="value">{{directLaborData.flatAmount ? directLaborData.flatAmount : \'-\'}}</span></p>\r\n                                        </div>\r\n                                    </div>\r\n                                    \r\n                                    <div *ngIf="directLaborData.burdenRateId == \'2\'">\r\n                                        \x3c!-- <label>\r\n                                            <input type="radio" name="burdenRateId" [(ngModel)]="directLaborData.burdenRateId" value="2" disabled>\r\n                                            Flat Amount per Hour\r\n                                            <span class="clr-red">*</span>\r\n                                        </label> --\x3e\r\n                                        <div>\r\n                                            <label class="radio-cstm wauto" style="font-weight: normal; width: 100% !important; margin-top: 7px !important;">\r\n                                                <input type="radio" name="burdenRateId" class="form-control" value="2" [(ngModel)]="directLaborData.burdenRateId" disabled>\r\n                                                <span class="checkmark"></span>Flat Amount per Hour\r\n                                                <span class="clr-red">*</span>\r\n                                            </label>\r\n                                        </div>\r\n                                        <div class="form-row m-b-10">\r\n                                            <p class="full-width"><span class="label"><b>Value: </b></span><span class="value">{{directLaborData.flatAmount ? directLaborData.flatAmount : \'-\'}}</span></p>\r\n                                        </div>\r\n                                    </div>\r\n                                    \r\n                                    <div *ngIf="directLaborData.burdenRateId == \'3\'">\r\n                                        \x3c!-- <label>\r\n                                            <input type="radio" name="burdenRateId" [(ngModel)]="directLaborData.burdenRateId" value="3" disabled>\r\n                                            Flat Amount per Work Order\r\n                                            <span class="clr-red">*</span>\r\n                                        </label> --\x3e\r\n                                        \x3c!-- <div>\r\n                                            <label class="radio-cstm wauto" style="font-weight: normal; width: 100% !important; margin-top: 7px !important;">\r\n                                                <input type="radio" name="burdenRateId" class="form-control" value="3" [(ngModel)]="directLaborData.burdenRateId" disabled>\r\n                                                <span class="checkmark"></span>Flat Amount per Work Order\r\n                                                <span class="clr-red">*</span>\r\n                                            </label>\r\n                                        </div>\r\n                                        <div class="m-b-10">\r\n                                            <p class="full-width"><span class="label"><b>Value: </b></span><span class="value">{{directLaborData.flatAmount ? directLaborData.flatAmount : \'-\'}}</span></p>\r\n                                        </div>  --\x3e\r\n                                    </div>                                                   \r\n                                </div>\r\n                                <p><span class="label"><b>Functional Currency: <span class="text-danger">*</span></b></span><span class="value">{{directLaborData.functionalCurrencyCode ? directLaborData.functionalCurrencyCode : \'-\'}}</span></p>\r\n                                <p><span class="label"><b>Transactional Currency: <span class="text-danger">*</span></b></span><span class="value">{{directLaborData.transactionalCurrencyCode ? directLaborData.transactionalCurrencyCode : \'-\'}}</span></p>\r\n                            </div>\r\n                            <div class="col-md-6">\r\n                                <div class="form-row">\r\n                                    <div class="col-md-6">\r\n                                        <div class="card" style="margin-top: 6px;">\r\n                                            <div class="card-header" style="padding: 0 10px;">\r\n                                                <h5 style="margin-bottom: 0; font-size: 12px;">Management Structure <span class="text-danger">*</span></h5>\r\n                                            </div>\r\n                                            <div class="card-body" style="padding: 8px 12px 6px;">\r\n                                                <div class="form-group" style="margin-bottom: 4px;">\r\n                                                    <input class="form-control" type="text" name="companyName"\r\n                                                        [(ngModel)]="headerManagementStructure.level1" disabled>\r\n                                                </div>\r\n                                                <div class="form-group" style="margin-bottom: 4px;">\r\n                                                    <input class="form-control" type="text" name="BUName"\r\n                                                        [(ngModel)]="headerManagementStructure.level2" disabled>\r\n                                                </div>\r\n                                                <div class="form-group" style="margin-bottom: 4px;">\r\n                                                    <input class="form-control" type="text" name="divisionName"\r\n                                                        [(ngModel)]="headerManagementStructure.level3" disabled>\r\n                                                </div>\r\n                                                <div class="form-group" style="margin-bottom: 4px;">\r\n                                                    <input class="form-control" type="text" name="deptName"\r\n                                                        [(ngModel)]="headerManagementStructure.level4" disabled>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\t\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class="modal-footer">\r\n          <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>        \r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>'},"/Z8S":function(e,r,t){"use strict";t.r(r),r.default='<div class="card" style="padding: 10px;">\r\n    <div class="col-md-12">\r\n       <h4 class="po-head-sm">\r\n             Communication - Text  \r\n             <a href="#" data-toggle="modal" data-target="#addNewText"\r\n             (click)="addText()" *ngIf="!isView">\r\n             <i class="fa fa-plus-circle fa-lg"></i> </a>\r\n        </h4>\r\n    </div>\r\n</div>\r\n<div>\r\n        <p-table #dt\r\n        class="rpo-table-cstm rro-table-cstm ptable-f10"\r\n        [value]="data"\r\n        [metaKeySelection]="true"\r\n        [first]="0"\r\n        (onPage)="pageIndexChange($event)"\r\n        [rows]="pageSize"\r\n        [paginator]="true"\r\n        [pageLinks]="3"\r\n        [rowsPerPageOptions]="[10, 20, 50, 100]"\r\n        [columns]="selectedColumns"\r\n        selectionMode="multiple"\r\n        [resizableColumns]="true"\r\n        [reorderableColumns]="true"\r\n        [totalRecords]="totalRecords"\r\n        [scrollable]="true" scrollHeight="450px">\r\n\r\n            <ng-template pTemplate="caption">\r\n                <div style="text-align: right; min-height: 30px;">\r\n                    <p-multiSelect [options]="headers" [(ngModel)]="selectedColumns"\r\n                    [ngModelOptions]="{ standalone: true }" optionLabel="header" \r\n                    selectedItemsLabel="{0} columns selected"\r\n                    [style]="{ minWidth: \'200px\' }" defaultLabel="Choose Columns" style="float:left"></p-multiSelect>\r\n                    <div class="inner-addon right-addon w200 inline-block g-filter-search-cstm">\r\n                        <i class="fa fa-search"></i>\r\n                        <input type="text" pInputText size="50" class="form-control ui-autocomplete-input"\r\n                            (input)="dt.filterGlobal($event.target.value, \'contains\')" placeholder=" Filter"\r\n                            style="height: 28px !important;" />\r\n                    </div>\r\n                    <button type="button" class="btn btn-primary" matTooltip="Download Data" matTooltipPosition="above"\r\n                    pButton icon="fa-download" iconPos="left" label="Export Data" (click)="dt.exportCSV()"\r\n                    style="padding:5px 10px !important;"></button>\r\n                    <button type="button" class="btn btn-primary" matTooltip="Download Selected Data"\r\n                    matTooltipPosition="above" pButton icon="fa-download" iconPos="left" label="Export Selected Data"\r\n                    (click)="dt.exportCSV({ selectionOnly: true })" style="padding:5px 10px !important;"></button>\r\n\r\n                    \x3c!-- <div class="excel-upload excel-upload-cstm">\r\n                    <button type="button" class="btn btn-primary" matTooltip="Download Sample File"\r\n                        matTooltipPosition="above" (click)="sampleExcelDownload()" style="padding: 5px 10px !important;">\r\n                        Sample File Download\r\n                    </button>\r\n\r\n                    <input type="file" name="upload[]" id="upload" (change)="customExcelUpload($event)"\r\n                        class="uploaddoc upload-file" accept=".xlsx, .xls, .csv" />\r\n                    <label for="upload">\r\n                        <span matTooltip="Upload Data (Excel)" matTooltipPosition="above">\r\n                        <i class="fa fa-upload"></i>\r\n                        </span>\r\n                    </label>\r\n                    </div> --\x3e\r\n                </div>\r\n            </ng-template>\r\n            <ng-template pTemplate="colgroup" let-columns>\r\n                <colgroup>\r\n                    <ng-container *ngFor="let col of headers">\r\n                        <col *ngIf="col.field == \'mobile\' || col.field == \'contactBy\'" style="width: 60px;">\r\n                        <col *ngIf="col.field != \'mobile\' && col.field != \'contactBy\'" style="width: 120px;">\r\n                    </ng-container>\r\n                </colgroup> \r\n            </ng-template>\r\n            <ng-template pTemplate="header" let-columns>\r\n                <tr>\r\n\r\n                    <th style="width:50px"\r\n                        *ngFor="let col of headers"\r\n                        pResizableColumn\r\n                        pReorderableColumn\r\n                        [pSortableColumn]="col.field">\r\n                        {{ col.header }}\r\n                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                    </th>\r\n                    <th style="width:50px;position:sticky"\r\n                        *ngIf="selectedColumns.length > 0 && !isView">\r\n                        Actions\r\n                    </th>\r\n                </tr>\r\n                <tr>\r\n                    <th style="width:50px;" *ngFor="let col of headers" [ngSwitch]="col.field">\r\n                        <input style="width:100%;" pInputText type="text" (input)="\r\n                            dt.filter($event.target.value, col.field, \'contains\')\r\n                        " />\r\n                    </th>\r\n                    <th style="width: 50px;" *ngIf="!isView"></th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                    <tr [pSelectableRowDblClick]="rowData" [pSelectableRow]="rowData">\r\n                        <ng-container *ngFor="let col of headers">\r\n                            <td style="width:50px"\r\n                            *ngIf="col.field == \'contactBy\'"\r\n                            class="ui-resizable-column"\r\n                            pReorderableRowHandle>\r\n                            {{rowData[col.field]}}\r\n                            </td>\r\n                            <td style="width:50px"\r\n                            *ngIf="col.field == \'mobile\'"\r\n                            class="ui-resizable-column"\r\n                            pReorderableRowHandle>\r\n                            <p class="m-0 p-0 text-right">{{rowData[col.field]}}</p>\r\n                            </td>\r\n                            <td style="width:50px"\r\n                                *ngIf="col.field == \'notes\'"\r\n                                class="ui-resizable-column"\r\n                                pReorderableRowHandle>\r\n                                <p class="m-0 p-0 p_textEditor" [innerHTML]=rowData[col.field]></p>\r\n                            </td>\r\n                        </ng-container>\r\n                        <td style="width:50px;position:sticky" class="ui-resizable-column" *ngIf="!isView">\r\n                            <span data-toggle="modal" data-target="#viewText"><a class="btn nobg btn-view-cstm"\r\n                                (click)="getViewData(rowData)" matTooltip="View" matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n                            <span data-target="#addNewText" data-toggle="modal"><a class="btn nobg btn-edit-cstm" (click)="edit(rowData, rowIndex)" matTooltip="Edit" matTooltipPosition="above"><i class="fa fa-pencil"></i></a> </span>\r\n                            <span data-toggle="modal" data-target="#deleteRowConfirmation"><a class="btn nobg btn-delete-cstm" (click)="deletingRecord = rowData;" matTooltip="Delete" matTooltipPosition="above"><i class="fa fa-trash"></i></a> </span>\r\n                            \x3c!-- <button class="btn-edit ptable-wo-btns" mat-icon-button data-target="#addNewText" data-toggle="modal"\r\n                            (click)="edit(rowData, i)" matTooltip="Edit">\r\n                                <mat-icon>edit</mat-icon>\r\n                            </button>\r\n                            <button class="btn btn-danger nobg" (click)="deleteText(rowData);">\r\n                                <i class="fa fa-trash"></i>\r\n                            </button> --\x3e\r\n                        </td>\r\n                    </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate="emptymessage" let-columns *ngIf="data.length == 0">\r\n                <tr>\r\n                  <td colspan="4" style="color: red; font-weight: bold; text-align: center">\r\n                    No records found\r\n                  </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate="summary" id="footer">\r\n                <label id="footer">Total:</label>\r\n                <input style="width: 5%;" [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText type="text" />\r\n                &nbsp;&nbsp;\r\n                <label id="footer">Pages Count:</label>    \r\n                <input style="width: 5%;" [ngModel]="getPageCount(dt._totalRecords, pageSize)" [disabled]="true" pInputText type="text" />\r\n              </ng-template>\r\n        </p-table>\r\n</div>\r\n\r\n<div id="addNewText" class="modal fade" role="dialog" data-backdrop="static">\r\n    <div class="modal-dialog modal-sm" style="top: 0;">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">{{ isEdit ? \'Edit\' : \'Add\'  }} Text </h4>\r\n                <div class="col-md-12 shadow-box-cstm">\r\n                    <div class="col-md-6">\r\n                      <p class="fs12">\r\n                        <label class="control-label labels-font-header" style="width: auto;">Customer Name:\r\n                        </label>\r\n                        <span class="span-header-red" style="text-transform: capitalize" *ngIf="isSubWorkOrder">\r\n                            {{subWorkOrderDetails.customerName}}\r\n                        </span>\r\n                        <span class="span-header-red" style="text-transform: capitalize" *ngIf="!isSubWorkOrder">\r\n                            {{savedWorkOrderData.customerId.customerName}}\r\n                        </span>\r\n                      </p>\r\n                    </div>\r\n                    <div class="col-md-6">\r\n                      <p class="fs12">\r\n                        <label class="control-label labels-font-header" style="width: auto;">Customer Code:\r\n                        </label>\r\n                        <span class="span-header-red" style="text-transform: capitalize" *ngIf="isSubWorkOrder">\r\n                            {{subWorkOrderDetails.customerCode}}\r\n                        </span>\r\n                        <span class="span-header-red" style="text-transform: capitalize" *ngIf="!isSubWorkOrder">\r\n                            {{savedWorkOrderData.customerId.customerCode}}\r\n                        </span>\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n          \r\n          \r\n          \r\n            </div>\r\n            <form #textForm="ngForm" class="form-horizontal" ngNativeValidate>\r\n            <div class="modal-body" *ngIf="addList.length > 0">\r\n                <div class="form-row">                   \r\n                    <div class="col-md-6">\r\n                        <div class="form-group">\r\n                            <label>Phone</label>\r\n                            <input class="form-control" type="number" [(ngModel)] = "addList[0].mobile" maxlength="20" name="phoneNo" required/>\r\n                        </div>\r\n                        <div class="form-group">\r\n                            <label class="col-md-12">Contacted By</label>\r\n                            \x3c!-- <select [(ngModel)]="addList[0].contactId" class="form-control" name="contactedBy" required>\r\n                                <option value="">Select</option>\r\n                                <option *ngFor="let employee of employees" [value]="employee.value">{{employee.label}}</option>\r\n                            </select> --\x3e\r\n                            <p-autoComplete field="name"\r\n                                [(ngModel)]="addList[0].contactId"\r\n                                name="employees" errorMessage="Records not found" [forceSelection]="true"\r\n                                [dropdown]="true" [suggestions]="employeeList"\r\n                                (completeMethod)="filterEmployee($event)"\r\n                                [size]="30" [minLength]="1" [dropdown]="true"\r\n                                class="p-autoComplete-ctsm" required>\r\n                            </p-autoComplete>\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-md-12">\r\n                        <div class="form-group">\r\n                            <label>Notes *</label>\r\n                            <p-editor [(ngModel)]="addList[0].notes" [style]="{\'height\':\'320px\'}" name="notes" required></p-editor>\r\n                        </div>\r\n                    </div>                    \r\n                </div>                \r\n            </div>\r\n            <div class="modal-footer">\r\n                <button class="btn btn-primary btn-primary" data-dismiss="modal" (click)="savePhone()"\r\n                    style="padding: 6px 12px !important;margin-top: 10px;" [disabled]="!textForm.valid">\r\n                    {{(isEdit)?\'Update\':\'Save\'}}\r\n                </button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" style="padding: 6px 12px !important;margin-top: 10px;">Close</button>\r\n            </div>\r\n        </form>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div id="viewText" class="modal fade"\r\n role="dialog" data-backdrop="static">\r\n    <div class="modal-dialog modal-xl">\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title"> Text Details</h4>\r\n                <div class="col-md-12 shadow-box-cstm">\r\n                    <div class="col-md-6">\r\n                      <p class="fs12">\r\n                        <label class="control-label labels-font-header" style="width: auto;">Customer Name:\r\n                        </label>\r\n                        <span class="span-header-red" style="text-transform: capitalize" *ngIf="isSubWorkOrder">\r\n                            {{subWorkOrderDetails.customerName}}\r\n                        </span>\r\n                        <span class="span-header-red" style="text-transform: capitalize" *ngIf="!isSubWorkOrder">\r\n                            {{savedWorkOrderData.customerId.customerName}}\r\n                        </span>\r\n                      </p>\r\n                    </div>\r\n                    <div class="col-md-6">\r\n                      <p class="fs12">\r\n                        <label class="control-label labels-font-header" style="width: auto;">Customer Code:\r\n                        </label>\r\n                        <span class="span-header-red" style="text-transform: capitalize" *ngIf="isSubWorkOrder">\r\n                            {{subWorkOrderDetails.customerCode}}\r\n                        </span>\r\n                        <span class="span-header-red" style="text-transform: capitalize" *ngIf="!isSubWorkOrder">\r\n                            {{savedWorkOrderData.customerId.customerCode}}\r\n                        </span>\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n            </div>\r\n            <div class="modal-body">\r\n                \x3c!-- <div class="col-sm-12" *ngIf="phoneViewData">\r\n                    <p>\r\n                        <span class="label"><strong> Customer Contact: </strong></span><span class="value">{{\r\n                            phoneViewData.customerContact\r\n                        }}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label"><strong> Phone: </strong></span><span class="value">{{\r\n                            phoneViewData.phoneNo\r\n                        }}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label"><strong> Contact By: </strong></span><span class="value">{{\r\n                            phoneViewData.contactBy\r\n                        }}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label"><strong> Notes: </strong></span><span class="value">\r\n                            <p class="m-0 p-0 p_textEditor" [innerHTML]=phoneViewData.notes></p></span>\r\n                    </p>\r\n                </div> --\x3e\r\n                <p-table #viewdt\r\n                class="rpo-table-cstm rro-table-cstm"\r\n                [value]="viewdata"\r\n                [metaKeySelection]="true"\r\n                [first]="0"\r\n                (onPage)="viewPageIndexChange($event)"\r\n                [rows]="viewPageSize"\r\n                [paginator]="true"\r\n                [pageLinks]="3"\r\n                [rowsPerPageOptions]="[10, 20, 50, 100]"\r\n                [columns]="headers"\r\n                selectionMode="multiple"\r\n                [resizableColumns]="true"\r\n                [reorderableColumns]="true"\r\n                [totalRecords]="viewTotalRecords"\r\n                [scrollable]="true" scrollHeight="450px">\r\n                <ng-template pTemplate="caption">\r\n                    <div style="text-align: right; min-height: 30px;">\r\n\r\n                        \x3c!-- <div class="excel-upload excel-upload-cstm">\r\n                        <button type="button" class="btn btn-primary" matTooltip="Download Sample File"\r\n                            matTooltipPosition="above" (click)="sampleExcelDownload()" style="padding: 5px 10px !important;">\r\n                            Sample File Download\r\n                        </button>\r\n\r\n                        <input type="file" name="upload[]" id="upload" (change)="customExcelUpload($event)"\r\n                            class="uploaddoc upload-file" accept=".xlsx, .xls, .csv" />\r\n                        <label for="upload">\r\n                            <span matTooltip="Upload Data (Excel)" matTooltipPosition="above">\r\n                            <i class="fa fa-upload"></i>\r\n                            </span>\r\n                        </label>\r\n                        </div> --\x3e\r\n                    </div>\r\n                </ng-template>\r\n\r\n\r\n                    <ng-template pTemplate="colgroup" let-columns>\r\n                        <colgroup>\r\n                            <ng-container *ngFor="let col of headers">\r\n                                <col *ngIf="col.field == \'mobile\' || col.field == \'contactBy\'" style="width: 60px;">\r\n                                <col *ngIf="col.field != \'mobile\' && col.field != \'contactBy\'" style="width: 120px;">\r\n                            </ng-container>\r\n                        </colgroup>\r\n                    </ng-template>\r\n                    <ng-template pTemplate="header" let-columns>\r\n                        <tr>\r\n\r\n                            <th style="width:auto"\r\n                                *ngFor="let col of columns"\r\n                                pResizableColumn\r\n                                pReorderableColumn\r\n                                [pSortableColumn]="col.field">\r\n                                {{ col.header }}\r\n                                <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                            </th>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <th style="width:auto" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                <input style="width:100%;" pInputText type="text" (input)="\r\n                                viewdt.filter($event.target.value, col.field, \'contains\')\r\n                                " />\r\n                            </th>\r\n                        </tr>\r\n                    </ng-template>\r\n                    <ng-template pTemplate="body" let-rowData let-columns="columns">\r\n                            <tr [pSelectableRowDblClick]="rowData" [pSelectableRow]="rowData">\r\n                                <ng-container *ngFor="let col of columns">\r\n                                    <td style="width:auto"\r\n                                    *ngIf="col.field == \'contactBy\'"\r\n                                    class="ui-resizable-column"\r\n                                    pReorderableRowHandle>\r\n                                    {{rowData[col.field]}}\r\n                                    </td>\r\n                                    <td style="width:auto"\r\n                                    *ngIf="col.field == \'mobile\'"\r\n                                    class="ui-resizable-column"\r\n                                    pReorderableRowHandle>\r\n                                    <p class="m-0 p-0 text-right">{{rowData[col.field]}}</p>\r\n                                    </td>\r\n                                    <td style="width:auto; background-color: unset !important;"\r\n                                        *ngIf="col.field == \'notes\'"\r\n                                        class="ui-resizable-column"\r\n                                        pReorderableRowHandle>\r\n                                        <p class="m-0 p-0 p_textEditor" [innerHTML]=rowData[col.field]></p>\r\n                                    </td>\r\n                                </ng-container>\r\n                            </tr>\r\n                    </ng-template>\r\n                    <ng-template pTemplate="emptymessage" let-columns *ngIf="viewdata.length == 0">\r\n                        <tr>\r\n                        <td colspan="4" style="color: red; font-weight: bold; text-align: center">\r\n                            No records found\r\n                        </td>\r\n                        </tr>\r\n                    </ng-template>\r\n                    \x3c!-- <ng-template pTemplate="summary" id="footer">\r\n                        <label id="footer" class="footer">No\'of records:</label>\r\n                        <input style="width: 5%;"\r\n                                [(ngModel)]="totalRecords"\r\n                                [disabled]="true"\r\n                                pInputText\r\n                                type="text" />\r\n                        &nbsp;&nbsp;\r\n                        <label id="footer" class="footer1">Pages Count:</label>\r\n                        <input style="width: 5%;"\r\n                                [(ngModel)]="totalPages"\r\n                                [disabled]="true"\r\n                                pInputText\r\n                                type="text" />\r\n                    </ng-template> --\x3e\r\n                    <ng-template pTemplate="summary" id="footer">\r\n                        <label id="footer">Total:</label>\r\n                        <input style="width: 5%;" [(ngModel)]="viewdt._totalRecords" [disabled]="true" pInputText type="text" />\r\n                        &nbsp;&nbsp;\r\n                        <label id="footer">Pages Count:</label>    \r\n                        <input style="width: 5%;" [ngModel]="getPageCount(viewdt._totalRecords, viewPageSize)" [disabled]="true" pInputText type="text" />\r\n                    </ng-template>\r\n                </p-table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n </div>\r\n <div class="preloader" *ngIf="isSpinnerVisible">\r\n    <div class="loading">\r\n        <div class="lds-roller"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n    </div>\r\n</div>\r\n\r\n <div id="deleteRowConfirmation" class="modal fade" role="dialog" data-backdrop="static">\r\n    <div class="modal-dialog modal-sm">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <h4 class="modal-title">Are You Sure Want to Delete the record?</h4>\r\n                <button type="button" class="close" aria-label="Close" data-dismiss="modal">\r\n                    <span aria-hidden="true">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-primary" data-dismiss="modal" (click)="deleteText(deletingRecord)">Yes</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">No</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>'},"05KU":function(e,r,t){"use strict";t.r(r),r.default="#documentType .p-dropdown-custom-md .ui-dropdown {\n  width: 230px !important;\n}"},"0ozo":function(e,r,t){"use strict";t.r(r),r.default='<div class="col-md-12" style="margin-bottom: 15px;">\r\n    <h4 class="po-head-sm">\r\n        Labour Analysis Overview\r\n    </h4>\r\n</div>\r\n<div>    \r\n    <p-table #dt\r\n    class="p-table-cstm wo-ptable-padd ptable-f10"\r\n    [value]="data"\r\n    [metaKeySelection]="true"\r\n    [first]="0"\r\n    (onPage)="pageIndexChange($event)"\r\n    [rows]="pageSize"\r\n    [paginator]="true"\r\n    [pageLinks]="3"\r\n    [rowsPerPageOptions]="[10, 20, 50, 100]"\r\n    [columns]="selectedColumns"\r\n    selectionMode="multiple"\r\n    [resizableColumns]="true"\r\n    [reorderableColumns]="true"\r\n    [totalRecords]="totalRecords"\r\n    [scrollable]="true" scrollHeight="450px">\r\n\r\n        <ng-template pTemplate="caption">\r\n            <div style="text-align: right; min-height: 30px; clear: both;">\r\n                <p-multiSelect [options]="headers" [(ngModel)]="selectedColumns"\r\n          [ngModelOptions]="{ standalone: true }" optionLabel="header" selectedItemsLabel="{0} columns selected" [style]="{ minWidth: \'200px\' }" defaultLabel="Choose Columns" style="float:left"></p-multiSelect>\r\n                <div class="inner-addon right-addon w200 inline-block g-filter-search-cstm">\r\n                    <i class="fa fa-search"></i>\r\n                    <input type="text" pInputText size="50" class="form-control ui-autocomplete-input"\r\n                        (input)="dt.filterGlobal($event.target.value, \'contains\')" placeholder=" Filter"\r\n                        style="height: 28px !important;" />\r\n                </div>\r\n                <button type="button" class="btn btn-primary" matTooltip="Download Data" matTooltipPosition="above"\r\n                pButton icon="fa-download" iconPos="left" label="Export Data" (click)="dt.exportCSV()"\r\n                style="padding:5px 10px !important;"></button>\r\n                <button type="button" class="btn btn-primary" matTooltip="Download Selected Data"\r\n                matTooltipPosition="above" pButton icon="fa-download" iconPos="left" label="Export Selected Data"\r\n                (click)="dt.exportCSV({ selectionOnly: true })" style="padding:5px 10px !important;"></button>\r\n\r\n                \x3c!-- <div class="excel-upload excel-upload-cstm">\r\n                <button type="button" class="btn btn-primary" matTooltip="Download Sample File"\r\n                    matTooltipPosition="above" (click)="sampleExcelDownload()" style="padding: 5px 10px !important;">\r\n                    Sample File Download\r\n                </button>\r\n\r\n                <input type="file" name="upload[]" id="upload" (change)="customExcelUpload($event)"\r\n                    class="uploaddoc upload-file" accept=".xlsx, .xls, .csv" />\r\n                <label for="upload">\r\n                    <span matTooltip="Upload Data (Excel)" matTooltipPosition="above">\r\n                    <i class="fa fa-upload"></i>\r\n                    </span>\r\n                </label>\r\n                </div> --\x3e\r\n            </div>\r\n        </ng-template>\r\n        <ng-template pTemplate="colgroup" let-columns>\r\n            <colgroup>\r\n                <col *ngFor="let col of columns" style="width:105px">\r\n            </colgroup>\r\n        </ng-template>\r\n        <ng-template pTemplate="header" let-columns>\r\n            <tr>\r\n\r\n                <th style="width:auto"\r\n                    *ngFor="let col of columns"\r\n                    pResizableColumn\r\n                    pReorderableColumn\r\n                    [pSortableColumn]="col.field">\r\n                    {{ col.header }}\r\n                    <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                </th>\r\n            </tr>\r\n            <tr>\r\n                <th style="width:auto" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                    <input style="width:100%;" pInputText type="text" (input)="\r\n                        dt.filter($event.target.value, col.field, \'contains\')\r\n                    " />\r\n                </th>\r\n                \x3c!-- <th style="width: 150px;"></th> --\x3e\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate="body" let-rowData let-columns="columns">\r\n                <tr [pSelectableRowDblClick]="rowData" [pSelectableRow]="rowData">\r\n                    <td style="width:auto"\r\n                    *ngFor="let col of columns"\r\n                    class="ui-resizable-column"\r\n                    pReorderableRowHandle>\r\n                    <ng-container *ngIf="col.field!=\'hours\'">\r\n                        {{rowData[col.field]}}\r\n                    </ng-container>\r\n                    <ng-container *ngIf="col.field==\'hours\'">\r\n                        <p class="m-0 p-0 text-right">{{rowData[col.field]}}</p>\r\n                    </ng-container> \r\n                    </td>                    \r\n                </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate="summary" id="footer">\r\n            <label id="footer" class="footer">Total:</label>\r\n            <input style="width: 5%;"\r\n                    [(ngModel)]="dt._totalRecords"\r\n                    [disabled]="true"\r\n                    pInputText\r\n                    type="text" />\r\n            &nbsp;&nbsp;\r\n            <label id="footer" class="footer1">Pages Count:</label>\r\n            <input style="width: 5%;"\r\n                    [ngModel]="getPageCount(dt._totalRecords, pageSize)"\r\n                    [disabled]="true"\r\n                    pInputText\r\n                    type="text" />\r\n        </ng-template>\r\n    </p-table>\r\n</div>\r\n<div class="preloader" *ngIf="isSpinnerVisible">\r\n    <div class="loading">\r\n        <div class="lds-roller"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n    </div>\r\n</div>'},"22cT":function(e,r,t){"use strict";t.r(r),r.default='<div class="panel-group mt-2 tear_down_cls work_order_teardown" id="accordion" >\r\n    <div class="panel">\r\n        <div class="panel-heading">\r\n            <h4 class="panel-title">\r\n                <div></div>\r\n                <a data-toggle="collapse" class="ac_cs collapsed" href="#stepadd1" (click)="resetParentTab()"> Summary of WO Overview</a>\r\n            </h4>\r\n        </div>\r\n        <div id="stepadd1" class="panel-collapse collapse in">\r\n            <div class="panel-body">\r\n                    <div class="card col-md-12" style="background: #ffffff; margin-top: 0px; margin-bottom: 50px;">\r\n                        <ul class="nav nav-pills nav-pills-cstm back_filsd" id="pills-tab" role="tablist"\r\n                            style="margin-top: 2px;">\r\n                            <li class="nav-item">\r\n                                <a id="pills-contact-tab" role="tab" [ngClass]="{active : gridActiveTab === \'materialList\'}"\r\n                                    (click)="gridTabChange(\'materialList\');resetParentTab() ">\r\n                                    Material\r\n                                    List\r\n                                </a>\r\n                            </li>\r\n                            <li class="nav-item">\r\n                                <a id="pills-home-tab" role="tab" aria-controls="pills-home" aria-selected="true"\r\n                                    [ngClass]="{active : gridActiveTab === \'labour\'}"\r\n                                    (click)="gridTabChange(\'labour\');resetParentTab()  ">Labor</a>\r\n                            </li>\r\n                            <li class="nav-item">\r\n                                <a id="pills-home-tab" role="tab" aria-controls="pills-home" aria-selected="true"\r\n                                    [ngClass]="{active : gridActiveTab === \'labourAnalysis\'}"\r\n                                    (click)="gridTabChange(\'labourAnalysis\');resetParentTab()  ">Labor Analysis</a>\r\n                            </li>\r\n                            <li class="nav-item">\r\n                                <a id="pills-home-tab" role="tab" aria-controls="pills-home" aria-selected="true"\r\n                                    [ngClass]="{active : gridActiveTab === \'charges\'}"\r\n                                    (click)="gridTabChange(\'charges\');resetParentTab()  ">Charges</a>\r\n                            </li>\r\n                            <li class="nav-item">\r\n                                <a id="pills-home-tab" role="tab" aria-controls="pills-home" aria-selected="true"\r\n                                    [ngClass]="{active : gridActiveTab === \'documents\'}"\r\n                                    (click)="gridTabChange(\'documents\');resetParentTab()  ">Documents</a>\r\n                            </li>\r\n                            <li class="nav-item dropdown">\r\n                                <a class="nav-link dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true"\r\n                                    aria-expanded="false" [ngClass]="{active : gridActiveTab === \'communication\'}"\r\n                                    (click)="gridTabChange(\'communication\');resetParentTab()">Communication</a>\r\n                                <div class="dropdown-menu">\r\n                                    <a class="dropdown-item" (click)="selectedCommunicationTab=\'memo\'" (click)="gridTabChange(\'memo\')">Memo</a>\r\n                                    <a class="dropdown-item" (click)="selectedCommunicationTab=\'email\'" (click)="gridTabChange(\'email\')">Email</a>\r\n                                    <a class="dropdown-item" (click)="selectedCommunicationTab=\'phone\'" (click)="gridTabChange(\'phone\')">Phone</a>\r\n                                    <a class="dropdown-item" (click)="selectedCommunicationTab=\'text\'" (click)="gridTabChange(\'text\')">Text</a>\r\n                                    \x3c!-- <a class="dropdown-item">Chat</a> --\x3e\r\n                                </div>\r\n                            </li>\r\n                            <li class="nav-item">\r\n                                <a id="pills-home-tab" role="tab" aria-controls="pills-home" aria-selected="true"\r\n                                    [ngClass]="{active : gridActiveTab === \'woAnalysis\'}"\r\n                                    (click)="gridTabChange(\'woAnalysis\');resetParentTab()  ">WO Analysis</a>\r\n                            </li>\r\n                            <li class="nav-item">\r\n                                <a id="pills-home-tab" role="tab" aria-controls="pills-home" aria-selected="true"\r\n                                    [ngClass]="{active : gridActiveTab === \'quoteAnalysis\'}"\r\n                                    (click)="gridTabChange(\'quoteAnalysis\');resetParentTab()  ">Quote Analysis</a>\r\n                            </li>\r\n                            <li class="nav-item">\r\n                                <a id="pills-home-tab" role="tab" aria-controls="pills-home" aria-selected="true"\r\n                                    [ngClass]="{active : gridActiveTab === \'billingAndInvoice\'}"\r\n                                    (click)="gridTabChange(\'billingAndInvoice\');resetParentTab()  ">Billing/Invoice</a>\r\n                            </li>\r\n                            <li class="nav-item">\r\n                                <a id="pills-home-tab" role="tab" aria-controls="pills-home" aria-selected="true"\r\n                                    [ngClass]="{active : gridActiveTab === \'shipping\'}"\r\n                                    (click)="gridTabChange(\'shipping\');resetParentTab()  ">Shipping</a>\r\n                            </li>\r\n                            <li class="nav-item">\r\n                                <a id="pills-home-tab" role="tab" aria-controls="pills-home" aria-selected="true"\r\n                                    [ngClass]="{active : gridActiveTab === \'freight\'}"\r\n                                    (click)="gridTabChange(\'freight\');resetParentTab()  ">Freight</a>\r\n                            </li>\r\n                        </ul>\r\n                        <div *ngIf="workOrderId && (gridActiveTab == \'materialList\')"\r\n                        [ngClass]="{hidedata : gridActiveTab !== \'materialList\' }" style="overflow-x: scroll;"> \r\n                            \x3c!-- <div>\r\n                                <button type="button" class="btn btn-primary" (click)="collapseAll(\'open\', \'materialList\', materialListMPNs, \'getMaterialListData\')">\r\n                                    Open All\r\n                                </button>\r\n                                <button type="button" class="btn btn-secondary" (click)="collapseAll(\'close\',\'materialList\', materialListMPNs, \'getMaterialListData\')">\r\n                                    Close All\r\n                                </button> \r\n                            </div> --\x3e\r\n                            \x3c!-- <app-materiallist-wo-summarization [value]="materialListMPNs"></app-materiallist-wo-summarization> --\x3e\r\n                            <div *ngFor="let materialMPN of materialListMPNs; let i=index">\r\n                                <div class="panel-group mt-2 tear_down_cls work_order_teardown" id="accordion" >\r\n                                        <div class="panel panel-default">\r\n                                            <div class="panel-heading">\r\n                                                <div class="panel-title">\r\n                                                    <div></div>\r\n                                                    <a data-toggle="collapse" class="ac_cs collapsed" href="#materialList_{{i}}" (click)="getMaterialListData(materialMPN)"> \r\n                                                        <div style="overflow-x: scroll;">\r\n                                                            <table style="border: 1px solid #c8c8c8 !important; width: 130%;table-layout: fixed;">\r\n                                                                <thead *ngIf="i == 0">\r\n                                                                    <tr>\r\n                                                                        <th *ngFor="let matHeader of materialListHeader" style="border: 1px solid #c8c8c8 !important;padding: 8px; width: 11%;background-color: #4397f7;\r\n                                                                        color: white;">\r\n                                                                            {{matHeader.header}}\r\n                                                                        </th>\r\n                                                                    </tr>\r\n                                                                </thead>\r\n                                                                <tbody>\r\n                                                                    <tr>\r\n                                                                        <td *ngFor="let matField of materialListHeader" style="border: 1px solid #c8c8c8 !important;padding: 8px;width: 11%;color: black;">\r\n                                                                            {{globalizeAmount(materialMPN[matField.field], matField.field)}}\r\n                                                                        </td>\r\n                                                                    </tr>\r\n                                                                </tbody>\r\n                                                            </table>\r\n                                                        </div>\r\n                                                    </a>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div id="materialList_{{i}}" class="panel-collapse collapse in ">\r\n                                                <div *ngIf="!materialMPN.workOrderMaterialList">\r\n                                                    No Record Found\r\n                                                </div>\r\n                                                <div *ngIf="materialMPN.workOrderMaterialList">\r\n                                                    <app-work-order-complete-material-list [materialStatus]="materialMPN.materialStatus" isWorkOrder="true"\r\n                                                    [workFlowObject]="workFlowObject" [savedWorkOrderData]="savedWorkOrderData" isSubWorkOrder="false" subWOPartNoId="0"\r\n                                                    [mpnId]="materialMPN.workOrderPartNumberId" [employeesOriginalData]="employeesOriginalData"\r\n                                                    [workOrderMaterialList]="materialMPN.workOrderMaterialList"[taskList]="taskList" [mpnPartNumbersList]="mpnPartNumbersList" isView="true"></app-work-order-complete-material-list>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div *ngIf="workOrderId && (gridActiveTab == \'labour\')"\r\n                        [ngClass]="{hidedata : gridActiveTab !== \'labour\' }"> \r\n                            \x3c!-- <div>\r\n                                <button type="button" class="btn btn-primary" (click)="collapseAll(\'open\',\'labour\', labourListMPNs, \'getLabourListData\')">\r\n                                    Open All\r\n                                </button>\r\n                                <button type="button" class="btn btn-secondary" (click)="collapseAll(\'close\',\'labour\', labourListMPNs, \'getLabourListData\')">\r\n                                    Close All\r\n                                </button> \r\n                            </div> --\x3e\r\n                            <div style="float: right;">\r\n                                <button type="button" class="btn btn-primary" (click)="collapseAll(\'open\', \'labour\', labourListMPNs, \'getLabourListData\')">\r\n                                    {{(labourDetailedViewOpened)?\'Summary\':\'Detail View\'}}\r\n                                </button>\r\n                            </div>\r\n                            \x3c!-- <app-labour-wo-summarization [value]="labourListMPNs"></app-labour-wo-summarization> --\x3e\r\n                            <div *ngFor="let labourMPN of labourListMPNs; let i=index">\r\n                                <div class="panel-group mt-2 tear_down_cls work_order_teardown" id="accordion" >\r\n                                        <div class="panel panel-default">\r\n                                            <div class="panel-heading" style="margin-bottom: -8px;">\r\n                                                <div class="panel-title">\r\n                                                    <div></div>\r\n                                                    <a data-toggle="collapse" class="ac_cs collapsed" href="#labour_{{i}}" (click)="getLabourListData(labourMPN)">\r\n                                                            <table style="border: 1px solid #c8c8c8 !important; width: 98%;">\r\n                                                                <thead *ngIf="i == 0">\r\n                                                                    <tr>\r\n                                                                        <th *ngFor="let matHeader of labourListHeader" style="border: 1px solid #c8c8c8 !important;padding: 8px; width: 11%;background-color: #4397f7;\r\n                                                                        color: white;">\r\n                                                                            {{matHeader.header}}\r\n                                                                        </th>\r\n                                                                    </tr>\r\n                                                                </thead>\r\n                                                                <tbody>\r\n                                                                    <tr>\r\n                                                                        <td *ngFor="let matField of labourListHeader" style="border: 1px solid #c8c8c8 !important;padding: 8px;width: 11%;color: black;">\r\n                                                                            <div [ngClass]="matField.field == \'totalHours\'?\'float-right\':\'\'">\r\n                                                                                {{labourMPN[matField.field]}}\r\n                                                                            </div>\r\n                                                                        </td>\r\n                                                                    </tr>\r\n                                                                </tbody>\r\n                                                            </table>\r\n                                                    </a>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div id="labour_{{i}}" class="panel-collapse collapse in">\r\n                                                <div *ngIf="!labourMPN.labor">\r\n                                                    No Record Found\r\n                                                </div>\r\n                                                <div *ngIf="labourMPN.labor" style="width: 92%;margin-left: 4%;">\r\n                                                    <app-labour-wo-summarization [value]="labourMPN.labor" [type]="labourMPN.labourHours" [partNumber]="labourMPN.partNumber"></app-labour-wo-summarization>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div *ngIf="workOrderId && (gridActiveTab == \'labourAnalysis\')"\r\n                        [ngClass]="{hidedata : gridActiveTab !== \'labourAnalysis\' }"> \r\n                            <app-analysis-wo-summarization [value]="labourAnalysisListMPNs" [type]="gridActiveTab" [workOrderId]="workOrderId"></app-analysis-wo-summarization>\r\n                        </div>\r\n\r\n                        <div *ngIf="workOrderId && (gridActiveTab == \'billingAndInvoice\')"\r\n                        [ngClass]="{hidedata : gridActiveTab !== \'billingAndInvoice\' }"> \r\n                            <app-analysis-wo-summarization [value]="billingAndInvoiceMPNs" [type]="gridActiveTab" [workOrderId]="workOrderId"></app-analysis-wo-summarization>\r\n                        </div>\r\n\r\n                        <div *ngIf="workOrderId && (gridActiveTab == \'charges\')"\r\n                        [ngClass]="{hidedata : gridActiveTab !== \'charges\' }"> \r\n                            <app-charges-wo-summarization [value]="chargesListMPNs"></app-charges-wo-summarization>\r\n                        </div>\r\n\r\n                        <div *ngIf="workOrderId && (gridActiveTab == \'documents\')"\r\n                        [ngClass]="{hidedata : gridActiveTab !== \'documents\' }"> \r\n                            <app-document-wo-summarization [value]="documentsListMPNs"></app-document-wo-summarization>\r\n                        </div>\r\n\r\n                        <div [ngClass]="{hidedata : gridActiveTab !== \'communication\'}">\r\n                            <div *ngIf="(selectedCommunicationTab == \'memo\')">\r\n                                <app-communication-wo-summarization [value]="memoListMPNs" [type]="selectedCommunicationTab" [workOrderId]="workOrderId"></app-communication-wo-summarization>\r\n                            </div>\r\n                            <div *ngIf="(selectedCommunicationTab == \'email\')">\r\n                                <app-communication-wo-summarization [value]="emailListMPNs" [type]="selectedCommunicationTab" [workOrderId]="workOrderId"></app-communication-wo-summarization>\r\n                            </div>\r\n                            \r\n                            <div *ngIf="(selectedCommunicationTab == \'text\')">\r\n                                <app-communication-wo-summarization [value]="textListMPNs" [type]="selectedCommunicationTab" [workOrderId]="workOrderId"></app-communication-wo-summarization>\r\n                            </div>\r\n                            <div *ngIf="(selectedCommunicationTab == \'phone\')">\r\n                                <app-communication-wo-summarization [value]="phoneListMPNs" [type]="selectedCommunicationTab" [workOrderId]="workOrderId"></app-communication-wo-summarization>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div *ngIf="(workOrderId && gridActiveTab == \'woAnalysis\')" [ngClass]="{hidedata : gridActiveTab !== \'woAnalysis\' }" style="overflow-x: scroll;">\r\n                            <app-analysis-wo-summarization [value]="woAnalysisMPNs" [type]="gridActiveTab" [workOrderId]="workOrderId"></app-analysis-wo-summarization>\r\n                        </div>\r\n\r\n                        <div *ngIf="(workOrderId && gridActiveTab == \'quoteAnalysis\')" [ngClass]="{hidedata : gridActiveTab !== \'quoteAnalysis\' }"  style="overflow-x: scroll;">\r\n                            <app-analysis-wo-summarization [value]="quoteAnalysisMPNs" [type]="gridActiveTab" [workOrderId]="workOrderId"></app-analysis-wo-summarization>\r\n                        </div>\r\n\r\n                        <div *ngIf="workOrderId && (gridActiveTab == \'freight\')"\r\n                        [ngClass]="{hidedata : gridActiveTab !== \'freight\' }">\r\n                            <app-freight-wo-summarization [value]="freightsListMPNs"></app-freight-wo-summarization>\r\n                        </div>\r\n\r\n                        <div *ngIf="workOrderId && (gridActiveTab == \'shipping\')"\r\n                        [ngClass]="{hidedata : gridActiveTab !== \'shipping\' }"> \r\n                            <app-shipping-wo-summarization [value]="shippingListMPNs"></app-shipping-wo-summarization>\r\n                        </div>\r\n\r\n                    </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class="preloader" *ngIf="isSpinnerVisible">\r\n    <div class="loading">\r\n        <div class="lds-roller"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n    </div>\r\n</div>'},"2ONF":function(e,r,t){"use strict";t.r(r);var n=t("mrSG"),a=t("8Y7J"),s=t("s7LF"),i=t("SVse"),o=t("iInd");let l=class{constructor(){this.isSpinnerVisible=!0}ngOnInit(){setTimeout(()=>{this.isSpinnerVisible=!1},2e3)}};l=n.b([Object(a.Component)({selector:"quickapp-pro-workordrs",template:n.c(t("irkm")).default})],l);class d{constructor(){this.openDate=new Date,this.createdBy="admin",this.updatedBy="admin",this.IsActive=!0,this.IsDeleted=!1,this.WorkOrderId=0,this.expirationDateStatus=1}}var c=t("Nb+s"),p=t("wKas"),u=t("OlR4"),h=t("kRKm"),m=t("6c3z"),b=t("TeDh"),g=t("7+Ft"),v=t("lGQG"),w=t("EVdn"),k=t("3LUQ");class f{constructor(){this.workOrderLaborHeaderId=null,this.workFlowWorkOrderId=null,this.dataEnteredBy=null,this.expertiseId=null,this.employeeId=null,this.isTaskCompletedByOne=!1,this.workFloworSpecificTaskorWorkOrder="specificTasks",this.hoursorClockorScan=1,this.costPlusType=null,this.laborFlatBillingAmount=null}}class y{constructor(){this.workOrderLaborHeaderId=0,this.workOrderLaborId=0,this.expertiseId=null,this.employeeId=null,this.billableId=1,this.startDate=null,this.startDateandTimeIsEdit=!1,this.endDate=null,this.endDateandTimeIsEdit=!1,this.hours=0,this.adjustments=0,this.adjustedHours=0,this.memo="",this.taskId=0}}class I{constructor(){this.CreatedBy="admin",this.UpdatedBy="admin",this.IsActive=!0,this.IsDeleted=!1,this.WorkOrderQuoteDetailsId=0,this.WorkOrderQuoteId=0,this.ItemMasterId=0,this.BuildMethodId=1,this.SelectedId=0,this.ReferenceNo="",this.EstCompDate=new Date,this.StageId=0,this.StatusId=0,this.CMMId=0,this.IsPMA=!0,this.IsDER=!0,this.masterCompanyId=0,this.CreatedBy="admin",this.UpdatedBy="admin",this.IsActive=!0,this.IsDeleted=!1,this.WorkOrderQuoteLaborHeader={WorkOrderQuoteLaborHeaderId:0,WorkOrderQuoteDetailsId:0,DataEnteredBy:0,HoursorClockorScan:0,IsTaskCompletedByOne:!0,WorkOrderHoursType:0,LabourMemo:"",EmployeeId:0,ExpertiseId:0,TotalWorkHours:0,masterCompanyId:0,CreatedBy:"admin",UpdatedBy:"admin",IsActive:!0,IsDeleted:!1,WorkOrderQuoteLabor:[]}}}class O{constructor(){this.CreatedBy="admin",this.UpdatedBy="admin",this.IsActive=!0,this.IsDeleted=!1,this.WorkOrderQuoteDetailsId=0,this.WorkOrderQuoteId=0,this.ItemMasterId=0,this.BuildMethodId=0,this.SelectedId=0,this.ReferenceNo="",this.EstCompDate="",this.StageId=0,this.StatusId=0,this.CMMId=0,this.IsPMA=!1,this.IsDER=!1,this.masterCompanyId=0,this.CreatedBy="admin",this.UpdatedBy="admin",this.IsActive=!0,this.IsDeleted=!0,this.WorkOrderQuoteExclusions=[]}}class D{constructor(){this.CreatedBy="admin",this.UpdatedBy="admin",this.IsActive=!0,this.IsDeleted=!1,this.WorkOrderQuoteDetailsId=0,this.WorkOrderQuoteId=0,this.ItemMasterId=0,this.BuildMethodId=0,this.SelectedId=0,this.ReferenceNo="",this.EstCompDate="",this.StageId=0,this.StatusId=0,this.CMMId=0,this.IsPMA=!1,this.IsDER=!1,this.masterCompanyId=0,this.CreatedBy="admin",this.UpdatedBy="admin",this.IsActive=!0,this.IsDeleted=!0,this.WorkOrderQuoteCharges=[]}}class x{constructor(){this.CreatedBy="admin",this.UpdatedBy="admin",this.IsActive=!0,this.IsDeleted=!1,this.WorkOrderQuoteDetailsId=0,this.WorkOrderQuoteId=0,this.ItemMasterId=0,this.BuildMethodId=0,this.SelectedId=0,this.ReferenceNo="",this.EstCompDate="",this.StageId=0,this.StatusId=0,this.CMMId=0,this.IsPMA=!1,this.IsDER=!1,this.masterCompanyId=0,this.CreatedBy="admin",this.UpdatedBy="admin",this.IsActive=!0,this.IsDeleted=!0,this.WorkOrderQuoteMaterial=[]}}class S{constructor(){this.CreatedBy="admin",this.UpdatedBy="admin",this.IsActive=!0,this.IsDeleted=!1,this.WorkOrderQuoteDetailsId=0,this.WorkOrderQuoteId=0,this.ItemMasterId=0,this.BuildMethodId=0,this.SelectedId=0,this.ReferenceNo="",this.EstCompDate="",this.StageId=0,this.StatusId=0,this.CMMId=0,this.IsPMA=!1,this.IsDER=!1,this.masterCompanyId=0,this.CreatedBy="admin",this.UpdatedBy="admin",this.IsActive=!0,this.IsDeleted=!0,this.WorkOrderQuoteFreight=[]}}var C=t("Hocb"),L=t("IBlc");let T=class{constructor(e,r,t,n,s,i,o,l,d,c,p){this.router=e,this.workOrderService=r,this.commonService=t,this._workflowService=n,this.alertService=s,this.workorderMainService=i,this.currencyService=o,this.cdRef=l,this.conditionService=d,this.unitOfMeasureService=c,this.authService=p,this.quoteListViewData={},this.workorderid=0,this.isView=!1,this.enableEditBtn=!1,this.ispop=!1,this.isQuoteListView=!1,this.selectedDisplayType="",this.isWoTab=!1,this.isListView=!1,this.quoteDueDate=new Date,this.isEditMode=!1,this.currency="",this.selectedPartNumber="",this.selectedBuildMethod="",this.labor=new f,this.laborPayload=new I,this.exclusionPayload=new O,this.chargesPayload=new D,this.materialListPayload=new x,this.quoteFreightListPayload=new S,this.workFlowWorkOrderId=0,this.workOrderId=0,this.isEdit=!1,this.freight=[],this.workFlowObject={materialList:[],equipments:[],charges:[],exclusions:[],freights:[]},this.isQuote=!0,this.editMatData=[],this.tabQuoteCreated={materialList:!1,charges:!1,exclusions:!1,labor:!1},this.historicalWorkOrderId=0,this.woWorkFlowId=0,this.currenttaskId=0,this.workOrderFreightList=[],this.displayType="",this.type="0",this.selectedPartDescription="",this.selectedStockLineNumber="",this.fromquote=!1,this.approvalGridActiveTab="mpns",this.internalApproversList=[],this.woQuoteApprovalList=[],this.woQuoteAnalysisList=[],this.customerContactList=[],this.isSpinnerVisible=!1,this.saveType="",this.fields=["partsCost","partsRevPercentage","laborCost","laborCost","laborRevPercentage","overHeadCost","overHeadPercentage","chargesCost","freightCost","exclusionCost","directCost","directCostPercentage","revenue","margin","marginPercentage"],this.isCurrentUserApprovalLimitExceeded=!0,this.quotestatusofCurrentPart="",this.isViewForApprovedPart=!1,this.woQuoteListHeader=[{header:"Action",field:"actionStatus"},{header:"Internal Sent Date",field:"internalSentDate"},{header:"Internal Status",field:"internalStatusId"},{header:"Internal Memo",field:"internalMemo"},{header:" Internal Approved Date",field:"internalApprovedDate"},{header:"Internal Approved By",field:"internalApprovedBy"},{header:"Customer Sent Date",field:"customerSentDate"},{header:"Customer Status",field:"customerStatusId"},{header:"Customer Memo",field:"customerMemo"},{header:" Customer Approved Date",field:"customerApprovedDate"},{header:"Customer Approved By",field:"customerApprovedBy"},{header:"MPN",field:"partNumber"},{header:"MPN Desc",field:"partDescription"},{header:"Stage",field:"stage"},{header:"Scope",field:"scope"},{header:"Parts Cost",field:"partsCost"},{header:"Parts Revenue %",field:"partsRevPercentage"},{header:"Labour Cost",field:"laborCost"},{header:"Labour Revenue %",field:"laborRevPercentage"},{header:"Overhead Cost",field:"overHeadCost"},{header:"Overhead Cost %",field:"overHeadPercentage"},{header:"Charges Cost",field:"chargesCost"},{header:"Freight Cost",field:"freightCost"},{header:"Exclusion Cost",field:"exclusionCost"},{header:"Direct Cost",field:"directCost"},{header:"Direct Cost %",field:"directCostPercentage"},{header:"Revenue",field:"revenue"},{header:"Margin",field:"margin"},{header:"Margin %",field:"marginPercentage"}],this.woQuoteAnalysisHeader=[{header:"Customer",field:"customerName"},{header:"Work Order No",field:"workOrderNum"},{header:"Status",field:"status"},{header:"MPN",field:"partNumber"},{header:"MPN Desc",field:"partDescription"},{header:"Stage",field:"stage"},{header:"Revenue",field:"revenue"},{header:"Parts Cost",field:"materialCost"},{header:"Parts Rev %",field:"materialRevenuePercentage"},{header:"Total Labour Cost",field:"totalLaborCost"},{header:"Labour Cost",field:"laborCost"},{header:"Labour Rev %",field:"laborRevenuePercentage"},{header:"Overhead Cost",field:"overHeadCost"},{header:"Overhead Cost Rev %",field:"overHeadCostRevenuePercentage"},{header:"Other Cost",field:"otherCost"},{header:"Direct Cost",field:"directCost"},{header:"Direct Cost Rev %",field:"directCostRevenuePercentage"},{header:"Margin",field:"margin"},{header:"Margin %",field:"marginPercentage"}],this.enableBackToWO=new a.EventEmitter,this.memoType="",this.quoteStatusList=[]}ngOnInit(){this.enableEditBtn=Boolean(this.enableEditBtn),this.getCustomerWarningsList(),console.log(this.isView),this.breadcrumbs=[{label:"Work Order Quote"}],this.workOrderId?(this.isEditMode=!0,this.breadcrumbs=[...this.breadcrumbs,{label:1==this.isEditMode?"Edit Vendor":"Create Vendor"}]):this.breadcrumbs=[...this.breadcrumbs,{label:1==this.isEditMode?"Edit Vendor":"Create Vendor"}],null==this.quoteForm&&(this.quoteForm=new d),this.moduleName="Quote Information",console.log(this.quoteForm),0==this.workorderid?this.router.queryParams.subscribe(e=>{e.workorderid&&(this.workOrderId=e.workorderid,this.workorderid=this.workOrderId)}):this.workOrderId=this.workorderid,this.workOrderId&&0!=this.workOrderId&&(this.getEmployeeList(this.workOrderId),this.getTaskList(),this.getMarkup(),this.loadCurrency(),this.getCondition(),this.getUnitOfMeasure(),this.getAllEmailType(),this.getAllWorkOrderStatus())}ngOnChanges(){this.enableEditBtn=Boolean(this.enableEditBtn),this.isQuoteListView&&(this.quoteForm=new d,this.formDataFromViewListData())}getAllWorkOrderStatus(){this.commonService.smartDropDownList("WorkOrderQuoteStatus","WorkOrderQuoteStatusId","Description").subscribe(e=>{this.quoteStatusList=e,console.log(this.quoteStatusList)},e=>{this.errorHandling(e)})}deleteMemoConfirmation(e,r){this.mainIndex=e,this.subIndex=r}saveApprovalMemo(e){"internalMemo"==this.memoType?this.woQuoteApprovalList[this.selectedApprovalIndex].internalMemo=e:"customerMemo"==this.memoType&&(this.woQuoteApprovalList[this.selectedApprovalIndex].customerMemo=e)}getInternalSentMaxDate(e){let r=new Date(e);return new Date>r?r:new Date}getInternalSentMinDate(e){return new Date(e)}getInternalApprovedMaxDate(){return new Date}getCustomerSentMinDate(e){if(e)return new Date(e)}getCondition(){this.commonService.smartDropDownList("condition","conditionId","description").subscribe(e=>{e=e.map(e=>({conditionId:e.value,description:e.label})),this.conditions=e},e=>{this.errorHandling(e)})}getUnitOfMeasure(){this.commonService.smartDropDownList("UnitOfMeasure","UnitOfMeasureId","ShortName").subscribe(e=>{e=e.map(e=>({unitOfMeasureId:e.value,shortName:e.label,description:e.label})),this.unitOfMeasuresList=e},e=>{this.errorHandling(e)})}calculateExpiryDate(){this.validFor&&this.quoteDueDate&&(this.expirationDate=new Date,this.expirationDate.setDate(this.quoteForm.openDate.getDate()+this.validFor))}saveQuoteDetails(){this.quotationHeader&&this.quotationHeader.workOrderQuoteId?w("#quoteVer").modal("show"):this.saveQuoteAPI()}saveQuoteAPI(){this.formQuoteInfo(this.quoteForm);let e=null==this.quotationHeader.workOrderQuoteId||0==this.quotationHeader.workOrderQuoteId;this.isSpinnerVisible=!0,this.workOrderService.createOrUpdateQuotation(this.quotationHeader).subscribe(r=>{this.isSpinnerVisible=!1,this.quotationHeader=r,this.quoteForm.quoteNumber=r.quoteNumber,this.setWorkOrderQuoteId(r.workOrderQuoteId),this.laborPayload.StatusId=this.exclusionPayload.StatusId=this.chargesPayload.StatusId=this.materialListPayload.StatusId=this.quoteFreightListPayload.StatusId=r.quoteStatusId,this.alertService.showMessage(this.moduleName,`Quote ${e?"Created":"Updated"}  Succesfully`,k.d.success)},e=>{this.errorHandling(e),this.isSpinnerVisible=!1})}formQuoteInfo(e){let r={WorkOrderId:e.workOrderId?e.workOrderId:e.WorkOrderId,WorkFlowWorkOrderId:e.workFlowWorkOrderId?e.workFlowWorkOrderId:e.WorkFlowWorkOrderId,openDate:e.openDate,QuoteDueDate:this.quoteDueDate,ValidForDays:this.validFor,ExpirationDate:this.expirationDate,QuoteStatusId:e.expirationDateStatus,CustomerId:e.customerId,CurrencyId:Number(this.currency),AccountsReceivableBalance:this.accountsReceivableBalance,SalesPersonId:e.salesPersonId,EmployeeId:e.employeeId,masterCompanyId:e.masterCompanyId,createdBy:"admin",updatedBy:"admin",IsActive:!0,IsDeleted:!1,DSO:this.dso,Warnings:this.warnings,Memo:this.memo,creditLimit:this.creditLimit,creditTerm:this.creditTerm,customerContact:this.customerContact,customerEmail:this.customerEmail,customerName:this.customerName,customerPhone:this.customerPhone,customerReference:this.customerRef,employeeName:this.employeeName,salesPersonName:this.salesPerson,workOrderNumber:this.workOrderNumber,workOrderQuoteId:0,approvedDate:this.approvedDate,sentDate:this.sentDate,csrId:e.csrId,creditTermsId:e.creditTermsId,versionNo:e.versionNo?e.versionNo:"V1",employeeId:e.employeeId&&e.employeeId.value?e.employeeId.value:e.employeeId};return e.quoteNumber&&(r.quoteNumber=e.quoteNumber),r.EmployeeId&&delete r.EmployeeId,void 0!==this.quotationHeader&&void 0!==this.quotationHeader.workOrderQuoteId&&(r.workOrderQuoteId=this.quotationHeader.workOrderQuoteId),e.isVersionIncrease&&(r.isVersionIncrease=!0),this.quotationHeader=r,this.quotationHeader}getWorkOrderInfo(e){this.isSpinnerVisible=!0,e&&0!=e&&this.workOrderService.getWorkOrderById(e).subscribe(e=>{e?(this.savedWorkOrderData=e,this.customerCode=e.customerDetails.customerCode,this.customerName=e.customerDetails.customerName,this.customerContact=e.customerDetails.customerContact,this.customerRef=e.customerDetails.customerRef,this.csr=e.customerDetails.csrName,this.customerEmail=e.customerDetails.customerEmail,this.customerPhone=e.customerDetails.customerPhone,this.creditLimit=Object(C.b)(e.creditLimit,0),this.workOrderNumber=e.workOrderNum,this.quoteForm.WorkOrderId=e.workOrderId,this.quoteForm.WorkFlowWorkOrderId=e.workFlowWorkOrderId,this.quoteForm.openDate=new Date(e.openDate),this.quoteForm.customerId=e.customerDetails.customerId,this.quoteForm.CustomerPhone=e.customerDetails.customerPhone,this.quoteForm.salesPersonId=e.salesPersonId,this.quoteForm.csrId=e.csrId,this.quoteForm.employeeId=e.employeeId,this.quoteForm.creditTermsId=e.customerDetails.creditTermsId,this.quoteForm.masterCompanyId=e.masterCompanyId,this.quoteForm.creditTermsandLimit=e.customerDetails.creditLimit,this.quoteForm.versionNo="V1",this.workOrderService.getWorkOrderQuoteDetail(e.workOrderId,e.workFlowWorkOrderId).subscribe(e=>{if(e){this.currentCustomerId=e.customerId,this.isEdit=!0,this.setWorkOrderQuoteId(e.workOrderQuote.workOrderQuoteId),this.quotationHeader=this.formQuoteInfo(e.workOrderQuote),this.quotationHeader.workOrderQuoteId=e.workOrderQuote.workOrderQuoteId,this.dso=e.workOrderQuote.dso,this.validFor=e.workOrderQuote.validForDays,e.workOrderQuote.openDate=new Date(e.workOrderQuote.openDate),this.quoteForm=Object.assign({},e.workOrderQuote,{WorkOrderId:e.workOrderId,WorkFlowWorkOrderId:e.workFlowWorkOrderId,quoteNumber:e.workOrderQuote.quoteNumber,expirationDateStatus:e.workOrderQuote.quoteStatusId}),this.quoteForm.versionNo="V1",e.workOrderQuote.versionNo&&(this.quoteForm.versionNo=e.workOrderQuote.versionNo,this.increaseVer()),this.quoteDueDate=new Date(e.workOrderQuote.quoteDueDate),this.expirationDate=new Date(e.workOrderQuote.expirationDate),this.currency=e.workOrderQuote.currencyId,this.accountsReceivableBalance=e.workOrderQuote.accountsReceivableBalance,this.warnings=e.warnings,this.memo=e.memo,this.approvedDate=new Date(e.approvedDate),this.sentDate=new Date(e.sentDate),this.isSpinnerVisible=!1,this.setBuildMethod(e.buildMethodId);for(let r of this.employeeList)r.value==e.employeeId&&(this.employeeName=r.label,this.quoteForm.employeeId={label:r.label,value:e.employeeId})}else this.isSpinnerVisible=!1;this.quotationHeader&&this.quotationHeader.workOrderQuoteId||(this.quoteForm.employeeId=this.authService.currentEmployee,this.workOrderService.getQuoteSettings(this.savedWorkOrderData.masterCompanyId,this.savedWorkOrderData.workOrderTypeId).subscribe(e=>{e&&e.length>0&&(this.validFor=e[0].validDays,this.calculateExpiryDate())},e=>{}))},e=>{this.isSpinnerVisible=!1}),this.getCreditTerms(e.creditTermsId),this.setEmpAndSalesPersonName(e.employeeId,e.salesPersonId),this.getMPNList(e.workOrderId)):this.isSpinnerVisible=!1},e=>{this.errorHandling(e),this.isSpinnerVisible=!1})}increaseVer(){let e=Number(this.quoteForm.versionNo.split("V")[1])+1;this.quoteForm.versionNo="V"+e}increaseVerConfirmation(e){""==this.saveType?(this.quoteForm.isVersionIncrease=e,this.saveQuoteAPI()):"charges"==this.saveType?(this.chargesPayload.isVersionIncrease=e,this.saveCharges()):"exclusions"==this.saveType?(this.exclusionPayload.isVersionIncrease=e,this.saveExclusions()):"labour"==this.saveType?(this.laborPayload.isVersionIncrease=e,this.createLaborQuote()):"materialList"==this.saveType?(this.materialListPayload.isVersionIncrease=e,this.saveMaterialList()):"freightsList"==this.saveType&&(this.quoteFreightListPayload.isVersionIncrease=e,this.saveFreights())}getCreditTerms(e){this.commonService.smartDropDownList("CreditTerms","CreditTermsId","Name").subscribe(r=>{for(let t of r)t.value==e&&(this.creditTerms=t.label)},e=>{this.errorHandling(e)})}getEmployeeList(e){this.commonService.smartDropDownList("Employee","EmployeeId","FirstName").subscribe(r=>{this.employeeList=r,this.employeesOriginalData=r,this.getWorkOrderInfo(e),this.getMPNDetails(e)},e=>{this.errorHandling(e)})}setEmpAndSalesPersonName(e,r){for(let t of this.employeeList)t.value==e&&(this.employeeName=t.label,this.quoteForm.employeeId={label:t.label,value:e}),t.value==r&&(this.salesPerson=t.label)}getMPNList(e){e&&0!=e&&this.workOrderService.getWorkOrderWorkFlowNumbers(e).subscribe(e=>{this.workOrderWorkFlowOriginalData=e,console.log(e),this.mpnPartNumbersList=e.map(e=>({value:{workOrderWorkFlowId:e.value,workOrderNo:e.label,masterPartId:e.masterPartId,workflowId:e.workflowId,workflowNo:e.workflowNo,partNumber:e.partNumber,workOrderScopeId:e.workOrderScopeId,itemMasterId:e.itemMasterId,partDescription:e.description,stockLineNumber:e.stockLineNo,woPartNoId:e.woPartNoId,managementStructureId:e.managementStructureId,quoteStatus:e.quoteStatus},label:e.partNumber})),this.savedWorkOrderData&&this.savedWorkOrderData.isSinglePN?(this.selectedPartNumber=this.mpnPartNumbersList[0].value,this.selectedquotePn=this.mpnPartNumbersList[0].label,this.partNumberSelected(this.mpnPartNumbersList[0].value)):(this.selectedPartNumber=this.mpnPartNumbersList[0].value,this.partNumberSelected(this.mpnPartNumbersList[0].value))},e=>{this.errorHandling(e)})}partNumberSelected(e){this.selectedPartNumber=e,this.quotestatusofCurrentPart=e.quoteStatus,this.isViewForApprovedPart=!1,"Approved"==this.quotestatusofCurrentPart&&(this.isViewForApprovedPart=!0),this.clearQuoteData();let r=0;e&&(this.workOrderService.getWOTaskQuote(this.selectedPartNumber.woPartNoId).subscribe(e=>{this.WOTaskDetails=e},e=>{this.errorHandling(e)}),this.selectedPartDescription=e.partDescription,this.selectedStockLineNumber=e.stockLineNumber,r=e.masterPartId,this.labor.workFlowWorkOrderId=e,this.workFlowWorkOrderId=e.workOrderWorkFlowId,this.selectedWorkFlowWorkOrderId=e.workOrderWorkFlowId,this.workOrderService.getSavedQuoteDetails(this.selectedWorkFlowWorkOrderId).subscribe(e=>{this.buildMethodDetails=e,e&&(this.costPlusType=e.materialBuildMethod.toString(),this.materialFlatBillingAmount=e.materialFlatBillingAmount),e&&e.workOrderQuoteDetailsId?(this.workOrderQuoteDetailsId=e.workOrderQuoteDetailsId,this.getQuoteTabData(),this.historicalWorkOrderId=e.selectedId,this.woWorkFlowId=e.selectedId,this.currenttaskId=e.taskId,1==e.buildMethodId?this.buildMethodSelected("use work order"):2==e.buildMethodId?this.buildMethodSelected("use work flow"):3==e.buildMethodId?this.buildMethodSelected("use historical wos"):this.buildMethodSelected("build from scratch")):(this.workOrderQuoteDetailsId=0,this.updateWorkOrderQuoteDetailsId(this.workOrderQuoteDetailsId),this.getQuoteTabData())},e=>{this.errorHandling(e)})),this.savedWorkOrderData.partNumbers.forEach(e=>{r==e.masterPartId&&(this.laborPayload.IsDER=this.exclusionPayload.IsDER=this.chargesPayload.IsDER=this.materialListPayload.IsDER=this.quoteFreightListPayload.IsDER=e.isDER,this.laborPayload.IsPMA=this.exclusionPayload.IsPMA=this.chargesPayload.IsPMA=this.materialListPayload.IsPMA=this.quoteFreightListPayload.IsPMA=e.isPMA,this.laborPayload.ItemMasterId=this.exclusionPayload.ItemMasterId=this.chargesPayload.ItemMasterId=this.materialListPayload.ItemMasterId=this.quoteFreightListPayload.ItemMasterId=e.masterPartId,this.laborPayload.CMMId=this.exclusionPayload.CMMId=this.chargesPayload.CMMId=this.materialListPayload.CMMId=this.quoteFreightListPayload.CMMId=e.cmmId,this.laborPayload.EstCompDate=this.exclusionPayload.EstCompDate=this.chargesPayload.EstCompDate=this.materialListPayload.EstCompDate=this.quoteFreightListPayload.EstCompDate=e.estimatedCompletionDate,this.laborPayload.StatusId=this.exclusionPayload.StatusId=this.chargesPayload.StatusId=this.materialListPayload.StatusId=this.quoteFreightListPayload.StatusId=e.workOrderStatusId)})}getMPNDetails(e){this.workOrderService.getPartsDetail(e).subscribe(e=>{this.workOrderPartsDetail=e},e=>{this.errorHandling(e)})}buildMethodSelected(e){this.selectedBuildMethod=e,this.selectedWorkFlowOrWorkOrder=void 0,"use work flow"==e?this.labor.workFloworSpecificTaskorWorkOrder="workFlow":"use historical wos"==e&&(this.labor.workFloworSpecificTaskorWorkOrder="specificTasks"),this.gridActiveTab||this.gridTabChange("materialList")}getDisplayData(e){var r,t;this.displayType=e,this.mpnPartNumbersList.forEach(n=>{if(n.label==this.selectedPartNumber.partNumber){r=n.value.masterPartId,t=n.value.workOrderScopeId;let a={first:0,rows:10,sortOrder:1,filters:{ItemMasterId:r,WorkScopeId:t,statusId:Number(this.type)},globalFilter:null};1==this.type&&(a.filters.customerId=this.quotationHeader.CustomerId),"historical WO quotes"==e?this.workOrderService.getBuildDetailsFromHistoricalWorkOrderQuote(r,t,a).subscribe(e=>{this.buildHistoricalList=e}):"use historical wos"==e&&this.workOrderService.getBuildDetailsFromHistoricalWorkOrder(r,t,a).subscribe(e=>{this.buildHistoricalList=e})}})}getWOMaterialList(){this.isSpinnerVisible=!0,this.workorderMainService.getWorkOrderMaterialList(this.workFlowWorkOrderId,this.workOrderId).subscribe(e=>{if(this.isSpinnerVisible=!1,this.workOrderMaterialList=e,e.length>0){if(this.materialListQuotation=e,this.materialListQuotation&&this.materialListQuotation.length>0)for(let e in this.materialListQuotation)this.materialListQuotation[e].unitCost&&(this.materialListQuotation[e].unitCost=Number(this.materialListQuotation[e].unitCost.toString().split(",").join("")).toFixed(2)),this.materialListQuotation[e].billingRate&&(this.materialListQuotation[e].billingRate=Number(this.materialListQuotation[e].billingRate.toString().split(",").join("")).toFixed(2)),this.materialListQuotation[e].billingAmount&&(this.materialListQuotation[e].billingAmount=Number(this.materialListQuotation[e].billingAmount.toString().split(",").join("")).toFixed(2));let r=[],t=[];this.materialListQuotation.forEach(e=>{t=[...t,...e]}),r=t.reduce((function(e,r){return e[r.taskId]=e[r.taskId]||[],e[r.taskId].push(r),e}),Object.create(null)),this.materialListQuotation=[];for(let e in r)this.materialListQuotation.push(r[e])}},e=>{this.errorHandling(e),this.isSpinnerVisible=!1})}getWOLabourList(){this.isSpinnerVisible=!0,this.workorderMainService.getWorkOrderLaborList(this.workFlowWorkOrderId,this.workOrderId,!1,0).subscribe(e=>{this.isSpinnerVisible=!1;let r=this.labor.workOrderLaborList;this.labor=Object.assign({},e,{workOrderLaborList:r}),this.labor.hoursorClockorScan=void 0,this.labor.workFlowWorkOrderId=this.workFlowWorkOrderId,this.taskList.forEach(r=>{e&&e.laborList.forEach(e=>{if(e.taskId==r.taskId){this.labor.workOrderLaborList[0][r.description.toLowerCase()][0]&&null==this.labor.workOrderLaborList[0][r.description.toLowerCase()][0].expertiseId&&null==this.labor.workOrderLaborList[0][r.description.toLowerCase()][0].employeeId&&(this.labor.workOrderLaborList[0][r.description.toLowerCase()]=[]);let t={};if(e.hours){let r=e.hours.toFixed(2);e.totalHours=r.toString().split(".")[0],e.totalMinutes=r.toString().split(".")[1]}t=Object.assign({},e,{employeeId:{label:e.employeeName,value:e.employeeId}}),this.labor.workOrderLaborList[0][r.description.toLowerCase()].push(t)}})})},e=>{this.errorHandling(e),this.isSpinnerVisible=!1})}getWOChargesList(){this.isSpinnerVisible=!0,this.workorderMainService.getWorkOrderChargesList(this.workFlowWorkOrderId,this.workOrderId).subscribe(e=>{this.isSpinnerVisible=!1,this.workOrderChargesList=e;for(let r in this.workOrderChargesList)this.workOrderChargesList[r].unitCost=Number(this.workOrderChargesList[r].unitCost.toString().split(",").join("")).toFixed(2),this.workOrderChargesList[r].extendedCost=Number(this.workOrderChargesList[r].extendedCost.toString().split(",").join("")).toFixed(2)},e=>{this.errorHandling(e),this.isSpinnerVisible=!1})}getWOExclusionsList(){this.isSpinnerVisible=!0,this.workorderMainService.getWorkOrderExclusionsList(this.workFlowWorkOrderId,this.workOrderId).subscribe(e=>{this.isSpinnerVisible=!1,this.workOrderExclusionsList=e;for(let r in this.workOrderExclusionsList)this.workOrderExclusionsList[r].billingAmount&&(this.workOrderExclusionsList[r].billingAmount=Number(this.workOrderExclusionsList[r].billingAmount.toString().split(",").join("")).toFixed(2)),this.workOrderExclusionsList[r].billingRate&&(this.workOrderExclusionsList[r].billingRate=Number(this.workOrderExclusionsList[r].billingRate.toString().split(",").join("")).toFixed(2)),this.workOrderExclusionsList[r].unitCost&&(this.workOrderExclusionsList[r].unitCost=Number(this.workOrderExclusionsList[r].unitCost.toString().split(",").join("")).toFixed(2)),this.workOrderExclusionsList[r].extendedCost&&(this.workOrderExclusionsList[r].extendedCost=Number(this.workOrderExclusionsList[r].extendedCost.toString().split(",").join("")).toFixed(2))},e=>{this.isSpinnerVisible=!1})}getWOFrieghtsList(){this.workorderMainService.getWorkOrderFrieghtsList(this.workFlowWorkOrderId,this.workOrderId,!1,0).subscribe(e=>{this.workOrderFreightList=e;for(let r in this.workOrderFreightList)this.workOrderFreightList[r].billingAmount&&(this.workOrderFreightList[r].billingAmount=Number(this.workOrderFreightList[r].billingAmount.toString().split(",").join("")).toFixed(2))})}isEmptyObj(e){for(var r in e)if(e.hasOwnProperty(r))return!1;return!0}gridTabChange(e){this.gridActiveTab=e,"materialList"==e&&this.materialListQuotation.length<=0?this.getQuoteMaterialListByWorkOrderQuoteId():"charges"==e&&(!this.workOrderChargesList||this.workOrderChargesList.length<=0)?this.getQuoteChargesListByWorkOrderQuoteId():"exclusions"==e&&(!this.workOrderExclusionsList||this.workOrderExclusionsList.length<=0)?this.getQuoteExclusionListByWorkOrderQuoteId():"labor"!=e||this.labor.workOrderLaborList&&!this.isEmptyObj(this.labor.workOrderLaborList[0])&&!this.checkForAllEmpty()?"freight"==e&&(!this.workOrderFreightList||this.workOrderFreightList.length<=0)&&this.getQuoteFreightListByWorkOrderQuoteId():this.getQuoteLaborListByWorkOrderQuoteId();let r=document.getElementById("quote-grid-tabs");r&&r.scrollIntoView()}checkForAllEmpty(){let e=!0;for(let r of this.labor.workOrderLaborList[0])this.labor.workOrderLaborList[0][r].length>0&&(e=!1);return e}getQuoteInfo(e){this.selectedWorkFlowOrWorkOrder=e,this.formTaskList(),"use work flow"==this.selectedBuildMethod?this.workOrderService.getWorkFlowDetails(e.workFlowId).subscribe(e=>{if(this.materialListQuotation=e.materialList,this.materialListQuotation&&this.materialListQuotation.length>0)for(let n in this.materialListQuotation)this.materialListQuotation[n].unitCost&&(this.materialListQuotation[n].unitCost=Number(this.materialListQuotation[n].unitCost.toString().split(",").join("")).toFixed(2)),this.materialListQuotation[n].billingRate&&(this.materialListQuotation[n].billingRate=Number(this.materialListQuotation[n].billingRate.toString().split(",").join("")).toFixed(2)),this.materialListQuotation[n].billingAmount&&(this.materialListQuotation[n].billingAmount=Number(this.materialListQuotation[n].billingAmount.toString().split(",").join("")).toFixed(2));let r=[],t=[];this.materialListQuotation.forEach(e=>{t=[...t,...e]}),r=t.reduce((function(e,r){return e[r.taskId]=e[r.taskId]||[],e[r.taskId].push(r),e}),Object.create(null)),this.materialListQuotation=[];for(let n in r)this.materialListQuotation.push(r[n]);this.workOrderMaterialList=e.materialList,this.laborQuotation=e.expertise,this.chargesQuotation,this.workOrderChargesList=e.charges;for(let n in this.workOrderChargesList)this.workOrderChargesList[n].unitCost=Number(this.workOrderChargesList[n].unitCost.toString().split(",").join("")).toFixed(2),this.workOrderChargesList[n].extendedCost=Number(this.workOrderChargesList[n].extendedCost.toString().split(",").join("")).toFixed(2);this.exclusionsQuotation=e.exclusions.map(e=>Object.assign({},e,{epn:e.partNumber,epnDescription:e.partDescription})),this.workOrderExclusionsList=e.exclusions.map(e=>Object.assign({},e,{epn:e.partNumber,epnDescription:e.partDescription})),this.taskList.forEach(r=>{e.expertise.forEach(e=>{if(e.taskId==r.taskId){this.labor.workOrderLaborList[0][r.description.toLowerCase()][0]&&null==this.labor.workOrderLaborList[0][r.description.toLowerCase()][0].expertiseId&&null==this.labor.workOrderLaborList[0][r.description.toLowerCase()][0].employeeId&&(this.labor.workOrderLaborList[0][r.description.toLowerCase()]=[]);let t={};t=Object.assign({},e,{expertiseId:e.expertiseTypeId,hours:e.estimatedHours,employeeId:{label:e.employeeName,value:e.employeeId}}),this.labor.workOrderLaborList[0][r.description.toLowerCase()].push(t)}})}),this.labor.workFloworSpecificTaskorWorkOrder="workFlow",this.savedWorkOrderData.workFlowWorkOrderId=void 0},e=>{this.errorHandling(e)}):this.clearQuoteData()}clearQuoteData(){this.materialListQuotation=[],this.laborQuotation=[],this.chargesQuotation=[],this.exclusionsQuotation=[]}saveWorkOrderFreightsList(e){this.quoteFreightListPayload.BuildMethodId=this.getBuildMethodId(),this.quoteFreightListPayload.taskId="build from scratch"==this.selectedBuildMethod?this.currenttaskId:0,this.quoteFreightListPayload.WorkflowWorkOrderId=this.selectedWorkFlowWorkOrderId,this.quoteFreightListPayload.createdDate=e.createdDate?e.createdDate:new Date,this.quoteFreightListPayload.masterCompanyId=this.quotationHeader.masterCompanyId,this.quoteFreightListPayload.SelectedId="use work flow"==this.selectedBuildMethod?this.woWorkFlowId:"use historical wos"==this.selectedBuildMethod?this.historicalWorkOrderId:0,this.quoteFreightListPayload.WorkOrderQuoteFreight=e.data.map(e=>(e.workOrderQuoteDetailsId&&0!=e.workOrderQuoteDetailsId&&(this.quoteFreightListPayload.WorkOrderQuoteDetailsId=e.workOrderQuoteDetailsId),{WorkOrderQuoteFreightId:e.workOrderQuoteFreightId?e.workOrderQuoteFreightId:0,WorkOrderQuoteDetailsId:this.quoteFreightListPayload.WorkOrderQuoteDetailsId?this.quoteFreightListPayload.WorkOrderQuoteDetailsId:0,CarrierId:e.carrierId,ShipViaId:e.shipViaId,Length:e.length,Width:e.width,Height:e.height,Weight:e.weight,Memo:e.memo,Amount:e.amount,IsFixedFreight:e.isFixedFreight,FixedAmount:e.fixedAmount,masterCompanyId:this.quotationHeader.masterCompanyId,markupPercentageId:e.markupPercentageId,freightCostPlus:e.freightCostPlus,taskId:e.taskId,CreatedBy:"admin",UpdatedBy:"admin",CreatedDate:"2019-10-31T09:06:59.68",UpdatedDate:"2019-10-31T09:06:59.68",IsActive:!0,IsDeleted:e.isDeleted,BillingMethodId:Number(e.billingMethodId),BillingAmount:e.billingAmount,headerMarkupId:e.headerMarkupId,markupFixedPrice:e.markupFixedPrice,uomId:e.uomId,dimensionUOMId:e.dimensionUOMId,currencyId:e.currencyId})),this.quoteFreightListPayload.WorkOrderQuoteTask=[],this.quoteFreightListPayload.freightFlatBillingAmount=e.freightFlatBillingAmount,this.quoteFreightListPayload.FreightBuildMethod=e.FreightBuildMethod,e.taskSum.forEach(e=>{this.WOTaskDetails.forEach(r=>{r.taskId==e.TaskId&&(e.WorkOrderQuoteTaskId=r.workOrderQuoteTaskId)}),this.quoteFreightListPayload.WorkOrderQuoteTask.push(Object.assign({},e,{woPartNoId:this.selectedPartNumber.woPartNoId}))}),this.saveType="freightsList",w("#quoteVer").modal("show")}saveFreights(){this.workOrderService.saveFreightsListQuote(this.quoteFreightListPayload).subscribe(e=>{this.tabQuoteCreated.freight=!0,this.updateWorkOrderQuoteDetailsId(e.workOrderQuoteDetailsId),this.getQuoteFreightListByWorkOrderQuoteId(),this.alertService.showMessage(this.moduleName,"Quotation for Freights created successfully",k.d.success),this.updateQuotationHeader()},e=>{this.errorHandling(e)})}createMaterialQuote(){this.materialListPayload.BuildMethodId=this.getBuildMethodId(),this.materialListPayload.taskId="build from scratch"==this.selectedBuildMethod?this.currenttaskId:0,this.materialListPayload.WorkflowWorkOrderId=this.selectedWorkFlowWorkOrderId,this.materialListPayload.SelectedId="use work flow"==this.selectedBuildMethod?this.woWorkFlowId:"use historical wos"==this.selectedBuildMethod?this.historicalWorkOrderId:0;let e=[];this.materialListPayload.MaterialBuildMethod=this.costPlusType,this.materialListPayload.materialFlatBillingAmount=this.materialFlatBillingAmount,this.materialListQuotation.forEach(r=>{this.taskList.forEach(t=>{if(t.taskId==r[0].taskId){let n=0;this.WOTaskDetails.forEach(e=>{e.taskId==t.taskId&&(n=e.workOrderQuoteTaskId)}),e.push({WorkOrderQuoteTaskId:n,TaskId:t.taskId,MaterialCost:this.getTotalTaskUnitCost(r),MaterialBilling:this.totalTaskMaterialBillingAmount(r),MaterialRevenue:this.totalTaskMaterialBillingAmount(r),masterCompanyId:this.authService.currentUser.masterCompanyId,CreatedBy:"admin",UpdatedBy:"admin",CreatedDate:(new Date).toDateString(),UpdatedDate:(new Date).toDateString(),IsActive:!0,IsDeleted:!1,woPartNoId:this.selectedPartNumber.woPartNoId})}})});let r=[];this.materialListQuotation.forEach(e=>{r=[...r,...e]}),this.materialListPayload.WorkOrderQuoteTask=e,this.materialListPayload.WorkOrderQuoteMaterial=r.map(e=>(this.materialListPayload.WorkOrderQuoteDetailsId=this.workOrderQuoteDetailsId,{WorkOrderQuoteMaterialId:e.workOrderQuoteMaterialId?e.workOrderQuoteMaterialId:0,WorkOrderQuoteDetailsId:e.workOrderQuoteDetailsId?e.workOrderQuoteDetailsId:0,ItemMasterId:e.itemMasterId,ConditionCodeId:e.conditionCodeId,MandatoryOrSupplemental:e.mandatoryOrSupplemental,mandatorySupplementalId:e.mandatorySupplementalId,ItemClassificationId:e.itemClassificationId,Quantity:e.quantity,UnitOfMeasureId:e.unitOfMeasureId,UnitCost:e.unitCost,ExtendedCost:e.extendedCost,Price:e.price,provisionId:e.provisionId,ExtendedPrice:e.extendedPrice,Memo:e.memo,IsDefered:e.isDeferred,markupPercentageId:e.markupPercentageId,TotalPartsCost:155,Markup:e.markup,masterCompanyId:""==e.masterCompanyId?0:e.masterCompanyId,TaskId:e.taskId,BillingMethodId:Number(e.billingMethodId),BillingRate:e.billingRate,BillingAmount:e.billingAmount,headerMarkupId:this.overAllMarkup,markupFixedPrice:this.costPlusType,CreatedBy:"admin",UpdatedBy:"admin",IsActive:!0,IsDeleted:e.isDeleted})),this.saveType="materialList",w("#quoteVer").modal("show")}saveMaterialList(){this.workOrderService.saveMaterialListQuote(this.materialListPayload).subscribe(e=>{this.tabQuoteCreated.materialList=!0,this.updateWorkOrderQuoteDetailsId(e.workOrderQuoteDetailsId),this.getQuoteMaterialListByWorkOrderQuoteId(),this.alertService.showMessage(this.moduleName,"Quotation for material list created successfully",k.d.success),this.updateQuotationHeader()},e=>{this.errorHandling(e)})}tmchange(){for(let e of this.materialListQuotation)e.forEach(e=>{e.billingMethodId=this.costPlusType,e.markupPercentageId="",e.billingRate=0,e.billingAmount=(e.quantity*Number(e.unitCost.toString().split(",").join(""))).toFixed(2),3==this.costPlusType&&(e.billingAmount=0,this.materialFlatBillingAmount=0),1==Number(this.costPlusType)&&(this.overAllMarkup="")})}getTaskName(e){this.taskList.forEach(r=>{if(r.taskId==e.taskId)return r.description})}createLaborQuote(){this.laborPayload.workflowWorkOrderId=this.selectedWorkFlowWorkOrderId,this.laborPayload.SelectedId="use work flow"==this.selectedBuildMethod?this.woWorkFlowId:"use historical wos"==this.selectedBuildMethod?this.historicalWorkOrderId:0,this.workOrderService.saveLaborListQuote(this.laborPayload).subscribe(e=>{if(e){this.tabQuoteCreated.labor=!0;let r=this.labor.workOrderLaborList;this.labor=Object.assign({},e.workOrderQuoteLaborHeader,{workOrderLaborList:r}),this.mpnPartNumbersList.forEach(e=>{e.label==this.selectedPartNumber&&(this.labor.workFlowWorkOrderId=e)}),this.updateWorkOrderQuoteDetailsId(e.workOrderQuoteDetailsId),this.getQuoteLaborListByWorkOrderQuoteId(),this.updateQuotationHeader()}this.alertService.showMessage(this.moduleName,"Quotation created  Succesfully",k.d.success)},e=>{this.errorHandling(e)})}createChargeQuote(e){this.chargesPayload.workflowWorkOrderId=this.selectedWorkFlowWorkOrderId,this.chargesPayload.taskId="build from scratch"==this.selectedBuildMethod?this.currenttaskId:0,this.chargesPayload.SelectedId="use work flow"==this.selectedBuildMethod?this.woWorkFlowId:"use historical wos"==this.selectedBuildMethod?this.historicalWorkOrderId:0,this.chargesPayload.BuildMethodId=this.getBuildMethodId(),this.chargesPayload.createdDate=e.createdDate?e.createdDate:new Date,this.chargesPayload.masterCompanyId=this.quotationHeader.masterCompanyId,this.chargesPayload.WorkOrderQuoteCharges=e.data.map(e=>(this.chargesPayload.WorkOrderQuoteDetailsId=this.workOrderQuoteDetailsId,{WorkOrderQuoteChargesId:e.workOrderQuoteChargesId?e.workOrderQuoteChargesId:0,WorkOrderQuoteDetailsId:e.workOrderQuoteDetailsId?e.workOrderQuoteDetailsId:0,ChargesTypeId:e.workflowChargeTypeId,VendorId:e.vendorId,Quantity:e.quantity,RoNumberId:1,InvoiceNo:"InvoiceNo 123456",Amount:100,MarkupPercentageId:e.markupPercentageId,Description:e.description,UnitCost:e.unitCost,ExtendedCost:e.extendedCost,UnitPrice:e.unitPrice,ExtendedPrice:e.extendedPrice,HeaderMarkupId:e.headerMarkupId,masterCompanyId:this.quotationHeader.masterCompanyId,taskId:e.taskId,CreatedBy:"admin",UpdatedBy:"admin",IsActive:!0,IsDeleted:e.isDeleted,BillingMethodId:e.billingMethodId,BillingRate:e.billingRate,BillingAmount:e.billingAmount,markupFixedPrice:e.markupFixedPrice,roNum:e.roNum,refNum:e.refNum,invoiceNum:e.invoiceNum})),this.chargesPayload.WorkOrderQuoteTask=[],this.chargesPayload.chargesFlatBillingAmount=e.chargesFlatRateBillingAmount,this.chargesPayload.ChargesBuildMethod=e.ChargesBuildMethod,e.taskSum.forEach(e=>{this.WOTaskDetails.forEach(r=>{r.taskId==e.TaskId&&(e.WorkOrderQuoteTaskId=r.workOrderQuoteTaskId)}),this.chargesPayload.WorkOrderQuoteTask.push(Object.assign({},e,{woPartNoId:this.selectedPartNumber.woPartNoId}))}),w("#quoteVer").modal("show"),this.saveType="charges"}saveCharges(){this.workOrderService.saveChargesQuote(this.chargesPayload).subscribe(e=>{this.tabQuoteCreated.charges=!0,this.workOrderChargesList=e.workOrderQuoteCharges;for(let r in this.workOrderChargesList)this.workOrderChargesList[r].unitCost=Number(this.workOrderChargesList[r].unitCost.toString().split(",").join("")).toFixed(2),this.workOrderChargesList[r].extendedCost=Number(this.workOrderChargesList[r].extendedCost.toString().split(",").join("")).toFixed(2);this.updateWorkOrderQuoteDetailsId(e.workOrderQuoteDetailsId),this.getQuoteChargesListByWorkOrderQuoteId(),this.alertService.showMessage(this.moduleName,"Quotation created  Succesfully",k.d.success),this.updateQuotationHeader()},e=>{this.errorHandling(e)})}createExclusionsQuote(){this.exclusionsQuotation.workflowWorkOrderId=this.selectedWorkFlowWorkOrderId,this.exclusionsQuotation.SelectedId="use work flow"==this.selectedBuildMethod?this.woWorkFlowId:"use historical wos"==this.selectedBuildMethod?this.historicalWorkOrderId:0,this.saveType="exclusions",w("#quoteVer").modal("show")}saveExclusions(){this.workOrderService.saveExclusionsQuote(this.exclusionsQuotation).subscribe(e=>{this.tabQuoteCreated.exclusions=!0,this.workOrderExclusionsList=e.workOrderQuoteExclusions;for(let r in this.workOrderExclusionsList)this.workOrderExclusionsList[r].billingAmount&&(this.workOrderExclusionsList[r].billingAmount=Number(this.workOrderExclusionsList[r].billingAmount.toString().split(",").join("")).toFixed(2)),this.workOrderExclusionsList[r].billingRate&&(this.workOrderExclusionsList[r].billingRate=Number(this.workOrderExclusionsList[r].billingRate.toString().split(",").join("")).toFixed(2)),this.workOrderExclusionsList[r].unitCost&&(this.workOrderExclusionsList[r].unitCost=Number(this.workOrderExclusionsList[r].unitCost.toString().split(",").join("")).toFixed(2)),this.workOrderExclusionsList[r].extendedCost&&(this.workOrderExclusionsList[r].extendedCost=Number(this.workOrderExclusionsList[r].extendedCost.toString().split(",").join("")).toFixed(2));this.getQuoteExclusionListByWorkOrderQuoteId(),this.updateWorkOrderQuoteDetailsId(e.workOrderQuoteDetailsId),this.updateQuotationHeader()},e=>{this.errorHandling(e)})}getTaskList(){null==this.labor&&(this.labor=new f),this.labor.workOrderLaborList=[],this.labor.workOrderLaborList.push({}),this.commonService.smartDropDownList("task","taskId","description").subscribe(e=>{e=e.map(e=>({taskId:e.value,description:e.label})),this.labor.workOrderLaborList[0]={},this.taskList=e,this.formTaskList()},e=>{this.errorHandling(e),console.log(e)})}createNew(e){this.editData=void 0,"add"==e&&(this.fromquote=!0)}edit(e,r){this.isEditMode=!0,this.editingIndex=r,this.createNew("edit"),this.cdRef.detectChanges(),this.isEdit=!0,this.editData=e}formTaskList(){this.taskList.forEach(e=>{this.labor.workOrderLaborList[0][e.description.toLowerCase()]=[]})}saveworkOrderLabor(e){console.log(e),this.laborPayload.BuildMethodId=this.getBuildMethodId(),this.laborPayload.WorkOrderQuoteLaborHeader.taskId="build from scratch"==this.selectedBuildMethod?this.currenttaskId:0,this.laborPayload.WorkOrderQuoteLaborHeader.workOrderQuoteDetailsId=this.workOrderQuoteDetailsId,this.laborPayload.WorkOrderQuoteDetailsId=this.workOrderQuoteDetailsId,this.laborPayload.WorkOrderQuoteLaborHeader.DataEnteredBy=e.dataEnteredBy,this.laborPayload.WorkOrderQuoteLaborHeader.HoursorClockorScan=e.hoursorClockorScan,this.laborPayload.WorkOrderQuoteLaborHeader.IsTaskCompletedByOne=e.isTaskCompletedByOne,this.laborPayload.WorkOrderQuoteLaborHeader.WorkOrderHoursType=e.workOrderHoursType,this.laborPayload.WorkOrderQuoteLaborHeader.LabourMemo="",this.laborPayload.WorkOrderQuoteLaborHeader.EmployeeId=e.employeeId,this.laborPayload.WorkOrderQuoteLaborHeader.ExpertiseId=e.expertiseId,this.laborPayload.WorkOrderQuoteLaborHeader.TotalWorkHours=e.totalWorkHours,this.laborPayload.WorkOrderQuoteLaborHeader.masterCompanyId=e.masterCompanyId,this.laborPayload.WorkOrderQuoteLaborHeader.headerMarkupId=e.headerMarkupId,this.laborPayload.WorkOrderQuoteLaborHeader.markupFixedPrice=e.markupFixedPrice,this.laborPayload.WorkOrderQuoteLaborHeader.CreatedBy="admin",this.laborPayload.WorkOrderQuoteLaborHeader.UpdatedBy="admin",this.laborPayload.WorkOrderQuoteLaborHeader.IsActive=!0,this.laborPayload.WorkOrderQuoteLaborHeader.IsDeleted=!1,this.laborPayload.createdDate=e.createdDate?e.createdDate:new Date,this.laborPayload.laborFlatBillingAmount=e.laborFlatBillingAmount,this.laborPayload.LaborBuildMethod=e.LaborBuildMethod;var r=[];for(let t in e.workOrderLaborList)r=[...r,...e.workOrderLaborList[t]];this.laborPayload.WorkOrderQuoteLaborHeader.WorkOrderQuoteTask=[],e.WorkOrderQuoteTask.forEach(e=>{this.WOTaskDetails.forEach(r=>{r.taskId==e.TaskId&&(e.WorkOrderQuoteTaskId=r.workOrderQuoteTaskId)}),this.laborPayload.WorkOrderQuoteLaborHeader.WorkOrderQuoteTask.push(Object.assign({},e,{woPartNoId:this.selectedPartNumber.woPartNoId}))}),this.laborPayload.WorkOrderQuoteLaborHeader.WorkOrderQuoteLabor=[],r.forEach(e=>{e.expertiseId&&this.laborPayload.WorkOrderQuoteLaborHeader.WorkOrderQuoteLabor.push({WorkOrderQuoteLaborId:e.workOrderQuoteLaborId?e.workOrderQuoteLaborId:0,WorkOrderQuoteLaborHeaderId:e.workOrderQuoteLaborHeaderId?e.workOrderQuoteLaborHeaderId:0,ExpertiseId:e.expertiseId,EmployeeId:e.employeeId,BillableId:e.billableId,Hours:e.hours,Adjustments:e.adjustments,AdjustedHours:e.adjustedHours,Memo:e.memo,TaskId:e.taskId,LabourCostPlus:e.labourCostPlus,laborOverheadCost:e.laborOverheadCost,markupPercentageId:e.markupPercentageId,directLaborOHCost:e.directLaborOHCost,headerMarkupId:e.headerMarkupId,CreatedBy:"admin",UpdatedBy:"admin",IsActive:!0,IsDeleted:e.IsDeleted,BurdaenRatePercentageId:e.burdaenRatePercentageId,BurdenRateAmount:e.burdenRateAmount,TotalCostPerHour:e.totalCostPerHour,TotalCost:e.totalCost,BillingMethodId:e.billingMethodId,BillingRate:e.billingRate,BillingAmount:e.billingAmount,markupFixedPrice:e.markupFixedPrice})}),this.saveType="labour",w("#quoteVer").modal("show")}getBuildMethodId(){return"use work order"===this.selectedBuildMethod?1:"use work flow"===this.selectedBuildMethod?2:"use historical wos"===this.selectedBuildMethod?3:"build from scratch"===this.selectedBuildMethod?4:"display 3rd party"===this.selectedBuildMethod?5:void 0}setBuildMethod(e){1===e?this.selectedBuildMethod="use work order":2==e?this.selectedBuildMethod="use work flow":3===e?this.selectedBuildMethod="use historical wos":4===e?this.selectedBuildMethod="build from scratch":5===e&&(this.selectedBuildMethod="display 3rd party")}saveWorkOrderExclusionsList(e){this.exclusionPayload.BuildMethodId=this.getBuildMethodId(),this.exclusionPayload.taskId="build from scratch"==this.selectedBuildMethod?this.currenttaskId:0,this.exclusionPayload.WorkflowWorkOrderId=this.selectedWorkFlowWorkOrderId,this.exclusionPayload.createdDate=e.createdDate?e.createdDate:new Date,this.exclusionPayload.WorkOrderQuoteExclusions=e.data.map(e=>(this.exclusionPayload.WorkOrderQuoteDetailsId=this.workOrderQuoteDetailsId,{WorkOrderQuoteExclusionsId:e.workOrderQuoteExclusionsId?e.workOrderQuoteExclusionsId:0,WorkOrderQuoteDetailsId:e.workOrderQuoteDetailsId?e.workOrderQuoteDetailsId:0,ItemMasterId:e.itemMasterId,SourceId:1,Reference:2,exstimtPercentOccuranceId:Number(e.estimtPercentOccurrance),Memo:e.memo,Quantity:e.quantity,UnitCost:e.unitCost,ExtendedCost:e.extendedCost,MarkupPercentageId:Number(e.markUpPercentageId),CostPlusAmount:e.costPlusAmount,FixedAmount:e.fixedAmount,taskId:e.taskId,masterCompanyId:""==e.masterCompanyId?0:e.masterCompanyId,CreatedBy:"admin",UpdatedBy:"admin",IsActive:!0,IsDeleted:e.isDeleted,BillingMethodId:Number(e.billingMethodId),BillingRate:e.billingRate,BillingAmount:e.billingAmount,headerMarkupId:e.headerMarkupId,markupFixedPrice:e.markupFixedPrice,itemClassificationId:e.itemClassificationId})),this.exclusionPayload.WorkOrderQuoteTask=[],e.taskSum.forEach(e=>{this.WOTaskDetails.forEach(r=>{r.taskId==e.TaskId&&(e.WorkOrderQuoteTaskId=r.workOrderQuoteTaskId)}),this.exclusionPayload.WorkOrderQuoteTask.push(Object.assign({},e,{woPartNoId:this.selectedPartNumber.woPartNoId}))}),this.workOrderService.saveExclusionsQuote(this.exclusionPayload).subscribe(e=>{this.tabQuoteCreated.exclusions=!0,this.workOrderExclusionsList=e.workOrderQuoteExclusions;for(let r in this.workOrderExclusionsList)this.workOrderExclusionsList[r].billingAmount&&(this.workOrderExclusionsList[r].billingAmount=Number(this.workOrderExclusionsList[r].billingAmount.toString().split(",").join("")).toFixed(2)),this.workOrderExclusionsList[r].billingRate&&(this.workOrderExclusionsList[r].billingRate=Number(this.workOrderExclusionsList[r].billingRate.toString().split(",").join("")).toFixed(2)),this.workOrderExclusionsList[r].unitCost&&(this.workOrderExclusionsList[r].unitCost=Number(this.workOrderExclusionsList[r].unitCost.toString().split(",").join("")).toFixed(2)),this.workOrderExclusionsList[r].extendedCost&&(this.workOrderExclusionsList[r].extendedCost=Number(this.workOrderExclusionsList[r].extendedCost.toString().split(",").join("")).toFixed(2));this.updateWorkOrderQuoteDetailsId(e.workOrderQuoteDetailsId),this.getQuoteExclusionListByWorkOrderQuoteId(),this.partNumberSelected(this.selectedPartNumber),this.alertService.showMessage(this.moduleName,"Quotation created  Succesfully",k.d.success)},e=>{this.errorHandling(e)}),console.log(e)}updateWorkOrderExclusionsList(e){const r=e.exclusions.map(e=>Object.assign({},e,{masterCompanyId:1,isActive:!0,workOrderId:this.workOrderId,workFlowWorkOrderId:this.workFlowWorkOrderId}));this.workorderMainService.updateWorkOrderExclusionList(r).subscribe(e=>{this.workFlowObject.materialList=[],this.alertService.showMessage(this.moduleName,"Update Work Order Exclusions  Succesfully",k.d.success),this.getQuoteExclusionListByWorkOrderQuoteId()},e=>{this.errorHandling(e)})}getExclusionListByWorkOrderId(){0!==this.workFlowWorkOrderId&&this.workOrderId&&this.workorderMainService.getWorkOrderExclusionsList(this.workFlowWorkOrderId,this.workOrderId).subscribe(e=>{this.workFlowObject.materialList=[],this.workOrderExclusionsList=e;for(let r in this.workOrderExclusionsList)this.workOrderExclusionsList[r].billingAmount&&(this.workOrderExclusionsList[r].billingAmount=Number(this.workOrderExclusionsList[r].billingAmount.toString().split(",").join("")).toFixed(2)),this.workOrderExclusionsList[r].billingRate&&(this.workOrderExclusionsList[r].billingRate=Number(this.workOrderExclusionsList[r].billingRate.toString().split(",").join("")).toFixed(2)),this.workOrderExclusionsList[r].unitCost&&(this.workOrderExclusionsList[r].unitCost=Number(this.workOrderExclusionsList[r].unitCost.toString().split(",").join("")).toFixed(2)),this.workOrderExclusionsList[r].extendedCost&&(this.workOrderExclusionsList[r].extendedCost=Number(this.workOrderExclusionsList[r].extendedCost.toString().split(",").join("")).toFixed(2))},e=>{this.errorHandling(e)})}saveWorkOrderChargesList(e){this.workOrderChargesList||(this.workOrderChargesList=[]),this.workOrderChargesList=[...this.workOrderChargesList,...e.charges];for(let r in this.workOrderChargesList)this.workOrderChargesList[r].unitCost=Number(this.workOrderChargesList[r].unitCost.toString().split(",").join("")).toFixed(2),this.workOrderChargesList[r].extendedCost=Number(this.workOrderChargesList[r].extendedCost.toString().split(",").join("")).toFixed(2)}saveMaterialListForWO(e){if(console.log("materialist data",e),e.materialList.forEach(e=>{e.billingRate&&(e.billingRate=Number(e.billingRate.toString().split(",").join("")).toFixed(2)),e.unitCost&&(e.unitCost=Number(e.unitCost.toString().split(",").join("")).toFixed(2)),e.billingAmount=(e.quantity*Number(e.billingRate.toString().split(",").join(""))).toFixed(2)}),this.editMatData&&0!=this.editMatData.length)this.editMatData=[];else{let r=[],t=[];this.materialListQuotation.forEach(e=>{t=[...t,...e]}),t=[...t,...e.materialList],r=t.reduce((function(e,r){return e[r.taskId]=e[r.taskId]||[],e[r.taskId].push(r),e}),Object.create(null)),this.materialListQuotation=[];for(let e in r)this.materialListQuotation.push(r[e]);console.log("materialist After push",this.materialListQuotation)}w("#addNewMaterials").modal("hide")}getMarkup(){this.commonService.smartDropDownList("[Percent]","PercentId","PercentValue").subscribe(e=>{this.markupList=e},e=>{this.errorHandling(e)})}loadCurrency(){this.commonService.autoSuggestionSmartDropDownList("Currency","CurrencyId","code","","").subscribe(e=>this.currencyList=e,e=>{this.errorHandling(e)})}markupChanged(e,r){try{this.markupList.forEach(t=>{"row"==r&&t.value==e.markupPercentageId?(e.tmAmount=Number(e.extendedCost)+Number(e.extendedCost)/100*Number(t.label),e.billingRate=(Number(e.unitCost)+Number(e.unitCost.toString().split(",").join(""))/100*Number(t.label)).toFixed(2),e.billingAmount=this.formateCurrency(Number(e.billingRate.toString().split(",").join(""))*Number(e.quantity))):"all"==r&&t.value==this.overAllMarkup&&this.materialListQuotation.forEach(e=>{e.forEach(e=>{e.markupPercentageId=this.overAllMarkup,e.billingRate=(Number(e.unitCost.toString().split(",").join(""))+Number(e.unitCost.toString().split(",").join(""))/100*Number(t.label)).toFixed(2),e.billingAmount=this.formateCurrency(Number(e.billingRate.toString().split(",").join(""))*Number(e.quantity))})})})}catch(t){console.log(t)}}saveBuildFromScratch(e){let r=[],t=[],n=[];e&&(e.forEach(e=>{if(e.materialList)if(this.materialListQuotation){let r=[],t=[];this.materialListQuotation.forEach(e=>{t=[...t,...e]}),t=[...t,...e.materialList],r=t.reduce((function(e,r){return e[r.taskId]=e[r.taskId]||[],e[r.taskId].push(r),e}),Object.create(null)),this.materialListQuotation=[];for(let e in r)this.materialListQuotation.push(r[e])}else this.materialListQuotation=[];e.charges&&(r=[...r,...e.charges]),e.expertise&&(n=[...t,...e.expertise]),e.exclusions&&(t=[...t,...e.exclusions.map(e=>Object.assign({},e,{epn:e.partNumber,epnDescription:e.partDescription}))])}),this.createMaterialQuote(),this.saveWorkOrderExclusionsList(t),this.createChargeQuote(r))}editMaterialList(e){this.editMatData=[e]}deleteMaterialList(e,r){this.materialListQuotation[e][r].isDeleted=!0}updateWorkOrderChargesList(e){console.log(e)}checkValidQuote(){return!(this.quoteDueDate&&this.validFor&&this.currency)}updateWorkOrderQuoteDetailsId(e){this.workOrderQuoteDetailsId=e,this.laborPayload.WorkOrderQuoteDetailsId=e,this.chargesPayload.WorkOrderQuoteDetailsId=e,this.exclusionPayload.WorkOrderQuoteDetailsId=e,this.materialListPayload.WorkOrderQuoteDetailsId=e,this.quoteFreightListPayload.WorkOrderQuoteDetailsId=e}setWorkOrderQuoteId(e){this.laborPayload.WorkOrderQuoteId=e,this.exclusionPayload.WorkOrderQuoteId=e,this.chargesPayload.WorkOrderQuoteId=e,this.materialListPayload.WorkOrderQuoteId=e,this.quoteFreightListPayload.WorkOrderQuoteId=e}getQuoteTabData(){}getQuoteExclusionListByWorkOrderQuoteId(){this.workOrderQuoteDetailsId?(this.isSpinnerVisible=!0,this.workOrderService.getQuoteExclusionList(this.workOrderQuoteDetailsId,"use work order"===this.selectedBuildMethod?1:"use work flow"==this.selectedBuildMethod?2:"use historical wos"==this.selectedBuildMethod?3:4).subscribe(e=>{this.isSpinnerVisible=!1,this.workOrderExclusionsList=e;for(let r in this.workOrderExclusionsList)this.workOrderExclusionsList[r].billingAmount&&(this.workOrderExclusionsList[r].billingAmount=Number(this.workOrderExclusionsList[r].billingAmount.toString().split(",").join("")).toFixed(2)),this.workOrderExclusionsList[r].billingRate&&(this.workOrderExclusionsList[r].billingRate=Number(this.workOrderExclusionsList[r].billingRate.toString().split(",").join("")).toFixed(2)),this.workOrderExclusionsList[r].unitCost&&(this.workOrderExclusionsList[r].unitCost=Number(this.workOrderExclusionsList[r].unitCost.toString().split(",").join("")).toFixed(2)),this.workOrderExclusionsList[r].extendedCost&&(this.workOrderExclusionsList[r].extendedCost=Number(this.workOrderExclusionsList[r].extendedCost.toString().split(",").join("")).toFixed(2));e.length>0?this.updateWorkOrderQuoteDetailsId(e[0].workOrderQuoteDetailsId):this.getWOExclusionsList()},e=>{this.errorHandling(e),this.isSpinnerVisible=!1})):this.getWOExclusionsList()}getQuoteMaterialListByWorkOrderQuoteId(){this.workOrderQuoteDetailsId?(this.isSpinnerVisible=!0,this.workOrderService.getQuoteMaterialList(this.workOrderQuoteDetailsId,"use work order"===this.selectedBuildMethod?1:"use work flow"==this.selectedBuildMethod?2:"use historical wos"==this.selectedBuildMethod?3:4).subscribe(e=>{if(this.isSpinnerVisible=!1,this.materialListQuotation=e,this.materialListQuotation&&this.materialListQuotation.length>0)for(let n in this.materialListQuotation)this.materialListQuotation[n].unitCost&&(this.materialListQuotation[n].unitCost=Number(this.materialListQuotation[n].unitCost.toString().split(",").join("")).toFixed(2)),this.materialListQuotation[n].billingRate&&(this.materialListQuotation[n].billingRate=Number(this.materialListQuotation[n].billingRate.toString().split(",").join("")).toFixed(2)),this.materialListQuotation[n].billingAmount&&(this.materialListQuotation[n].billingAmount=Number(this.materialListQuotation[n].billingAmount.toString().split(",").join("")).toFixed(2));this.materialListQuotation&&this.materialListQuotation.length>0&&this.materialListQuotation[0].headerMarkupId&&(this.costPlusType=this.materialListQuotation[0].markupFixedPrice.toString(),this.overAllMarkup=Number(this.materialListQuotation[0].headerMarkupId));let r=[],t=[];this.materialListQuotation.forEach(e=>{t=[...t,...e]}),r=t.reduce((function(e,r){return e[r.taskId]=e[r.taskId]||[],e[r.taskId].push(r),e}),Object.create(null)),this.materialListQuotation=[];for(let n in r)this.materialListQuotation.push(r[n]);e.length>0?this.updateWorkOrderQuoteDetailsId(e[0].workOrderQuoteDetailsId):this.getWOMaterialList(),e||this.getWOMaterialList()},e=>{this.errorHandling(e),this.isSpinnerVisible=!1})):this.getWOMaterialList()}getQuoteFreightListByWorkOrderQuoteId(){this.workOrderQuoteDetailsId?(this.isSpinnerVisible=!0,this.workOrderService.getQuoteFreightsList(this.workOrderQuoteDetailsId,"use work order"===this.selectedBuildMethod?1:"use work flow"==this.selectedBuildMethod?2:"use historical wos"==this.selectedBuildMethod?3:4).subscribe(e=>{this.isSpinnerVisible=!1,this.workOrderFreightList=e;for(let r in this.workOrderFreightList)this.workOrderFreightList[r].billingAmount&&(this.workOrderFreightList[r].billingAmount=Number(this.workOrderFreightList[r].billingAmount.toString().split(",").join("")).toFixed(2));e.length>0?this.updateWorkOrderQuoteDetailsId(e[0].workOrderQuoteDetailsId):this.getWOFrieghtsList()},e=>{this.errorHandling(e),this.isSpinnerVisible=!1})):this.getWOFrieghtsList()}getQuoteChargesListByWorkOrderQuoteId(){this.workOrderQuoteDetailsId?(this.isSpinnerVisible=!0,this.workOrderService.getQuoteChargesList(this.workOrderQuoteDetailsId,"use work order"===this.selectedBuildMethod?1:"use work flow"==this.selectedBuildMethod?2:"use historical wos"==this.selectedBuildMethod?3:4).subscribe(e=>{this.isSpinnerVisible=!1,this.workOrderChargesList=e;for(let r in this.workOrderChargesList)this.workOrderChargesList[r].unitCost=Number(this.workOrderChargesList[r].unitCost.toString().split(",").join("")).toFixed(2),this.workOrderChargesList[r].extendedCost=Number(this.workOrderChargesList[r].extendedCost.toString().split(",").join("")).toFixed(2);e.length>0?this.updateWorkOrderQuoteDetailsId(e[0].workOrderQuoteDetailsId):this.getWOChargesList()},e=>{this.errorHandling(e),this.isSpinnerVisible=!1})):this.getWOChargesList()}getQuoteLaborListByWorkOrderQuoteId(){this.workOrderQuoteDetailsId?(this.isSpinnerVisible=!0,this.workOrderService.getQuoteLaborList(this.workOrderQuoteDetailsId,"use work order"===this.selectedBuildMethod?1:"use work flow"==this.selectedBuildMethod?2:"use historical wos"==this.selectedBuildMethod?3:4).subscribe(e=>{if(this.isSpinnerVisible=!1,e){let r=this.labor.workFlowWorkOrderId;if(e){this.laborPayload.WorkOrderQuoteLaborHeader=e,this.updateWorkOrderQuoteDetailsId(e.workOrderQuoteDetailsId);let t=this.labor.workOrderLaborList;this.labor=Object.assign({},e,{workOrderLaborList:t}),this.labor.dataEnteredBy=Object(C.d)("value",e.dataEnteredBy,this.employeeList),this.labor.workFlowWorkOrderId=r,this.taskList.forEach(r=>{this.labor.workOrderLaborList[0][r.description.toLowerCase()]=[],e.laborList.forEach(e=>{if(e.taskId==r.taskId){let t={};if(e.hours){let r=e.hours.toFixed(2);e.totalHours=r.toString().split(".")[0],e.totalMinutes=r.toString().split(".")[1]}t=Object.assign({},e,{employeeId:{label:e.employeeName,value:e.employeeId}}),this.labor.workOrderLaborList[0][r.description.toLowerCase()].push(t)}})})}else this.getWOLabourList()}else this.taskList.forEach(e=>{this.labor.workOrderLaborList[0][e.description.toLowerCase()]=[]}),this.getWOLabourList()},e=>{this.errorHandling(e),this.isSpinnerVisible=!1})):(this.taskList.forEach(e=>{this.labor.workOrderLaborList[0][e.description.toLowerCase()]=[]}),this.getWOLabourList())}getTotalQuantity(){let e=0;return this.materialListQuotation.forEach(r=>{e+=this.getTotalTaskQuantity(r)}),e}getTotalTaskQuantity(e){let r=0;return e.forEach(e=>{e.quantity&&!e.isDeleted&&(r+=Number(e.quantity))}),r}getTotalUnitCost(){let e=0;return this.materialListQuotation.forEach(r=>{e+=Number(this.getTotalTaskUnitCost(r))}),e.toFixed(2)}getTotalTaskUnitCost(e){let r=0;return e.forEach(e=>{e.unitCost&&e.quantity&&!e.isDeleted&&(r+=Number(e.quantity*Number(e.unitCost.toString().split(",").join(""))))}),r.toFixed(2)}totalMaterialBillingRate(){let e=0;return this.materialListQuotation.forEach(r=>{e+=Number(this.totalTaskMaterialBillingRate(r))}),e.toFixed(2)}totalTaskMaterialBillingRate(e){let r=0;return e.forEach(e=>{e.billingRate&&!e.isDeleted&&(r+=Number(e.billingRate.toString().split(",").join("")))}),r.toFixed(2)}totalMaterialBillingAmount(){let e=0;return this.materialListQuotation.forEach(r=>{e+=Number(this.totalTaskMaterialBillingAmount(r))}),this.materialFlatBillingAmount=e.toFixed(2),e.toFixed(2)}totalTaskMaterialBillingAmount(e){let r=0;return e.forEach(e=>{e.billingAmount&&!e.isDeleted&&(r+=Number(e.billingAmount.toString().split(",").join("")))}),r.toFixed(2)}getEmpData(e){let r={};return this.employeeList.forEach(t=>{t.value!=e||(r=t)}),r}saveExclusionsList(e){if(this.isQuote){this.workOrderExclusionsList=[...this.workOrderExclusionsList,...e.exclusions.map(e=>Object.assign({},e,{epn:e.partNumber,epnDescription:e.partDescription}))];for(let e in this.workOrderExclusionsList)this.workOrderExclusionsList[e].billingAmount&&(this.workOrderExclusionsList[e].billingAmount=Number(this.workOrderExclusionsList[e].billingAmount.toString().split(",").join("")).toFixed(2)),this.workOrderExclusionsList[e].billingRate&&(this.workOrderExclusionsList[e].billingRate=Number(this.workOrderExclusionsList[e].billingRate.toString().split(",").join("")).toFixed(2)),this.workOrderExclusionsList[e].unitCost&&(this.workOrderExclusionsList[e].unitCost=Number(this.workOrderExclusionsList[e].unitCost.toString().split(",").join("")).toFixed(2)),this.workOrderExclusionsList[e].extendedCost&&(this.workOrderExclusionsList[e].extendedCost=Number(this.workOrderExclusionsList[e].extendedCost.toString().split(",").join("")).toFixed(2));w("#addNewExclusions").modal("hide")}}updateExclusionsList(e){if(this.isQuote&&this.isEdit){this.workOrderExclusionsList[this.editingIndex]=e.exclusions[0];for(let e in this.workOrderExclusionsList)this.workOrderExclusionsList[e].billingAmount&&(this.workOrderExclusionsList[e].billingAmount=Number(this.workOrderExclusionsList[e].billingAmount.toString().split(",").join("")).toFixed(2)),this.workOrderExclusionsList[e].billingRate&&(this.workOrderExclusionsList[e].billingRate=Number(this.workOrderExclusionsList[e].billingRate.toString().split(",").join("")).toFixed(2)),this.workOrderExclusionsList[e].unitCost&&(this.workOrderExclusionsList[e].unitCost=Number(this.workOrderExclusionsList[e].unitCost.toString().split(",").join("")).toFixed(2)),this.workOrderExclusionsList[e].extendedCost&&(this.workOrderExclusionsList[e].extendedCost=Number(this.workOrderExclusionsList[e].extendedCost.toString().split(",").join("")).toFixed(2));w("#addNewExclusions").modal("hide"),this.isEdit=!1}}formDataFromViewListData(){this.quoteListViewData&&(this.quoteForm.quoteNumber=this.quoteListViewData.quoteNumber,this.quoteForm.openDate=new Date(this.quoteListViewData.openDate),this.quoteDueDate=new Date(this.quoteListViewData.quoteDueDate),this.validFor=this.quoteListViewData.validForDays,this.expirationDate=new Date(this.quoteListViewData.expirationDate),"open"==this.quoteListViewData.quoteStatus?this.quoteForm.expirationDateStatus=1:"closed"==this.quoteListViewData.quoteStatus&&(this.quoteForm.expirationDateStatus=2),"cancelled"==this.quoteListViewData.quoteStatus&&(this.quoteForm.expirationDateStatus=3),"delayed"==this.quoteListViewData.quoteStatus&&(this.quoteForm.expirationDateStatus=4),this.workOrderNumber=this.quoteListViewData.workOrderNum,this.customerName=this.quoteListViewData.customerName,this.customerCode=this.quoteListViewData.customerCode,this.customerContact=this.quoteListViewData.customerContact,this.customerEmail=this.quoteListViewData.customerEmail,this.customerPhone=this.quoteListViewData.customerPhone,this.customerRef=this.quoteListViewData.customerRef,this.accountsReceivableBalance=this.quoteListViewData.arBalance,this.creditLimit=Object(C.b)(this.quoteListViewData.creditLimit,0),this.creditTerms=this.quoteListViewData.creditTerms,this.salesPerson=this.quoteListViewData.salesPerson,this.csr=this.quoteListViewData.csr,this.employeeName=this.quoteListViewData.employee,this.currency=this.quoteListViewData.currency,this.dso=this.quoteListViewData.dso,this.warnings=this.quoteListViewData.warnings,this.memo=this.quoteListViewData.memo)}typeChange(){this.getDisplayData(this.displayType)}createQuote(){window.open(" /workordersmodule/workorderspages/app-work-order-quote?workorderid="+this.workorderid)}filterEmployee(e){if(this.employeeList=this.employeesOriginalData,void 0!==e.query&&null!==e.query){const r=[...this.employeesOriginalData.filter(r=>r.label.toLowerCase().includes(e.query.toLowerCase()))];this.employeeList=r}}clearautoCompleteInput(e,r){e[r]=null}onClickBackToWO(){this.enableBackToWO.emit(!0)}noBack(e){console.log(e)}getCustomerWarningsList(){this.commonService.smartDropDownList("CustomerWarningType","CustomerWarningTypeId ","Name").subscribe(e=>{e.forEach(e=>{"Create WO Quote for MPN"==e.label&&(this.createQuoteListID=e.value)})},e=>{this.errorHandling(e)})}customerWarnings(e){console.log("reasons list22",e),this.commonService.customerWarnings(e,this.createQuoteListID).subscribe(r=>{console.log("reasons list",r),r&&(this.warningMessage=r.warningMessage,this.warningID=r.customerWarningId,this.customerResctrictions(e,this.warningMessage,this.createQuoteListID))},e=>{this.errorHandling(e)})}customerResctrictions(e,r,t){this.restrictMessage="",this.commonService.customerResctrictions(e,t).subscribe(e=>{console.log("reasons list22",e),e&&(this.restrictMessage=e.restrictMessage,this.restrictID=e.customerWarningId,0!=this.warningID&&0==this.restrictID||0==this.warningID&&0!=this.restrictID||0!=this.warningID&&0!=this.restrictID?this.showAlertMessage(r,this.restrictMessage):0==this.warningID&&0==this.restrictID&&window.open("/workordersmodule/workorderspages/app-work-order-quote?workorderid="+this.workOrderId))})}showAlertMessage(e,r){console.log("alert mesages",this.warningMessage),console.log("restrict mesages",this.restrictMessage),w("#warnRestrictMesg").modal("show")}WarnRescticModel(){0==this.restrictID&&window.open("/workordersmodule/workorderspages/app-work-order-quote?workorderid="+this.workOrderId),w("#warnRestrictMesg").modal("hide"),this.warningMessage="",this.restrictMessage=""}approvalGridActiveTabChange(e){this.resetApprovalGridData(),this.approvalGridActiveTab=e,"internalApprovers"==e?this.getApproversList():"workOrderQuoteAnalysis"==e?this.getWOQuoteAnalysisList():this.getWOQuoteApprovalList();let r=document.getElementById("approvalTabs");r&&r.scrollIntoView()}getApproversList(){let e=JSON.parse(window.sessionStorage.getItem("current_user"));e||(e=JSON.parse(window.localStorage.getItem("current_user"))),this.isCurrentUserApprovalLimitExceeded=!0,this.workOrderService.getTotals(this.quotationHeader.workOrderQuoteId).subscribe(r=>{this.workOrderService.getInternalApproversList(2,r.totalRevenue).subscribe(r=>{this.internalApproversList=r.map(r=>(e&&e.email==r.approverEmail&&!r.isExceeded&&(this.isCurrentUserApprovalLimitExceeded=!1),Object.assign({},r,{upperValue:this.formateCurrency(r.upperValue),totalCost:this.formateCurrency(r.totalCost),lowerValue:this.formateCurrency(r.lowerValue)})))})},e=>{this.errorHandling(e)})}resetApprovalGridData(){this.internalApproversList=[],this.approvalGridActiveTab=""}getWOQuoteApprovalList(){this.getApproversList(),this.commonService.getCustomerContactsById(this.quotationHeader.CustomerId).subscribe(e=>{if(this.customerContactList=e,console.log("quote app lis",this.customerContactList),this.customerContactList.length>0)for(let r=0;r<this.customerContactList.length;r++)1==this.customerContactList[r].isDefaultContact&&(this.emailCustomerContact=this.customerContactList[r],this.contactSelected(this.customerContactList[r]))},e=>{this.errorHandling(e)}),this.workOrderService.getWOQuoteApprovalList(this.quotationHeader.workOrderQuoteId).subscribe(e=>{this.woQuoteApprovalList=[],e.forEach(e=>{e.internalSentDate?(e.internalSentDate=new Date(e.internalSentDate),e.internalApprovedDate||(e.internalApprovedDate=new Date)):e.internalSentDate||(e.internalSentDate=new Date),e.customerSentDate&&(e.customerSentDate=new Date(e.customerSentDate),e.customerApprovedDate||(e.customerApprovedDate=new Date)),e.internalApprovedDate&&(e.internalApprovedDate=new Date(e.internalApprovedDate),e.customerSentDate||(e.customerSentDate=new Date)),e.customerApprovedDate&&(e.customerApprovedDate=new Date(e.customerApprovedDate)),this.woQuoteApprovalList.push(e)})},e=>{this.errorHandling(e)})}getWOQuoteAnalysisList(){this.workOrderService.getWOQuoteAnalysisList(this.savedWorkOrderData.workOrderId).subscribe(e=>{this.woQuoteAnalysisList=e},e=>{this.errorHandling(e)})}selectAllApproval(e,r){this.woQuoteApprovalList.forEach(e=>{e.isSelected=!r})}saveApprovalData(){let e=[],r=JSON.parse(localStorage.getItem("employee"));this.woQuoteApprovalList.forEach(t=>{if(t.isSelected){let n={workOrderId:t.workOrderId,workOrderQuoteId:t.workOrderQuoteId,workOrderPartNoId:t.workOrderPartNoId,customerId:t.customerId,workOrderDetailId:t.workOrderDetailId,workOrderApprovalId:t.workOrderApprovalId,InternalSentDate:t.internalSentDate,InternalApprovedDate:t.internalApprovedDate,CustomerSentDate:t.customerSentDate,customerApprovedDate:t.customerApprovedDate,customerApprovedById:t.customerApprovedById,internalStatusId:t.internalStatusId,customerStatusId:t.customerStatusId,internalMemo:t.internalMemo,customerMemo:t.customerMemo,UpdatedBy:"admin",MasterCompanyId:t.masterCompanyId,ApprovalActionId:t.approvalActionId,IsInternalApprove:t.isInternalApprove,masterCompanyId:t.masterCompanyId,createdBy:"admin",updatedBy:"admin",createdDate:(new Date).toDateString(),updatedDate:(new Date).toDateString(),isActive:!0,isDeleted:!1};3==t.approvalActionId&&(n.email={fromEmail:L.a.FROM_EMAIL_FOR_SENDING_MAIL,toEmail:this.toEmail,cc:this.cc,bcc:this.bcc,subject:this.subject,emailBody:this.emailBody,createdBy:this.authService.currentUser.userName,updatedBy:this.authService.currentUser.userName,createdDate:new Date,updatedDate:new Date,isActive:!0,isDeleted:!1,contactById:this.emailContactBy.employeeId,emailType:this.emailType,customerContactId:this.emailCustomerContact.emailContactId}),1==t.approvalActionId?(n.InternalEmails=this.getApproversEmails(),n.approvers=this.getApproversNames()):(n.InternalEmails="",n.approvers=""),2==t.approvalActionId?n.InternalApprovedById=r.employeeId:n.InternalApprovedById=t.internalApprovedById,e.push(n)}}),w("#quoteVersion").modal("hide"),this.isSpinnerVisible=!0,this.workOrderService.sentForInternalApproval(e).subscribe(e=>{this.emailBody="",this.subject="",this.alertService.showMessage(this.moduleName,"Data updated successfully",k.d.success),this.isSpinnerVisible=!1,this.getWOQuoteApprovalList(),this.updateQuotationHeader()},e=>{this.errorHandling(e),this.isSpinnerVisible=!1})}getApproversEmails(){let e="";return this.internalApproversList.forEach(r=>{""!=e&&(e+=","),e+=r.approverEmail}),e}getApproversNames(){let e="";return this.internalApproversList.forEach(r=>{""!=e&&(e+=","),e+=r.approverName}),e}onAddTextAreaInfo(e,r){this.memoIndex=r,this.textAreaInfo=e.internalMemo}onSaveTextAreaInfo(e){e&&(this.textAreaInfo=e,this.woQuoteApprovalList[this.memoIndex].internalMemo=this.textAreaInfo),w("#textarea-popupintmemo").modal("hide")}onCloseTextAreaInfo(){w("#textarea-popupintmemo").modal("hide")}errorHandling(e){e.error.errors?e.error.errors.forEach(e=>{this.alertService.showMessage(this.moduleName,e.message,k.d.error)}):this.alertService.showMessage(this.moduleName,"Saving data Failed due to some input error",k.d.error)}checkValidEmails(){let e=!1;var r=/^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/;if(this.cc||this.bcc){if(e=!0,this.cc){let e=this.cc.split(","),t=!1;if(e.forEach(e=>{r.test(e)||(t=!0)}),t)return!0}if(this.bcc){let e=this.bcc.split(","),t=!1;if(e.forEach(e=>{r.test(e)||(t=!0)}),t)return!0}e=!1}return e}getAllEmailType(){this.commonService.smartDropDownList("EmailType","EmailTypeId","Name").subscribe(e=>{this.emailTypes=e,this.emailTypes.forEach(e=>{"Manual"==e.label&&(this.emailType=e.value)})},e=>{this.errorHandling(e)})}contactSelected(e){this.toEmail=e.email}showEle(){w("#emailDetails").modal("show")}selectedCustomer(){this.cusContactList=this.customerContactList}filterCustomerContact(e){if(this.cusContactList=this.customerContactList,void 0!==e.query&&null!==e.query){const r=[...this.customerContactList.filter(r=>r.contactName.toLowerCase().includes(e.query.toLowerCase()))];this.cusContactList=r,console.log("cus",this.cusContactList)}else this.cusContactList=this.customerContactList}hideModal(e){w("#"+e).modal("hide")}saveApprovalProcess(){let e=!1;this.woQuoteApprovalList.forEach(r=>{r.isSelected&&3==r.approvalActionId&&(e=!0)}),e?(w("#quoteVersion").modal("show"),this.emailContactBy=this.authService.currentEmployee,this.cusContactList=this.customerContactList):this.saveApprovalData()}formateCurrency(e){if(e){return e=Number(e.toString().split(",").join("")).toFixed(2),Object(C.b)(e,0)+".00"}return e}updateQuotationHeader(){this.workOrderService.getWorkOrderQuoteDetail(this.workOrderId,this.workFlowWorkOrderId).subscribe(e=>{e&&(this.quoteForm.versionNo=e.workOrderQuote.versionNo,this.quoteForm.expirationDateStatus=e.workOrderQuote.quoteStatusId)},e=>{this.errorHandling(e)})}getChargesListByWorkOrderId(){}getFreightListByWorkOrderId(){}updateWorkOrderFreightsList(e){}parseToInt(e){return Number(e)}};T.ctorParameters=()=>[{type:o.ActivatedRoute},{type:c.a},{type:u.a},{type:h.a},{type:k.b},{type:p.a},{type:m.a},{type:a.ChangeDetectorRef},{type:b.a},{type:g.a},{type:v.a}],n.b([Object(a.Input)()],T.prototype,"quoteForm",void 0),n.b([Object(a.Input)()],T.prototype,"quoteListViewData",void 0),n.b([Object(a.Input)()],T.prototype,"workorderid",void 0),n.b([Object(a.Input)()],T.prototype,"isView",void 0),n.b([Object(a.Input)()],T.prototype,"enableEditBtn",void 0),n.b([Object(a.Input)()],T.prototype,"ispop",void 0),n.b([Object(a.Input)()],T.prototype,"isQuoteListView",void 0),n.b([Object(a.Input)()],T.prototype,"customerId",void 0),n.b([Object(a.Input)()],T.prototype,"selectedDisplayType",void 0),n.b([Object(a.Input)()],T.prototype,"isWoTab",void 0),n.b([Object(a.Input)()],T.prototype,"isListView",void 0),n.b([Object(a.Output)()],T.prototype,"enableBackToWO",void 0),T=n.b([Object(a.Component)({selector:"app-work-order-quote",template:n.c(t("VlzZ")).default,styles:[n.c(t("3OoJ")).default]})],T);var M=t("XNiG"),P=t("1G5W"),N=t("wd/R");let W=class{constructor(e,r,t,n,s,i,o,l,d){this.router=e,this.workOrderService=r,this.commonService=t,this._workflowService=n,this.alertService=s,this.workorderMainService=i,this.currencyService=o,this.cdRef=l,this.route=d,this.closeView=new a.EventEmitter,this.onDestroy$=new M.a,this.pageSize=10,this.headers=[{field:"quoteNumber",header:"Quote Num"},{field:"workOrderNum",header:"WO Num"},{field:"customerName",header:"Cust Name"},{field:"customerCode",header:"Cust Code"},{field:"openDate",header:"Open Date"},{field:"promisedDate",header:"Promise Date"},{field:"estCompletionDate",header:"Est. Comp Date"},{field:"quoteStatus",header:"Quote Status"}],this.selectedColumns=this.headers,this.pageIndex=0}ngOnInit(){}getColorCodeForMultiple(e){return"Multiple"===e.partNoType?"green":"black"}convertDate(e,r){return"openDate"===e?N(r.openDate).format("MM-DD-YYYY"):"promisedDate"===e?N(r.promisedDate).format("MM-DD-YYYY"):"estCompletionDate"===e?N(r.estCompletionDate).format("MM-DD-YYYY"):r[e]}mouseOverData(e,r){return"partNoType"===e?r.partNos:"pnDescriptionType"===e?r.pnDescription:"workScopeType"===e?r.workScope:"priorityType"===e?r.priority:"customerType"===e?r.customer:"openDate"===e?N(r.openDate).format("MM-DD-YYYY"):"customerRequestDateType"===e?this.convertmultipleDates(r.customerRequestDate):"promisedDateType"===e?this.convertmultipleDates(r.promisedDate):"estimatedShipDateType"===e?this.convertmultipleDates(r.estimatedShipDate):"stageType"===e?r.stage:"estimatedCompletionDateType"===e?this.convertmultipleDates(r.estimatedCompletionDate):r[e]}convertmultipleDates(e){const r=[],t=e.split(",");for(var n=0;n<t.length;n++)r.push(N(t[n]).format("MM-DD-YYYY"));return r}edit(e){window.open(" /workordersmodule/workorderspages/app-work-order-quote?workorderid="+e.workOrderId,"_self")}view(e){this.woQuoteViewData=void 0,this.workOrderService.getWorkOrderQuoteData(e.workOrderQuoteId).subscribe(e=>{this.woQuoteViewData=e})}getAllWorkOrderQuoteList(e){console.log(e);const r=Object.assign({},e,{filters:Object(C.j)(e.filters)});this.workOrderService.getWorkOrderQuoteList(r).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.woQuoteList=e,e.length>0&&(this.totalRecords=e[0].totalRecords,this.totalPages=Math.ceil(this.totalRecords/this.pageSize))})}loadData(e){const r=parseInt(e.first)/e.rows;this.pageIndex=r,this.pageSize=e.rows,e.first=r,this.getAllWorkOrderQuoteList(e)}};W.ctorParameters=()=>[{type:o.ActivatedRoute},{type:c.a},{type:u.a},{type:h.a},{type:k.b},{type:p.a},{type:m.a},{type:a.ChangeDetectorRef},{type:o.Router}],n.b([Object(a.Output)()],W.prototype,"closeView",void 0),W=n.b([Object(a.Component)({selector:"app-work-order-quote-list",template:n.c(t("G//C")).default,styles:[n.c(t("Z+/w")).default]})],W);var F=t("sYxu");class A{constructor(){this.woOpenDate=null,this.customerRef="",this.workScope="",this.invoiceTypeId=null,this.invoiceNo="",this.customerId=null,this.invoiceDate=new Date,this.invoiceTime=null,this.printDate=new Date,this.shipDate=new Date,this.noofPieces=null,this.employeeId=null,this.employeeName="",this.revType=null,this.gateStatus=null,this.soldToCustomerId=null,this.soldToSiteId=null,this.shipToCustomerId=null,this.shipToSiteId=null,this.shipToAttention="",this.managementStructureId=1,this.woType="",this.notes="",this.costPlusType="Cost Plus",this.totalWorkOrder=!1,this.totalWorkOrderValue=0,this.material=!1,this.materialValue=null,this.laborOverHead=!1,this.laborOverHeadValue=null,this.miscCharges=!1,this.miscChargesValue=null,this.proForma=!1,this.partialInvoice=!1,this.costPlusRateCombo=!1,this.shipViaId=null,this.wayBillRef="",this.tracking="",this.currencyId=null,this.salesPerson="",this.availableCredit=null,this.creditTerm="",this.shipAccountInfo="",this.totalWorkOrderCost=null,this.totalWorkOrderCostPlus=null,this.materialCost=null,this.materialCostPlus=null,this.laborOverHeadCost=null,this.laborOverHeadCostPlus=null,this.miscChargesCost=null,this.miscChargesCostPlus=null,this.grandtotal=null}}let E=class{constructor(e,r,t,n,s,i){this.workOrderService=e,this.route=r,this.authService=t,this.alertService=n,this.quoteService=s,this.commonService=i,this.isLoader=!0,this.isView=!0,this.isWorkOrder=!0,this.pageSize=50,this.pageIndex=0,this.totalRecords=0,this.totalPages=0,this.documents=[],this.taskList=[],this.editMode=!1,this.paramsData={},this.isWorkOrderView=!0,this.isSubWorkOrder=!1,this.isWorkOrderMainView=!1,this.closeView=new a.EventEmitter,this.headers=[{field:"workOrderNum",header:"WO NO"},{field:"partNoType",header:"MPN"},{field:"pnDescriptionType",header:"MPN Description"},{field:"workScopeType",header:"Work Scope"},{field:"priorityType",header:"Priority"},{field:"customerName",header:"Customer Name"},{field:"customerType",header:"Customer Type"},{field:"openDate",header:"Open Date"},{field:"customerRequestDateType",header:"Cust Req Date"},{field:"promisedDateType",header:"Promise Date"},{field:"estimatedShipDateType",header:"Est. Ship Date"},{field:"estimatedCompletionDateType",header:"Shipped Date"},{field:"stageType",header:"Stage Code"},{field:"workOrderStatusType",header:"Status"}],this.selectedColumns=this.headers,this.showTableGrid=!1,this.showMPN=!1,this.otherOptions=[{label:"Other Options",value:""},{label:"Freight",value:"freight"},{label:"ContactGrid",value:"contactGrid"},{label:"Accounting",value:"accounting"},{label:"Charges",value:"charges"},{label:"Exclusion",value:"exclusion"}],this.selectedOtherSubTask="",this.otherOptionShow=!1,this.currentStatus="open",this.viewType="mpn",this.isGlobalFilter=!1,this.onDestroy$=new M.a,this.isSpinnerVisible=!1,this.communicationOptionShow=!1,this.selectedCommunicationOption="",this.workFlowObject={materialList:[],equipments:[],charges:[],exclusions:[]},this.isEditBilling=!1,this.labor=new f,this.subWorkOrderId=0,this.moduleName="Work Order"}ngOnInit(){this.getWorkOrderDefaultSetting(),this.getCustomerWarningsList(),this.getTaskList(),this.getLegalEntity(),this.getCurrency(),this.getAllEmployees(),console.log("sample"),this.isWorkOrderMainView&&this.view({workOrderId:this.workOrderId})}ngOnDestroy(){this.onDestroy$.next()}get userName(){return this.authService.currentUser?this.authService.currentUser.userName:""}getLegalEntity(){this.commonService.getLegalEntityList().pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.legalEntityList=e},e=>{this.errorHandling(e)})}getCurrency(){this.commonService.smartDropDownList("Currency","CurrencyId","symbol").pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.currencyList=e},e=>{this.errorHandling(e)})}getAllEmployees(){this.commonService.smartDropDownList("Employee","EmployeeId","FirstName").pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.employeesOriginalData=e.map(e=>Object.assign({},e,{employeeId:e.value,name:e.label}))})}getTaskList(){this.workOrderService.getAllTasks().pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.taskList=e},e=>{this.errorHandling(e)})}getWorkOrderDefaultSetting(){this.commonService.workOrderDefaultSettings(1,1).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{console.log("work order default settings",e),e&&e[0]?("WO View"==e[0].woListDefault?this.viewType="wp":"MPN View"==e[0].woListDefault&&(this.viewType="mpn"),this.currentStatus=e[0].woListStatusDefault.toLowerCase()):(this.currentStatus="open",this.viewType="mpn"),console.log("res check",this.viewType,this.currentStatus),this.changeOfStatus(this.currentStatus,this.viewType)},e=>{this.errorHandling(e)})}getColorCodeForMultiple(e){return"Multiple"===e.partNoType?"green":"black"}mouseOverData(e,r){return"partNoType"===e?r.partNos:"pnDescriptionType"===e?r.pnDescription:"workScopeType"===e?r.workScope:"priorityType"===e?r.priority:"customerType"===e?r.customer:"openDate"===e&&r[e]?N(r.openDate).format("MM-DD-YYYY"):"customerRequestDateType"===e&&r[e]?this.convertmultipleDates(r.customerRequestDate):"promisedDateType"===e&&r[e]?this.convertmultipleDates(r.promisedDate):"estimatedShipDateType"===e&&r[e]?this.convertmultipleDates(r.estimatedShipDate):"stageType"===e?r.stage:"estimatedCompletionDateType"===e&&r[e]?this.convertmultipleDates(r.estimatedCompletionDate):"workOrderStatusType"===e?r.workOrderStatus:r[e]}convertmultipleDates(e){const r=[],t=e.split(",");for(var n=0;n<t.length;n++)t[n]&&r.push(N(t[n]).format("MM-DD-YYYY"));return r}convertDate(e,r){return"openDate"===e&&r[e]?N(r.openDate).format("MM-DD-YYYY"):"customerRequestDateType"===e&&r[e]?"Multiple"!==r.customerRequestDateType?N(r.customerRequestDate).format("MM-DD-YYYY"):r.customerRequestDateType:"promisedDateType"===e&&r[e]?"Multiple"!==r.promisedDateType?N(r.promisedDate).format("MM-DD-YYYY"):r.promisedDateType:"estimatedShipDateType"===e&&r[e]?"Multiple"!==r.estimatedShipDateType?N(r.estimatedShipDate).format("MM-DD-YYYY"):r.estimatedShipDateType:"estimatedCompletionDateType"===e&&r[e]?"Multiple"!==r.estimatedCompletionDateType?N(r.estimatedCompletionDate).format("MM-DD-YYYY"):r.estimatedCompletionDateType:r[e]}columnsChanges(){this.refreshList()}refreshList(){this.table.reset()}loadData(e){console.log(e),this.lazyLoadEventData=e;const r=parseInt(e.first)/e.rows;this.pageIndex=r,this.pageSize=e.rows,e.first=r,this.viewType&&this.currentStatus&&(this.lazyLoadEventData.filters=Object.assign({},this.lazyLoadEventData.filters,{workOrderStatus:null==this.lazyLoadEventData.filters.workOrderStatus?this.currentStatus:this.lazyLoadEventData.filters.workOrderStatus,viewType:this.viewType})),this.isGlobalFilter?this.globalSearch():this.getAllWorkOrderList(e)}changeOfStatus(e,r){const t=this.lazyLoadEventData;this.currentStatus=""===e?this.currentStatus:e,this.viewType=""===r?this.viewType:r,this.isSpinnerVisible=!0,this.getAllWorkOrderList(Object.assign({},t,{filters:Object.assign({},t.filters,{workOrderStatus:this.currentStatus,viewType:this.viewType})}))}fieldSearch(e){this.isGlobalFilter=!1,"workOrderStatus"===e&&(this.currentStatus="open")}getAllWorkOrderList(e){console.log(e);const r=Object.assign({},e,{filters:Object(C.j)(e.filters)});this.workOrderService.getWorkOrderList(r).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.workOrderData=e,e.length>0?(this.totalRecords=e[0].totalRecords,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)):(this.totalRecords=0,this.totalPages=0),this.isSpinnerVisible=!1},e=>{this.isSpinnerVisible=!1})}otherOptionSelected(e){this.selectedOtherSubTask=e,this.otherOptionShow=!1}otherCommunicationOptionSelected(e){this.selectedCommunicationOption=e,this.communicationOptionShow=!1}getPageCount(e,r){return Math.ceil(e/r)}pageIndexChange(e){this.pageSize=e.rows}globalSearch(e){this.isGlobalFilter||(this.pageIndex=0),this.isGlobalFilter=!0,this.workOrderService.getWorkOrderGlobalSearch(e,this.pageIndex,this.pageSize).subscribe(e=>{this.workOrderData=e,e.length>0&&(this.totalRecords=e[0].totalRecords,this.totalPages=Math.ceil(this.totalRecords/this.pageSize))},e=>{this.errorHandling(e)})}openViewOnDbl(e){this.view(e),w("#viewWorkOrder").modal("show")}view(e){return n.a(this,void 0,void 0,(function*(){console.log("view",e),this.paramsData.workOrderId=e.workOrderId,this.workOrderId=e.workOrderId,yield this.workOrderService.viewWorkOrderHeader(this.workOrderId).subscribe(r=>{this.workOrderDetails=r,this.viewWorkOrderHeader=r,this.showTabsGrid=!0,this.showGridMenu=!0,this.workFlowWorkOrderId=r.workFlowWorkOrderId,this.workOrderPartNumberId=r.woPartNoId,this.billingCreateOrEdit(),"Single MPN"===r.singleMPN?(this.showMPN=!1,this.getAllTabsData(r.workFlowWorkOrderId,0),this.checkQuoteAvailability(e.workOrderId,r.workFlowWorkOrderId)):this.showMPN=!0,this.workFlowId=r.workFlowId,this.savedWorkOrderData={workOrderId:this.workOrderId,workFlowId:this.workFlowId,workFlowWorkOrderId:this.workFlowWorkOrderId},this.getQuoteIdByWfandWorkOrderId(this.workFlowWorkOrderId,this.workOrderId),this.getDocumentsByWorkOrderId()},e=>{this.errorHandling(e)}),yield this.workOrderService.viewWorkOrderPartNumber(this.workOrderId).subscribe(e=>{this.viewWorkOrderMPN=e},e=>{this.errorHandling(e)}),console.log(e),this.getWorkOrderWorkFlowNos(this.workOrderId)}))}billingCreateOrEdit(){this.workOrderService.getBillingEditData(this.workOrderId,this.workOrderPartNumberId).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.billing=Object.assign({},e,{shipDate:new Date(e.shipDate),printDate:new Date(e.printDate),woOpenDate:new Date(e.openDate),invoiceDate:new Date(e.invoiceDate),soldToCustomerId:{customerId:e.soldToCustomerId,customerName:e.soldToCustomer},shipToCustomerId:{customerId:e.shipToCustomerId,customerName:e.shipToCustomer},customerRef:e.customerReference,woType:e.workOrderType,shipAccountInfo:e.shippingAccountinfo}),this.isEditBilling=!0},e=>{this.getWorkOrderDetailsFromHeader()})}getWorkOrderDetailsFromHeader(){this.workOrderService.viewWorkOrderHeader(this.workOrderId).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{const r=e;this.billing=new A,this.billing=Object.assign({},this.billing,{customerRef:r.customerReference,employeeName:r.employee,woOpenDate:new Date(r.openDate),salesPerson:r.salesperson,woType:r.workOrderType,creditTerm:r.creditTerm,workScope:"0",managementStructureId:r.managementStructureId})},e=>{this.errorHandling(e)})}getQuoteIdByWfandWorkOrderId(e,r){this.quoteService.getQuoteIdByWfandWorkOrderId(e,r).pipe(Object(P.a)(this.onDestroy$)).subscribe(r=>{r?(this.workOrderQuoteId=r.quoteDetailId,this.quoteService.getSavedQuoteDetails(e).subscribe(e=>{this.buildMethodDetails=e,this.getQuoteCostingData(e.buildMethodId),this.billing.materialCost=e.materialFlatBillingAmount,this.billing.laborOverHeadCost=e.laborFlatBillingAmount,this.billing.miscChargesCost=e.chargesFlatBillingAmount+e.freightFlatBillingAmount},e=>{this.errorHandling(e)})):(this.quoteChargesList=[],this.quoteMaterialList=[],this.quoteLaborList=[],this.billing=void 0)},e=>{this.errorHandling(e)})}getQuoteCostingData(e){this.getQuoteMaterialListByWorkOrderQuoteId(e),this.getQuoteFreightsListByWorkOrderQuoteId(e),this.getQuoteChargesListByWorkOrderQuoteId(e),this.getQuoteLaborListByWorkOrderQuoteId(e)}getQuoteMaterialListByWorkOrderQuoteId(e){return n.a(this,void 0,void 0,(function*(){yield this.quoteService.getQuoteMaterialList(this.workOrderQuoteId,e).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.quoteMaterialList=e},e=>{this.errorHandling(e)})}))}getQuoteFreightsListByWorkOrderQuoteId(e){return n.a(this,void 0,void 0,(function*(){yield this.quoteService.getQuoteFreightsList(this.workOrderQuoteId,e).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.quoteFreightsList=e},e=>{this.errorHandling(e)})}))}getQuoteChargesListByWorkOrderQuoteId(e){return n.a(this,void 0,void 0,(function*(){yield this.quoteService.getQuoteChargesList(this.workOrderQuoteId,e).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.quoteChargesList=e},e=>{this.errorHandling(e)})}))}getQuoteLaborListByWorkOrderQuoteId(e){return n.a(this,void 0,void 0,(function*(){yield this.quoteService.getQuoteLaborList(this.workOrderQuoteId,e).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{if(e){let r=this.workFlowWorkOrderId;if(e){let t=this.labor.workOrderLaborList;this.quoteLaborList=Object.assign({},e,{workOrderLaborList:t}),this.quoteLaborList.dataEnteredBy=Object(C.d)("value",e.dataEnteredBy,this.employeesOriginalData),this.quoteLaborList.workFlowWorkOrderId=r,this.quoteLaborList.workOrderLaborList&&this.quoteLaborList.workOrderLaborList[0]||(this.quoteLaborList.workOrderLaborList=[{}]),this.taskList.forEach(r=>{this.quoteLaborList.workOrderLaborList[0][r.description.toLowerCase()]=[],e.laborList.forEach(e=>{if(e.taskId==r.taskId){let t={};t=Object.assign({},e,{employeeId:{label:e.employeeName,value:e.employeeId}}),this.quoteLaborList.workOrderLaborList[0][r.description.toLowerCase()].push(t)}})})}}else this.taskList.forEach(e=>{this.quoteLaborList.workOrderLaborList[0][e.description.toLowerCase()]=[]})},e=>{this.errorHandling(e)})}))}getDocumentsByWorkOrderId(){0!==this.workFlowWorkOrderId&&this.workOrderId&&(this.documentsDestructuredData=[],this.workOrderService.getDocumentsList(this.workFlowWorkOrderId,this.workOrderId,!1,0).subscribe(e=>{let r=[];e.map(e=>{for(var t=0;t<e.attachmentDetails.length;t++){const n=e.attachmentDetails;r.push(Object.assign({},e,{fileName:n[t].fileName,fileCreatedDate:n[t].createdDate,fileCreatedBy:n[t].createdBy,fileUpdatedBy:n[t].updatedBy,fileUpdatedDate:n[t].updatedDate,fileSize:n[t].fileSize,link:n[t].link,attachmentDetailId:n[t].attachmentDetailId}))}});this.documentsDestructuredData=r},e=>{this.documentsDestructuredData=[],this.errorHandling(e)}))}getWorkOrderWorkFlowNos(e){e&&this.workOrderService.getWorkOrderWorkFlowNumbers(e).subscribe(e=>{this.mpnPartNumbersList=e.map(e=>({value:{workflowId:e.workflowId,workFlowWorkOrderId:e.value},label:e.partNumber})),this.mpnPartNumbersList&&this.mpnPartNumbersList.length>0&&(console.log("this check part numbers",this.mpnPartNumbersList),this.selectedMPN=this.mpnPartNumbersList[0].value,this.workFlowWorkOrderId=this.mpnPartNumbersList[0].value.workFlowWorkOrderId,console.log("this workFlowWorkOrderId",this.workFlowWorkOrderId),this.changeofMPN(this.mpnPartNumbersList[0].value))},e=>{this.errorHandling(e)})}changeofMPN(e){console.log("change mpn object",e),this.workFlowId=e.workflowId,this.getAllTabsData(e.workFlowWorkOrderId,this.workOrderId),this.checkQuoteAvailability(this.workOrderId,e.workFlowWorkOrderId),this.workFlowWorkOrderId=e.workFlowWorkOrderId}getAllTabsData(e,r){this.getEquipmentByWorkOrderId(e,r),this.getMaterialListByWorkOrderId(e,r),this.getPublicationListByWorkOrderId(e,r),this.getChargesListByWorkOrderId(e,r),this.getExclusionListByWorkOrderId(e,r),this.getLaborListByWorkOrderId(e,r),this.getDirectionByWorkOrderId(e,r),this.getWorkOrderFrieghtsList(e,r),this.showTableGrid=!0,this.activeIndex=0,console.log("Testing")}getEquipmentByWorkOrderId(e,r){console.log(e,r),e&&this.workOrderService.getWorkOrderAssetList(e,r,0,!1).subscribe(e=>{console.log(e),this.workOrderAssetList=e},e=>{this.errorHandling(e)})}getMaterialListByWorkOrderId(e,r){console.log("this is checked",this.workFlowWorkOrderId,this.workOrderId),0!==this.workFlowWorkOrderId&&this.workOrderId&&this.workOrderService.getWorkOrderMaterialList(this.workFlowWorkOrderId,this.workOrderId).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{e.length>0&&(e.forEach(e=>{e.isShowPlus=!0,e.currency&&(e.currency=e.currency.symbol)}),this.workOrderMaterialList=e,this.materialStatus=e[0].partStatusId,console.log("material llist",this.workOrderMaterialList))},e=>{this.errorHandling(e)})}getPublicationListByWorkOrderId(e,r){e&&this.workOrderService.getWorkOrderPublicationList(e,r).subscribe(e=>{this.workOrderPublicationList=e},e=>{this.errorHandling(e)})}getChargesListByWorkOrderId(e,r){e&&this.workOrderService.getWorkOrderChargesList(e,r).subscribe(e=>{this.workOrderChargesList=e},e=>{this.errorHandling(e)})}getExclusionListByWorkOrderId(e,r){e&&this.workOrderService.getWorkOrderExclusionsList(e,r).subscribe(e=>{this.workOrderExclusionsList=e},e=>{this.errorHandling(e)})}getWorkOrderFrieghtsList(e,r){e&&this.workOrderService.getWorkOrderFrieghtsList(e,r,!1,0).subscribe(e=>{this.workOrderFreightList=e},e=>{this.errorHandling(e)})}getLaborListByWorkOrderId(e,r){e&&this.workOrderService.getWorkOrderLaborList(e,r,!1,0).subscribe(e=>{e&&e.laborList&&(this.workOrderLaborList=e.laborList)},e=>{this.errorHandling(e)})}getDirectionByWorkOrderId(e,r){e&&this.workOrderService.getWorkOrderDirectionList(e,r).subscribe(e=>{this.workOrderDirectionList=e},e=>{this.errorHandling(e)})}gettearDownData(){this.workFlowWorkOrderId=this.workFlowWorkOrderId,console.log("work Idasda",this.workFlowWorkOrderId)}changeStatus(e){this.workOrderService.updateActionforWorkOrder(e,this.userName).subscribe(e=>{this.alertService.showMessage("Success","Successfully Updated Status",k.d.success)},e=>{this.errorHandling(e)})}delete(e){this.workOrderService.deleteActionforWorkOrder(e.workOrderId).subscribe(e=>{this.getAllWorkOrderList(this.lazyLoadEventData),this.alertService.showMessage("Success","Successfully Deleted Record",k.d.success)},e=>{this.errorHandling(e)})}getWorkOrderPartListByWorkOrderId(e){const{workOrderId:r}=e;this.workOrderService.getWorkOrderPartListByWorkOrderId(r).subscribe(e=>{e.length>0&&(this.workOrderPartListDataKeys=Object.keys(e[0]),this.workOrderPartListData=e)},e=>{this.errorHandling(e)})}showOtherOptions(){this.otherOptionShow=!this.otherOptionShow}showOtherCommunicationOptions(){this.communicationOptionShow=!this.communicationOptionShow}checkQuoteAvailability(e,r){this.quoteService.getQuoteIdByWfandWorkOrderId(r,e).subscribe(e=>{this.quoteDetailsId=e?e.workOrderQuote.workOrderQuoteId:void 0},e=>{this.errorHandling(e)})}edit(e){this.editData=e;const{workOrderId:r}=e,{customerId:t}=e;this.editMode=!0,this.workOrderService.getWorkOrderById(r,0).subscribe(e=>{this.route.navigate(["workordersmodule/workorderspages/app-work-order-edit/"+r])},e=>{this.errorHandling(e)})}getCustomerWarningsList(){this.commonService.smartDropDownList("CustomerWarningType","CustomerWarningTypeId ","Name").pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{e.forEach(e=>{"Create WO for MPN"!=e.label||(this.customerWarningListId=e.value)})})}customerWarnings(e){e&&this.customerWarningListId&&(this.warningMessage="",this.commonService.customerWarnings(e,this.customerWarningListId).subscribe(r=>{console.log("reasons list",r),r&&(this.warningMessage=r.warningMessage,this.warningID=r.customerWarningId),this.customerResctrictions(e,this.warningMessage)},e=>{this.errorHandling(e)}))}customerResctrictions(e,r){this.restrictMessage="",e&&this.customerWarningListId&&this.commonService.customerResctrictions(e,this.customerWarningListId).subscribe(e=>{console.log("reasons list22",e),e&&(this.restrictID=e.customerWarningId,this.restrictMessage=e.restrictMessage),0!=this.warningID&&0==this.restrictID||0==this.warningID&&0!=this.restrictID||0!=this.warningID&&0!=this.restrictID?this.showAlertMessage(r,this.restrictMessage):0==this.warningID&&this.restrictID},e=>{this.errorHandling(e)})}showAlertMessage(e,r){console.log("alert mesages",this.warningMessage),console.log("restrict mesages",this.restrictMessage),w("#warnRestrictMesg").modal("show")}WarnRescticModel(){this.restrictID,w("#warnRestrictMesg").modal("hide"),this.warningMessage="",this.restrictMessage=""}errorHandling(e){e.error.errors?e.error.errors.forEach(e=>{this.alertService.showMessage(this.moduleName,e.message,k.d.error)}):this.alertService.showMessage(this.moduleName,"Saving data Failed due to some input error",k.d.error)}handleError(e){e.error.errors?e.error.errors.forEach(e=>{this.alertService.showMessage(this.moduleName,e.message,k.d.error)}):this.alertService.showMessage(this.moduleName,"Failed due to some error",k.d.error)}saveWorkOrderBilling(e){}};E.ctorParameters=()=>[{type:p.a},{type:o.Router},{type:v.a},{type:k.b},{type:c.a},{type:u.a}],n.b([Object(a.Input)()],E.prototype,"isSubWorkOrder",void 0),n.b([Object(a.Input)()],E.prototype,"isWorkOrderMainView",void 0),n.b([Object(a.Input)()],E.prototype,"workOrderId",void 0),n.b([Object(a.Output)()],E.prototype,"closeView",void 0),n.b([Object(a.ViewChild)("dt",{static:!1})],E.prototype,"table",void 0),E=n.b([Object(a.Component)({selector:"app-work-order-list",template:n.c(t("fNk3")).default,encapsulation:a.ViewEncapsulation.None,animations:[F.a],styles:[n.c(t("Skjs")).default]})],E);var R=t("jF51");let B=class{constructor(e,r,t,n,a){this.laborOHService=e,this._route=r,this.alertService=t,this.authService=n,this.commonService=a,this.directLaborList=[],this.pageSize=10,this.cols=[{field:"levelCode1",header:"Level 01"},{field:"levelCode2",header:"Level 02"},{field:"levelCode3",header:"Level 03"},{field:"levelCode4",header:"Level 04"},{field:"laborRateIdText",header:"What Labor Rate To Use On Work Orders Text"},{field:"averageRate",header:"What Labor Rate To Use On Work Orders?"},{field:"laborHoursIdText",header:"How To Apply Hours To Work Orders?"},{field:"burdenRateIdText",header:"Overhead Burden Rate Text"},{field:"flatAmount",header:"Overhead Burden Rate"}],this.selectedColumns=this.cols,this.rowDataToDelete={},this.auditHistory=[],this.directLaborData={},this.headerManagementStructure={}}ngOnInit(){this.loadData()}get userName(){return this.authService.currentUser?this.authService.currentUser.userName:""}loadData(){this.laborOHService.getLaborOHSettings().subscribe(e=>{console.log(e),this.directLaborList=e.map(e=>Object.assign({},e,{averageRate:e.averageRate?e.averageRate:"-"}))})}getPageCount(e,r){return Math.ceil(e/r)}viewSelectedRow(e){this.laborOHService.getLaborOHSettingsById(e.laborOHSettingsId).subscribe(e=>{console.log(e),this.directLaborData=Object.assign({},e,{laborRateId:e.laborRateId.toString(),laborHoursId:e.laborHoursId.toString(),burdenRateId:e.burdenRateId.toString()}),this.getManagementStructureCodes(e.managementStructureId)})}getManagementStructureCodes(e){this.commonService.getManagementStructureCodes(e).subscribe(e=>{e.Level1?this.headerManagementStructure.level1=e.Level1:this.headerManagementStructure.level1="-",e.Level2?this.headerManagementStructure.level2=e.Level2:this.headerManagementStructure.level2="-",e.Level3?this.headerManagementStructure.level3=e.Level3:this.headerManagementStructure.level3="-",e.Level4?this.headerManagementStructure.level4=e.Level4:this.headerManagementStructure.level4="-"})}viewSelectedRowdbl(e){this.viewSelectedRow(e),w("#viewLabor").modal("show")}onEdit(e){const{laborOHSettingsId:r}=e;this._route.navigateByUrl("/workordersmodule/workorderspages/app-direct-labour-add/edit/"+r)}changeStatus(e){this.laborOHService.getLaborOHSettingsStatus(e.laborOHSettingsId,e.isActive,this.userName).subscribe(e=>{this.loadData(),this.alertService.showMessage("Success","Successfully Updated Status",k.d.success)})}delete(e){this.rowDataToDelete=e}deleteDirectLabor(){const{laborOHSettingsId:e}=this.rowDataToDelete;this.laborOHService.deleteLaborOHSettings(e,this.userName).subscribe(e=>{this.loadData(),this.alertService.showMessage("Success","Successfully Deleted Record",k.d.success)})}getAuditHistoryById(e){this.laborOHService.getLaborOHSettingsAuditById(e.laborOHSettingsId).subscribe(e=>{console.log(e),this.auditHistory=e})}getColorCodeForHistory(e,r,t){const n=this.auditHistory,a=n.length;if(e>=0&&e<=a)return e+1===a||n[e+1][r]===t}};B.ctorParameters=()=>[{type:R.a},{type:o.Router},{type:k.b},{type:v.a},{type:u.a}],B=n.b([Object(a.Component)({selector:"app-direct-labour",template:n.c(t("/5t3")).default,animations:[F.a],styles:[n.c(t("dxLM")).default]})],B);var V=t("MKys"),q=t("Np0n"),H=t("0zL+"),Q=t("pjuo"),j=t("Ph3x"),U=(t("tcIq"),t("H4X+"),t("AJX/"),t("IheW")),$=t("tOyL"),z=t("JPLv");let _=class extends $.a{constructor(e,r,t){super(e,r,t),this.getAllURL="/api/WorkOrderPartNumber/getAll",this.getByIdURL="/api/WorkOrderPartNumber/get",this.addURL="/api/WorkOrderPartNumber/add",this.updateURL="/api/WorkOrderPartNumber/update",this.removeByIdURL="/api/WorkOrderPartNumber/remove",this.getAssetAuditById="/api/WorkOrderPartNumber/audits"}get getAll(){return this.configurations.baseUrl+this.getAllURL}get getById(){return this.configurations.baseUrl+this.getByIdURL}get add(){return this.configurations.baseUrl+this.addURL}get update(){return this.configurations.baseUrl+this.updateURL}get removeById(){return this.configurations.baseUrl+this.removeByIdURL}getAllWorkOrders(){let e=this.getAll;return this.http.get(e,this.getRequestHeaders()).catch(e=>this.handleError(e,()=>this.getAllWorkOrders()))}getWorkOrderById(e){let r=`${this.getById}/${e}`;return this.http.get(r,this.getRequestHeaders()).catch(r=>this.handleError(r,()=>this.getWorkOrderById(e)))}addWorkOrder(e){let r=this.add;return this.http.post(r,JSON.stringify(e),this.getRequestHeaders()).catch(r=>this.handleError(r,()=>this.addWorkOrder(e)))}updateWorkOrder(e){let r=this.update;return this.http.post(r,JSON.stringify(e),this.getRequestHeaders()).catch(r=>this.handleError(r,()=>this.updateWorkOrder(e)))}removeWorkOrderById(e){let r=`${this.removeById}/${e}`;return this.http.get(r,this.getRequestHeaders()).catch(r=>this.handleError(r,()=>this.removeWorkOrderById(e)))}getAssetStatusAuditById(e){let r=`${this.getAssetAuditById}/${e}`;return this.http.get(r,this.getRequestHeaders()).catch(r=>this.handleError(r,()=>this.getAssetStatusAuditById(e)))}};_.ctorParameters=()=>[{type:U.HttpClient},{type:z.a},{type:a.Injector}],_=n.b([Object(a.Injectable)()],_);let G=class{constructor(e){this.workOrderPartNumberEndpointService=e}getAll(){return this.workOrderPartNumberEndpointService.getAllWorkOrders()}getById(e){return this.workOrderPartNumberEndpointService.getWorkOrderById(e)}add(e){return this.workOrderPartNumberEndpointService.addWorkOrder(e)}update(e){return this.workOrderPartNumberEndpointService.updateWorkOrder(e)}remove(e){return this.workOrderPartNumberEndpointService.removeWorkOrderById(e)}updateActive(e){}getAssetAudit(e){}};G.ctorParameters=()=>[{type:_}],G=n.b([Object(a.Injectable)()],G);var Y=t("435O");class K{constructor(){this.isSinglePN=!0,this.customerId=null,this.employeeId=null,this.workOrderTypeId="1",this.openDate=new Date,this.creditTermsId=null,this.creditTerm="",this.creditLimit=null,this.workOrderStatusId=1,this.salesPersonId=null,this.workOrderNum="",this.isContractAvl=!1,this.contract="",this.workOrderNumber="",this.customerReference="",this.csr="",this.workOrderType="",this.managementStructureId=null,this.receivingCustomerWorkId=null,this.partNumbers=[]}}var J=t("qT9Z");let Z=class{constructor(e,r,t,n,a,s,i,o,l,d,c,p){this.alertService=e,this.workOrderService=r,this.creditTermsService=t,this.customerService=n,this.employeeService=a,this.itemMasterService=s,this.workOrderPartNumberService=i,this.stocklineService=o,this.commonService=l,this.authService=d,this.acRouter=c,this.salesOrderService=p,this.isSubWorkOrder=!1,this.recCustomerId=0,this.workOrderGeneralInformation=new K,this.isEdit=!1,this.onDestroy$=new M.a,this.salesPersonOriginalList=[],this.agentsOriginalList=[],this.salesAgentsOriginalList=[],this.isSpinnerEnable=!1,this.masterCompanyId=1,this.moduleName="",0==this.isSubWorkOrder&&(this.salesOrderService.getReferenceObject().subscribe(e=>{}),this.salesOrderService.salesOrderReferenceSubj$.subscribe(e=>{this.salesOrderReferenceData=e}))}ngOnInit(){this.getAllWorkOrderTypes(),this.getAllWorkOrderStatus(),this.getAllCreditTerms(),this.getAllEmployees(),this.getAllTecStations(),this.getJobTitles(),this.getAllWorkScpoes(),this.getAllWorkOrderStages(),this.getAllExpertiseType(),this.getAllPriority(),this.getCurrency(),this.getLegalEntity(),0==this.isSubWorkOrder?this.getConditionsList():(this.conditionList=this.conditionListfromSubWo,setTimeout(()=>{this.isSpinnerEnable=!0},2e3)),this.isSubWorkOrder?this.subWorkOrderId=this.subWorkOrderId:(this.workOrderId=this.acRouter.snapshot.params.id,this.recCustomerId=this.acRouter.snapshot.params.rcustid),this.workOrderId||this.recCustomerId?(this.recCustomerId?(this.showTabsGrid=!1,this.workOrderId=0,this.getWorkOrderDefaultSetting()):this.recCustomerId=0,this.workOrderService.getWorkOrderById(this.workOrderId,this.recCustomerId).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{setTimeout(()=>{this.isSpinnerEnable=!0},2e3),this.getPartNosByCustomer(e.customerId,0),this.isEdit=!0;const r=Object.assign({},e,{workOrderNumber:e.workOrderNum,openDate:new Date(e.openDate),customerId:e.customerId,partNumbers:e.partNumbers.map(r=>Object.assign({},r,{promisedDate:0==this.recCustomerId?new Date(r.promisedDate):null,estimatedCompletionDate:0==this.recCustomerId?new Date(r.estimatedCompletionDate):null,estimatedShipDate:0==this.recCustomerId?new Date(r.estimatedShipDate):null,receivedDate:0==this.recCustomerId&&null==e.receivingCustomerWorkId?null:new Date(r.receivedDate)}))});this.editWorkOrderGeneralInformation=r},e=>{this.errorHandling(e)})):this.getWorkOrderDefaultSetting()}ngOnChanges(e){this.subWoMpnGridUpdated=this.subWoMpnGridUpdated}ngOnDestroy(){this.onDestroy$.next()}getAllExpertiseType(){this.commonService.getExpertise().subscribe(e=>{this.expertiseTypeList=e.map(e=>{"Technician"!=e.expertiseType||this.getExpertiseEmployeeByExpertiseId(e.employeeExpertiseId)})},e=>{this.errorHandling(e)})}getExpertiseEmployeeByExpertiseId(e){this.commonService.getExpertiseEmployeesByCategory(e).subscribe(e=>{this.technicianByExpertiseTypeList=e},e=>{this.errorHandling(e)})}getWorkOrderDefaultSetting(e){const r=e||this.workOrderGeneralInformation.workOrderTypeId;this.commonService.workOrderDefaultSettings(this.masterCompanyId,r).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{if(e.length>0){const r=e[0];this.workorderSettings=e[0],this.workOrderGeneralInformation=Object.assign({},this.workOrderGeneralInformation,{partNumbers:this.workOrderGeneralInformation.partNumbers.map(e=>Object.assign({},e,{workOrderStageId:r.defaultStageCodeId,workOrderPriorityId:r.defaultPriorityId}))})}},e=>{this.errorHandling(e)})}getCustomerNameandCodeById(e){const{customerId:r}=e;this.commonService.getCustomerNameandCodeById(r).pipe(Object(P.a)(this.onDestroy$)).subscribe(r=>{e.customer=r},e=>{this.errorHandling(e)})}getAllWorkOrderTypes(){this.commonService.smartDropDownList("WorkOrderType","ID","Description").pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.workOrderTypes=e.map(e=>({id:e.value,description:e.label}))},e=>{this.errorHandling(e)})}getAllWorkOrderStatus(){this.commonService.smartDropDownList("WorkOrderStatus","ID","Description").pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.workOrderStatusList=e.sort((function(e,r){return e.value-r.value}))},e=>{this.errorHandling(e)})}getAllCreditTerms(){this.creditTerms=[]}getJobTitles(){this.commonService.getJobTitles().subscribe(e=>{this.jobTitles=e,this.getSalesPersonList(),this.getCSRList(),this.getAgentsList(),this.getTechnicianList()},e=>{this.errorHandling(e)})}getSalesPersonList(){const e=Object(C.f)("jobTitle","Sales",this.jobTitles);void 0!==e&&this.commonService.getEmployeesByCategory(e[0].jobTitleId).subscribe(e=>{this.salesPersonOriginalList=e,this.salesAgentsOriginalList=[...this.salesPersonOriginalList]},e=>{this.errorHandling(e)})}getCSRList(){const e=Object(C.f)("jobTitle","CSR",this.jobTitles);void 0!==e&&this.commonService.getEmployeesByCategory(e[0].jobTitleId).subscribe(e=>{this.csrOriginalList=e},e=>{this.errorHandling(e)})}getAgentsList(){const e=Object(C.f)("jobTitle","Agents",this.jobTitles);void 0!==e&&this.commonService.getEmployeesByCategory(e[0].jobTitleId).subscribe(e=>{this.agentsOriginalList=e,this.salesAgentsOriginalList=[...this.salesAgentsOriginalList,...this.agentsOriginalList]},e=>{this.errorHandling(e)})}getTechnicianList(){const e=Object(C.f)("jobTitle","Technician",this.jobTitles);void 0!==e&&this.commonService.getEmployeesByCategory(e[0].jobTitleId).subscribe(e=>{this.technicianOriginalList=e},e=>{this.errorHandling(e)})}getAllEmployees(){return n.a(this,void 0,void 0,(function*(){yield this.commonService.smartDropDownList("Employee","EmployeeId","FirstName").pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.employeesOriginalData=e.map(e=>Object.assign({},e,{employeeId:e.value,name:e.label}))},e=>{this.errorHandling(e)})}))}getAllTecStations(){return n.a(this,void 0,void 0,(function*(){yield this.commonService.smartDropDownList("EmployeeStation","EmployeeStationId","StationName").pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.techStationList=e.map(e=>Object.assign({},e,{techStationId:e.value,name:e.label}))},e=>{this.errorHandling(e)})}))}getAllWorkScpoes(){this.commonService.smartDropDownList("WorkScope","WorkScopeId","Description").pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.workScopesList=e},e=>{this.errorHandling(e)})}getAllWorkOrderStages(){this.workOrderService.getWorkOrderStageAndStatus().pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.workOrderStagesList=e.map(e=>Object.assign({},e,{value:e.workOrderStageId,label:e.workOrderStage}))},e=>{this.errorHandling(e)})}getAllPriority(){this.commonService.smartDropDownList("Priority","PriorityId","Description").pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.priorityList=e},e=>{this.errorHandling(e)})}getMultiplePartsNumbers(){this.workOrderService.getMultipleParts().pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.partNumberOriginalData=e},e=>{this.errorHandling(e)})}getPartNosByCustomer(e,r){return n.a(this,void 0,void 0,(function*(){yield this.workOrderService.getPartNosByCustomer(e,r).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.partNumberOriginalData=e},e=>{this.errorHandling(e)})}))}getCurrency(){this.commonService.smartDropDownList("Currency","CurrencyId","symbol").pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.currencyList=e},e=>{this.errorHandling(e)})}getLegalEntity(){this.commonService.getLegalEntityList().pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.legalEntityList=e},e=>{this.errorHandling(e)})}getConditionsList(){this.commonService.smartDropDownList("Condition","ConditionId","Description").pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.conditionList=e;const r=e.find(e=>e.label.includes("As Removed"));this.workOrderGeneralInformation=Object.assign({},this.workOrderGeneralInformation,{partNumbers:this.workOrderGeneralInformation.partNumbers.map(e=>Object.assign({},e,{conditionId:void 0!==r?r.value:null}))}),setTimeout(()=>{this.isSpinnerEnable=!0},2e3)},e=>{this.errorHandling(e)})}errorHandling(e){e.error.errors?e.error.errors.forEach(e=>{this.alertService.showMessage(this.moduleName,e.message,k.d.error)}):this.alertService.showMessage(this.moduleName,"Saving data Failed due to some input error",k.d.error)}handleError(e){e.error.errors?e.error.errors.forEach(e=>{this.alertService.showMessage(this.moduleName,e.message,k.d.error)}):this.alertService.showMessage(this.moduleName,"Failed due to some  error",k.d.error)}};Z.ctorParameters=()=>[{type:k.b},{type:p.a},{type:q.a},{type:H.a},{type:Q.a},{type:j.a},{type:G},{type:Y.a},{type:u.a},{type:v.a},{type:o.ActivatedRoute},{type:J.a}],n.b([Object(a.Input)()],Z.prototype,"isSubWorkOrder",void 0),n.b([Object(a.Input)()],Z.prototype,"paramsData",void 0),n.b([Object(a.Input)()],Z.prototype,"showTabsGrid",void 0),n.b([Object(a.Input)()],Z.prototype,"showGridMenu",void 0),n.b([Object(a.Input)()],Z.prototype,"subWorkOrderId",void 0),n.b([Object(a.Input)()],Z.prototype,"workFlowWorkOrderId",void 0),n.b([Object(a.Input)()],Z.prototype,"subWoMpnGridUpdated",void 0),n.b([Object(a.Input)()],Z.prototype,"conditionListfromSubWo",void 0),Z=n.b([Object(a.Component)({selector:"app-work-order-smart",template:n.c(t("n8DH")).default})],Z);var X=t("hibz"),ee=t("QBlu");let re=class{constructor(e,r,t,n,a,s,i,o){this.commonService=e,this.authService=r,this.percentService=t,this.laborOHService=n,this._actRoute=a,this.router=s,this.alertService=i,this.localStorage=o,this.directLaborData={},this.allEmployeeList=[],this.allPercentList=[],this.legalEntityList=[],this.businessUnitList=[],this.divisionList=[],this.departmentList=[],this.isEditMode=!1,this.onDestroy$=new M.a,this.managementStructure={companyId:0,buId:0,divisionId:0,departmentId:0},this.globalSettings={},this.directLaborData.laborRateId="1",this.directLaborData.laborHoursId="1",this.directLaborData.burdenRateId="1"}ngOnInit(){this.currencyData(),this.percentData(),this.getLegalEntity(),this.getGlobalSettings(),this.laborOHSettingsId=this._actRoute.snapshot.params.id,this.laborOHSettingsId?(this.isEditMode=!0,this.getLaborOHDetailsById(this.laborOHSettingsId)):this.getManagementStructureDetailsForCurrentUser(this.currentUserManagementStructureId)}get userName(){return this.authService.currentUser?this.authService.currentUser.userName:""}get currentUserManagementStructureId(){return this.authService.currentUser?this.authService.currentUser.managementStructureId:null}getGlobalSettings(){this.globalSettings=this.localStorage.getDataObject(L.a.GLOBAL_SETTINGS)||{},this.global_lang=this.globalSettings.cultureName}getManagementStructureDetailsForCurrentUser(e){this.commonService.getManagementStructureDetails(e).subscribe(e=>{e.Level1?(this.managementStructure.companyId=e.Level1,this.selectedLegalEntity(e.Level1)):this.managementStructure.companyId=0,e.Level2?(this.managementStructure.buId=e.Level2,this.selectedBusinessUnit(e.Level2)):this.managementStructure.buId=0,e.Level3?(this.managementStructure.divisionId=e.Level3,this.selectedDivision(e.Level3)):this.managementStructure.divisionId=0,e.Level4?(this.managementStructure.departmentId=e.Level4,this.selectedDepartment(e.Level4)):this.managementStructure.departmentId=0})}currencyData(){this.commonService.smartDropDownList("Currency","CurrencyId","Code").subscribe(e=>{this.allEmployeeList=e})}percentData(){this.percentService.getPercentages().subscribe(e=>{const r=e[0];this.allPercentList=r})}getLegalEntity(){this.commonService.getLegalEntityList().pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.legalEntityList=e})}getLaborOHDetailsById(e){this.laborOHService.getLaborOHSettingsById(e).subscribe(e=>{console.log(e),this.directLaborData=Object.assign({},e,{laborRateId:e.laborRateId.toString(),laborHoursId:e.laborHoursId.toString(),burdenRateId:e.burdenRateId.toString(),averageRate:this.onChangeCost(e.averageRate),flatAmount:this.onChangeBurdenCost(e.flatAmount)}),this.getManagementStructureOnEdit(e.managementStructureId)})}getManagementStructureOnEdit(e){this.commonService.getManagementStructureDetails(e).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.selectedLegalEntity(e.Level1),this.selectedBusinessUnit(e.Level2),this.selectedDivision(e.Level3),this.selectedDepartment(e.Level4),this.managementStructure={companyId:void 0!==e.Level1?e.Level1:0,buId:void 0!==e.Level2?e.Level2:0,divisionId:void 0!==e.Level3?e.Level3:0,departmentId:void 0!==e.Level4?e.Level4:0}})}selectedLegalEntity(e){this.businessUnitList=[],this.divisionList=[],this.departmentList=[],this.managementStructure.buId=0,this.managementStructure.divisionId=0,this.managementStructure.departmentId=0,0!=e&&null!=e&&null!=e&&(this.directLaborData.managementStructureId=e,this.commonService.getBusinessUnitListByLegalEntityId(e).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.businessUnitList=e}))}selectedBusinessUnit(e){this.divisionList=[],this.departmentList=[],this.managementStructure.divisionId=0,this.managementStructure.departmentId=0,0!=e&&null!=e&&null!=e&&(this.directLaborData.managementStructureId=e,this.commonService.getDivisionListByBU(e).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.divisionList=e}))}selectedDivision(e){this.departmentList=[],this.managementStructure.departmentId=0,0!=e&&null!=e&&null!=e&&(this.directLaborData.managementStructureId=e,this.commonService.getDepartmentListByDivisionId(e).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.departmentList=e}))}selectedDepartment(e){0!=e&&null!=e&&null!=e&&(this.directLaborData.managementStructureId=e)}onChangeBurdenRate(){this.directLaborData.flatAmount=null}onChangeCost(e){if(e)return 1==isNaN(e)&&(e=Number(e.replace(/[^0-9.-]+/g,""))),this.directLaborData.averageRate=new Intl.NumberFormat(this.global_lang,{style:"decimal",minimumFractionDigits:2,maximumFractionDigits:2}).format(e),this.directLaborData.averageRate}onChangeBurdenCost(e){if(e)return 1==isNaN(e)&&(e=Number(e.replace(/[^0-9.-]+/g,""))),this.directLaborData.flatAmount=new Intl.NumberFormat(this.global_lang,{style:"decimal",minimumFractionDigits:2,maximumFractionDigits:2}).format(e),this.directLaborData.flatAmount}onChangeLaborRate(){this.directLaborData.averageRate=null}onSaveDirectLabor(){const e=Object.assign({},this.directLaborData,{createdBy:this.userName,updatedBy:this.userName,masterCompanyId:1});this.isEditMode?this.laborOHService.updateLaborOHSettings(e).subscribe(e=>{console.log(e),this.router.navigateByUrl("/workordersmodule/workorderspages/app-direct-labour"),this.alertService.showMessage("Success","Updated Direct Labor Sucessfully",k.d.success)}):this.laborOHService.createLaborOHSettings(e).subscribe(e=>{console.log(e),this.router.navigateByUrl("/workordersmodule/workorderspages/app-direct-labour"),this.alertService.showMessage("Success","Saved Direct Labor Sucessfully",k.d.success)})}};re.ctorParameters=()=>[{type:u.a},{type:v.a},{type:X.a},{type:R.a},{type:o.ActivatedRoute},{type:o.Router},{type:k.b},{type:ee.a}],re=n.b([Object(a.Component)({selector:"app-direct-labour-add",template:n.c(t("noKN")).default,animations:[F.a],styles:[n.c(t("xxq1")).default]})],re);class te{constructor(){this.promisedDate=new Date,this.estimatedShipDate=new Date,this.customerRequestDate=new Date,this.estimatedCompletionDate=new Date,this.customerReference=null,this.nte="",this.quantity=1,this.stockLineId=null,this.cmmId=0,this.workflowId=0,this.subWorkOrderStageId=0,this.subWorkOrderStatusId=0,this.subWorkOrderPriorityId=0,this.isPMA=!1,this.isDER=!1,this.techStationId=0,this.tearDownReport=0,this.tatDaysStandard=0,this.tatDaysCurrent=0,this.technicianId=0,this.mappingItemMasterId=null,this.conditionId=null,this.stockLineNumber="",this.isActive=!0,this.isDelete=!1,this.updatedDate=new Date,this.createdDate=new Date,this.receivedDate="",this.isMPNContract=!1,this.contractNo=null,this.workOrderId=0,this.workOrderMaterialsId=0,this.subWOPartNoId=0,this.subWorkOrderScopeId=0,this.subWorkOrderId=0,this.itemMasterId=0,this.masterCompanyId=1}}let ne=class{constructor(e,r,t,n,a,s,i,o){this.router=e,this.commonService=r,this.acRouter=t,this.alertService=n,this.authService=a,this.cdRef=s,this.location=i,this.workOrderService=o,this.issubWorkOrderState=!0,this.isEdit=!1,this.conditionList=[],this.activeGridUpdateButton=!1,this.mpnGridUpdated=!1,this.dybamicworkFlowList={},this.priorityList=[],this.expertiseTypeList=[],this.technicianByExpertiseTypeList=[],this.technicianList=[],this.techStationList=[],this.days1=0,this.days2=0}ngOnInit(){const e=this.acRouter.snapshot.queryParams;this.workOrderId=parseInt(e.workorderid),this.subWorkOrderId=parseInt(e.subworkorderid),this.addToExisting=parseInt(e.exist),0!=this.subWorkOrderId?(this.isSavedPartNumbers=!0,this.mpnGridUpdated=!0):(this.isSavedPartNumbers=!1,this.mpnGridUpdated=!1),this.workOrderMaterialsId=parseInt(e.workordermaterialsid),this.mpnId=parseInt(e.mpnid),console.log("sub work order id",this.subWorkOrderId),0!=this.subWorkOrderId&&(this.isEdit=!0,this.showTabsGrid=!0,this.showGridMenu=!0),this.getAllExpertiseType(),this.getConditionsList(),this.getAllTecStations(),this.getAllPriority(),this.getSubWorkOrderEditData(),this.getAllWorkOrderStages(),this.getAllWorkOrderStatus(),this.getSubWorOrderMpns()}navigateToWo(){this.router.navigateByUrl("workordersmodule/workorderspages/app-work-order-edit/"+this.workOrderId)}getSubWorOrderMpns(){this.subWorkOrderPartNumbers=[],0!=this.subWorkOrderId&&this.workOrderService.getSubWorOrderMpnsById(this.subWorkOrderId).subscribe(e=>{e&&0==e.length?(this.activeGridUpdateButton=!1,1==this.addToExisting&&this.subWorkOrderGridData(),console.log("exis",this.addToExisting)):(this.activeGridUpdateButton=!0,console.log("technision list",this.technicianByExpertiseTypeList),e.map((e,r)=>{e.customerRequestDate=e.customerRequestDate?new Date(e.customerRequestDate):new Date,e.estimatedCompletionDate=e.customerRequestDate?new Date(e.estimatedCompletionDate):new Date(e.customerRequestDate),e.estimatedShipDate=e.estimatedShipDate?new Date(e.estimatedShipDate):new Date(e.customerRequestDate),e.promisedDate=e.promisedDate?new Date(e.promisedDate):new Date(e.customerRequestDate),e.createdDate=new Date(e.createdDate),e.updatedDate=new Date(e.updatedDate),e.partTechnicianId=Object(C.d)("employeeId",e.technicianId,this.technicianByExpertiseTypeList),this.getWorkFlowByPNandScope(e,r)}),this.subWorkOrderPartNumbers=e,console.log("exis44",this.addToExisting),1==this.addToExisting?(console.log("existing sub work order"),this.subWorkOrderGridData()):this.subWorkOrderPartNumbers&&0!=this.subWorkOrderPartNumbers.length&&(this.getAllWorkScpoes(),this.workOrderStatus()))})}subWorkOrderGridData(){this.workOrderService.getSubWorkOrderDataForMpnGrid(this.workOrderMaterialsId,this.mpnId).subscribe(e=>{console.log("grid Data",this.subWorkOrderId),e.workOrderMaterialsId=this.workOrderMaterialsId,e.conditionId=e.conditionCodeId,e.createdBy="admin",e.updatedBy="admin",e.subWorkOrderId=this.subWorkOrderId,NaN==this.addToExisting&&(this.subWorkOrderPartNumbers=[]);const r=new te,t=e.quantity;for(let n=0;n<t;n++){e.quantity=1;const t=JSON.parse(JSON.stringify(e));t.tempId=n,t.workOrderId=this.workOrderId,t.customerRequestDate=new Date(e.customerRequestDate),t.estimatedCompletionDate=new Date(e.estimatedCompletionDate),t.estimatedShipDate=new Date(e.estimatedShipDate),t.promisedDate=new Date(e.promisedDate),t.createdDate=new Date,t.updatedDate=new Date,this.subWorkOrderPartNumbers.push(Object.assign({},r,t))}this.subWorkOrderPartNumbers&&0!=this.subWorkOrderPartNumbers.length&&(this.getAllWorkScpoes(),this.workOrderStatus(),NaN==this.addToExisting&&this.subWorkOrderPartNumbers.map((e,r)=>{this.getWorkFlowByPNandScope(e,r)}))},e=>{})}saveSubWorkOrderParts(){const e=this.subWorkOrderPartNumbers;e.map((e,r)=>{1==this.activeGridUpdateButton&&(e.technicianId=Object(C.a)("employeeId",e.partTechnicianId)),e.workOrderMaterialsId=this.workOrderMaterialsId,e.customerRequestDate=e.customerRequestDate?new Date(e.customerRequestDate):null,e.estimatedCompletionDate=e.estimatedCompletionDate?new Date(e.estimatedCompletionDate):new Date(e.customerRequestDate),e.estimatedShipDate=e.estimatedShipDate?new Date(e.estimatedShipDate):new Date(e.customerRequestDate),e.promisedDate=e.promisedDate?new Date(e.promisedDate):new Date(e.customerRequestDate)}),this.workOrderService.createSubWorkOrderGrid(e).subscribe(e=>{this.location.replaceState(`/workordersmodule/workorderspages/app-sub-work-order?workorderid=${this.workOrderId}&mpnid=${this.mpnId}&subworkorderid=${this.subWorkOrderId}&workOrderMaterialsId=${this.workOrderMaterialsId}`),this.mpnGridUpdated=!0,this.isSavedPartNumbers=!0,this.alertService.showMessage("","Sub WorkOrder Updated Successfully",k.d.success)})}get userName(){return this.authService.currentUser?this.authService.currentUser.userName:""}getSubWorkOrderEditData(){this.workOrderService.getSubWorkOrderDataBySubWorkOrderId(this.subWorkOrderId).subscribe(e=>{this.getDataFormating(e),this.isEdit=!0,this.getHeaderDetailsForCreateSubWO()},e=>{this.getHeaderDetailsForCreateSubWO(),this.isEdit=!1})}getHeaderDetailsForCreateSubWO(){this.workOrderId&&this.mpnId&&this.workOrderService.getSubWorkOrderHeaderByWorkOrderId(this.workOrderId,this.mpnId).subscribe(e=>{this.subWorkOrderHeader=e,this.workFlowWorkOrderId=e.workFlowWorkOrderId,this.workOrderDetails=Object.assign({},e,{workFlowId:e.workFlowId,workFlowWorkOrderId:e.workFlowWorkOrderId,workOrderId:this.workOrderId,subWorkOrderId:this.subWorkOrderId}),!1===this.isEdit&&this.getDataFormating(e)})}getDataFormating(e){this.subWorkOrderGeneralInformation=Object.assign({},e,{openDate:void 0!==e.openDate?new Date(e.openDate):new Date,estimatedCompletionDate:void 0!==e.estCompDate?new Date(e.estCompDate):new Date,needDate:void 0!==e.needDate?new Date(e.needDate):new Date})}getAllWorkOrderStages(){this.workOrderService.getWorkOrderStageAndStatus().subscribe(e=>{this.workOrderStagesList=e.map(e=>Object.assign({},e,{value:e.workOrderStageId,label:e.workOrderStage}))})}getAllWorkOrderStatus(){this.commonService.smartDropDownList("WorkOrderStatus","ID","Description").subscribe(e=>{this.workOrderStatusList=e.sort((function(e,r){return e.value-r.value}))})}saveSubWorkOrder(){const e={workOrderMaterialsId:this.workOrderMaterialsId,workOrderNum:this.subWorkOrderGeneralInformation.workOrderNum,subWorkOrderId:this.subWorkOrderId,workOrderId:this.workOrderId,workFlowId:this.subWorkOrderGeneralInformation.workFlowId,workOrderPartNumberId:this.mpnId,subWorkOrderNo:this.subWorkOrderGeneralInformation.subWorkOrderNo,openDate:this.subWorkOrderGeneralInformation.openDate,needDate:this.subWorkOrderGeneralInformation.needDate,estCompDate:this.subWorkOrderGeneralInformation.estimatedCompletionDate,stageId:this.subWorkOrderGeneralInformation.stageId,statusId:this.subWorkOrderGeneralInformation.statusId,cmmId:this.subWorkOrderGeneralInformation.cmmId,isPMA:this.subWorkOrderGeneralInformation.isPMA,IsDER:this.subWorkOrderGeneralInformation.isDER,masterCompanyId:1,createdBy:this.userName,updatedBy:this.userName,createdDate:new Date,updatedDate:new Date,isActive:!0,isDeleted:!1};this.isEdit?this.workOrderService.createSubWorkOrderHeaderByWorkOrderId(e).subscribe(e=>{this.isEdit=!0,this.showTabsGrid=!0,this.showGridMenu=!0,this.subWorkOrderGeneralInformation=e,this.subWorkOrderGeneralInformation.openDate=void 0!==e.openDate?new Date(e.openDate):new Date,this.subWorkOrderId=e.subWorkOrderId,this.workOrderMaterialsId=e.workOrderMaterialsId,this.updateURLParams(),this.alertService.showMessage("","Sub WorkOrder Updated Successfully",k.d.success)}):this.workOrderService.createSubWorkOrderHeaderByWorkOrderId(e).subscribe(e=>{this.isEdit=!0,this.showTabsGrid=!0,this.showGridMenu=!0,this.subWorkOrderGeneralInformation=e,this.subWorkOrderGeneralInformation.openDate=void 0!==e.openDate?new Date(e.openDate):new Date,this.subWorkOrderId=e.subWorkOrderId,this.updateURLParams(),this.activeGridUpdateButton=!1,this.subWorkOrderGridData(),this.alertService.showMessage("","Sub WorkOrder Saved Successfully",k.d.success)})}updateURLParams(){window.history.replaceState({},"",`/workordersmodule/workorderspages/app-sub-work-order?workorderid=${this.workOrderId}&mpnid=${this.mpnId}&subworkorderid=${this.subWorkOrderId}&workOrderMaterialsId=${this.workOrderMaterialsId}`)}getAllWorkScpoes(){this.workOrderService.getAllWorkScopes().subscribe(e=>{this.workScopesList=e.map(e=>({label:e.description,value:e.workScopeId}))})}selectedCondition1(e,r,t){this.conditionList.forEach(n=>{n.value==e&&(r.condition=n.label,this.subWorkOrderPartNumbers[t].condition=n.label)}),this.workOrderStatus()}getWorkFlowByPNandScope(e,r){const{subWorkOrderScopeId:t}=e;0!==e.itemMasterId&&null!==e.itemMasterId&&null!==t&&0!==t&&this.workOrderService.getWorkFlowByPNandScope(e.itemMasterId,t).subscribe(t=>{this.dybamicworkFlowList[r]=t.map(e=>({label:e.workFlowNo,value:e.workFlowId})),console.log("this.dybamicworkFlowList",this.dybamicworkFlowList),this.dybamicworkFlowList[r]&&this.dybamicworkFlowList[r].length>0?e.workflowId=this.dybamicworkFlowList[r][0].value:e.workflowId=0}),this.getPartPublicationByItemMasterId(e,e.itemMasterId)}getConditionsList(){this.commonService.smartDropDownList("Condition","ConditionId","Description").subscribe(e=>{this.conditionList=e})}selectedCondition(e,r,t){this.conditionList.forEach(n=>{n.value==e&&(r.condition=n.label,this.subWorkOrderPartNumbers[t].condition=n.label)}),this.workOrderStatus()}selectedStage(e,r,t){this.workOrderStagesList.forEach(n=>{n.workOrderStageId==e&&(r.subWorkOrderStatusId=n.subWorkOrderStatusId,this.subWorkOrderPartNumbers[t].subWorkOrderStatusId=n.subWorkOrderStatusId)}),this.workOrderStatus()}workOrderStatus(){this.subWorkOrderPartNumbers&&0!=this.subWorkOrderPartNumbers.length&&(this.allValuesSame=this.subWorkOrderPartNumbers.every((e,r,t)=>e.subWorkOrderStatusId===t[0].subWorkOrderStatusId)),this.allValuesSame?this.statusId=this.subWorkOrderPartNumbers[0].subWorkOrderStatusId:this.statusId=1,this.workOrderStatusList&&this.workOrderStatusList.length>0?this.workOrderStatusList.forEach(e=>{e.value==this.statusId&&(this.workOrderNumberStatus=e.label)}):this.workOrderNumberStatus="Open"}getPartPublicationByItemMasterId(e,r){return n.a(this,void 0,void 0,(function*(){yield this.workOrderService.getPartPublicationByItemMaster(r).subscribe(r=>{this.cmmList=r.map(e=>({value:e.publicationRecordId,label:e.publicationId})),this.cmmList&&this.cmmList.length>0&&(e.cmmId=this.cmmList[0].value)})}))}getAllPriority(){this.commonService.smartDropDownList("Priority","PriorityId","Description").subscribe(e=>{this.priorityList=e})}getAllExpertiseType(){this.commonService.getExpertise().subscribe(e=>{this.expertiseTypeList=e.map(e=>{"Technician"!=e.expertiseType||this.getExpertiseEmployeeByExpertiseId(e.employeeExpertiseId)})})}getExpertiseEmployeeByExpertiseId(e){this.commonService.getExpertiseEmployeesByCategory(e).subscribe(e=>{this.technicianByExpertiseTypeList=e,this.subWorkOrderPartNumbers.map((e,r)=>{e.partTechnicianId=e.technicianId?Object(C.d)("employeeId",e.technicianId,this.technicianByExpertiseTypeList):null})})}filterTechnician(e){if(this.technicianList=this.technicianByExpertiseTypeList,void 0!==e.query&&null!==e.query){const r=[...this.technicianByExpertiseTypeList.filter(r=>r.name.toLowerCase().includes(e.query.toLowerCase()))];this.technicianList=r}}onSelectedTechnician(e,r){null!=e.employeeId&&e.employeeId>0&&this.commonService.getTechnicianStation(e.employeeId).subscribe(e=>{r.techStationId=e.stationId})}getAllTecStations(){return n.a(this,void 0,void 0,(function*(){yield this.commonService.smartDropDownList("EmployeeStation","EmployeeStationId","StationName").subscribe(e=>{this.techStationList=e.map(e=>Object.assign({},e,{techStationId:e.value,name:e.label}))})}))}calculatePartTat(e){const r=this.subWorkOrderGeneralInformation;let t=new Date;null!=r.shippedDate?(this.days1=N(r.sentDate).diff(e.receivedDate,"days"),this.days2=N(r.shippedDate).diff(r.approvedDate,"days"),e.tatDaysCurrent=this.days1+this.days2):null==r.shippedDate&&null!=r.approvedDate?(this.days1=N(r.sentDate).diff(e.receivedDate,"days"),this.days2=N(t).diff(r.approvedDate,"days"),e.tatDaysCurrent=this.days1+this.days2):null==r.shippedDate&&null==r.approvedDate&&null!=r.sentDate?(this.days1=N(r.sentDate).diff(e.receivedDate,"days"),e.tatDaysCurrent=this.days1>0?this.days1:0):e.tatDaysCurrent=N(t).diff(e.receivedDate,"days")}};ne.ctorParameters=()=>[{type:o.Router},{type:u.a},{type:o.ActivatedRoute},{type:k.b},{type:v.a},{type:a.ChangeDetectorRef},{type:i.Location},{type:p.a}],ne=n.b([Object(a.Component)({selector:"app-sub-work-order",template:n.c(t("u+oN")).default,styles:[n.c(t("L3Oz")).default]})],ne);let ae=class{constructor(e,r){this.router=e,this.commonService=r,this.stockLineForm={},this.disableMagmtStruct=!0,this.pageSize=10,this.pageIndex=0,this.workorderReportList=[],this.onDestroy$=new M.a,this.managementStructure={companyId:0,buId:0,divisionId:0,departmentId:0},this.headers=[{field:"mpn",header:"MPN"},{field:"mpnDescription",header:"MPN Description"},{field:"woNum",header:"WO Num"},{field:"woType",header:"WO Type"},{field:"stage",header:"Stage"},{field:"status",header:"Status"},{field:"receivedDate",header:"Received Date"},{field:"openDate",header:"Open Date"},{field:"originalValue",header:"Original Value"},{field:"partsAdded",header:"Parts Added"},{field:"labor",header:"Labor"},{field:"overHead",header:"Over Head"},{field:"other",header:"Other"},{field:"total",header:"Total"}]}ngOnInit(){}loadData(e){}getManagementStructureOnEdit(e){this.commonService.getManagementStructureDetails(e).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.selectedLegalEntity(e.Level1),this.selectedBusinessUnit(e.Level2),this.selectedDivision(e.Level3),this.selectedDepartment(e.Level4),this.managementStructure={companyId:void 0!==e.Level1?e.Level1:0,buId:void 0!==e.Level2?e.Level2:0,divisionId:void 0!==e.Level3?e.Level3:0,departmentId:void 0!==e.Level4?e.Level4:0},this.onSelectManagementStruc()})}selectedLegalEntity(e){this.businessUnitList=[],this.divisionList=[],this.departmentList=[],this.managementStructure.buId=0,this.managementStructure.divisionId=0,this.managementStructure.departmentId=0,0!=e&&null!=e&&null!=e&&(this.stockLineForm.managementStructureId=e,this.commonService.getBusinessUnitListByLegalEntityId(e).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.businessUnitList=e})),this.onSelectManagementStruc()}onSelectManagementStruc(){0!=this.managementStructure.companyId?this.disableMagmtStruct=!1:this.disableMagmtStruct=!0}selectedBusinessUnit(e){this.divisionList=[],this.departmentList=[],this.managementStructure.divisionId=0,this.managementStructure.departmentId=0,0!=e&&null!=e&&null!=e&&(this.stockLineForm.managementStructureId=e,this.commonService.getDivisionListByBU(e).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.divisionList=e}))}selectedDivision(e){this.departmentList=[],this.managementStructure.departmentId=0,0!=e&&null!=e&&null!=e&&(this.stockLineForm.managementStructureId=e,this.commonService.getDepartmentListByDivisionId(e).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.departmentList=e}))}selectedDepartment(e){0!=e&&null!=e&&null!=e&&(this.stockLineForm.managementStructureId=e)}downloadStockLineReport(){}};ae.ctorParameters=()=>[{type:o.ActivatedRoute},{type:u.a}],ae=n.b([Object(a.Component)({selector:"app-workorder-report",template:n.c(t("mdVg")).default,styles:[n.c(t("qh6I")).default]})],ae);let se=class{constructor(e,r){this.router=e,this.commonService=r,this.stockLineForm={},this.disableMagmtStruct=!0,this.pageSize=10,this.pageIndex=0,this.purchaseOrderReportList=[],this.onDestroy$=new M.a,this.managementStructure={companyId:0,buId:0,divisionId:0,departmentId:0},this.headers=[{field:"purchaseOrderNumber",header:"PO Num"},{field:"purchaseOrderDate",header:"PO Date"},{field:"partNumber",header:"Part Number"},{field:"partDescription",header:"PN Description"},{field:"vendorName",header:"Vendor Name"},{field:"vendorCode",header:"Vendor Code"},{field:"unitOfMeasure",header:"UOM"},{field:"quantity",header:"Quantity"},{field:"unitPrice",header:"Unit Price"},{field:"currency",header:"Currency"},{field:"extendedCost",header:"Extended Cost"},{field:"Request Date",header:"Request Date"},{field:"Promise Date",header:"Promise Date"}]}ngOnInit(){}loadData(e){}getManagementStructureOnEdit(e){this.commonService.getManagementStructureDetails(e).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.selectedLegalEntity(e.Level1),this.selectedBusinessUnit(e.Level2),this.selectedDivision(e.Level3),this.selectedDepartment(e.Level4),this.managementStructure={companyId:void 0!==e.Level1?e.Level1:0,buId:void 0!==e.Level2?e.Level2:0,divisionId:void 0!==e.Level3?e.Level3:0,departmentId:void 0!==e.Level4?e.Level4:0},this.onSelectManagementStruc()})}selectedLegalEntity(e){this.businessUnitList=[],this.divisionList=[],this.departmentList=[],this.managementStructure.buId=0,this.managementStructure.divisionId=0,this.managementStructure.departmentId=0,0!=e&&null!=e&&null!=e&&(this.stockLineForm.managementStructureId=e,this.commonService.getBusinessUnitListByLegalEntityId(e).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.businessUnitList=e})),this.onSelectManagementStruc()}onSelectManagementStruc(){0!=this.managementStructure.companyId?this.disableMagmtStruct=!1:this.disableMagmtStruct=!0}selectedBusinessUnit(e){this.divisionList=[],this.departmentList=[],this.managementStructure.divisionId=0,this.managementStructure.departmentId=0,0!=e&&null!=e&&null!=e&&(this.stockLineForm.managementStructureId=e,this.commonService.getDivisionListByBU(e).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.divisionList=e}))}selectedDivision(e){this.departmentList=[],this.managementStructure.departmentId=0,0!=e&&null!=e&&null!=e&&(this.stockLineForm.managementStructureId=e,this.commonService.getDepartmentListByDivisionId(e).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.departmentList=e}))}selectedDepartment(e){0!=e&&null!=e&&null!=e&&(this.stockLineForm.managementStructureId=e)}downloadStockLineReport(){}};se.ctorParameters=()=>[{type:o.ActivatedRoute},{type:u.a}],se=n.b([Object(a.Component)({selector:"app-purchase-order-report",template:n.c(t("QIOK")).default,styles:[n.c(t("q3cT")).default]})],se);let ie=class{constructor(e,r){this.router=e,this.commonService=r,this.stockLineForm={},this.disableMagmtStruct=!0,this.pageSize=10,this.pageIndex=0,this.receivingLogReportList=[],this.onDestroy$=new M.a,this.managementStructure={companyId:0,buId:0,divisionId:0,departmentId:0},this.headers=[{field:"receiverNumber",header:"Receiving Num"},{field:"orderDate",header:"Order Date"},{field:"receivedDate",header:"Received Date"},{field:"purchaseOrderNumber",header:"PO/RO Num"},{field:"reference",header:"Reference Num"},{field:"partNumber",header:"Part Number"},{field:"partDescription",header:"PN Description"},{field:"serialNumber",header:"Serial Number"},{field:"manufacturer",header:"Manufacturer"},{field:"itemType",header:"Item Type"},{field:"quantityOrdered",header:"Quantity Ordered"},{field:"unitCost",header:"Unit Cost"},{field:"quantityReceived",header:"Quantity Received"},{field:"quantityRejected",header:"Quantity Rejected"},{field:"backlog",header:"Backlog"},{field:"lastReceivedDate",header:"Last Received Date"},{field:"approver",header:"Approver"},{field:"site",header:"Site"},{field:"wareHouse",header:"Ware House"},{field:"location",header:"Location"},{field:"shelf",header:"Shelf"},{field:"bin",header:"Bin"}]}ngOnInit(){}loadData(e){}getManagementStructureOnEdit(e){this.commonService.getManagementStructureDetails(e).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.selectedLegalEntity(e.Level1),this.selectedBusinessUnit(e.Level2),this.selectedDivision(e.Level3),this.selectedDepartment(e.Level4),this.managementStructure={companyId:void 0!==e.Level1?e.Level1:0,buId:void 0!==e.Level2?e.Level2:0,divisionId:void 0!==e.Level3?e.Level3:0,departmentId:void 0!==e.Level4?e.Level4:0},this.onSelectManagementStruc()})}selectedLegalEntity(e){this.businessUnitList=[],this.divisionList=[],this.departmentList=[],this.managementStructure.buId=0,this.managementStructure.divisionId=0,this.managementStructure.departmentId=0,0!=e&&null!=e&&null!=e&&(this.stockLineForm.managementStructureId=e,this.commonService.getBusinessUnitListByLegalEntityId(e).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.businessUnitList=e})),this.onSelectManagementStruc()}onSelectManagementStruc(){0!=this.managementStructure.companyId?this.disableMagmtStruct=!1:this.disableMagmtStruct=!0}selectedBusinessUnit(e){this.divisionList=[],this.departmentList=[],this.managementStructure.divisionId=0,this.managementStructure.departmentId=0,0!=e&&null!=e&&null!=e&&(this.stockLineForm.managementStructureId=e,this.commonService.getDivisionListByBU(e).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.divisionList=e}))}selectedDivision(e){this.departmentList=[],this.managementStructure.departmentId=0,0!=e&&null!=e&&null!=e&&(this.stockLineForm.managementStructureId=e,this.commonService.getDepartmentListByDivisionId(e).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.departmentList=e}))}selectedDepartment(e){0!=e&&null!=e&&null!=e&&(this.stockLineForm.managementStructureId=e)}downloadStockLineReport(){}};ie.ctorParameters=()=>[{type:o.ActivatedRoute},{type:u.a}],ie=n.b([Object(a.Component)({selector:"app-receiving-log-report",template:n.c(t("+NK8")).default,styles:[n.c(t("pfcG")).default]})],ie);let oe=class{constructor(e,r){this.router=e,this.commonService=r,this.stockLineForm={},this.disableMagmtStruct=!0,this.pageSize=10,this.pageIndex=0,this.inventoryReportList=[],this.onDestroy$=new M.a,this.managementStructure={companyId:0,buId:0,divisionId:0,departmentId:0},this.headers=[{field:"partNumber",header:"PN"},{field:"partDescription",header:"PN Description"},{field:"serialNumber",header:"Serial Num"},{field:"stockLineNumber",header:"Stock Line Number"},{field:"condition",header:"Condition"},{field:"vendorName",header:"Vendor Name"},{field:"vendorCode",header:"Vendor Code"},{field:"qtyOnHand",header:"Quantity On Hand"},{field:"qtyReserved",header:"Quantity Reserved"},{field:"qtyAvailable",header:"Quantity Available"},{field:"qtyScrapped",header:"Quantity Scrapped"},{field:"qtyAdjusted",header:"Qty Adjusted"},{field:"poUnitCost",header:"PO Unit Cost"},{field:"extendedCost",header:"Extended Cost"},{field:"obtainFrom",header:"Obtain From"},{field:"owner",header:"Owner"},{field:"tracebleTo",header:"Traceble To"},{field:"mfg",header:"MFG"},{field:"unitPrice",header:"Unit Price"},{field:"extendedPrice",header:"Extended Price"},{field:"site",header:"Site"},{field:"wareHouse",header:"Ware House"},{field:"location",header:"Location"},{field:"shelf",header:"Shelf"},{field:"bin",header:"Bin"},{field:"accountCode",header:"GL Account"},{field:"purchaseOrderNumber",header:"PO Num"},{field:"repairOrderNumber",header:"RO Num"},{field:"repairOrderUnitCost",header:"RO Unit Cost"},{field:"receivedDate",header:"Received Date"},{field:"receiverNumber",header:"Receiver Num"},{field:"reconciliationNumber",header:"Reconciliation No"}]}ngOnInit(){}loadData(e){}getManagementStructureOnEdit(e){this.commonService.getManagementStructureDetails(e).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.selectedLegalEntity(e.Level1),this.selectedBusinessUnit(e.Level2),this.selectedDivision(e.Level3),this.selectedDepartment(e.Level4),this.managementStructure={companyId:void 0!==e.Level1?e.Level1:0,buId:void 0!==e.Level2?e.Level2:0,divisionId:void 0!==e.Level3?e.Level3:0,departmentId:void 0!==e.Level4?e.Level4:0},this.onSelectManagementStruc()})}selectedLegalEntity(e){this.businessUnitList=[],this.divisionList=[],this.departmentList=[],this.managementStructure.buId=0,this.managementStructure.divisionId=0,this.managementStructure.departmentId=0,0!=e&&null!=e&&null!=e&&(this.stockLineForm.managementStructureId=e,this.commonService.getBusinessUnitListByLegalEntityId(e).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.businessUnitList=e})),this.onSelectManagementStruc()}onSelectManagementStruc(){0!=this.managementStructure.companyId?this.disableMagmtStruct=!1:this.disableMagmtStruct=!0}selectedBusinessUnit(e){this.divisionList=[],this.departmentList=[],this.managementStructure.divisionId=0,this.managementStructure.departmentId=0,0!=e&&null!=e&&null!=e&&(this.stockLineForm.managementStructureId=e,this.commonService.getDivisionListByBU(e).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.divisionList=e}))}selectedDivision(e){this.departmentList=[],this.managementStructure.departmentId=0,0!=e&&null!=e&&null!=e&&(this.stockLineForm.managementStructureId=e,this.commonService.getDepartmentListByDivisionId(e).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.departmentList=e}))}selectedDepartment(e){0!=e&&null!=e&&null!=e&&(this.stockLineForm.managementStructureId=e)}fieldSearch(e,r){}downloadStockLineReport(){}};oe.ctorParameters=()=>[{type:o.ActivatedRoute},{type:u.a}],oe=n.b([Object(a.Component)({selector:"app-inventory-report",template:n.c(t("umH6")).default,styles:[n.c(t("Grwb")).default]})],oe);const le=[{path:"workorderspages",component:l,children:[{path:"app-work-order-list",component:E,data:{title:"Work Order's List"}},{path:"app-direct-labour",component:B,data:{title:"Direct Labour and OH Cost"}},{path:"app-work-order-add",component:Z,data:{title:"Work Order Setup"}},{path:"app-direct-labour-add",component:re,data:{title:"Direct Labour Add Component"}},{path:"app-direct-labour-add/edit/:id",component:re,data:{title:"Edit Direct Labour Add Component"}},{path:"app-work-order-add/:id",component:Z,data:{title:"Work Order Setup"}},{path:"app-work-order-edit/:id",component:Z,data:{title:"Work Order Setup"}},{path:"app-sub-work-order",component:ne,data:{title:"Sub WorkOrder Create"}},{path:"app-sub-work-order?workorderid=:workorderid&mpnid=:mpnid&subworkorderid=:subworkorderid&workOrderMaterialsId=:workOrderMaterialsId",component:ne,data:{title:"Sub WorkOrder Create"}},{path:"app-work-order-receivingcustworkid/:rcustid",component:Z,data:{title:"Work Order Setup"}},{path:"app-work-order-quote",component:T,data:{title:"Quote"}},{path:"app-work-order-quote-list",component:W,data:{title:"Quote List"}},{path:"app-workorder-report",component:ae,data:{title:"Work Order Report"}},{path:"app-purchase-order-report",component:se,data:{title:"Work Order Report"}},{path:"app-receiving-log-report",component:ie,data:{title:"Work Order Report"}},{path:"app-inventory-report",component:oe,data:{title:"Work Order Report"}}]}];let de=class{};de=n.b([Object(a.NgModule)({imports:[o.RouterModule.forChild(le)],exports:[o.RouterModule],providers:[v.a,V.a]})],de);var ce=t("UPO+"),pe=t("DgWh");class ue{constructor(){this.workOrderScopeId=null,this.promisedDate=new Date,this.estimatedShipDate=new Date,this.customerRequestDate=new Date,this.estimatedCompletionDate=new Date,this.customerReference=null,this.nte="",this.quantity=1,this.stockLineId=null,this.cmmId=0,this.workflowId=0,this.workOrderStageId=1,this.workOrderStatusId=1,this.workOrderPriorityId=1,this.isPMA=!1,this.isDER=!1,this.techStationId=0,this.tearDownReport=0,this.tatDaysStandard=0,this.tatDaysCurrent=0,this.technicianId=0,this.mappingItemMasterId=null,this.conditionId=null,this.masterPartId=null,this.stockLineNumber="",this.isActive=!0,this.isDelete=!1,this.updatedDate=new Date,this.createdDate=new Date,this.receivedDate="",this.isMPNContract=!1,this.contractNo="",this.workOrderId=0}}class he{constructor(e,r,t,n,a,s,i,o,l,d,c,p,u,h,m,b,g,v,w,k,f,y,I,O,D,x,S,C,L,T,M,P,N,W,F,A,E,R,B,V,q,H,Q,j,U,$,z,_,G,Y,K,J,Z){this.CustomerId=t,this.customerId=t,this.Name=n,this.name=n,this.CustomerCode=a,this.customerCode=s,this.IsInternalCustomer=i,this.DoingBuinessAsName=o,this.CoreDueIn=l,this.Parent=d,this.CustomerClassificationId=c,this.ContractReference=p,this.PriorityCustomerId=u,this.IsPBHCustomer=h,this.PBHCustomerMemo=m,this.RestrictPMA=b,this.RestrictPMAMemo=g,this.RestrictBER=v,this.RestrictBERMemo=w,this.CustomerURL=k,this.AddrressId=f,this.IsCustomerAlsoVendor=y,this.RelatedVendorId=I,this.Notes=O,this.MarkUpPercent=D,this.CreditLimit=x,this.CreditTermsId=S,this.AllowNettingOfAPAR=C,this.CurrencyId=E,this.PrimarySalesPersonLastName=R,this.PrimarySalesPersonFirstName=B,this.PrimarySalesPersonMiddleName=V,this.SecondarySalesPersonFirstName=q,this.SecondarySalesPersonLastName=H,this.SecondarySalesPersonMiddleName=Q,this.masterCompany=e,this.creditTerms=r,this.isActive=Z}}class me{constructor(){this.workOrderId=null,this.shipTo={siteName:"",address:"",city:"",stateorProvince:"",country:"",contactName:""},this.billTo={siteName:"",address:"",city:"",stateorProvince:"",country:"",contactName:""}}}var be=t("Skqz");class ge{constructor(){this.workOrderId=null,this.name="",this.memo="",this.description="",this.code=""}}var ve=t("G0yt"),we=t("iJR4"),ke=t("VyKh");let fe=class{constructor(e,r,t,n,s,i,o,l,d,c,p,u,h,m,b,g,v,w){this.alertService=e,this.workOrderService=r,this.creditTermsService=t,this.customerService=n,this.employeeService=s,this.itemMasterService=i,this.workOrderPartNumberService=o,this.stocklineService=l,this.commonService=d,this.authService=c,this.acRouter=p,this.router=u,this.workFlowtService=h,this.modalService=m,this.quoteService=b,this.salesOrderService=g,this.salesOrderReferenceStorage=v,this.vendorService=w,this.isView=!1,this.isSubWorkOrder=!1,this.showTabsGrid=!1,this.workFlowWorkOrderId=0,this.showGridMenu=!1,this.getLatestDefaultSettingByWorkOrderTypeId=new a.EventEmitter,this.isListView=!1,this.subWoMpnGridUpdated=!1,this.technicianOriginalList1=[],this.worflowId=[],this.isContract=!0,this.gridActiveTab="workFlow",this.subTabWorkFlow="",this.documents=[],this.labor=new f,this.freight=[],this.isWorkOrder=!0,this.saveTearDownData=[],this.tearDownReportList=[{label:"Station 2",value:20}],this.WorkOrderMPN=Object.assign({},new ue),this.workOrderAssetList=[],this.workOrderMaterialList=[],this.documentsDestructuredData=[],this.mpnPartNumbersList=[],this.isDisabledSteps=!1,this.workFlowId=0,this.workFlowObject={materialList:[],equipments:[],charges:[],exclusions:[]},this.subTabOtherOptions="",this.isEditLabor=!1,this.isEditBilling=!1,this.isWorkOrderMainView=!1,this.mainWorkOrderId=0,this.quoteExclusionList=[],this.quoteMaterialList=[],this.quoteFreightsList=[],this.quoteChargesList=[],this.quoteLaborList=new f,this.subTabMainComponent="",this.showTabsMPNGrid=!1,this.managementStructure={companyId:null,buId:null,divisionId:null,departmentId:null},this.onDestroy$=new M.a,this.requiredFileds=!0,this.disableSaveForEdit=!1,this.statusArray=[],this.days1=0,this.days2=0,this.isValidScope=!0,this.customerContactInfo=[],this.customerContactList=[],this.customerPhoneInfo=[],this.hideWOHeader=!1,this.isCustomerAction=!1,this.isQuoteAction=!1,this.isBillAction=!1,this.isQuoteActionTab=!1,this.showQuoteDetails=!1,this.isEditWorkordershowMsg=!1,this.selectedCommunicationTab="",this.sourcePoApproval={},this.shipToAddress={},this.shipViaList=[],this.shipToCusData=[],this.vendorSelected=[],this.companySiteList_Shipping=[],this.shipToContactData=[],this.firstNamesShipTo=[],this.allActions=[],this.isDeleteMpnPart=!1,this.isSpinnerVisible=!1,this.subWOPartNoId=0,this.defaultTab="materialList",this.isViewForApprovedPart=!1,this.mpnDropdownList=[],this.array=[],this.equipmentArr=[],this.result={},this.freightsArr=[],this.isbillingNotCreated=!1,this.moduleName="Work Order"}ngOnInit(){return n.a(this,void 0,void 0,(function*(){this.salesOrderReferenceData=this.salesOrderReferenceStorage.salesOrderReferenceData,this.salesOrderReferenceData&&(this.woDealerChange(L.a.WORK_ORDER_TYPE_INTERNAL_ID),this.commonService.getCustomerNameandCode("",this.workOrderGeneralInformation.workOrderTypeId).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.customerNamesList=e;for(let r=0;r<this.customerNamesList.length;r++)this.customerNamesList[r].customerId==this.salesOrderReferenceData.customerId&&(this.workOrderGeneralInformation.customerId=this.customerNamesList[r],this.selectCustomer(this.customerNamesList[r],this.workOrderGeneralInformation,"onInIt"))},e=>{this.handleError(e)})),1==this.isEdit?this.disableSaveForEdit=!0:this.disableSaveForEdit=!1,this.recCustomerId=this.acRouter.snapshot.params.rcustid,this.getTaskList(),this.createModeData(),this.workOrderService.creditTerms=this.creditTerms,this.mpnFlag=!0,this.isDetailedView=!0,this.selectedCustomer=new he,this.isSubWorkOrder?(this.getAllCustomerContact(this.subWorkOrderDetails.customerId,"edit"),this.workOrderId=this.workOrderId,this.mainWorkOrderId=this.subWorkOrderDetails.workOrderid,this.subWorkOrderDetails.subWorkOrderId=this.subWorkOrderDetails.subWorkOrderId?this.subWorkOrderDetails.subWorkOrderId:this.workOrderId,this.savedWorkOrderData={workOrderId:this.workOrderId,workFlowWorkOrderId:this.workFlowWorkOrderId}):this.modifyWorkorderdata(),this.isSubWorkOrder||(this.workOrderStatus(),this.loadcustomerData(),this.getLegalEntity()),!this.isEdit&&this.workOrderGeneralInformation&&this.workOrderGeneralInformation.partNumbers.forEach(e=>{e.customerRequestDate&&(e.estimatedCompletionDate=e.customerRequestDate,e.estimatedShipDate=e.customerRequestDate,e.promisedDate=e.customerRequestDate),0==e.workOrderScopeId&&(e.workOrderScopeId="")}),this.workOrderGeneralInformation&&this.workOrderGeneralInformation.creditLimit&&(this.workOrderGeneralInformation.creditLimit=this.workOrderGeneralInformation.creditLimit?Object(C.b)(this.workOrderGeneralInformation.creditLimit,0)+".00":"0.00")}))}ngOnChanges(e){e.subWoMpnGridUpdated&&(this.subWoMpnGridUpdated=e.subWoMpnGridUpdated.currentValue,1==this.subWoMpnGridUpdated&&this.dropdownlistSubWoMpn()),e.workorderSettings&&(this.workorderSettings=this.workorderSettings),this.workOrderGeneralInformation&&this.workOrderGeneralInformation.creditLimit&&(this.workOrderGeneralInformation.creditLimit=this.workOrderGeneralInformation.creditLimit?Object(C.b)(this.workOrderGeneralInformation.creditLimit,0):this.workOrderGeneralInformation.creditLimit),!this.isEdit&&this.workOrderGeneralInformation&&this.workOrderGeneralInformation.partNumbers.forEach(e=>{e.customerRequestDate&&(e.estimatedCompletionDate=e.customerRequestDate,e.estimatedShipDate=e.customerRequestDate,e.promisedDate=e.customerRequestDate),0==e.workOrderScopeId&&(e.workOrderScopeId="")})}dropdownlistSubWoMpn(){this.workOrderService.getMpnDropdownlistSubWo(this.workOrderId).subscribe(e=>{this.mpnDropdownList=e.map(e=>({value:{datas:e,partNumber:e.partNumber,subWOPartNoId:e.subWOPartNoId,subWorkOrderScopeId:e.subWorkOrderScopeId,workFlowId:e.workflowId},label:e.partNumber+"-"+e.subWOPartNoId})),this.mpnDropdownList&&0!=this.mpnDropdownList.length&&(this.changeofMPNForSubWo(this.mpnDropdownList[0].value),this.selectedMPNSubWo=this.mpnDropdownList[0].value)},e=>{this.handleError(e)})}changeofMPNForSubWo(e){this.workFlowId=e.workFlowId,this.subWOPartNoId=e.subWOPartNoId,this.workOrderPartNumberId=e.subWOPartNoId,this.savedWorkOrderData.workFlowId=e.workFlowId,0!=this.workFlowId?(this.gridActiveTab="workFlow",this.subTabWorkFlow="viewworkFlow",this.subTabWorkFlowChange("viewworkFlow")):(this.gridActiveTab="materialList",this.gridTabChange(this.gridActiveTab))}modifyWorkorderdata(){if(this.isEdit){0!=this.recCustomerId&&null!=this.recCustomerId&&null!=this.recCustomerId||this.getCustomerWarningsList(),this.isEditWorkordershowMsg=!0,0!=this.isView||0!=this.recCustomerId&&null!=this.recCustomerId&&null!=this.recCustomerId||this.customerWarnings(this.workOrderGeneralInformation.customerDetails.customerId),this.getWorkOrderDatesFoRTat(),0!=this.recCustomerId&&null!=this.recCustomerId&&null!=this.recCustomerId||this.getWorkOrderQuoteDetail(this.workOrderGeneralInformation.workOrderId,this.workOrderGeneralInformation.workFlowWorkOrderId);const e=this.workOrderGeneralInformation;this.getAllCustomerContact(this.workOrderGeneralInformation.customerDetails.customerId,"edit"),this.workOrderId=e.workOrderId,0==this.workOrderGeneralInformation.partNumbers[0].workflowId&&this.gridTabChange("materialList"),this.isRecCustomer=e.isRecCustomer,this.workOrderGeneralInformation=Object.assign({},e,{workOrderTypeId:String(e.workOrderTypeId),customerId:e.customerDetails,customerPhoneNo:null!=e.customerPhoneNo?e.customerPhoneNo:e.customerDetails.customerPhone,partNumbers:e.partNumbers.map((e,r)=>(this.getStockLineByItemMasterId(e.masterPartId,e.conditionId,r),this.calculatePartTat(e),this.getPartPublicationByItemMasterId(e,e.masterPartId),this.getWorkFlowByPNandScope(e),Object.assign({},e,{partTechnicianId:Object(C.d)("employeeId",e.technicianId,this.technicianByExpertiseTypeList),mappingItemMasterId:Object(C.d)("mappingItemMasterId",e.mappingItemMasterId,e.revisedParts),masterPartId:e.woPart,customerRequestDate:e.customerRequestDate?new Date(e.customerRequestDate):null,estimatedCompletionDate:e.estimatedCompletionDate?new Date(e.estimatedCompletionDate):new Date(e.customerRequestDate),estimatedShipDate:e.estimatedShipDate?new Date(e.estimatedShipDate):new Date(e.customerRequestDate),promisedDate:e.promisedDate?new Date(e.promisedDate):new Date(e.customerRequestDate)})))}),this.workOrderGeneralInformation&&this.workOrderGeneralInformation.creditLimit&&(this.workOrderGeneralInformation.creditLimit=this.workOrderGeneralInformation.creditLimit?Object(C.b)(this.workOrderGeneralInformation.creditLimit,0):this.workOrderGeneralInformation.creditLimit),this.workFlowWorkOrderId=e.workFlowWorkOrderId,e.isSinglePN?(this.workFlowId=e.partNumbers[0].workflowId,this.workOrderPartNumberId=e.partNumbers[0].id,this.workScope=e.partNumbers[0].workScope,this.showTabsGrid=!0,this.showGridMenu=!0,0!=this.workFlowId&&this.subTabWorkFlowChange("viewworkFlow")):(this.showTabsGrid=!0,this.showTabsMPNGrid=!0),this.savedWorkOrderData=this.workOrderGeneralInformation,this.getWorkOrderWorkFlowNos(),this.isRecCustomer&&(this.showTabsGrid=!1),this.getEmployeeData()}else this.isEditLabor=!0,0!=this.recCustomerId&&null!=this.recCustomerId&&null!=this.recCustomerId||this.getCustomerWarningsList(),this.addMPN(),this.getAllGridModals(),this.getEmployeeData(),this.isRecCustomer=!1,this.workOrderStatusvalue="open",this.workOrderGeneralInformation.partNumbers.forEach(e=>{e.customerRequestDate&&(e.estimatedCompletionDate=e.customerRequestDate?new Date(e.estimatedCompletionDate):new Date(e.customerRequestDate),e.estimatedShipDate=e.estimatedShipDate?new Date(e.estimatedShipDate):new Date(e.customerRequestDate),e.promisedDate=e.promisedDate?new Date(e.promisedDate):new Date(e.customerRequestDate)),0==e.workOrderScopeId&&(e.workOrderScopeId="")})}workorderByIdCall(){this.recCustomerId=this.recCustomerId?this.recCustomerId:0,this.isSpinnerVisible=!0,this.workOrderService.getWorkOrderById(this.workOrderId,this.recCustomerId).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.isSpinnerVisible=!1,this.isDeleteMpnPart=!1;const r=Object.assign({},e,{workOrderNumber:e.workOrderNum,openDate:new Date(e.openDate),customerId:e.customerId,partNumbers:e.partNumbers.map(r=>Object.assign({},r,{promisedDate:0==this.recCustomerId?new Date(r.promisedDate):null,estimatedCompletionDate:0==this.recCustomerId?new Date(r.estimatedCompletionDate):null,estimatedShipDate:0==this.recCustomerId?new Date(r.estimatedShipDate):null,receivedDate:0==this.recCustomerId&&null==e.receivingCustomerWorkId?null:new Date(r.receivedDate)}))});this.workOrderGeneralInformation=r,this.modifyWorkorderdata()},e=>{this.handleError(e),this.isSpinnerVisible=!1})}getEmployeeData(){this.workOrderGeneralInformation.woEmployee=this.authService.currentEmployee}ngOnDestroy(){this.onDestroy$.next()}checkworkscope(){var e=!1;return this.workOrderGeneralInformation&&this.workOrderGeneralInformation.partNumbers&&this.workOrderGeneralInformation.partNumbers.forEach(r=>{0==r.workOrderScopeId&&(e=!0)}),e}get userName(){return this.authService.currentUser?this.authService.currentUser.userName:""}createModeData(){this.loginDetailsForCreate={masterCompanyId:this.authService.currentUser.masterCompanyId,createdBy:this.userName,updatedBy:this.userName,createdDate:new Date,updatedDate:new Date,isActive:!0,isDeleted:!1}}getAllGridModals(){this.gridActiveTab="workFlow",this.addresses=new me,this.documents=[new ge],this.quote=new d,this.labor=new f,this.billing=new A}filterCustomerName(e){const r=e.query.toLowerCase();this.isRecCustomer?this.commonService.getReceivingCustomers(r).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.customerNamesList=e},e=>{this.handleError(e)}):this.commonService.getCustomerNameandCode(r,this.workOrderGeneralInformation.workOrderTypeId).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.customerNamesList=e},e=>{this.handleError(e)})}selectedCustomerType(){this.clearautoCompleteInput(this.workOrderGeneralInformation,"customerId")}selectCustomer(e,r,t){this.isCustomerAction=!0,this.isBillAction=!1,this.isQuoteAction=!1,this.isEditWorkordershowMsg=!1,this.isQuoteActionTab,this.showQuoteDetails=!1,0==this.isView&&"formHtml"==t&&this.customerWarnings(e.customerId),r.creditLimit=e.creditLimit,r.creditTermsId=e.creditTermsId,r.creditTerm=e.creditTerm,this.myCustomerContact=e.customerContact,r.customerPhoneNo=e.customerPhoneNo,r.csrId=e.csrId,r.salesPersonId=e.salesPersonId,r.csr=Object(C.d)("employeeId",e.csrId,this.csrOriginalList),r.salesPerson=Object(C.d)("employeeId",e.salesPersonId,this.salesAgentsOriginalList),1==this.workOrderGeneralInformation.workOrderTypeId?this.getPartNosByCustomer(e.customerId,0):this.getMultiplePartsNumbers(),this.getAllCustomerContact(e.customerId,"select")}selectEmployee(e,r){}viewCustomerDetails(e){this.modal=this.modalService.open(we.a,{size:"lg",backdrop:"static",keyboard:!1}),this.modal.componentInstance.customerId=e,this.modal.result.then(()=>{},()=>{})}clearautoCompleteInput(e,r){}filterCsr(e){if(this.csrList=this.csrOriginalList,void 0!==e.query&&null!==e.query){const r=[...this.csrOriginalList.filter(r=>r.name.toLowerCase().includes(e.query.toLowerCase()))];this.csrList=r}}filterEmployee(e){if(this.employeeList=this.employeesOriginalData,void 0!==e.query&&null!==e.query){const r=[...this.employeesOriginalData.filter(r=>r.label.toLowerCase().includes(e.query.toLowerCase()))];this.employeeList=r}}filterSalesPerson(e){if(this.salesPersonList=this.salesAgentsOriginalList,void 0!==e.query&&null!==e.query){const r=[...this.salesAgentsOriginalList.filter(r=>r.name.toLowerCase().includes(e.query.toLowerCase()))];this.salesPersonList=r}}getMaterialListHandle(){1==this.isSubWorkOrder?this.getMaterialListByWorkOrderIdForSubWO():this.getMaterialListByWorkOrderId()}resetSelectedTab(){this.gridActiveTab=""}gridTabChange(e){if(this.defaultTab="",setTimeout(()=>{this.defaultTab="materialList"},0),this.gridActiveTab="",setTimeout(()=>{this.gridActiveTab=e},0),this.subTabWorkFlow="",this.subTabOtherOptions="",this.subTabMainComponent="","communication"!=e&&(this.selectedCommunicationTab=""),"materialList"===e&&(1==this.isSubWorkOrder?this.getMaterialListByWorkOrderIdForSubWO():this.getMaterialListByWorkOrderId()),"labor"===e&&this.getWorkFlowLaborList(),"equipment"===e&&this.getEquipmentByWorkOrderId(),"billorInvoice"!==e&&(this.billing=void 0),"billorInvoice"==e){this.isBillAction=!0,this.isQuoteAction=!1,this.isCustomerAction=!1,this.showQuoteDetails=!1,this.isEditWorkordershowMsg=!1,this.billingCreateOrEdit();const{customerId:e}=this.workOrderGeneralInformation.customerId}if("shipping"==e&&(this.isSpinnerVisible=!0,this.workOrderService.viewWorkOrderHeader(this.workOrderId).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.isSpinnerVisible=!1;this.managementStructureId=e.managementStructureId},e=>{this.handleError(e),this.isSpinnerVisible=!1})),"quote"==e){this.onClickQuoteTab(),this.isBillAction=!1,this.isQuoteAction=!1,this.isCustomerAction=!1,this.isEditWorkordershowMsg=!1;const{customerId:e}=this.workOrderGeneralInformation.customerId;0==this.isView&&this.customerWarnings(e)}"workOrderMain"==e&&(this.isWorkOrderMainView=!0,1==this.isSubWorkOrder&&(this.mainWorkOrderId=this.subWorkOrderDetails.workOrderId)),"tearDown"==e&&0==this.isView&&this.callTearDownAPi();let r=document.getElementsByClassName("card-body")[1];r&&r.scrollIntoView()}callTearDownAPi(){1==this.isSubWorkOrder&&(this.workFlowWorkOrderId=this.subWOPartNoId),this.workFlowWorkOrderId>0&&(this.isSpinnerVisible=!0,this.workOrderService.getworkOrderTearDownData(this.workFlowWorkOrderId,this.isSubWorkOrder).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.isSpinnerVisible=!1,this.saveTearDownData=e},e=>{this.handleError(e),this.isSpinnerVisible=!1}))}toggleDisplayMode(){this.isDetailedView=!this.isDetailedView}woDealerChange(e){this.workOrderGeneralInformation.workOrderTypeId=e,this.getLatestDefaultSettingByWorkOrderTypeId.emit(e)}addMPN(){if(!this.workOrderGeneralInformation.isSinglePN&&this.workorderSettings){const e=new ue;e.workOrderStageId=this.workorderSettings.defaultStageCodeId,e.workOrderPriorityId=this.workorderSettings.defaultPriorityId,this.workOrderGeneralInformation.partNumbers.push(e)}else{const e=new ue;this.salesOrderReferenceData&&(e.masterPartId={itemMasterId:this.salesOrderReferenceData.itemMasterId,partNumber:this.salesOrderReferenceData.partNumber,managementStructureId:this.salesOrderReferenceData.managementStructureId,description:this.salesOrderReferenceData.partDescription},e.quantity=this.salesOrderReferenceData.quantity),this.workOrderGeneralInformation.partNumbers.push(e),this.salesOrderReferenceData&&this.onSelectedPartNumber(e.masterPartId,this.workOrderGeneralInformation.partNumbers[0],0)}}subTabWorkFlowChange(e){this.subTabWorkFlow=e,"editworkFlow"===e&&(this.editWorkFlowData=void 0,this.isSpinnerVisible=!0,this.workFlowtService.getWorkFlowDataByIdForEdit(this.workFlowId).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.isSpinnerVisible=!1,this.workFlowtService.listCollection=e[0],this.workFlowtService.enableUpdateMode=!0,this.workFlowtService.currentWorkFlowId=e.workflowId,this.editWorkFlowData=e},e=>{this.handleError(e),this.isSpinnerVisible=!1})),this.gridActiveTab="",this.subTabOtherOptions="",this.subTabMainComponent=""}openDelete(e,r){this.currentIndex=r,this.modal=this.modalService.open(e,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then(()=>{},()=>{})}dismissModel(){this.modal.close()}deleteMPN(){if(1==this.showTabsGrid&&0!=this.workOrderGeneralInformation.partNumbers[this.currentIndex].workOrderId){this.isDeleteMpnPart=!0;const e={workOrderId:this.workOrderGeneralInformation.partNumbers[this.currentIndex].workOrderId,workOrderPartNoId:this.workOrderGeneralInformation.partNumbers[this.currentIndex].id,workFlowWorkOrderId:this.workOrderGeneralInformation.partNumbers[this.currentIndex].workFlowWorkOrderId?this.workOrderGeneralInformation.partNumbers[this.currentIndex].workFlowWorkOrderId:0,receivingCustomerWorkId:this.workOrderGeneralInformation.partNumbers[this.currentIndex].receivingCustomerWorkId?this.workOrderGeneralInformation.partNumbers[this.currentIndex].receivingCustomerWorkId:0,stockLineId:this.workOrderGeneralInformation.partNumbers[this.currentIndex].stockLineId?this.workOrderGeneralInformation.partNumbers[this.currentIndex].stockLineId:0,updatedBy:this.userName};this.workOrderService.deleteMpnByWorkOrderId(e).subscribe(e=>{this.currentDeletedMpnIndex=this.currentIndex,this.workOrderGeneralInformation.partNumbers.splice(this.currentIndex,1),this.alertService.showMessage(this.moduleName,"Deleted Succesfully",k.d.success),this.getWorkOrderWorkFlowNos()},e=>{this.handleError(e)})}else this.workOrderGeneralInformation.partNumbers.splice(this.currentIndex,1);this.modal.close()}workOrderStatus(){this.allValuesSame=this.workOrderGeneralInformation.partNumbers.every((e,r,t)=>e.workOrderStatusId===t[0].workOrderStatusId),this.allValuesSame?(this.statusId=this.workOrderGeneralInformation.partNumbers[0].workOrderStatusId,this.workOrderGeneralInformation.workOrderStatusId=this.statusId):(this.statusId=1,this.workOrderGeneralInformation.workOrderStatusId=this.statusId),this.workOrderStatusList&&this.workOrderStatusList.length>0?this.workOrderStatusList.forEach(e=>{e.value==this.statusId&&(this.workOrderNumberStatus=e.label,this.workOrderGeneralInformation.workOrderStatusId=this.statusId)}):(this.workOrderNumberStatus="Open",this.workOrderGeneralInformation.workOrderStatusId=1)}saveWorkOrder(){this.mpnPartNumbersList=[];const e=this.workOrderGeneralInformation,r=Object.assign({},e,{customerId:Object(C.a)("customerId",e.customerId),employeeId:e.woEmployee?e.woEmployee.employeeId:e.employeeId,salesPersonId:e.salesPerson?e.salesPerson.employeeId:e.salesPersonId,csrId:e.csr?e.csr.employeeId:e.csrId,customerContact:Object(C.h)("contactName",this.myCustomerContact),masterCompanyId:this.authService.currentUser.masterCompanyId,customerContactId:Object(C.h)("customerContactId",this.myCustomerContact),createdBy:this.userName,updatedBy:this.userName,revisedPartId:this.revisedPartId,partNumbers:e.partNumbers.map(e=>Object.assign({},e,{masterPartId:Object(C.a)("itemMasterId",e.masterPartId),workOrderStageId:Object(C.a)("workOrderStageId",e.workOrderStageId),mappingItemMasterId:Object(C.a)("mappingItemMasterId",e.mappingItemMasterId),technicianId:Object(C.a)("employeeId",e.partTechnicianId),createdBy:this.userName,updatedBy:this.userName,workOrderId:this.workOrderGeneralInformation.workOrderId?this.workOrderGeneralInformation.workOrderId:0}))});this.isEdit&&!1===this.isRecCustomer?(this.isSpinnerVisible=!0,this.workOrderService.updateNewWorkOrder(r).pipe(Object(P.a)(this.onDestroy$)).subscribe(r=>{this.isSpinnerVisible=!1,this.disableSaveForEdit=!0,this.saveWorkOrderGridLogic(r,e),this.alertService.showMessage(this.moduleName,"Work Order Updated Succesfully",k.d.success)},e=>{this.handleError(e),this.isSpinnerVisible=!1})):(this.isSpinnerVisible=!0,this.workOrderService.createNewWorkOrder(r).pipe(Object(P.a)(this.onDestroy$)).subscribe(r=>{this.isSpinnerVisible=!1,this.isEdit=!0,this.router.navigate(["workordersmodule/workorderspages/app-work-order-edit/"+r.workOrderId]),this.saveWorkOrderGridLogic(r,e),window.location.href.includes("app-work-order-receivingcustworkid")&&window.history.replaceState({},"","/workordersmodule/workorderspages/app-work-order-edit/"+r.workOrderId),this.alertService.showMessage(this.moduleName,"Work Order Added Succesfully",k.d.success)},e=>{this.handleError(e),this.isSpinnerVisible=!1}))}createQuote(){this.isQuoteAction=!0,this.isBillAction=!1,this.isCustomerAction=!1,this.isQuoteActionTab,this.showQuoteDetails=!1,this.isEditWorkordershowMsg=!1;const{customerId:e}=this.workOrderGeneralInformation.customerId;this.workOrderQuoteId?window.open(" /workordersmodule/workorderspages/app-work-order-quote?workorderid="+this.workOrderId):this.customerWarnings(e)}saveWorkOrderGridLogic(e,r){this.savedWorkOrderData=e,this.getWorkFlowData(),this.workOrderId=e.workOrderId,this.workOrderGeneralInformation.workOrderNumber=e.workOrderNum,0!==this.workFlowWorkOrderId&&(this.isDisabledSteps=!0),this.getWorkOrderWorkFlowNos(),1==this.workOrderGeneralInformation.isSinglePN?(this.showTabsGrid=!0,this.workOrderPartNumberId=e.partNumbers[0].id,this.workFlowId=e.partNumbers[0].workflowId,this.workFlowWorkOrderId=e.workFlowWorkOrderId,this.workScope=e.partNumbers[0].workScope,this.showGridMenu=!0,this.getWorkFlowTabsData(),0!=this.workFlowId&&(this.isWorkOrder=!0,this.subTabWorkFlowChange("viewworkFlow"))):(this.showTabsGrid=!0,this.showTabsMPNGrid=!0)}checkPartExist(e,r,t){if(1==r)this.workOrderGeneralInformation.partNumbers.forEach(e=>{this.array.push(e.masterPartId.itemMasterId)});else{if(this.array&&0==this.array.length)return void this.array.push(e.itemMasterId);if(this.array&&this.array.length>0&&this.array.includes(e.itemMasterId)){const e=new ue;e.workOrderStageId=this.workorderSettings.defaultStageCodeId,e.workOrderPriorityId=this.workorderSettings.defaultPriorityId,this.workOrderGeneralInformation.partNumbers[t]=e}else this.array.push(e.itemMasterId)}}onSelectedPartNumber(e,r,t){this.workOrderGeneralInformation.isSinglePN||this.checkPartExist(e,this.isEdit,t),this.isEdit||(r.promisedDate=new Date,r.estimatedCompletionDate=new Date,r.estimatedShipDate=new Date,r.isMPNContract=!1,r.technicianId=0,this.workorderSettings&&(r.workOrderStageId=this.workorderSettings.defaultStageCodeId,r.workOrderPriorityId=this.workorderSettings.defaultPriorityId),r.techStationId=0,r.partTechnicianId=0),this.workOrderGeneralInformation.isSinglePN;const{itemMasterId:n}=e;if(this.getPartPublicationByItemMasterId(r,n),r.description=e.partDescription,r.isPMA=null!==e.pma&&e.pma,r.isDER=null!==e.der&&e.der,r.isMPNContract=null!==e.isMPNContract&&e.isMPNContract,r.revisedPartNo=e.revisedPartNo,r.serialNumber=e.serialNumber,r.stockLineId=e.stockLineId,r.conditionId=e.conditionId,r.condition=e.condition,r.stockLineNumber=e.stockLineNumber,r.itemGroup=e.itemGroup,r.receivingCustomerWorkId=e.receivingCustomerWorkId,r.customerReference=e.reference,r.receivedDate=new Date(e.receivedDate),r.customerRequestDate=new Date(e.custReqDate),this.revisedPartId=e.revisedPartId,r.managementStructureId=e.managementStructureId,this.isEdit)this.calculatePartTat(r);else{let e=new Date;r.tatDaysCurrent=N(e).diff(r.receivedDate,"days")}this.isSpinnerVisible=!0,this.commonService.getManagementStructureCodes(e.managementStructureId).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.isSpinnerVisible=!1,e.Level1?r.level1=e.Level1:r.level1="-",e.Level2?r.level2=e.Level2:r.level2="-",e.Level3?r.level3=e.Level3:r.level3="-",e.Level4?r.level4=e.Level4:r.level4="-",this.salesOrderReferenceData&&1==this.workOrderGeneralInformation.partNumbers.length&&(this.workOrderGeneralInformation.partNumbers[0]=r)},e=>{this.handleError(e),this.isSpinnerVisible=!1})}onSelectedTechnician(e,r){null!=e.employeeId&&e.employeeId>0&&this.commonService.getTechnicianStation(e.employeeId).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{r.techStationId=e.stationId},e=>{this.isSpinnerVisible=!1,this.handleError(e)})}getStockLineByItemMasterIdOnChangePN(e,r){this.getStockLineByItemMasterId(e.masterPartId,e.conditionId,r)}getStockLineByItemMasterId(e,r,t){return n.a(this,void 0,void 0,(function*(){0!==(e=Object(C.a)("itemMasterId",e))&&null!==r&&(this.isSpinnerVisible=!0,yield this.workOrderService.getStockLineByItemMasterId(e,r).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.isSpinnerVisible=!1,this["stockLineList"+t]=e.map(e=>({label:e.stockLineNumber,value:e.stockLineId}))},e=>{this.handleError(e),this.isSpinnerVisible=!1}))}))}getDynamicVariableData(e,r){return this[e+r]}getPartPublicationByItemMasterId(e,r){return n.a(this,void 0,void 0,(function*(){this.isSpinnerVisible=!0,yield this.workOrderService.getPartPublicationByItemMaster(r).pipe(Object(P.a)(this.onDestroy$)).subscribe(r=>{this.isSpinnerVisible=!1,this.cmmList=r.map(e=>({value:e.publicationRecordId,label:e.publicationId})),this.cmmList&&this.cmmList.length>0&&(e.cmmId=this.cmmList[0].value)},e=>{this.handleError(e),this.isSpinnerVisible=!1})}))}selectedCondition(e,r,t){this.conditionList.forEach(n=>{n.value==e&&(r.condition=n.label,this.workOrderGeneralInformation.partNumbers[t].condition=n.label)}),this.workOrderStatus()}selectedStage(e,r,t){this.workOrderStagesList.forEach(n=>{n.workOrderStageId==e&&(r.workOrderStatusId=n.workOrderStausId,this.workOrderGeneralInformation.partNumbers[t].workOrderStatusId=n.workOrderStausId)}),this.workOrderStatus()}filterRevisedPartNumber(e,r){if(this["revisedPartNumberList"+r]=this["revisedPartOriginalData"+r],void 0!==e.query&&null!==e.query){const t=[...this["revisedPartOriginalData"+r].filter(r=>r.revisedPartNo.toLowerCase().includes(e.query.toLowerCase()))];this["revisedPartNumberList"+r]=t}}getSerialNoByStockLineId(e){const{stockLineId:r}=e,{conditionId:t}=e;e.serialNumber="",null!==r&&0!==r&&null!==t&&0!==t&&(this.isSpinnerVisible=!0,this.workOrderService.getSerialNoByStockLineId(r,t).pipe(Object(P.a)(this.onDestroy$)).subscribe(r=>{this.isSpinnerVisible=!1,r&&(e.serialNumber=r.serialNumber)},e=>{this.handleError(e),this.isSpinnerVisible=!1}))}getWorkFlowByPNandScope(e){const r=Object(C.a)("itemMasterId",e.masterPartId),{workOrderScopeId:t}=e;0!==r&&null!==r&&null!==t&&0!==t&&(this.isSpinnerVisible=!0,this.workOrderService.getWorkFlowByPNandScope(r,t).pipe(Object(P.a)(this.onDestroy$)).subscribe(r=>{this.isSpinnerVisible=!1,this.workFlowList=r.map(e=>({label:e.workFlowNo,value:e.workFlowId})),this.workFlowList&&this.workFlowList.length>0?e.workflowId=this.workFlowList[0].value:e.workflowId=0},e=>{this.handleError(e),this.isSpinnerVisible=!1})),this.getNTEandSTDByItemMasterId(r,e)}getNTEandSTDByItemMasterId(e,r){if(null!==r.workOrderScopeId&&""!==r.workOrderScopeId&&r.workOrderScopeId>0){const t=Object(C.g)("label","value",r.workOrderScopeId,this.workScopesList);void 0!==e&&void 0!==t&&(this.isSpinnerVisible=!0,this.workOrderService.getNTEandSTDByItemMasterId(e,t).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.isSpinnerVisible=!1,null!==e&&(r.nte=e.nteHours,r.tatDaysStandard=e.stdHours)},e=>{this.handleError(e),this.isSpinnerVisible=!1}))}}getWorkFlowData(){this.selectedWorkFlowId=this.savedWorkOrderData.partNumbers[0].workflowId,0!=this.selectedWorkFlowId&&(this.isSpinnerVisible=!0,this.workFlowtService.getWorkFlowDataByIdForEdit(this.selectedWorkFlowId).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.isSpinnerVisible=!1,this.employeeService.workFlowIdData=e},e=>{this.handleError(e),this.isSpinnerVisible=!1}))}changeofMPN(e){console.log("Data",e),this.quotestatusofCurrentPart=e.quoteStatus,this.selectedPartNumber=e,this.mpnGridData=e.datas,this.workFlowId=e.workflowId,this.workFlowWorkOrderId=e.workOrderWorkFlowId,this.workOrderPartNumberId=e.workOrderPartNumberId,this.workScope=e.workscope,this.showGridMenu=!0,this.getWorkFlowTabsData(),0!=this.workFlowId&&this.subTabWorkFlowChange("viewworkFlow")}getWorkFlowTabsData(){if("materialList"===this.gridActiveTab)this.gridTabChange("materialList");else if("labor"===this.gridActiveTab)this.gridTabChange("labor");else if("equipment"===this.gridActiveTab)this.gridTabChange("equipment");else if("main"===this.gridActiveTab)this.gridTabChange("main");else if("billorInvoice"===this.gridActiveTab)this.gridTabChange("billorInvoice");else if("quote"===this.gridActiveTab)this.gridTabChange("quote");else if("shipping"===this.gridActiveTab)this.gridTabChange("shipping");else if("subWO"===this.gridActiveTab)this.gridTabChange("subWO");else if("communication"===this.gridActiveTab){this.gridTabChange("communication");let e=this.selectedCommunicationTab;this.selectedCommunicationTab="",this.selectedCommunicationTab=e}else if("documents"===this.gridActiveTab)this.gridTabChange("documents"),this.getDocumentsByWorkOrderId();else if("workComplete"===this.gridActiveTab)this.gridTabChange("workComplete");else if("woanalysis"===this.gridActiveTab)this.gridTabChange("woanalysis");else if("laboranalysis"===this.gridActiveTab)this.gridTabChange("laboranalysis");else if("tearDown"===this.gridActiveTab)this.gridTabChange("tearDown");else if("otherOptions"===this.gridActiveTab){let e=this.subTabOtherOptions;this.subTabOtherOptions="",this.subTabOtherOptions=e,this.otherOptionTabSelected(this.subTabOtherOptions),this.gridTabChange("otherOptions")}}closeWorkOrderMainView(e){this.isWorkOrderMainView=e}savedWorkFlowData(e){this.isSpinnerVisible=!0,1==this.isSubWorkOrder&&(e.isSubWorkOrder=!0,e.subWorkOrderId=this.subWorkOrderDetails.subWorkOrderId?this.subWorkOrderDetails.subWorkOrderId:this.workOrderId,e.workOrderId=this.subWorkOrderDetails.workOrderId,e.subWOPartNoId=this.subWOPartNoId),this.workOrderService.createWorkFlowWorkOrder(e).subscribe(e=>{this.isSpinnerVisible=!1,this.workFlowWorkOrderData=e,this.workFlowWorkOrderId=e.workFlowWorkOrderId,0!==this.workFlowWorkOrderId&&(this.isDisabledSteps=!0),this.getWorkOrderWorkFlowNos(),this.getWorkFlowLaborList(),this.alertService.showMessage("","Work Order Work Flow Saved Succesfully",k.d.success),setTimeout(()=>{this.workOrderGeneralInformation.partNumbers.forEach(e=>{this.getWorkFlowByPNandScope(e)}),this.editWorkFlowData=void 0,this.isSpinnerVisible=!0,this.workFlowtService.getWorkFlowDataByIdForEdit(this.workFlowId).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.isSpinnerVisible=!1,this.workFlowtService.listCollection=e[0],this.workFlowtService.enableUpdateMode=!0,this.workFlowtService.currentWorkFlowId=e.workflowId,this.editWorkFlowData=e},e=>{this.handleError(e),this.isSpinnerVisible=!1})},0)},e=>{this.handleError(e),this.isSpinnerVisible=!1})}getWorkOrderWorkFlowNos(){this.workOrderId&&(this.isSpinnerVisible=!0,console.log("mpn fetch working fine"),this.workOrderService.getWorkOrderWorkFlowNumbers(this.workOrderId).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.isSpinnerVisible=!1,this.workOrderWorkFlowOriginalData=e,this.isEdit&&1===e.length&&1==this.workOrderGeneralInformation.isSinglePN&&(this.workFlowId=e[0].workflowId,this.selectedPartNumber=e[0]),this.mpnPartNumbersList=e.map(e=>({value:{datas:e,workOrderWorkFlowId:e.value,workOrderNo:e.label,masterPartId:e.masterPartId,workflowId:e.workflowId,workflowNo:e.workflowNo,partNumber:e.partNumber,workOrderPartNumberId:e.workOrderPartNumberId,workScope:e.workscope,managementStructureId:e.managementStructureId,quoteStatus:e.quoteStatus},label:e.partNumber})),this.mpnPartNumbersList&&this.mpnPartNumbersList.length>0&&(this.selectedMPN=this.mpnPartNumbersList[0].value,this.workOrderGeneralInformation.isSinglePN?(this.quotestatusofCurrentPart=this.mpnPartNumbersList[0].value.quoteStatus,console.log("quote status",this.quotestatusofCurrentPart)):this.changeofMPN(this.mpnPartNumbersList[0].value),0==this.workFlowId&&(this.workFlowWorkOrderId=this.mpnPartNumbersList[0].value.workOrderWorkFlowId,1==this.isSubWorkOrder?this.getMaterialListByWorkOrderIdForSubWO():this.getMaterialListByWorkOrderId()))},e=>{this.isSpinnerVisible=!1,this.handleError(e)}))}getmemo(e){this.disableSaveForEdit=!1}saveWorkOrderMaterialList(e){if(1==this.isSubWorkOrder){const r=e.materialList.map(e=>Object.assign({},e,{masterCompanyId:this.authService.currentUser.masterCompanyId,isActive:!0,createdBy:this.userName,updatedBy:this.userName,workOrderId:this.subWorkOrderDetails.workOrderId,workFlowWorkOrderId:this.workFlowWorkOrderId,subWOPartNoId:this.subWOPartNoId,subWorkOrderMaterialsId:0,subWorkOrderId:this.subWorkOrderDetails.subWorkOrderId?this.subWorkOrderDetails.subWorkOrderId:this.workOrderId}));this.isSpinnerVisible=!0,this.workOrderService.createSubWorkOrderMaterialList(r).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.isSpinnerVisible=!1,this.workFlowObject.materialList=[],this.alertService.showMessage(this.moduleName,"Saved Sub Work Order MaterialList  Succesfully",k.d.success),this.getMaterialListByWorkOrderIdForSubWO()},e=>{this.isSpinnerVisible=!1,this.handleError(e)})}else{const r=e.materialList.map(e=>Object.assign({},e,{masterCompanyId:this.authService.currentUser.masterCompanyId,isActive:!0,createdBy:this.userName,updatedBy:this.userName,workOrderId:this.workOrderId,workFlowWorkOrderId:this.workFlowWorkOrderId}));this.isSpinnerVisible=!0,this.workOrderService.createWorkOrderMaterialList(r).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.isSpinnerVisible=!1,this.workFlowObject.materialList=[],this.alertService.showMessage(this.moduleName,"Saved Work Order MaterialList  Succesfully",k.d.success),this.getMaterialListByWorkOrderId()},e=>{this.isSpinnerVisible=!1,this.handleError(e)})}}updateWorkOrderMaterialList(e){if(1==this.isSubWorkOrder){const r=e.materialList.map(e=>Object.assign({},e,{masterCompanyId:this.authService.currentUser.masterCompanyId,isActive:!0,createdBy:this.userName,updatedBy:this.userName,workOrderId:this.subWorkOrderDetails.workOrderId,workFlowWorkOrderId:this.workFlowWorkOrderId,subWorkOrderId:this.subWorkOrderDetails.subWorkOrderId?this.subWorkOrderDetails.subWorkOrderId:this.workOrderId}));this.isSpinnerVisible=!0,this.workOrderService.createSubWorkOrderMaterialList(r).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.isSpinnerVisible=!1,this.workFlowObject.materialList=[],this.alertService.showMessage(this.moduleName,"Updated Sub Work Order MaterialList  Succesfully",k.d.success),this.getMaterialListByWorkOrderIdForSubWO()},e=>{this.isSpinnerVisible=!1,this.handleError(e)})}else{const r=e.materialList.map(e=>Object.assign({},e,{masterCompanyId:this.authService.currentUser.masterCompanyId,isActive:!0,createdBy:this.userName,updatedBy:this.userName,workOrderId:this.workOrderId,workFlowWorkOrderId:this.workFlowWorkOrderId}));this.isSpinnerVisible=!0,this.workOrderService.updateWorkOrderMaterialList(r).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.isSpinnerVisible=!1,this.workFlowObject.materialList=[],this.alertService.showMessage(this.moduleName,"Updated Work Order MaterialList  Succesfully",k.d.success),this.getMaterialListByWorkOrderId()},e=>{this.isSpinnerVisible=!1,this.handleError(e)})}}getTaskList(){null==this.labor&&(this.labor=new f),this.labor.workOrderLaborList=[],this.labor.workOrderLaborList.push({}),this.commonService.smartDropDownList("Task","TaskId","Description").pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.taskList=e.map(e=>({id:e.value,description:e.label,taskId:e.value})),this.labor.workOrderLaborList&&0!=this.labor.workOrderLaborList.length&&(this.labor.workOrderLaborList[0]={}),this.taskList.forEach(e=>{this.labor.workOrderLaborList&&0!=this.labor.workOrderLaborList.length&&(this.labor.workOrderLaborList[0][e.description.toLowerCase()]=[])})},e=>{this.handleError(e)})}saveworkOrderLabor(e){this.isSpinnerVisible=!0,this.isSubWorkOrder&&(e.subWorkOrderLaborHeaderId=0,e.subWOPartNoId=this.subWOPartNoId,e.workOrderId=this.subWorkOrderDetails.workOrderId,e.subWorkOrderId=this.subWorkOrderDetails.subWorkOrderId?this.subWorkOrderDetails.subWorkOrderId:this.workOrderId),this.workOrderService.createWorkOrderLabor(this.formWorkerOrderLaborJson(e),this.isSubWorkOrder).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.isSpinnerVisible=!1,this.alertService.showMessage(this.moduleName,"Saved Work Order Labor  Succesfully",k.d.success)},e=>{this.isSpinnerVisible=!1,this.handleError(e)})}openCurrency(e){this.modal=this.modalService.open(e,{size:"sm"}),this.modal.result.then(()=>{},()=>{})}saveWorkOrderEquipmentList(e){this.equipmentArr=[],this.isSubWorkOrder?this.equipmentArr=e.equipments.map(e=>Object.assign({},e,{masterCompanyId:this.authService.currentUser.masterCompanyId,isActive:!0,createdBy:this.userName,updatedBy:this.userName,workFlowWorkOrderId:this.workFlowWorkOrderId,subWOPartNoId:this.subWOPartNoId,workOrderId:this.subWorkOrderDetails.workOrderId,subWorkOrderId:this.subWorkOrderDetails.subWorkOrderId?this.subWorkOrderDetails.subWorkOrderId:this.workOrderId})):this.equipmentArr=e.equipments.map(e=>Object.assign({},e,{masterCompanyId:this.authService.currentUser.masterCompanyId,isActive:!0,createdBy:this.userName,updatedBy:this.userName,workOrderId:this.workOrderId,workFlowWorkOrderId:this.workFlowWorkOrderId})),this.isSpinnerVisible=!0,this.workOrderService.createWorkOrderEquipmentList(this.equipmentArr,this.isSubWorkOrder).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.isSpinnerVisible=!1,this.workFlowObject.equipments=[],this.alertService.showMessage(this.moduleName,"Saved Work Order Equipment Succesfully",k.d.success),this.getEquipmentByWorkOrderId()},e=>{this.isSpinnerVisible=!1,this.errorHandling(e)})}updateWorkOrderEquipmentList(e){if(this.equipmentArr=[],this.isSubWorkOrder)this.equipmentArr=e.equipments.map(e=>Object.assign({},e,{masterCompanyId:this.authService.currentUser.masterCompanyId,isActive:!0,createdBy:this.userName,updatedBy:this.userName,workFlowWorkOrderId:this.workFlowWorkOrderId,subWOPartNoId:this.subWOPartNoId,workOrderId:this.subWorkOrderDetails.workOrderId,subWorkOrderId:this.subWorkOrderDetails.subWorkOrderId?this.subWorkOrderDetails.subWorkOrderId:this.workOrderId})),this.isSpinnerVisible=!0,this.workOrderService.createWorkOrderEquipmentList(this.equipmentArr,this.isSubWorkOrder).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.isSpinnerVisible=!1,this.workFlowObject.equipments=[],this.alertService.showMessage(this.moduleName,"Updated Work Order Equipment Succesfully",k.d.success),this.getEquipmentByWorkOrderId()},e=>{this.isSpinnerVisible=!1,this.errorHandling(e)});else{const r=e.equipments.map(e=>Object.assign({},e,{masterCompanyId:this.authService.currentUser.masterCompanyId,isActive:!0,createdBy:this.userName,updatedBy:this.userName,workOrderId:this.workOrderId,workFlowWorkOrderId:this.workFlowWorkOrderId}));this.isSpinnerVisible=!0,this.workOrderService.updateWorkOrderEquipmentList(r).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.isSpinnerVisible=!1,this.workFlowObject.equipments=[],this.alertService.showMessage(this.moduleName,"Updated  Work Order Equipment Succesfully",k.d.success),this.getEquipmentByWorkOrderId()},e=>{this.isSpinnerVisible=!1,this.errorHandling(e)})}}saveWorkOrderChargesList(e){if(1==this.isSubWorkOrder){const r=e.charges.map(e=>Object.assign({},e,{referenceNo:e.refNum,chargesTypeId:e.workflowChargeTypeId,chargeId:e.workflowChargeTypeId,masterCompanyId:this.authService.currentUser.masterCompanyId,isActive:!0,createdBy:this.userName,updatedBy:this.userName,workOrderId:this.subWorkOrderDetails.workOrderId,workFlowWorkOrderId:this.workFlowWorkOrderId,subWOPartNoId:this.subWOPartNoId,subWorkOrderId:this.subWorkOrderDetails.subWorkOrderId?this.subWorkOrderDetails.subWorkOrderId:this.workOrderId}));this.isSpinnerVisible=!0,this.workOrderService.createSubWorkOrderChargesList(r).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.isSpinnerVisible=!1,this.workFlowObject.charges=[],this.alertService.showMessage(this.moduleName,"Saved Sub Work Order Charges  Succesfully",k.d.success),this.getChargesListByWorkOrderId()},e=>{this.isSpinnerVisible=!1,this.errorHandling(e)})}else{const r=e.charges.map(e=>Object.assign({},e,{masterCompanyId:this.authService.currentUser.masterCompanyId,isActive:!0,createdBy:this.userName,updatedBy:this.userName,workOrderId:this.workOrderId,workFlowWorkOrderId:this.workFlowWorkOrderId}));this.isSpinnerVisible=!0,this.workOrderService.createWorkOrderChargesList(r).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.isSpinnerVisible=!1,this.workFlowObject.charges=[],this.alertService.showMessage(this.moduleName,"Saved Work Order Charges  Succesfully",k.d.success),this.getChargesListByWorkOrderId()},e=>{this.isSpinnerVisible=!1,this.errorHandling(e)})}}updateWorkOrderChargesList(e){if(1==this.isSubWorkOrder){const r=e.charges.map(e=>Object.assign({},e,{masterCompanyId:this.authService.currentUser.masterCompanyId,isActive:!0,createdBy:this.userName,updatedBy:this.userName,workOrderId:this.subWorkOrderDetails.workOrderId,workFlowWorkOrderId:this.workFlowWorkOrderId,subWOPartNoId:this.subWOPartNoId,subWorkOrderId:this.subWorkOrderDetails.subWorkOrderId?this.subWorkOrderDetails.subWorkOrderId:this.workOrderId}));this.isSpinnerVisible=!0,this.workOrderService.createSubWorkOrderChargesList(r).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.isSpinnerVisible=!1,this.workFlowObject.charges=[],this.alertService.showMessage(this.moduleName,"Updated Sub Work Order Charges  Succesfully",k.d.success),this.getChargesListByWorkOrderId()},e=>{this.isSpinnerVisible=!1,this.errorHandling(e)})}else{const r=e.charges.map(e=>Object.assign({},e,{masterCompanyId:this.authService.currentUser.masterCompanyId,isActive:!0,createdBy:this.userName,updatedBy:this.userName,workOrderId:this.workOrderId,workFlowWorkOrderId:this.workFlowWorkOrderId}));this.isSpinnerVisible=!0,this.workOrderService.updateWorkOrderChargesList(r).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.isSpinnerVisible=!1,this.workFlowObject.charges=[],this.alertService.showMessage(this.moduleName,"Updated Work Order Charges  Succesfully",k.d.success),this.getChargesListByWorkOrderId()},e=>{this.isSpinnerVisible=!1,this.errorHandling(e)})}}formWorkerOrderLaborJson(e){1==this.isSubWorkOrder?(this.result={subWorkOrderLaborHeaderId:e.subWorkOrderLaborHeaderId?e.subWorkOrderLaborHeaderId:0,subWorkOrderId:e.subWorkOrderId?e.subWorkOrderId:this.subWorkOrderDetails.subWorkOrderId,subWOPartNoId:e.subWOPartNoId?e.subWOPartNoId:this.subWorkOrderDetails.subWOPartNoId,workFlowWorkOrderId:this.workFlowWorkOrderId,workOrderId:e.workOrderId,dataEnteredBy:e.dataEnteredBy,expertiseId:e.expertiseId,employeeId:e.employeeId,isTaskCompletedByOne:e.isTaskCompletedByOne,workFloworSpecificTaskorWorkOrder:e.workFloworSpecificTaskorWorkOrder,workOrderHoursType:"workFlow"==e.workFloworSpecificTaskorWorkOrder?1:"specificTasks"==e.workFloworSpecificTaskorWorkOrder?2:3,hoursorClockorScan:e.hoursorClockorScan,masterCompanyId:1,CreatedBy:"admin",UpdatedBy:"admin",IsActive:!0,isDeleted:e.IsDeleted,workOrderLaborHeaderId:e.workOrderLaborHeaderId,totalWorkHours:e.totalWorkHours,labourMemo:e.labourMemo,LaborList:[],WorkOrderQuoteTask:e.WorkOrderQuoteTask},e.WorkOrderQuoteTask.forEach(e=>{e.subWorkOrderLaborId=e.subWorkOrderLaborId?e.subWorkOrderLaborId:0,e.subWorkOrderLaborHeaderId=e.subWorkOrderLaborHeaderId?e.subWorkOrderLaborHeaderId:0})):this.result={workFlowWorkOrderId:this.workFlowWorkOrderId,workOrderId:e.workOrderId,dataEnteredBy:e.dataEnteredBy,expertiseId:e.expertiseId,employeeId:e.employeeId,isTaskCompletedByOne:e.isTaskCompletedByOne,workFloworSpecificTaskorWorkOrder:e.workFloworSpecificTaskorWorkOrder,workOrderHoursType:"workFlow"==e.workFloworSpecificTaskorWorkOrder?1:"specificTasks"==e.workFloworSpecificTaskorWorkOrder?2:3,hoursorClockorScan:e.hoursorClockorScan,masterCompanyId:1,CreatedBy:"admin",UpdatedBy:"admin",IsActive:!0,isDeleted:e.IsDeleted,workOrderLaborHeaderId:e.workOrderLaborHeaderId,totalWorkHours:e.totalWorkHours,labourMemo:e.labourMemo,LaborList:[],WorkOrderQuoteTask:e.WorkOrderQuoteTask};for(let r in e.workOrderLaborList)for(let t of e.workOrderLaborList[r])t&&null!=t.expertiseId&&this.result.LaborList.push(t);return this.result}saveReservedPartorIssue(e){1==this.isSubWorkOrder?this.workOrderService.saveSubWoReservedPartorIssue(e).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.alertService.showMessage(this.moduleName,"Updated Parts Data",k.d.success),this.getMaterialListByWorkOrderIdForSubWO()},e=>{this.isSpinnerVisible=!1,this.handleError(e)}):this.workOrderService.saveReservedPartorIssue(e).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.alertService.showMessage(this.moduleName,"Updated Parts Data",k.d.success),this.getMaterialListByWorkOrderId()},e=>{this.isSpinnerVisible=!1,this.handleError(e)})}getEquipmentByWorkOrderId(e){0!==this.workFlowWorkOrderId&&this.workOrderId&&(this.isSpinnerVisible=!0,this.workOrderService.getWorkOrderAssetList(this.workFlowWorkOrderId,this.workOrderId,this.subWOPartNoId,this.isSubWorkOrder).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.isSpinnerVisible=!1,this.workOrderAssetList=e},e=>{this.handleError(e),this.isSpinnerVisible=!1}))}getValues(e){e.stockLineNumber&&(e.stockLineNumber.indexOf(",")>-1?e.isMultipleStockLine="Multiple":e.isMultipleStockLine="Single"),e.controlNo&&(e.controlNo.indexOf(",")>-1?e.isMultipleControlNo="Multiple":e.isMultipleControlNo="Single"),e.controlId&&(e.controlId.indexOf(",")>-1?e.isMultiplecontrolId="Multiple":e.isMultiplecontrolId="Single"),e.receiver&&(e.receiver.indexOf(",")>-1?e.isMultiplereceiver="Multiple":e.isMultiplereceiver="Single")}getMaterialListByWorkOrderId(){0!==this.workFlowWorkOrderId&&this.workOrderId&&(this.workOrderMaterialList=[],this.isSpinnerVisible=!0,this.workOrderService.getWorkOrderMaterialList(this.workFlowWorkOrderId,this.workOrderId).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.isSpinnerVisible=!1,e.length>0&&(e.forEach(e=>{this.getValues(e),e.isShowPlus=!0,e.currency&&(e.currency=e.currency.symbol),"No"==e.defered?e.defered=!1:e.defered=!0}),this.workOrderMaterialList=e,"billorInvoice"===this.gridActiveTab&&(this.quoteMaterialList=e),this.materialStatus=e[0].partStatusId)},e=>{this.handleError(e),this.isSpinnerVisible=!1}))}getDocumentsByWorkOrderId(){0!==this.workFlowWorkOrderId&&this.workOrderId&&(this.documentsDestructuredData=[],this.isSpinnerVisible=!0,this.workOrderService.getDocumentsList(this.workFlowWorkOrderId,this.workOrderId,this.isSubWorkOrder,this.subWOPartNoId?this.subWOPartNoId:0).subscribe(e=>{this.isSpinnerVisible=!1;let r=[];e.map(e=>{for(var t=0;t<e.attachmentDetails.length;t++){const n=e.attachmentDetails;r.push(Object.assign({},e,{fileName:n[t].fileName,fileCreatedDate:n[t].createdDate,fileCreatedBy:n[t].createdBy,fileUpdatedBy:n[t].updatedBy,fileUpdatedDate:n[t].updatedDate,fileSize:n[t].fileSize,link:n[t].link,attachmentDetailId:n[t].attachmentDetailId}))}});this.documentsDestructuredData=r},e=>{this.handleError(e),this.isSpinnerVisible=!1,this.documentsDestructuredData=[]}))}clearLaborList(){if(this.taskList&&this.taskList.length>0)for(let e of this.taskList)this.labor.workOrderLaborList[0][e.description.toLowerCase()]=[]}getWorkFlowLaborList(){this.clearLaborList(),0===this.workFlowWorkOrderId&&void 0===this.workFlowWorkOrderId||!this.workOrderId||(this.isSpinnerVisible=!0,this.workOrderService.getWorkOrderLaborList(this.workFlowWorkOrderId,this.workOrderId,this.isSubWorkOrder,this.subWOPartNoId).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{if(this.isSpinnerVisible=!1,this.data={},this.data=e,e&&(this.workOrderLaborList=Object.assign({},this.data,{workFlowWorkOrderId:Object(C.d)("value",this.data.workFlowWorkOrderId,this.workOrderWorkFlowOriginalData),employeeId:Object(C.d)("value",this.data.employeeId,this.employeesOriginalData),dataEnteredBy:Object(C.d)("value",this.data.employeeId,this.employeesOriginalData)}),this.labor.hoursorClockorScan=e.hoursorClockorScan+1,this.labor.workFloworSpecificTaskorWorkOrder=0==e.workOrderHoursType?"workFlow":1==e.workOrderHoursType?"specificTasks":"workOrder",this.labor.totalWorkHours=e.totalWorkHours,this.labor.expertiseId=e.expertiseId,this.labor.labourMemo=e.labourMemo,this.labor.employeeId=Object(C.d)("value",this.data.employeeId,this.employeesOriginalData),this.labor.dataEnteredBy=Object(C.d)("value",this.data.employeeId,this.employeesOriginalData),this.labor.workOrderHoursType=e.workOrderHoursType,1==this.isSubWorkOrder&&(this.labor.subWorkOrderLaborHeaderId=e.subWorkOrderLaborHeaderId)),e){for(let e of this.data.laborList)if(this.taskList)for(let r of this.taskList)if(r.taskId==e.taskId){this.labor.workOrderLaborList[0][r.description.toLowerCase()]||(this.labor.workOrderLaborList[0][r.description.toLowerCase()]=[]),!this.labor.workOrderLaborList[0][r.description.toLowerCase()][0]||null!=this.labor.workOrderLaborList[0][r.description.toLowerCase()][0].expertiseId&&null!=this.labor.workOrderLaborList[0][r.description.toLowerCase()][0].expertiseId||this.labor.workOrderLaborList[0][r.description.toLowerCase()].splice(0,1);let t=new y;if(t.workOrderLaborHeaderId=e.workOrderLaborHeaderId,t.workOrderLaborId=e.workOrderLaborId,t.expertiseId=e.expertiseId,t.employeeId=Object(C.d)("value",e.employeeId,this.employeesOriginalData),t.billableId=e.billableId,t.startDate=e.startDate?new Date(e.startDate):null,t.endDate=e.endDate?new Date(e.endDate):null,t.hours=e.hours,t.adjustments=e.adjustments,t.adjustedHours=e.adjustedHours,t.memo=e.memo,t.hours){let e=t.hours.toFixed(2);t.totalHours=e.toString().split(".")[0],t.totalMinutes=e.toString().split(".")[1]}this.labor.workOrderLaborList[0][r.description.toLowerCase()].push(t);break}"billorInvoice"===this.gridActiveTab&&(this.quoteChargesList=this.data.laborList)}},e=>{this.handleError(e),this.isSpinnerVisible=!1})),this.isSubWorkOrder||(1==this.workOrderGeneralInformation.isSinglePN?this.labor.employeeId=this.workOrderGeneralInformation.partNumbers[0].technicianId:this.workOrderGeneralInformation.partNumbers.forEach(e=>{e.id==this.workOrderPartNumberId&&(this.labor.employeeId=e.technicianId)}))}otherOptionTabSelected(e){this.subTabWorkFlow="",this.subTabMainComponent="",this.subTabOtherOptions="",setTimeout(()=>{this.subTabOtherOptions=e},0),"charges"===e?this.getChargesListByWorkOrderId():"exclusions"===e?this.getExclusionListByWorkOrderId():"freight"===e&&this.getFreightListByWorkOrderId()}mainComponentTabSelected(e){this.subTabMainComponent=e}getChargesListByWorkOrderId(){1==this.isSubWorkOrder?(this.isSpinnerVisible=!0,this.workOrderService.getSubWorkOrderChargesList(this.subWOPartNoId).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.isSpinnerVisible=!1;for(let r in e)e[r].unitCost=e[r].unitCost?Object(C.b)(e[r].unitCost,2):"0.00",e[r].extendedCost=e[r].extendedCost?Object(C.b)(e[r].extendedCost,2):"0.00",e[r].unitPrice=e[r].unitPrice?Object(C.b)(e[r].unitPrice,2):"0.00",e[r].extendedPrice=e[r].extendedPrice?Object(C.b)(e[r].extendedPrice,2):"0.00",e[r].refNum=e[r].referenceNo;this.workOrderChargesList=e},e=>{this.handleError(e),this.isSpinnerVisible=!1})):0!==this.workFlowWorkOrderId&&this.workOrderId&&(this.isSpinnerVisible=!0,this.workOrderService.getWorkOrderChargesList(this.workFlowWorkOrderId,this.workOrderId).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.isSpinnerVisible=!1;for(let r in e)e[r].unitCost=e[r].unitCost?Object(C.b)(e[r].unitCost,2):"0.00",e[r].extendedCost=e[r].extendedCost?Object(C.b)(e[r].extendedCost,2):"0.00",e[r].unitPrice=e[r].unitPrice?Object(C.b)(e[r].unitPrice,2):"0.00",e[r].extendedPrice=e[r].extendedPrice?Object(C.b)(e[r].extendedPrice,2):"0.00";this.workOrderChargesList=e,"billorInvoice"===this.gridActiveTab&&(this.workOrderChargesList=this.workOrderChargesList)},e=>{this.handleError(e),this.isSpinnerVisible=!1}))}getExclusionListByWorkOrderId(){0!==this.workFlowWorkOrderId&&this.workOrderId&&(this.isSpinnerVisible=!0,this.workOrderService.getWorkOrderExclusionsList(this.workFlowWorkOrderId,this.workOrderId).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.isSpinnerVisible=!1,this.workOrderExclusionsList=e;for(let r in this.workOrderExclusionsList)this.workOrderExclusionsList[r].unitCost=this.workOrderExclusionsList[r].unitCost.toFixed(2),this.workOrderExclusionsList[r].extendedCost=this.workOrderExclusionsList[r].extendedCost.toFixed(2)},e=>{this.handleError(e),this.isSpinnerVisible=!1}))}saveWorkOrderExclusionsList(e){const r=e.exclusions.map(e=>Object.assign({},e,{masterCompanyId:this.authService.currentUser.masterCompanyId,isActive:!0,createdBy:this.userName,updatedBy:this.userName,workOrderId:this.workOrderId,workFlowWorkOrderId:this.workFlowWorkOrderId,estimtPercentOccurranceId:e.estimtPercentOccurranceId}));this.isSpinnerVisible=!0,this.workOrderService.createWorkOrderExclusionList(r).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.isSpinnerVisible=!1,this.workFlowObject.charges=[],this.alertService.showMessage(this.moduleName,"Saved Work Order Exclusions  Succesfully",k.d.success),this.getExclusionListByWorkOrderId()},e=>{this.isSpinnerVisible=!1,this.errorHandling(e)})}updateWorkOrderExclusionsList(e){const r=e.exclusions.map(e=>Object.assign({},e,{masterCompanyId:this.authService.currentUser.masterCompanyId,isActive:!0,createdBy:this.userName,updatedBy:this.userName,workOrderId:this.workOrderId,workFlowWorkOrderId:this.workFlowWorkOrderId}));this.isSpinnerVisible=!0,this.workOrderService.updateWorkOrderExclusionList(r).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.isSpinnerVisible=!1,this.workFlowObject.charges=[],this.alertService.showMessage(this.moduleName,"Update Work Order Exclusions  Succesfully",k.d.success),this.getExclusionListByWorkOrderId()},e=>{this.isSpinnerVisible=!1,this.errorHandling(e)})}getFreightListByWorkOrderId(){0!==this.workFlowWorkOrderId&&this.workOrderId&&(this.isSpinnerVisible=!0,this.workOrderService.getWorkOrderFrieghtsList(this.workFlowWorkOrderId,this.workOrderId,this.isSubWorkOrder,this.subWOPartNoId).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.isSpinnerVisible=!1,this.workOrderFreightList=e},e=>{this.handleError(e),this.isSpinnerVisible=!1}))}saveWorkOrderFreightsList(e){this.freightsArr=[],1==this.isSubWorkOrder?this.freightsArr=e.map(e=>Object.assign({},e,{masterCompanyId:this.authService.currentUser.masterCompanyId,isActive:!0,isDeleted:!1,createdDate:new Date,updatedDate:new Date,createdBy:this.userName,updatedBy:this.userName,workOrderId:this.subWorkOrderDetails.workOrderId,workFlowWorkOrderId:this.workFlowWorkOrderId,estimtPercentOccurranceId:e.estimtPercentOccurrance,subWOPartNoId:this.subWOPartNoId,subWorkOrderId:this.subWorkOrderDetails.subWorkOrderId?this.subWorkOrderDetails.subWorkOrderId:this.workOrderId})):this.freightsArr=e.map(e=>Object.assign({},e,{masterCompanyId:this.authService.currentUser.masterCompanyId,isActive:!0,isDeleted:!1,createdDate:new Date,updatedDate:new Date,createdBy:this.userName,updatedBy:this.userName,workOrderId:this.workOrderId,workFlowWorkOrderId:this.workFlowWorkOrderId,estimtPercentOccurranceId:e.estimtPercentOccurrance})),this.isSpinnerVisible=!0,this.workOrderService.createWorkOrderFreightList(this.freightsArr,this.isSubWorkOrder).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.isSpinnerVisible=!1,this.freight=[],this.alertService.showMessage(this.moduleName,"Saved Work Order Freight  Succesfully",k.d.success),this.getFreightListByWorkOrderId()},e=>{this.isSpinnerVisible=!1,this.handleError(e)})}updateWorkOrderFreightsList(e){this.freightsArr=[],1==this.isSubWorkOrder?(this.freightsArr=e.map(e=>Object.assign({},e,{masterCompanyId:this.authService.currentUser.masterCompanyId,isActive:!0,isDeleted:!1,createdBy:this.userName,updatedBy:this.userName,workOrderId:this.subWorkOrderDetails.workOrderId,workFlowWorkOrderId:this.workFlowWorkOrderId,estimtPercentOccurranceId:e.estimtPercentOccurrance,subWOPartNoId:this.subWOPartNoId,subWorkOrderId:this.subWorkOrderDetails.subWorkOrderId?this.subWorkOrderDetails.subWorkOrderId:this.workOrderId})),this.isSpinnerVisible=!0,this.workOrderService.createWorkOrderFreightList(this.freightsArr,this.isSubWorkOrder).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.freight=[],this.isSpinnerVisible=!1,this.alertService.showMessage(this.moduleName,"Updated Work Order Freight  Succesfully",k.d.success),this.getFreightListByWorkOrderId()},e=>{this.isSpinnerVisible=!1,this.handleError(e)})):(this.freightsArr=e.map(e=>Object.assign({},e,{masterCompanyId:this.authService.currentUser.masterCompanyId,isActive:!0,isDeleted:!1,createdBy:this.userName,updatedBy:this.userName,workOrderId:this.workOrderId,workFlowWorkOrderId:this.workFlowWorkOrderId,estimtPercentOccurranceId:e.estimtPercentOccurrance})),this.isSpinnerVisible=!0,this.workOrderService.updateWorkOrderFreightList(this.freightsArr).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.freight=[],this.isSpinnerVisible=!1,this.alertService.showMessage(this.moduleName,"Updated Work Order Freight  Succesfully",k.d.success),this.getFreightListByWorkOrderId()},e=>{this.isSpinnerVisible=!1,this.handleError(e)}))}filterPartNumber(e){if(this.partNumberList=this.partNumberOriginalData,void 0!==e.query&&null!==e.query){const r=[...this.partNumberOriginalData.filter(r=>r.partNumber.toLowerCase().includes(e.query.toLowerCase()))];this.partNumberList=r}}filterTechnician(e){if(this.technicianList=this.technicianByExpertiseTypeList,void 0!==e.query&&null!==e.query){const r=[...this.technicianByExpertiseTypeList.filter(r=>r.name.toLowerCase().includes(e.query.toLowerCase()))];this.technicianList=r}}saveWorkOrderBilling(e){const r=Object.assign({},e,this.loginDetailsForCreate,{workOrderId:this.workOrderId,workFlowWorkOrderId:this.workFlowWorkOrderId,workOrderPartNoId:this.workOrderPartNumberId,itemMasterId:this.workOrderPartNumberId,customerId:Object(C.a)("customerId",this.savedWorkOrderData.customerId),employeeId:Object(C.a)("value",this.savedWorkOrderData.employeeId),soldToCustomerId:Object(C.a)("customerId",e.soldToCustomerId),shipToCustomerId:Object(C.a)("customerId",e.shipToCustomerId),invoiceTime:N(e.invoiceTime,["h:mm A"]).format("HH:mm")});this.isEditBilling?(this.isSpinnerVisible=!0,this.workOrderService.updateBillingByWorkOrderId(r).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.isSpinnerVisible=!1,this.alertService.showMessage(this.moduleName,"Updated Work Order Billing Succesfully",k.d.success)},e=>{this.isSpinnerVisible=!1,this.errorHandling(e)})):(this.isSpinnerVisible=!0,this.workOrderService.createBillingByWorkOrderId(r).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.isSpinnerVisible=!1,this.alertService.showMessage(this.moduleName,"Saved Work Order Billing Succesfully",k.d.success)},e=>{this.isSpinnerVisible=!1,this.errorHandling(e)}))}billingCreateOrEdit(){this.isSpinnerVisible=!0,this.workOrderService.getBillingEditData(this.workOrderId,this.workOrderPartNumberId).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.isSpinnerVisible=!1,"Invoice not created for this Work Order MPN"==e.response?this.isbillingNotCreated=!0:this.isbillingNotCreated=!1,e.response?this.getWorkOrderDetailsFromHeader():(this.billing=Object.assign({},e,{shipDate:new Date(e.shipDate),printDate:new Date(e.printDate),woOpenDate:new Date(e.openDate),invoiceDate:new Date(e.invoiceDate),soldToCustomerId:{customerId:e.soldToCustomerId,customerName:e.soldToCustomer},shipToCustomerId:{customerId:e.shipToCustomerId,customerName:e.shipToCustomer},customerRef:e.customerReference,woType:e.workOrderType,shipAccountInfo:e.shippingAccountinfo}),this.isEditBilling=!0)},e=>{this.isSpinnerVisible=!1,this.getWorkOrderDetailsFromHeader(),this.errorHandling(e)})}getWorkOrderDetailsFromHeader(){this.isSpinnerVisible=!0,this.workOrderId=this.isSubWorkOrder?this.subWorkOrderDetails.workOrderId:this.workOrderId,this.workOrderService.viewWorkOrderHeader(this.workOrderId).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.isSpinnerVisible=!1;const r=e;this.billing=new A,this.billing=Object.assign({},this.billing,{customerRef:r.customerReference,employeeName:r.employee,woOpenDate:new Date(r.openDate),salesPerson:r.salesperson,woType:r.workOrderType,creditTerm:r.creditTerm,workScope:r.workScope,managementStructureId:r.managementStructureId,soldToCustomerId:{customerId:this.workOrderGeneralInformation.customerId.customerId,customerName:this.workOrderGeneralInformation.customerId.customerName},shipToCustomerId:{customerId:this.workOrderGeneralInformation.customerId.customerId,customerName:this.workOrderGeneralInformation.customerId.customerName}})},e=>{this.handleError(e),this.isSpinnerVisible=!1})}getQuoteIdByWfandWorkOrderId(){this.isSpinnerVisible=!0,this.workFlowWorkOrderId&&this.workOrderId&&this.quoteService.getQuoteIdByWfandWorkOrderId(this.workFlowWorkOrderId,this.workOrderId).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.isSpinnerVisible=!1,e&&(this.quoteData=e,this.workOrderQuoteId=e.quoteDetailId,this.quoteService.getSavedQuoteDetails(this.workFlowWorkOrderId).subscribe(e=>{"Approved"==this.quotestatusofCurrentPart?(this.getQuoteIdByWfandWorkOrderId(),this.buildMethodDetails=e,this.getQuoteCostingData(e.buildMethodId)):(this.quotestatusofCurrentPart="NotApproved",this.getMaterialListByWorkOrderId(),this.getChargesListByWorkOrderId(),this.getWorkFlowLaborList())}))},e=>{this.handleError(e),this.isSpinnerVisible=!1})}getQuoteCostingData(e){this.getQuoteMaterialListByWorkOrderQuoteId(e),this.getQuoteFreightsListByWorkOrderQuoteId(e),this.getQuoteChargesListByWorkOrderQuoteId(e),this.getQuoteLaborListByWorkOrderQuoteId(e)}getQuoteMaterialListByWorkOrderQuoteId(e){return n.a(this,void 0,void 0,(function*(){this.isSpinnerVisible=!0,yield this.quoteService.getQuoteMaterialList(this.workOrderQuoteId,e).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.isSpinnerVisible=!1,this.quoteMaterialList=e},e=>{this.handleError(e),this.isSpinnerVisible=!1})}))}getQuoteFreightsListByWorkOrderQuoteId(e){return n.a(this,void 0,void 0,(function*(){this.isSpinnerVisible=!0,yield this.quoteService.getQuoteFreightsList(this.workOrderQuoteId,e).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.isSpinnerVisible=!1,this.quoteFreightsList=e},e=>{this.handleError(e),this.isSpinnerVisible=!1})}))}getQuoteChargesListByWorkOrderQuoteId(e){return n.a(this,void 0,void 0,(function*(){this.isSpinnerVisible=!0,yield this.quoteService.getQuoteChargesList(this.workOrderQuoteId,e).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.isSpinnerVisible=!1,this.quoteChargesList=e},e=>{this.handleError(e),this.isSpinnerVisible=!1})}))}getQuoteLaborListByWorkOrderQuoteId(e){return n.a(this,void 0,void 0,(function*(){this.isSpinnerVisible=!0,yield this.quoteService.getQuoteLaborList(this.workOrderQuoteId,e).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{if(this.isSpinnerVisible=!1,e){let r=this.workFlowWorkOrderId;if(e){let t=this.labor.workOrderLaborList;this.quoteLaborList=Object.assign({},e,{workOrderLaborList:t}),this.quoteLaborList.dataEnteredBy=Object(C.d)("value",e.dataEnteredBy,this.employeeList),this.quoteLaborList.workFlowWorkOrderId=r,this.quoteLaborList.workOrderLaborList[0]||(this.quoteLaborList.workOrderLaborList=[{}]),this.taskList.forEach(r=>{this.quoteLaborList.workOrderLaborList[0][r.description.toLowerCase()]=[],e.laborList.forEach(e=>{if(e.taskId==r.taskId){let t={};if(e.hours){let r=e.hours.toFixed(2);e.totalHours=r.toString().split(".")[0],e.totalMinutes=r.toString().split(".")[1]}t=Object.assign({},e,{employeeId:{label:e.employeeName,value:e.employeeId}}),this.quoteLaborList.workOrderLaborList[0][r.description.toLowerCase()].push(t)}})})}}else this.taskList.forEach(e=>{this.quoteLaborList.workOrderLaborList=[{}],this.quoteLaborList.workOrderLaborList[0][e.description.toLowerCase()]=[]})},e=>{this.handleError(e),this.isSpinnerVisible=!1})}))}sumOfMaterialList(){this.billing.materialCost=this.quoteMaterialList.reduce((e,r)=>e+r.billingAmount,0)}sumofLaborOverHead(){}sumofCharges(){this.billing.miscChargesCost=this.quoteChargesList.reduce((e,r)=>e+r.billingAmount,0),this.calculateTotalWorkOrderCost()}calculateTotalWorkOrderCost(){this.billing.totalWorkOrderCost=this.billing.materialCost+this.billing.laborOverHeadCost+this.billing.miscChargesCost}getWorkOrderQuoteDetail(e,r){this.isSpinnerVisible=!0,this.quoteService.getWorkOrderQuoteDetail(e,r).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.isSpinnerVisible=!1,e&&(this.workOrderQuoteId=e.workOrderQuote.workOrderQuoteId)},e=>{this.handleError(e),this.isSpinnerVisible=!1})}getPartNosByCustomer(e,r){return n.a(this,void 0,void 0,(function*(){yield this.workOrderService.getPartNosByCustomer(e,r).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{if(this.partNumberOriginalData=e,this.partNumberOriginalData.length>0)for(let r=0;r<this.partNumberOriginalData.length;r++)this.salesOrderReferenceData&&this.partNumberOriginalData[r].itemMasterId==this.salesOrderReferenceData.itemMasterId&&(this.masterParterIdForSalesOrderReference=this.partNumberOriginalData[r],this.onSelectedPartNumber(this.masterParterIdForSalesOrderReference,this.workOrderGeneralInformation.partNumbers[0],0))})}))}getMultiplePartsNumbers(){return n.a(this,void 0,void 0,(function*(){yield this.workOrderService.getMultipleParts().pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.partNumberOriginalData=e},e=>{this.handleError(e)})}))}getWorkOrderDatesFoRTat(){this.workOrderId=this.workOrderGeneralInformation?this.workOrderGeneralInformation.workOrderId:this.workOrderId,this.workOrderId&&this.workOrderService.getWorkOrderDatesFoRTat(this.workOrderId).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{e&&(this.quoteCreatedDate=e)},e=>{this.handleError(e)})}calculatePartTat(e){const r=this.workOrderGeneralInformation;let t=new Date;null!=r.shippedDate?(this.days1=N(r.sentDate).diff(e.receivedDate,"days"),this.days2=N(r.shippedDate).diff(r.approvedDate,"days"),e.tatDaysCurrent=this.days1+this.days2):null==r.shippedDate&&null!=r.approvedDate?(this.days1=N(r.sentDate).diff(e.receivedDate,"days"),this.days2=N(t).diff(r.approvedDate,"days"),e.tatDaysCurrent=this.days1+this.days2):null==r.shippedDate&&null==r.approvedDate&&null!=r.sentDate?(this.days1=N(r.sentDate).diff(e.receivedDate,"days"),e.tatDaysCurrent=this.days1>0?this.days1:0):e.tatDaysCurrent=N(t).diff(e.receivedDate,"days")}filterCustContacts(e){if(this.customerContactInfo=this.customerContactList,void 0!==e.query&&null!==e.query){const r=[...this.customerContactList.filter(r=>r.contactName.toLowerCase().includes(e.query.toLowerCase()))];this.customerContactInfo=r}}getAllCustomerContact(e,r){this.commonService.getCustomerContactsById(e).subscribe(e=>{if(this.customerContactList=e.map(e=>Object.assign({},e,{workPhone:`${e.workPhone} ${e.workPhoneExtn}`,customerContact:e.name})),0==this.isSubWorkOrder){const e=this.customerContactList.filter(e=>(e.isDefaultContact,e));"edit"==r?(this.myCustomerContact=this.workOrderGeneralInformation.customerDetails,this.workOrderGeneralInformation.customerPhoneNo=this.workOrderGeneralInformation.customerDetails.customerPhone):(this.myCustomerContact=e[0],this.workOrderGeneralInformation.customerPhoneNo=e[0].workPhone)}},e=>{this.isSpinnerVisible=!1,this.handleError(e)})}onSelectCustomerContact(e){this.workOrderGeneralInformation.customerPhoneNo=e.workPhone,this.myCustomerContact=e}onClickQuoteTab(){this.isQuoteAction=!0,this.hideWOHeader=!0;(document.querySelector("mat-sidenav-content")||window).scrollTo(0,0)}enableBackToWO(e){this.hideWOHeader=!1,this.gridActiveTab="workFlow",this.gridTabChange("materialList");(document.querySelector("mat-sidenav-content")||window).scrollTo(0,0)}getCustomerWarningsList(){this.commonService.smartDropDownList("CustomerWarningType","CustomerWarningTypeId ","Name").pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{e.forEach(e=>{"Create WO for MPN"!=e.label?"Create WO Quote for MPN"==e.label?this.createQuoteListID=e.value:"Create WO Billing for PMN"==e.label&&(this.customerBillingListID=e.value):this.customerWarningListId=e.value}),(this.enumcall=!0)&&this.workOrderGeneralInformation.customerDetails&&this.workOrderGeneralInformation.customerDetails.customerId&&this.customerWarnings(this.workOrderGeneralInformation.customerDetails.customerId)},e=>{this.isSpinnerVisible=!1,this.handleError(e)})}customerWarnings(e){null==this.customerWarningListId?(this.getCustomerWarningsList(),this.enumcall=!0):(this.enumcall=!1,e&&this.customerWarningListId&&this.isCustomerAction?(this.warningMessage="",this.validateWarnings(e,this.customerWarningListId)):e&&this.createQuoteListID&&this.isQuoteAction?(this.warningMessage="",this.validateWarnings(e,this.createQuoteListID)):e&&this.customerBillingListID&&this.isBillAction||e&&this.createQuoteListID&&this.isQuoteActionTab?(this.warningMessage="",this.validateWarnings(e,this.customerBillingListID)):e&&this.customerWarningListId&&this.isEditWorkordershowMsg&&(this.warningMessage="",this.validateWarnings(e,this.customerWarningListId),this.restrictID=0))}validateWarnings(e,r){let t=e.customerId?e.customerId:e;this.commonService.customerWarnings(t,r).subscribe(t=>{t&&(this.warningMessage=t.warningMessage,this.warningID=t.customerWarningId,1==this.isEditWorkordershowMsg&&0!=t.customerWarningId?this.showAlertMessage():this.customerResctrictions(e,this.warningMessage,r))},e=>{this.isSpinnerVisible=!1,this.handleError(e)})}customerResctrictions(e,r,t){let n=e.customerId?e.customerId:e;this.restrictMessage="",this.commonService.customerResctrictions(n,t).subscribe(e=>{e&&(this.restrictMessage=e.restrictMessage,this.restrictID=e.customerWarningId,0!=this.warningID&&0==this.restrictID||0==this.warningID&&0!=this.restrictID||0!=this.warningID&&0!=this.restrictID?this.showAlertMessage():0==this.warningID&&0==this.restrictID&&(1==this.isQuoteAction&&window.open("/workordersmodule/workorderspages/app-work-order-quote?workorderid="+this.workOrderId),1==this.isQuoteActionTab&&this.onClickQuoteTab(),this.isBillAction,this.isBillAction=!1,this.isQuoteAction=!1,this.isCustomerAction=!1))},e=>{this.isSpinnerVisible=!1,this.handleError(e)})}showAlertMessage(){w("#warnRestrictMesg").modal("show")}WarnRescticModel(){1==this.isQuoteAction&&0==this.restrictID?window.open("/workordersmodule/workorderspages/app-work-order-quote?workorderid="+this.workOrderId):1==this.isCustomerAction&&0!=this.restrictID&&(this.workOrderGeneralInformation.customerId=null,this.myCustomerContact=null,this.workOrderGeneralInformation.customerPhoneNo=null),this.isBillAction=!1,this.isQuoteAction=!1,this.isCustomerAction=!1,this.isEditWorkordershowMsg=!1,w("#warnRestrictMesg").modal("hide"),this.warningMessage="",this.restrictMessage=""}clearInputShipTo(){this.sourcePoApproval.shipToUserId=null,this.sourcePoApproval.shipToAddressId="null",this.sourcePoApproval.shipToContactId=null,this.sourcePoApproval.shipToMemo="",this.sourcePoApproval.shipViaId="null",this.sourcePoApproval.shippingCost=null,this.sourcePoApproval.handlingCost=null,this.sourcePoApproval.shippingAcctNum=null,this.shipToAddress={},this.shipViaList=[],this.shipToCusData=[],this.vendorSelected=[],this.companySiteList_Shipping=[]}checkValidOnChange(e,r){"null"!=e&&"companyId"==r&&(this.managementValidCheck=!1),"null"!=e&&"shipToUserTypeId"==r&&(this.shipToUserTypeValidCheck=!1),"null"!=e&&"shipToAddressId"==r&&(this.shipToSiteNameValidCheck=!1),"null"!=e&&"shipViaId"==r&&(this.shipViaValidCheck=!1),"null"!=e&&"billToUserTypeId"==r&&(this.billToUserTypeValidCheck=!1),"null"!=e&&"billToAddressId"==r&&(this.billToSiteNameValidCheck=!1)}filterNames(e){if(this.customerNames=this.allCustomers,void 0!==e.query&&null!==e.query){const r=[...this.allCustomers.filter(r=>r.label.toLowerCase().includes(e.query.toLowerCase()))];this.customerNames=r}}loadcustomerData(){this.commonService.smartDropDownList("Customer","CustomerId","Name").subscribe(e=>{this.allCustomers=e},e=>{this.isSpinnerVisible=!1,this.handleError(e)})}clearInputOnClickUserIdShipTo(){this.sourcePoApproval.shipToAddressId="null",this.sourcePoApproval.shipToContactId=null,this.sourcePoApproval.shipToMemo="",this.sourcePoApproval.shipViaId="null",this.sourcePoApproval.shippingCost=null,this.sourcePoApproval.handlingCost=null,this.sourcePoApproval.shippingAcctNum=null,this.shipToAddress={},this.shipViaList=[],this.shipToCusData=[],this.vendorSelected=[],this.companySiteList_Shipping=[]}onShipToGetAddress(e,r){this.shipToAddress={},1==e.shipToUserTypeId||1==e.shipToUserType?this.shipToAddress=Object(C.d)("customerShippingAddressId",r,this.shipToCusData):2!=e.shipToUserTypeId&&2!=e.shipToUserType||(this.shipToAddress=Object(C.d)("vendorShippingAddressId",r,this.vendorSelected)),this.shipToAddress=Object.assign({},this.shipToAddress,{country:this.shipToAddress.countryName?this.shipToAddress.countryName:this.shipToAddress.country})}getShipViaDetailsForShipTo(e){this.isSpinnerVisible=!0,this.commonService.getShipViaDetailsByModule(this.sourcePoApproval.shipToUserTypeId,this.shipToSelectedvalue).subscribe(r=>{this.isSpinnerVisible=!1,this.shipViaList=r;for(var t=0;t<this.shipViaList.length;t++)this.shipViaList[t].isPrimary&&(this.sourcePoApproval.shipViaId=this.shipViaList[t].shippingViaId,this.getShipViaDetails(this.sourcePoApproval.shipViaId));e&&(this.sourcePoApproval.shipViaId=e,this.getShipViaDetails(e))},e=>{this.handleError(e),this.isSpinnerVisible=!1})}getShipViaDetails(e){this.sourcePoApproval.shippingAcctNum=null;var r=this.sourcePoApproval.shipToUserTypeId?parseInt(this.sourcePoApproval.shipToUserTypeId):0;0!=e&&null!=e&&(this.isSpinnerVisible=!0,this.commonService.getShipViaDetailsById(e,r).subscribe(e=>{this.isSpinnerVisible=!1;const r=e;this.sourcePoApproval.shippingAcctNum=r.shippingAccountInfo,this.sourcePoApproval.shipVia=r.shipVia,this.sourcePoApproval.shipViaId=r.shippingViaId},e=>{this.handleError(e),this.isSpinnerVisible=!1}))}enableAddSave(){this.enableAddSaveBtn=!0}filterCustomerContactsForShipTo(e){if(this.firstNamesShipTo=this.shipToContactData,void 0!==e.query&&null!==e.query){const r=[...this.shipToContactData.filter(r=>r.firstName.toLowerCase().includes(e.query.toLowerCase()))];this.firstNamesShipTo=r}}filterCompanyNameforBilling(e){this.legalEntityList_ForBilling=this.legalEntity;const r=[...this.legalEntity.filter(r=>r.label.toLowerCase().includes(e.query.toLowerCase()))];this.legalEntityList_ForBilling=r}filterCompanyNameforShipping(e){this.legalEntityList_ForShipping=this.legalEntity;const r=[...this.legalEntity.filter(r=>r.label.toLowerCase().includes(e.query.toLowerCase()))];this.legalEntityList_ForShipping=r}getLegalEntity(){this.commonService.smartDropDownList("LegalEntity","LegalEntityId","Name").subscribe(e=>{this.legalEntity=e},e=>{this.handleError(e)})}errorHandling(e){this.handleError(e)}getMaterialListByWorkOrderIdForSubWO(){this.workOrderMaterialList=[],this.workOrderService.getSubWorkOrderMaterialList(this.subWOPartNoId).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{e.length>0&&(e.forEach(e=>{this.getValues(e),e.isShowPlus=!0,e.currency&&(e.currency=e.currency.symbol)}),this.workOrderMaterialList=e,this.materialStatus=e[0].partStatusId)},e=>{this.handleError(e)})}handleError(e){e.error.errors?e.error.errors.forEach(e=>{this.alertService.showMessage(this.moduleName,e.message,k.d.error)}):this.alertService.showMessage(this.moduleName,"Failed due to some  error",k.d.error)}};fe.ctorParameters=()=>[{type:k.b},{type:p.a},{type:q.a},{type:H.a},{type:Q.a},{type:j.a},{type:G},{type:Y.a},{type:u.a},{type:v.a},{type:o.ActivatedRoute},{type:o.Router},{type:h.a},{type:ve.c},{type:c.a},{type:J.a},{type:ke.a},{type:be.a}],n.b([Object(a.Input)()],fe.prototype,"isView",void 0),n.b([Object(a.Input)()],fe.prototype,"isEdit",void 0),n.b([Object(a.Input)()],fe.prototype,"workOrderTypes",void 0),n.b([Object(a.Input)()],fe.prototype,"workOrderStatusList",void 0),n.b([Object(a.Input)()],fe.prototype,"creditTerms",void 0),n.b([Object(a.Input)()],fe.prototype,"jobTitles",void 0),n.b([Object(a.Input)()],fe.prototype,"employeesOriginalData",void 0),n.b([Object(a.Input)()],fe.prototype,"techStationList",void 0),n.b([Object(a.Input)()],fe.prototype,"salesPersonOriginalList",void 0),n.b([Object(a.Input)()],fe.prototype,"salesAgentsOriginalList",void 0),n.b([Object(a.Input)()],fe.prototype,"csrOriginalList",void 0),n.b([Object(a.Input)()],fe.prototype,"technicianOriginalList",void 0),n.b([Object(a.Input)()],fe.prototype,"technicianByExpertiseTypeList",void 0),n.b([Object(a.Input)()],fe.prototype,"workScopesList",void 0),n.b([Object(a.Input)()],fe.prototype,"workOrderStagesList",void 0),n.b([Object(a.Input)()],fe.prototype,"priorityList",void 0),n.b([Object(a.Input)()],fe.prototype,"partNumberOriginalData",void 0),n.b([Object(a.Input)()],fe.prototype,"workOrderGeneralInformation",void 0),n.b([Object(a.Input)()],fe.prototype,"isSubWorkOrder",void 0),n.b([Object(a.Input)()],fe.prototype,"subWorkOrderDetails",void 0),n.b([Object(a.Input)()],fe.prototype,"showTabsGrid",void 0),n.b([Object(a.Input)()],fe.prototype,"workOrderId",void 0),n.b([Object(a.Input)()],fe.prototype,"currencyList",void 0),n.b([Object(a.Input)()],fe.prototype,"legalEntityList",void 0),n.b([Object(a.Input)()],fe.prototype,"conditionList",void 0),n.b([Object(a.Input)()],fe.prototype,"workorderSettings",void 0),n.b([Object(a.Input)()],fe.prototype,"workFlowWorkOrderId",void 0),n.b([Object(a.Input)()],fe.prototype,"showGridMenu",void 0),n.b([Object(a.Output)()],fe.prototype,"getLatestDefaultSettingByWorkOrderTypeId",void 0),n.b([Object(a.Input)()],fe.prototype,"isListView",void 0),n.b([Object(a.Input)()],fe.prototype,"subWoMpnGridUpdated",void 0),fe=n.b([Object(a.Component)({selector:"app-work-order-add",template:n.c(t("n+4h")).default,animations:[F.a],providers:[J.a],styles:[n.c(t("swCc")).default]})],fe);let ye=class{constructor(){w(document).ready((function(){w(".labor-inout-hrs-block").hide(),w(".labor-hrs-scan-block").hide(),w("input[type=radio][name=labor-blocks-input]").change((function(){"labor-block1"==this.value?(w(".labor-inout-hrs-block").hide(),w(".labor-hrs-block").show(),w(".labor-hrs-scan-block").hide()):"labor-block2"==this.value?(w(".labor-inout-hrs-block").show(),w(".labor-hrs-block").hide(),w(".labor-hrs-scan-block").hide()):"labor-block3"==this.value&&(w(".labor-inout-hrs-block").hide(),w(".labor-hrs-block").hide(),w(".labor-hrs-scan-block").show())})),w(".flat-data").hide(),w("input[type=radio][name=billing-options]").change((function(){"cost"==this.value?(w(".flat-data").hide(),w(".cost-data").show()):"flat"==this.value&&(w(".flat-data").show(),w(".cost-data").hide())})),w((function(){w("input.decimals2").on("input",(function(){this.value=this.value.replace(/[^\d.]/g,"").replace(/(^[\d]{2})[\d]/g,"$1").replace(/(\..*)\./g,"$1").replace(/(\.[\d]{2})./g,"$1")})),w("input.time").on("input",(function(){this.value=this.value.replace(/[^\d.]/g,"").replace(/(^[\d]{2})[\d]/g,"$1").replace(/(\..*)\./g,"$1").replace(/(\.[\d]{2})./g,"$1")}))})),w(".labor-inout-hrs-block").hide(),w(".labor-inout-hrs-btn").click((function(){w(".labor-inout-hrs-block").show(),w(".labor-hrs-block").hide()})),w(".labor-hrs-btn").click((function(){w(".labor-hrs-block").show(),w(".labor-inout-hrs-block").hide()}))}))}};ye=n.b([Object(a.Component)({selector:"app-manual-entry-labor-hours",template:n.c(t("XNBr")).default,animations:[F.a],styles:[n.c(t("tBF8")).default]})],ye);let Ie=class{constructor(){w(document).ready((function(){w(".flat-data").hide(),w("input[type=radio][name=billing-options]").change((function(){"cost"==this.value?(w(".flat-data").hide(),w(".cost-data").show()):"flat"==this.value&&(w(".flat-data").show(),w(".cost-data").hide())}))}))}};Ie=n.b([Object(a.Component)({selector:"app-system-generated-labor-hours",template:n.c(t("517n")).default,animations:[F.a],styles:[n.c(t("oz/7")).default]})],Ie);let Oe=class{constructor(){}};Oe=n.b([Object(a.Component)({selector:"app-bar-code-scanned-labor-hours",template:n.c(t("GfFs")).default,animations:[F.a],styles:[n.c(t("imF+")).default]})],Oe);let De=class{constructor(){w(document).ready((function(){w("#checkall").click((function(){w(".pcheck").prop("checked",w(this).prop("checked"))})),w(".flat-data").hide(),w("input[type=radio][name=billing-options]").change((function(){"cost"==this.value?(w(".flat-data").hide(),w(".cost-data").show()):"flat"==this.value&&(w(".flat-data").show(),w(".cost-data").hide())}))}))}};De=n.b([Object(a.Component)({selector:"app-work-order-equipment-list",template:n.c(t("+XBk")).default,animations:[F.a],styles:[n.c(t("Juwu")).default]})],De);let xe=class{constructor(){w(document).ready((function(){w(".consultant-setup").hide(),w((function(){w('input[name="emp-consultant"]').on("click",(function(){"Consultant"==w(this).val()?(w(".consultant-setup").show(),w(".employee-setup").hide(),w(".save-btn").show(),w(".nxt-btn").hide(),w(".step3-nav").hide()):(w(".employee-setup").show(),w(".consultant-setup").hide(),w(".save-btn").hide(),w(".nxt-btn").show(),w(".step3-nav").show())}))})),w(".lhourpay-block").hide(),w(".certification-block").hide(),w("#lhourpay-checkbox").change((function(){this.checked?w(".lhourpay-block").show():w(".lhourpay-block").hide()})),w("#certification-radio").change((function(){this.checked?w(".certification-block").show():w(".certification-block").hide()})),w((function(){w("input.amount").on("input",(function(){this.value=this.value.replace(/[^\d.]/g,"").replace(/(^[\d]{4})[\d]/g,"$1").replace(/(\..*)\./g,"$1").replace(/(\.[\d]{2})./g,"$1")}))})),w(".shiftsingle-block").hide(),w(".shiftmultiple-block").hide(),w('input[name="shift"]').click((function(){"shiftsingle"==w(this).attr("id")?(w(".shiftsingle-block").show(),w(".shiftmultiple-block").hide()):(w(".shiftmultiple-block").show(),w(".shiftsingle-block").hide())})),w(".hourpay-block").hide(),w(".salarypay-block").hide(),w('input[name="paytype"]').click((function(){"hourpay"==w(this).attr("id")?(w(".hourpay-block").show(),w(".salarypay-block").hide()):(w(".salarypay-block").show(),w(".hourpay-block").hide())})),w(".cparent-input").hide(),w("#cparent").change((function(){this.checked?w(".cparent-input").show():w(".cparent-input").hide()})),w(".rpma-input").hide(),w("#rpma").change((function(){this.checked?w(".rpma-input").show():w(".rpma-input").hide()})),w(".vbill-map").hide(),w("#vbill-map-check").change((function(){this.checked?w(".vbill-map").show():w(".vbill-map").hide()})),w(".vship-map").hide(),w("#vship-map-check").change((function(){this.checked?w(".vship-map").show():w(".vship-map").hide()})),w('[data-toggle="tooltip"]').tooltip(),w(".add").click((function(){w(".hide-model").hide(),w(".fade .in").hide()})),w((function(){w("input.cost").on("input",(function(){this.value=this.value.replace(/(\.[\d]{3})./g,"$1")}))}))}))}};xe=n.b([Object(a.Component)({selector:"app-work-order-equipment-check-in-out",template:n.c(t("RX9Y")).default,animations:[F.a],styles:[n.c(t("QmDO")).default]})],xe);var Se=t("de6x"),Ce=t("BhKy"),Le=t("PqYM");let Te=class{constructor(e,r,t,n,s,i,o,l,d,c,p){this.actionService=e,this.itemser=r,this.vendorService=t,this.workOrderService=n,this.conditionService=s,this.itemClassService=i,this.unitofmeasureService=o,this.authService=l,this.cdRef=d,this.modalService=c,this.alertService=p,this.isView=!1,this.taskList=[],this.mpnPartNumbersList=[],this.isSubWorkOrder=!1,this.subWorkOrderDetails={},this.saveMaterialListForWO=new a.EventEmitter,this.updateMaterialListForWO=new a.EventEmitter,this.saveRIParts=new a.EventEmitter,this.refreshData=new a.EventEmitter,this.statusId=null,this.minDateValue=new Date,this.addNewMaterial=!1,this.alternatePartData=[],this.checkedParts=[],this.isEdit=!1,this.isSpinnerVisible=!1,this.isShowEqPN=!1,this.isShowAlternatePN=!1,this.eqPartData=[],this.pageIndex=1,this.pageSize=10,this.interTotalRecords=0,this.interTotalPages=0,this.cols=[{field:"taskName",header:"Task"},{field:"line",header:"Line Num"},{field:"partNumber",header:"PN"},{field:"partDescription",header:"PN Description"},{field:"serialNumber",header:"Serial Num"},{field:"condition",header:"Cond"},{field:"stockLineNumber",header:"SL Num"},{field:"mandatoryOrSupplemental",header:"Request Type"},{field:"provision",header:"Provision"},{field:"quantity",header:"Qty Req",align:1},{field:"quantityReserved",header:"Qty Res",align:1},{field:"quantityIssued",header:"Qty Iss",align:1},{field:"qunatityTurnIn",header:"Qty Turned In"},{field:"partQuantityOnHand",header:"Qty OH",align:1},{field:"partQuantityAvailable",header:"Qty Avail",align:1},{field:"qunatityRemaining",header:"Qty Rem",align:1},{field:"uom",header:"UOM"},{field:"stockType",header:"Stk Type"},{field:"altEquiv",header:"Alt/Equiv"},{field:"itemClassification",header:"Classification"},{field:"partQuantityOnOrder",header:"Qty On Order",align:1},{field:"qunatityBackOrder",header:"Qty on BK Order",align:1},{field:"needDate",header:"Need Date"},{field:"controlNo",header:"Cntl Num"},{field:"controlId",header:"Cntl ID"},{field:"currency",header:"Curr"},{field:"unitCost",header:"Unit Cost",align:1},{field:"extendedCost",header:"Extended Cost",align:1},{field:"costDate",header:"Cost Date"},{field:"purchaseOrderNumber",header:"PO Num"},{field:"poNextDlvrDate",header:"PO Next Dlvr Date"},{field:"repairOrderNumber",header:"RO Num"},{field:"roNextDlvrDate",header:"RO Next Dlvr Date"},{field:"receiver",header:"Rec Num"},{field:"workOrderNumber",header:"WO Num"},{field:"subWorkOrder",header:"Sub-WO Num"},{field:"salesOrder",header:"SO Num"},{field:"figure",header:"Figure"},{field:"site",header:"Site"},{field:"wareHouse",header:"Warehouse"},{field:"location",header:"Location"},{field:"shelf",header:"Shelf"},{field:"bin",header:"Bin"},{field:"defered",header:"Deferred"},{field:"memo",header:"Memo"}],this.savebutonDisabled=!1,this.roleUpMaterialList=[],this.isAllow=!1,this.employeeList=[],this.currentRow={},this.handelParts=[],this.counter=600,this.tick=1e3,this.subWoRecord={},this.viewSubWolist=!1,this.moduleName=""}get userName(){return this.authService.currentUser?this.authService.currentUser.userName:""}ngOnInit(){if(this.savedWorkOrderData&&0==this.isSubWorkOrder)if(!this.savedWorkOrderData.isSinglePN&&this.mpnPartNumbersList)for(let e of this.mpnPartNumbersList)e.value.workOrderPartNumberId==this.mpnId&&(this.workFlowWorkOrderId=e.value.workOrderWorkFlowId);else this.workFlowWorkOrderId=this.savedWorkOrderData.workFlowWorkOrderId;else this.workFlowWorkOrderId=this.subWOPartNoId}ngOnChanges(e){if(this.savedWorkOrderData&&0==this.isSubWorkOrder)if(!this.savedWorkOrderData.isSinglePN&&this.mpnPartNumbersList)for(let r of this.mpnPartNumbersList)r.value.workOrderPartNumberId==this.mpnId&&(this.workFlowWorkOrderId=r.value.workOrderWorkFlowId);else this.workFlowWorkOrderId=this.savedWorkOrderData.workFlowWorkOrderId;else this.workFlowWorkOrderId=this.subWOPartNoId}ngOnDestroy(){this.countDown=null}closeAddNew(){this.addNewMaterial=!1}createNew(){this.isEdit=!1,this.editData=void 0,this.addNewMaterial=!0,this.taskList=this.taskList}edit(e){this.editData=void 0,this.cdRef.detectChanges(),this.isEdit=!0,this.addNewMaterial=!0,this.editData=Object.assign({},e)}openDelete(e,r){console.log("delete model"),this.currentRow=r,this.modal=this.modalService.open(e,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then(()=>{},()=>{})}delete(){1==this.isSubWorkOrder?this.workOrderService.deleteSubWorkOrderMaterialList(this.currentRow.subWorkOrderMaterialsId,this.userName).subscribe(e=>{this.refreshData.emit(),this.alertService.showMessage("","Deleted WorkOrder Material Successfully",k.d.success)},e=>{this.errorHandling(e)}):this.workOrderService.deleteWorkOrderMaterialList(this.currentRow.workOrderMaterialsId,this.userName).subscribe(e=>{this.refreshData.emit(),this.alertService.showMessage("","Deleted WorkOrder Material Successfully",k.d.success)},e=>{this.errorHandling(e)}),this.modal.close()}getRollupMaterialList(e,r){e.isShowPlus=!1,1==this.isSubWorkOrder?(this.isSpinnerVisible=!0,this.workOrderService.getSubWoMaterialRoleUps(e.subWorkOrderMaterialsId).subscribe(e=>{e.forEach((e,t)=>{e.myindex=r,e.currency&&(e.currency=e.currency.symbol),e.quantity=null,e.qunatityRemaining=null,e.line=r+1+"."+(t+1),this.getValues(e),this.isSpinnerVisible=!1},e=>{this.isSpinnerVisible=!1}),this.roleUpMaterialList=e;for(var t=0;t<this.roleUpMaterialList.length;t++)this.workOrderMaterialList.splice(r+t+1,0,this.roleUpMaterialList[t])},e=>{this.errorHandling(e)})):(this.isSpinnerVisible=!0,this.workOrderService.getWorkOrderRolMaterialList(e.workOrderMaterialsId).subscribe(e=>{e.forEach((e,t)=>{e.myindex=r,e.currency&&(e.currency=e.currency.symbol),e.quantity=null,e.qunatityRemaining=null,e.line=r+1+"."+(t+1),this.getValues(e)}),this.roleUpMaterialList=e;for(var t=0;t<this.roleUpMaterialList.length;t++)this.workOrderMaterialList.splice(r+t+1,0,this.roleUpMaterialList[t]);this.isSpinnerVisible=!1},e=>{this.isSpinnerVisible=!1,this.errorHandling(e)}))}removeRollUpList(e,r){e.isShowPlus=!0,1==this.isSubWorkOrder?this.workOrderService.getSubWoMaterialRoleUps(e.subWorkOrderMaterialsId).subscribe(e=>{this.workOrderMaterialList.splice(r+1,e.length)},e=>{this.errorHandling(e)}):this.workOrderService.getWorkOrderRolMaterialList(e.workOrderMaterialsId).subscribe(e=>{this.workOrderMaterialList.splice(r+1,e.length)},e=>{this.errorHandling(e)})}getValues(e){e.stockLineNumber&&(e.stockLineNumber.indexOf(",")>-1?e.isMultipleStockLine="Multiple":e.isMultipleStockLine="Single"),e.controlNo&&(e.controlNo.indexOf(",")>-1?e.isMultipleControlNo="Multiple":e.isMultipleControlNo="Single"),e.controlId&&(e.controlId.indexOf(",")>-1?e.isMultiplecontrolId="Multiple":e.isMultiplecontrolId="Single"),e.receiver&&(e.receiver.indexOf(",")>-1?e.isMultiplereceiver="Multiple":e.isMultiplereceiver="Single")}getPageCount(e,r){return Math.ceil(e/r)}saveMaterialList(e){this.addNewMaterial=!1,this.saveMaterialListForWO.emit(e),w("#addNewMaterials").modal("hide")}updateMaterialList(e){this.updateMaterialListForWO.emit(e),w("#addNewMaterials").modal("hide")}restrictMinus(e){var r=e.keyCode?e.keyCode:e.which;null!=r&&45==r&&e.preventDefault()}validatePartsQuantity(e,r){null==e.target.value||""==e.target.value||null==e.target.value||0==e.target.value?this.savebutonDisabled=!1:this.savebutonDisabled=!0,1===this.statusId?r.quantityReserved>r.quantityAvailable?(this.alertService.showMessage(""," Qty Actually Reserving Cant be greater than Qty Available",k.d.warn),r.quantityReserved=null,this.savebutonDisabled=!1):r.quantityReserved>r.qtyToBeReserved&&(this.alertService.showMessage(""," Qty Actually Reserving Cant be greater than Qty To Be Reserved",k.d.warn),r.quantityReserved=null,this.savebutonDisabled=!1):2===this.statusId?r.quantityIssued>r.quantityAlreadyReserved&&(this.alertService.showMessage(""," Qty Actually Issuing Cant be greater than Qty Reserved",k.d.warn),r.quantityIssued=0,this.savebutonDisabled=!1):3===this.statusId?r.quantityIssued>r.quantityAvailable?(this.alertService.showMessage(""," Qty Actually Resver & Issue Cant be greater than Qty Available",k.d.warn),r.quantityIssued=null,this.savebutonDisabled=!1):r.quantityIssued>r.qtyToBeReserved&&(this.alertService.showMessage(""," Qty Actually Resver & Issue Cant be greater than Qty To Be Reserved",k.d.warn),r.quantityIssued=null,this.savebutonDisabled=!1):4===this.statusId?r.quantityIssued>r.quantityAlreadyIssued&&(this.alertService.showMessage("","Qty Actually UnIssuing  Cant be greater than Qty Issued",k.d.warn),r.quantityIssued=null,this.savebutonDisabled=!1):5===this.statusId&&r.quantityReserved>r.quantityAlreadyReserved&&(this.alertService.showMessage("","Qty Actually Reserving Cant be greater the Qty Reserved",k.d.warn),r.quantityReserved=null,this.savebutonDisabled=!1)}childPartValidate(e,r,t){1!=this.statusId&&3!=this.statusId||(this.parentInputvalue=0,this.totalChildValuesSum=0,this.reservedList.map(e=>{e.partNumber==r.parentPartNo&&(1==this.statusId?this.parentInputvalue=e.quantityReserved:this.parentInputvalue=e.quantityIssued)}),1==this.statusId?(this.totalChildValuesSum1=this.alternatePartData.reduce((function(e,r){return e+r.quantityReserved}),0),this.totalChildValuesSum2=this.eqPartData.reduce((function(e,r){return e+r.quantityReserved}),0)):(this.totalChildValuesSum1=this.alternatePartData.reduce((function(e,r){return e+r.quantityIssued}),0),this.totalChildValuesSum2=this.eqPartData.reduce((function(e,r){return e+r.quantityIssued}),0)),this.totalChildValuesSum=(this.totalChildValuesSum1?this.totalChildValuesSum1:0)+(this.totalChildValuesSum2?this.totalChildValuesSum2:0),this.parentInputvalue+this.totalChildValuesSum>r.quantity&&(this.alertService.showMessage(""," Total Qty Actually Reserving Cant be greater than Qty Required",k.d.warn),r.quantityReserved=0))}allowAll(e){e?(this.reservedList=this.reservedList.map(e=>(e.woReservedIssuedAltParts&&e.woReservedIssuedAltParts.length>0?e.woReservedIssuedAltParts.map(e=>{e.isChildSelected=!0}):e.woReservedIssuedEquParts&&e.woReservedIssuedEquParts.length>0&&e.woReservedIssuedEquParts.map(e=>{e.isChildSelected=!0}),Object.assign({},e,{isParentSelected:!0}))),this.isAllow=e):(this.reservedList=this.reservedList.map(e=>(e.woReservedIssuedAltParts&&e.woReservedIssuedAltParts.length>0?e.woReservedIssuedAltParts.map(e=>{e.isChildSelected=!1}):e.woReservedIssuedEquParts&&e.woReservedIssuedEquParts.length>0&&e.woReservedIssuedEquParts.map(e=>{e.isChildSelected=!1}),Object.assign({},e,{isParentSelected:!1}))),this.isAllow=e),this.savebutonDisabled=!0}filterEmployee(e){if(this.employeeList=this.employeesOriginalData,void 0!==e.query&&null!==e.query){const r=[...this.employeesOriginalData.filter(r=>r.label.toLowerCase().includes(e.query.toLowerCase()))];this.employeeList=r}}partsIssueRI(e){this.countDown=null,this.counter=600,this.tick=1e3,this.startTimerplus(),this.statusId=e,this.reservedList=[],this.alternatePartData=[],this.eqPartData=[],this.isShowEqPN=!1,this.isShowAlternatePN=!1,this.workFlowWorkOrderId&&this.workOrderService.getReservedPartsByWorkFlowWOId(this.workFlowWorkOrderId,this.savedWorkOrderData.workOrderId,e,this.authService.currentUser.userName,this.isSubWorkOrder).subscribe(e=>{this.reservedList=e.map(e=>(e.masterCompanyId=this.authService.currentUser.masterCompanyId,this.setdefaultValues(e),2==this.statusId||4==this.statusId||5==this.statusId?(this.savebutonDisabled=!0,e.woReservedIssuedAltParts&&e.woReservedIssuedAltParts.length>0?(this.isShowAlternatePN=!0,e.isParentSelected=!0,e.showAlternateParts=!0):e.woReservedIssuedEquParts&&e.woReservedIssuedEquParts.length>0?(this.isShowEqPN=!0,e.isParentSelected=!0,e.showEqParts=!0):(e.isParentSelected=!1,e.showAlternateParts=!1,e.showEqParts=!1)):1!=this.statusId&&3!=this.statusId||(e.isParentSelected=!1,e.showAlternateParts=!1,e.showEqParts=!1),Object.assign({},e,{reservedDate:new Date,issuedDate:new Date,reservedById:this.authService.currentEmployee,issuedById:this.authService.currentEmployee,woReservedIssuedAltParts:e.woReservedIssuedAltParts.map(e=>(this.setdefaultValuesForChild(e),Object.assign({},e,{reservedDate:new Date,issuedDate:new Date,reservedById:this.authService.currentEmployee,issuedById:this.authService.currentEmployee,masterCompanyId:this.authService.currentUser.masterCompanyId}))),woReservedIssuedEquParts:e.woReservedIssuedEquParts.map(e=>(this.setdefaultValuesForChild(e),Object.assign({},e,{reservedDate:new Date,issuedDate:new Date,reservedById:this.authService.currentEmployee,issuedById:this.authService.currentEmployee,masterCompanyId:this.authService.currentUser.masterCompanyId})))})))},e=>{this.reservedList=[],this.errorHandling(e)})}setdefaultValues(e){1==this.statusId?e.qtyToBeReserved>e.quantityAvailable?e.quantityReserved=e.quantityAvailable?e.quantityAvailable:0:e.quantityReserved=e.qtyToBeReserved?e.qtyToBeReserved:0:2==this.statusId?e.quantityIssued=e.quantityAlreadyReserved?e.quantityAlreadyReserved:0:3==this.statusId?e.qtyToBeReserved>e.quantityAvailable?e.quantityIssued=e.quantityAvailable?e.quantityAvailable:0:e.quantityIssued=e.qtyToBeReserved?e.qtyToBeReserved:0:4==this.statusId?e.quantityIssued=e.quantityAlreadyIssued?e.quantityAlreadyIssued:0:5==this.statusId&&(e.quantityReserved=e.quantityAlreadyReserved?e.quantityAlreadyReserved:0)}setdefaultValuesForChild(e){2==this.statusId?e.quantityIssued=e.qtyToBeIssued:4==this.statusId?e.quantityIssued=e.quantityAlreadyIssued:5==this.statusId&&(e.quantityReserved=e.qtyToBeIssued)}resetAlternateParts(e){this.alternatePartData=[],this.reservedList=this.reservedList.map(e=>Object.assign({},e,{showAlternateParts:!1,woReservedIssuedAltParts:e.woReservedIssuedAltParts.map(e=>Object.assign({},e,{isChildSelected:!1}))}))}resetEqParts(e){this.eqPartData=[],this.reservedList=this.reservedList.map(e=>Object.assign({},e,{showEqParts:!1,woReservedIssuedEquParts:e.woReservedIssuedEquParts.map(e=>Object.assign({},e,{isChildSelected:!1}))}))}uncheckAltEqlPartCall(e){this.parentMaterialList=[],e.map(e=>{this.parentMaterialList.push({parentWorkOrderMaterialsId:e.parentWorkOrderMaterialsId}),this.workOrderService.reservereleasestoclineqty(this.parentMaterialList).subscribe(e=>{},e=>{this.errorHandling(e)})})}showAlternateParts(e,r){this.handelParts=[],this.alternatePartData=[],this.alternatePartData=r,this.handelParts=r,r.forEach(e=>{e.reservedById=this.authService.currentEmployee,e.issuedById=this.authService.currentEmployee,e.createdBy=this.authService.currentUser.userName,e.updatedBy=this.authService.currentUser.userName}),this.handelParts.map(e=>{e.reservedById=this.authService.currentEmployee.value,e.issuedById=this.authService.currentEmployee.value}),!0!==e||1!=this.statusId&&3!=this.statusId||(1==this.isSubWorkOrder?this.workOrderService.reserveSubWoAltPartData(this.handelParts).subscribe(e=>{},e=>{}):this.workOrderService.reserveAltPartData(this.handelParts).subscribe(e=>{},e=>{})),r.forEach(e=>{e.reservedById=this.authService.currentEmployee,e.issuedById=this.authService.currentEmployee,e.createdBy=this.authService.currentUser.userName,e.updatedBy=this.authService.currentUser.userName}),this.alternatePartData=r,!1===e&&(this.alternatePartData=[],this.uncheckAltEqlPartCall(r))}showEquantParts(e,r){this.eqPartData=[],this.eqPartData=r,r.forEach(e=>{e.reservedById=this.authService.currentEmployee,e.issuedById=this.authService.currentEmployee,e.createdBy=this.authService.currentUser.userName,e.updatedBy=this.authService.currentUser.userName}),this.eqPartData.map(e=>{e.reservedById=this.authService.currentEmployee.value,e.issuedById=this.authService.currentEmployee.value}),!0!==e||1!=this.statusId&&3!=this.statusId||(1==this.isSubWorkOrder?this.workOrderService.reserveSubWoEqlPartData(this.eqPartData).subscribe(e=>{},e=>{}):this.workOrderService.reserveEqlPartData(this.eqPartData).subscribe(e=>{},e=>{})),!1===e&&(this.eqPartData=[],this.uncheckAltEqlPartCall(r))}selectedParts(e,r){1!==this.statusId&&5!==this.statusId||(1==e.isParentSelected&&0!=e.quantityReserved?this.savebutonDisabled=!0:this.savebutonDisabled=!1),2!==this.statusId&&3!==this.statusId&&4!==this.statusId||(1==e.isParentSelected&&0!=e.quantityIssued?this.savebutonDisabled=!0:this.savebutonDisabled=!1),this.checkedParts=[],this.reservedList.map(e=>{if(e.isParentSelected){const{woReservedIssuedAltParts:r}=e,t=n.f(e,["woReservedIssuedAltParts"]);this.checkedParts.push(Object.assign({},t,{partStatusId:this.statusId}))}e.woReservedIssuedAltParts.map(e=>{e.isChildSelected&&this.checkedParts.push(Object.assign({},e,{itemMasterId:e.altPartId,partNumber:e.altPartNumber,partStatusId:this.statusId}))}),e.woReservedIssuedEquParts.map(e=>{e.isChildSelected&&this.checkedParts.push(Object.assign({},e,{equPartId:e.altPartId,equPartNumber:e.altPartNumber,partStatusId:this.statusId}))})})}pageIndexChange(e){this.pageIndex=parseInt(e.first)/e.rows,this.pageSize=e.rows}releaseStock(){1!=this.statusId&&3!=this.statusId||(this.releasePartsList=[],1==this.isSubWorkOrder?this.reservedList.map(e=>{this.releasePartsList.push({subWorkOrderMaterialId:e.subWorkOrderMaterialsId})}):this.reservedList.map(e=>{this.releasePartsList.push({workOrderMaterialsId:e.workOrderMaterialsId})}),1==this.isSubWorkOrder?this.workOrderService.reservereleaseSubWostoclineqty(this.releasePartsList).subscribe(e=>{},e=>{}):this.workOrderService.reservereleasestoclineqty(this.releasePartsList).subscribe(e=>{},e=>{}))}saveRIPart(){w("#reserve").modal("hide"),this.checkedParts=[],this.checkedParts=[],this.reservedList.map(e=>{if(e.issuedById=e.issuedById.value,e.reservedById=e.reservedById.value,e.isParentSelected){const{woReservedIssuedAltParts:r}=e,t=n.f(e,["woReservedIssuedAltParts"]);this.checkedParts.push(Object.assign({},t,{partStatusId:this.statusId,createdBy:t.createdBy?t.createdBy:this.authService.currentUser.userName,updatedBy:this.authService.currentUser.userName}))}e.woReservedIssuedAltParts.map(e=>{e.issuedById=e.issuedById.value,e.reservedById=e.reservedById.value,e.isChildSelected&&this.checkedParts.push(Object.assign({},e,{itemMasterId:e.altPartId,partNumber:e.altPartNumber,partStatusId:this.statusId}))}),e.woReservedIssuedEquParts.map(e=>{e.issuedById=e.issuedById.value,e.reservedById=e.reservedById.value,e.isChildSelected&&this.checkedParts.push(Object.assign({},e,{equPartId:e.altPartId,equPartNumber:e.altPartNumber,partStatusId:this.statusId}))})}),this.saveRIParts.emit(this.checkedParts),this.isAllow=!1,this.savebutonDisabled=!1}createNewPoWorkOrder(e){1==this.isSubWorkOrder?window.open("/vendorsmodule/vendorpages/workorder-po-create/0/0/"+e.subWorkOrderMaterialsId):window.open("/vendorsmodule/vendorpages/workorder-po-create/0/"+e.workOrderMaterialsId)}closeMaterial(){this.countDown&&this.countDown.unsubscribe(),this.countDown=null,this.savebutonDisabled=!1,this.isAllow=!1,this.releaseStock()}startTimerplus(){this.countDown=Object(Le.a)(0,this.tick).subscribe(()=>{--this.counter,80==this.counter&&this.opentimerAlertModel(),0==this.counter&&setTimeout(()=>{w("#reserve").modal("hide"),this.countDown&&this.countDown.unsubscribe(),this.countDown=null,w("#timerAlertNotfi").modal("hide"),this.modal.close(),this.releaseStock()},1e3)},e=>{this.errorHandling(e)})}opentimerAlertModel(){let e=this.timerAlertNotfi;this.modal=this.modalService.open(e,{size:"sm"}),this.modal.result.then(()=>{},()=>{})}actionTimerReset(){this.counter=600,this.tick=1e3,this.countDown.unsubscribe(),this.startTimerplus(),w("#timerAlertNotfi").modal("hide"),this.modal.close()}dismissTimerAlert(){w("#timerAlertNotfi").modal("hide"),this.modal.close()}editSubWo(e){const r=e.subWorkOrderId?e.subWorkOrderId:0;window.open(`/workordersmodule/workorderspages/app-sub-work-order?workorderid=${e.workOrderId}&mpnid=${this.mpnId}&subworkorderid=${r}&workOrderMaterialsId=${e.workOrderMaterialsId}`)}dismissModel(){this.modal.close()}dismissModel2(){this.modal.close(),setTimeout(()=>{this.viewSubWolist=!1},1e3)}subWoClick(e){this.subWoRecord={},this.subWoRecord=e;let r=this.tabRedirectConfirmationModal;this.modal=this.modalService.open(r,{size:"sm"}),this.modal.result.then(()=>{},()=>{})}createNewSubWo(){this.dismissModel();window.open(`/workordersmodule/workorderspages/app-sub-work-order?workorderid=${this.subWoRecord.workOrderId}&mpnid=${this.mpnId}&subworkorderid=0&workOrderMaterialsId=${this.subWoRecord.workOrderMaterialsId}`)}addToExistingSubWo(){this.viewSubWolist=!0,this.dismissModel()}errorHandling(e){e.error.errors?e.error.errors.forEach(e=>{this.alertService.showMessage(this.moduleName,e.message,k.d.error)}):this.alertService.showMessage(this.moduleName,"Saving data Failed due to some input error",k.d.error)}handleError(e){e.error.errors?e.error.errors.forEach(e=>{this.alertService.showMessage(this.moduleName,e.message,k.d.error)}):this.alertService.showMessage(this.moduleName,"Saving data Failed due to some input error",k.d.error)}clearautoCompleteInput(e,r){}};Te.ctorParameters=()=>[{type:Ce.a},{type:j.a},{type:be.a},{type:p.a},{type:b.a},{type:Se.a},{type:g.a},{type:v.a},{type:a.ChangeDetectorRef},{type:ve.c},{type:k.b}],n.b([Object(a.ViewChild)("timerAlertNotfi",{static:!1})],Te.prototype,"timerAlertNotfi",void 0),n.b([Object(a.ViewChild)("tabRedirectConfirmationModal",{static:!1})],Te.prototype,"tabRedirectConfirmationModal",void 0),n.b([Object(a.Input)()],Te.prototype,"isView",void 0),n.b([Object(a.Input)()],Te.prototype,"workOrderMaterialList",void 0),n.b([Object(a.Input)()],Te.prototype,"employeesOriginalData",void 0),n.b([Object(a.Input)()],Te.prototype,"isWorkOrder",void 0),n.b([Object(a.Input)()],Te.prototype,"workFlowObject",void 0),n.b([Object(a.Input)()],Te.prototype,"savedWorkOrderData",void 0),n.b([Object(a.Input)()],Te.prototype,"taskList",void 0),n.b([Object(a.Input)()],Te.prototype,"materialStatus",void 0),n.b([Object(a.Input)()],Te.prototype,"mpnId",void 0),n.b([Object(a.Input)()],Te.prototype,"workOrderId",void 0),n.b([Object(a.Input)()],Te.prototype,"fromWoList",void 0),n.b([Object(a.Input)()],Te.prototype,"mpnPartNumbersList",void 0),n.b([Object(a.Input)()],Te.prototype,"isSubWorkOrder",void 0),n.b([Object(a.Input)()],Te.prototype,"subWorkOrderDetails",void 0),n.b([Object(a.Input)()],Te.prototype,"subWOPartNoId",void 0),n.b([Object(a.Output)()],Te.prototype,"saveMaterialListForWO",void 0),n.b([Object(a.Output)()],Te.prototype,"updateMaterialListForWO",void 0),n.b([Object(a.Output)()],Te.prototype,"saveRIParts",void 0),n.b([Object(a.Output)()],Te.prototype,"refreshData",void 0),Te=n.b([Object(a.Component)({selector:"app-work-order-complete-material-list",template:n.c(t("DPyc")).default,animations:[F.a],styles:[n.c(t("R6H9")).default]})],Te);let Me=class{constructor(){}};Me=n.b([Object(a.Component)({selector:"app-work-order-reserve-issue",template:n.c(t("LdGP")).default,animations:[F.a],styles:[n.c(t("xu5b")).default]})],Me);let Pe=class{constructor(){w(document).ready((function(){w('[data-toggle="tooltip"]').tooltip(),w(".status input:checkbox").change((function(){w(this).is(":checked")?w(this).parents("span").attr("data-original-title","Active").tooltip("show"):w(this).parents("span").attr("data-original-title","In-Active").tooltip("show")}))}))}};Pe=n.b([Object(a.Component)({selector:"app-work-order-memo",template:n.c(t("SJ9+")).default,animations:[F.a],styles:[n.c(t("hyPF")).default]})],Pe);let Ne=class{constructor(e,r,t,n,a,s){this.workOrderService=e,this.alertService=r,this.authService=t,this.configurations=n,this.commonService=a,this.modalService=s,this.documentsDestructuredData=[],this.isView=!1,this.isSubWorkOrder=!1,this.documentTypeList=[],this.disableSave=!0,this.formData=new FormData,this.isEditButton=!1,this.sourceViewforDocumentList=[],this.sourceViewforDocumentListColumns=[{field:"fileName",header:"File Name"}],this.loader=!1,this.pageSize=10,this.documentsColumns=[{field:"name",header:"Name"},{field:"description",header:"Description"},{field:"fileName",header:"File Name"},{field:"type",header:"Type"},{field:"fileSize",header:"File Size"},{field:"memo",header:"Memo"},{field:"createdDate",header:"Created Date"},{field:"createdBy",header:"Created By"},{field:"updatedBy",header:"Updated By"},{field:"updatedDate",header:"Updated Date"}],this.selectedColumns=this.documentsColumns,this.isDeleteMode=!1}ngOnInit(){this.workOrderId=this.savedWorkOrderData.workOrderId,this.getAllDocumentTypeList()}addNewDoc(){this.documentForm=[...this.documentForm,new ge]}get userName(){return this.authService.currentUser?this.authService.currentUser.userName:""}getDocumentList(){this.documentsDestructuredData=[],this.workOrderService.getDocumentsList(this.workFlowWorkOrderId,this.workOrderId,this.isSubWorkOrder,this.subWOPartNoId?this.subWOPartNoId:0).subscribe(e=>{let r=[];e.map(e=>{for(var t=0;t<e.attachmentDetails.length;t++){const n=e.attachmentDetails;r.push(Object.assign({},e,{fileName:n[t].fileName,fileCreatedDate:n[t].createdDate,fileCreatedBy:n[t].createdBy,fileUpdatedBy:n[t].updatedBy,fileUpdatedDate:n[t].updatedDate,fileSize:n[t].fileSize,link:n[t].link,attachmentDetailId:n[t].attachmentDetailId}))}});this.documentsDestructuredData=r,this.loader=!1},e=>{this.documentsDestructuredData=[],this.loader=!1})}addDocumentDetails(){this.sourceViewforDocumentList=[],this.isEditButton=!1,this.documentForm={name:"",memo:"",description:"",code:""},this.formData=new FormData,this.fileUploadInput.clear()}enableSave(){this.sourceViewforDocumentList&&this.sourceViewforDocumentList.length>0||1==this.isEditButton?this.disableSave=!1:this.disableSave=!0}fileUpload(e){if(0==e.files.length)return this.disableSave=!0;this.disableSave=!1;for(let r of e.files)this.sourceViewforDocumentList.push(r),this.formData.append(r.name,r)}removeFile(e){delete this.sourceViewforDocumentList[this.sourceViewforDocumentList.length-1],this.formData.delete(e.file.name)}openDocument(e,r){}openHistory(e,r){}saveDocumentInformation1(){const e=Object.assign({},this.documentForm,{workOrderId:this.workOrderId,workFlowWorkOrderId:this.workFlowWorkOrderId,masterCompanyId:1,updatedBy:this.userName,createdBy:this.userName,managementStructureId:1});for(var r in e)this.formData.append(r,e[r]);this.workOrderService.createDocuments(this.formData,this.isSubWorkOrder).subscribe(e=>{this.closeMyModel("#documentDetails"),this.alertService.showMessage("Success","Saved Documents Successfully ",k.d.success),this.formData=new FormData,this.getDocumentList()})}saveDocumentInformation(){const e=Object.assign({},this.documentForm,{workOrderId:this.workOrderId,workFlowWorkOrderId:this.workFlowWorkOrderId,masterCompanyId:1,updatedBy:this.userName,createdBy:this.userName,managementStructureId:1});for(var r in 1==this.isSubWorkOrder&&(e.subWOPartNoId=this.subWOPartNoId,e.subWorkOrderId=this.subWorkOrderDetails.subWorkOrderId),e)this.formData.append(r,e[r]);this.isEditButton?this.workOrderService.createDocuments(this.formData,this.isSubWorkOrder).subscribe(e=>{this.documentForm={name:"",memo:"",description:"",code:""},this.isEditButton=!1,this.getDocumentList(),this.alertService.showMessage("Success","Updated Documents Successfully ",k.d.success),this.formData=new FormData,w("#documentDetails").modal("hide")}):this.workOrderService.createDocuments(this.formData,this.isSubWorkOrder).subscribe(e=>{this.formData=new FormData,this.fileUploadInput.clear(),this.documentForm={name:"",memo:"",description:"",code:""},this.getDocumentList(),this.alertService.showMessage("Success","Saved Documents Successfully ",k.d.success),w("#documentDetails").modal("hide")}),this.disableSave=!0}getPageCount(e,r){return Math.ceil(e/r)}pageIndexChange(e){this.pageSize=e.rows}downloadFileUpload(e){console.log("Wo Doc"),console.log(e);const r=`${this.configurations.baseUrl}/api/FileUpload/downloadattachedfile?filePath=${e.link}`;window.location.assign(r)}closeMyModel(e){w(e).modal("hide")}docviewdblclick(e){}editWODocument(e){this.isEditButton=!0,this.documentForm=e,console.log(" this.documentForm",this.documentForm),this.sourceViewforDocumentList=e}openWoDelete(e,r){this.selectedRowForDelete=r,this.isDeleteMode=!0,delete r.updatedBy,this.localCollection=r,this.modal=this.modalService.open(e,{size:"sm"}),this.modal.result.then(()=>{console.log("When user closes")},()=>{console.log("Backdrop click")})}deleteItemAndCloseModel(){let e=this.localCollection.attachmentId;e>0&&this.workOrderService.deleteWorkOrderDocuments(e,this.userName).subscribe(e=>{this.getDocumentList(),this.alertService.showMessage("Success","Deleted  Documents Successfully ",k.d.success)}),this.modal.close()}dismissModel(){this.isDeleteMode=!1,this.modal.close()}getAllDocumentTypeList(){this.commonService.smartDropDownList("DocumentType","DocumentTypeId","Name").subscribe(e=>{this.documentTypeList=e})}};Ne.ctorParameters=()=>[{type:p.a},{type:k.b},{type:v.a},{type:z.a},{type:u.a},{type:ve.c}],n.b([Object(a.Input)()],Ne.prototype,"savedWorkOrderData",void 0),n.b([Object(a.Input)()],Ne.prototype,"documentForm",void 0),n.b([Object(a.Input)()],Ne.prototype,"workFlowWorkOrderId",void 0),n.b([Object(a.Input)()],Ne.prototype,"documentsDestructuredData",void 0),n.b([Object(a.ViewChild)("fileUploadInput",{static:!1})],Ne.prototype,"fileUploadInput",void 0),n.b([Object(a.Input)()],Ne.prototype,"isView",void 0),n.b([Object(a.Input)()],Ne.prototype,"subWorkOrderDetails",void 0),n.b([Object(a.Input)()],Ne.prototype,"subWOPartNoId",void 0),n.b([Object(a.Input)()],Ne.prototype,"isSubWorkOrder",void 0),Ne=n.b([Object(a.Component)({selector:"app-work-order-documents",template:n.c(t("U5B4")).default,styles:[n.c(t("05KU")).default]})],Ne);let We=class{constructor(e,r){this.workOrderService=e,this.localStorage=r,this.selectedPartNumber={},this.isSubWorkOrder=!1,this.pageSize=10,this.pageIndex=0,this.totalRecords=0,this.totalPages=10,this.data=[],this.globalSettings={},this.onDestroy$=new M.a,this.headers=[{field:"partNumber",header:"Main PN"},{field:"revisedPartNo",header:"Revised PN"},{field:"partDescription",header:"PN Description"},{field:"workOrderNum",header:"WO Num"},{field:"stage",header:"Stage"},{field:"revenue",header:"Revenue"},{field:"materialCost",header:"Parts Cost"},{field:"materialRevenuePercentage",header:"Parts Rev %"},{field:"laborCost",header:"Labor Cost"},{field:"laborRevenuePercentage",header:"Labor Rev %"},{field:"overHeadCost",header:"Overhead Cost"},{field:"overHeadCostRevenuePercentage",header:"Overhead Cost %"},{field:"otherCost",header:"Other Cost"},{field:"directCost",header:"Direct Cost"},{field:"directCostRevenuePercentage",header:"Direct Cost Rev %"},{field:"margin",header:"Margin"},{field:"marginPercentage",header:"Margin %"},{field:"customerName",header:"Customer"},{field:"status",header:"Status"}],this.selectedColumns=this.headers}ngOnInit(){this.workOrderId=this.savedWorkOrderData.workOrderId,0!=this.data.length&&(this.totalRecords=this.data.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)),this.getWorkOrderAnalysisData(this.workOrderId),this.getGlobalSettings()}ngOnChanges(){0!=this.data.length&&(this.totalRecords=this.data.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize))}ngOnDestroy(){this.onDestroy$.next()}getGlobalSettings(){this.globalSettings=this.localStorage.getDataObject(L.a.GLOBAL_SETTINGS)||{},this.global_lang=this.globalSettings.cultureName}getWorkOrderAnalysisData(e){const r=this.isSubWorkOrder?this.subWOPartNoId:this.selectedPartNumber.workOrderPartNumberId;this.workOrderService.workOrderAnalysisData(e,r,this.isSubWorkOrder).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{e&&(this.data=e.map(e=>Object.assign({},e,{materialCost:this.formatCost(e.materialCost),materialRevenuePercentage:this.formatCost(e.materialRevenuePercentage),laborCost:this.formatCost(e.laborCost),laborRevenuePercentage:this.formatCost(e.laborRevenuePercentage),overHeadCost:this.formatCost(e.overHeadCost),otherCost:this.formatCost(e.otherCost),directCost:this.formatCost(e.directCost),otherCostRevenuePercentage:this.formatCost(e.otherCostRevenuePercentage),revenuePercentage:this.formatCost(e.revenuePercentage)})))})}pageIndexChange(e){this.pageSize=e.rows}getPageCount(e,r){return Math.ceil(e/r)}formatCost(e){if(e)return 1==isNaN(e)&&(e=Number(e.replace(/[^0-9.-]+/g,""))),e=new Intl.NumberFormat(this.global_lang,{style:"decimal",minimumFractionDigits:2,maximumFractionDigits:2}).format(e)}};We.ctorParameters=()=>[{type:p.a},{type:ee.a}],n.b([Object(a.Input)()],We.prototype,"savedWorkOrderData",void 0),n.b([Object(a.Input)()],We.prototype,"selectedPartNumber",void 0),n.b([Object(a.Input)()],We.prototype,"subWorkOrderDetails",void 0),n.b([Object(a.Input)()],We.prototype,"isSubWorkOrder",void 0),n.b([Object(a.Input)()],We.prototype,"subWOPartNoId",void 0),We=n.b([Object(a.Component)({selector:"app-work-order-analysis",template:n.c(t("s0Cn")).default,styles:[n.c(t("7ACA")).default]})],We);var Fe=t("MNvC");let Ae=class{constructor(e,r,t,n,s){this.commonService=e,this.workOrderService=r,this.customerService=t,this.quoteService=n,this.alertService=s,this.isEditBilling=!1,this.workOrderQuoteId=0,this.taskList=[],this.buildMethodDetails={},this.isViewMode=!1,this.saveWOBilling=new a.EventEmitter,this.updateWOBilling=new a.EventEmitter,this.workFlowWorkOrderId=0,this.isbillingNotCreated=!1,this.soldCustomerSiteList=[],this.shipCustomerSiteList=[],this.soldCustomerAddress=new Fe.a,this.shipCustomerAddress=new Fe.a,this.managementStructure={companyId:null,buId:null,divisionId:null,departmentId:null},this.isView=!0,this.workFlowObject={materialList:[],equipments:[],charges:[],exclusions:[]},this.isQuote=!0,this.labor=new f,this.cols=[{field:"taskName",header:"Task"},{field:"partNumber",header:"PN"},{field:"partDescription",header:"PN Description"},{field:"provision",header:"Provision"},{field:"quantity",header:"Qty Req",align:1},{field:"uom",header:"UOM"},{field:"condition",header:"Cond"},{field:"stockType",header:"Stock Type"},{field:"unitCost",header:"Unit Cost",align:1},{field:"extendedCost",header:"Extended Cost",align:1}],this.colums=[{field:"taskName",header:"Task"},{field:"vendorName",header:"Vendor Name"},{field:"quantity",header:"Qty"},{field:"refNum",header:"Ref Num"},{field:"chargeType",header:"Charge Type"},{field:"description",header:"Description"},{field:"unitCost",header:"Unit Cost"},{field:"extendedCost",header:"Extented Cost"}],this.moduleName=""}ngOnInit(){console.log("status",this.quotestatusofCurrentPart),this.workOrderQuoteId,this.buildMethodDetails&&(null==this.buildMethodDetails.materialBuildMethod&&null==this.buildMethodDetails.materialBuildMethod||(this.costPlusType=this.buildMethodDetails.materialBuildMethod.toString()));const e=this.billingorInvoiceForm;this.workOrderId=this.savedWorkOrderData.workOrderId,this.getEmployeeList(this.workOrderId),this.customerId=Object(C.a)("customerId",this.savedWorkOrderData.customerId),this.getShipViaByCustomerId(),this.getPercentageList(),this.getInvoiceList(),this.calculateGrandTotal(),this.resetOtherOptions(),this.isEditBilling?(e.soldToCustomerId.customerId==e.shipToCustomerId.customerId?this.getSiteNames(e.soldToCustomerId):(this.getSiteNamesBySoldCustomerId(e.soldToCustomerId),this.getSiteNamesByShipCustomerId(e.shipToCustomerId)),this.bindManagementStructure(e),this.billingorInvoiceForm.soldToCustomerId&&(this.soldCustomerAddress={city:e.city,country:e.country,line1:e.line1,line2:e.line2,postalCode:parseInt(e.postalCode),stateOrProvince:e.stateOrProvince}),this.billingorInvoiceForm.shipToCustomerId&&(this.shipCustomerAddress={city:e.shipToCity,country:e.country,line1:e.line1,line2:e.shipToLine2,postalCode:parseInt(e.shipToPostalCode),stateOrProvince:e.shipToState})):(this.billingorInvoiceForm.soldToCustomerId&&this.billingorInvoiceForm.shipToCustomerId&&this.billingorInvoiceForm.soldToCustomerId.customerId==this.billingorInvoiceForm.shipToCustomerId.customerId?this.getSiteNames(e.soldToCustomerId):(this.billingorInvoiceForm.soldToCustomerId&&this.getSiteNamesBySoldCustomerId(this.billingorInvoiceForm.soldToCustomerId),this.billingorInvoiceForm.shipToCustomerId&&this.getSiteNamesByShipCustomerId(this.billingorInvoiceForm.shipToCustomerId)),this.resetMisCharges(),this.resetMaterial(),this.resetLaborOverHead(),this.calculateTotalWorkOrderCost(),this.bindManagementStructure(this.billingorInvoiceForm)),this.buildMethodDetails&&"Approved"==this.quotestatusofCurrentPart&&(console.log("material build ngoninit"),this.billingorInvoiceForm.materialCost=null!=this.buildMethodDetails.materialFlatBillingAmount?this.buildMethodDetails.materialFlatBillingAmount.toFixed(2):"",this.billingorInvoiceForm.laborOverHeadCost=null!=this.buildMethodDetails.laborFlatBillingAmount?this.buildMethodDetails.laborFlatBillingAmount.toFixed(2):"",this.billingorInvoiceForm.miscChargesCost=this.buildMethodDetails.chargesFlatBillingAmount+this.buildMethodDetails.freightFlatBillingAmount,this.billingorInvoiceForm.miscChargesCost=this.billingorInvoiceForm.miscChargesCost?this.billingorInvoiceForm.miscChargesCost.toFixed(2):""),this.getCurrencyList(),this.billingorInvoiceForm.totalWorkOrderValue=4,this.quoteMaterialList&&this.quoteMaterialList.length>0&&(this.overAllMarkup=Number(this.quoteMaterialList[0].headerMarkupId)),1!=this.isbillingNotCreated||"NotApproved"!=this.quotestatusofCurrentPart&&""!=this.quotestatusofCurrentPart||(console.log("billlings",this.quotestatusofCurrentPart),this.getbillingCostDataForWoOnly())}ngOnChanges(e){if(this.quoteMaterialList&&this.quoteMaterialList.length>0&&(this.overAllMarkup=Number(this.quoteMaterialList[0].headerMarkupId)),this.billingorInvoiceForm=this.billingorInvoiceForm,this.calculateGrandTotal(),this.buildMethodDetails&&"Approved"==this.quotestatusofCurrentPart){console.log("material build"),null==this.buildMethodDetails.materialBuildMethod&&null==this.buildMethodDetails.materialBuildMethod||(this.costPlusType=this.buildMethodDetails.materialBuildMethod.toString()),this.billingorInvoiceForm.materialCost=null!=this.buildMethodDetails.materialFlatBillingAmount?this.buildMethodDetails.materialFlatBillingAmount.toFixed(2):"",this.billingorInvoiceForm.laborOverHeadCost=null!=this.buildMethodDetails.laborFlatBillingAmount?this.buildMethodDetails.laborFlatBillingAmount.toFixed(2):"";this.buildMethodDetails.chargesFlatBillingAmount&&this.buildMethodDetails.chargesFlatBillingAmount,this.buildMethodDetails.freightFlatBillingAmount&&this.buildMethodDetails.freightFlatBillingAmount;this.billingorInvoiceForm.miscChargesCost=this.buildMethodDetails.chargesFlatBillingAmount+this.buildMethodDetails.freightFlatBillingAmount,this.billingorInvoiceForm.miscChargesCost=this.billingorInvoiceForm.miscChargesCost?this.billingorInvoiceForm.miscChargesCost.toFixed(2):""}this.isEditBilling||(this.resetMisCharges(),this.resetMaterial(),this.resetLaborOverHead(),this.calculateTotalWorkOrderCost())}getbillingCostDataForWoOnly(){this.workOrderService.getbillingCostDataForWoOnly(this.workFlowWorkOrderId,this.billingorInvoiceForm.managementStructureId).subscribe(e=>{e&&(this.billingorInvoiceForm.materialCost=e.materialCost,this.billingorInvoiceForm.laborOverHeadCost=e.labourCost,this.billingorInvoiceForm.miscChargesCost=e.miscCharges,this.billingorInvoiceForm.totalWorkOrderCost=e.totalCost)},e=>{this.errorHandling(e)})}bindManagementStructure(e){return n.a(this,void 0,void 0,(function*(){e&&(yield this.commonService.getManagementStructureDetails(e.managementStructureId).subscribe(e=>{this.selectedLegalEntity(e.Level1),this.selectedBusinessUnit(e.Level2),this.selectedDivision(e.Level3),this.selectedDepartment(e.Level4),this.managementStructure={companyId:void 0!==e.Level1?e.Level1:null,buId:void 0!==e.Level2?e.Level2:null,divisionId:void 0!==e.Level3?e.Level3:null,departmentId:void 0!==e.Level4?e.Level4:null}},e=>{this.errorHandling(e)}))}))}getCurrencyList(){this.commonService.smartDropDownList("Currency","CurrencyId","code","","").subscribe(e=>{this.currencyList=e},e=>{this.errorHandling(e)})}getEmployeeList(e){this.commonService.smartDropDownList("Employee","EmployeeId","FirstName").subscribe(e=>{this.employeeList=e,this.employeesOriginalData=e},e=>{this.errorHandling(e)})}getPercentageList(){this.commonService.smartDropDownList("[Percent]","PercentId","PercentValue").subscribe(e=>{this.markUpList=e},e=>{this.errorHandling(e)})}getInvoiceList(){this.commonService.smartDropDownList("InvoiceType","InvoiceTypeId","Description").subscribe(e=>{this.invoiceTypeList=e},e=>{this.errorHandling(e)})}getShipViaByCustomerId(){this.commonService.smartDropDownList("ShippingVia","ShippingViaId","Name").subscribe(e=>{this.shipViaList=e},e=>{this.errorHandling(e)})}filterEmployee(e){if(this.employeeList=this.employeesOriginalData,void 0!==e.query&&null!==e.query){const r=[...this.employeesOriginalData.filter(r=>r.label.toLowerCase().includes(e.query.toLowerCase()))];this.employeeList=r}}filterCustomerName(e){const r=e.query.toLowerCase();this.commonService.getCustomerNameandCode(r,1).subscribe(e=>{this.customerNamesList=e},e=>{this.errorHandling(e)})}getSiteNamesBySoldCustomerId(e){return n.a(this,void 0,void 0,(function*(){const{customerId:r}=e;yield this.customerService.getCustomerShipAddressGet(r).subscribe(e=>{this.soldCustomerShippingOriginalData=e[0],this.soldCustomerSiteList=e[0].map(e=>({label:e.siteName,value:e.customerShippingAddressId})),this.soldCustomerShippingOriginalData.forEach(e=>{e.isPrimary&&(this.billingorInvoiceForm.soldToSiteId=e.customerShippingAddressId,this.changeOfSoldSiteName(e.customerShippingAddressId))})},e=>{this.errorHandling(e)})}))}changeOfSoldSiteName(e){const r=Object(C.d)("customerShippingAddressId",e,this.soldCustomerShippingOriginalData);r?(this.soldCustomerAddress.line1=r.address1,this.soldCustomerAddress.line2=r.address2,this.soldCustomerAddress.country=r.countryName,this.soldCustomerAddress.postalCode=r.postalCode,this.soldCustomerAddress.stateOrProvince=r.stateOrProvince,this.soldCustomerAddress.city=r.city):this.soldCustomerAddress=new Fe.a}changeOfShipVia(e){const r=Object(C.d)("shippingViaId",e,this.shipViaData);r&&(this.billingorInvoiceForm.shipAccountInfo=r.shippingAccountInfo)}getSiteNamesByShipCustomerId(e){return n.a(this,void 0,void 0,(function*(){const{customerId:r}=e;yield this.customerService.getCustomerShipAddressGet(r).subscribe(e=>{this.shipCustomerShippingOriginalData=e[0],this.shipCustomerSiteList=e[0].map(e=>({label:e.siteName,value:e.customerShippingAddressId})),this.shipCustomerShippingOriginalData.forEach(e=>{e.isPrimary&&(this.billingorInvoiceForm.shipToSiteId=e.customerShippingAddressId,this.changeOfShipSiteName(e.customerShippingAddressId))})},e=>{this.errorHandling(e)})}))}changeOfShipSiteName(e){const r=Object(C.d)("customerShippingAddressId",e,this.shipCustomerShippingOriginalData);r?(this.shipCustomerAddress.line1=r.address1,this.shipCustomerAddress.line2=r.address2,this.shipCustomerAddress.country=r.countryName,this.shipCustomerAddress.postalCode=r.postalCode,this.shipCustomerAddress.stateOrProvince=r.stateOrProvince,this.shipCustomerAddress.city=r.city):this.shipCustomerAddress=new Fe.a}clearAddress(e,r){""===r&&"SoldTo"===e?this.soldCustomerAddress=new Fe.a:""===r&&"shipTo"===e&&(this.shipCustomerAddress=new Fe.a)}selectedLegalEntity(e){e&&(this.billingorInvoiceForm.managementStructureId=e,this.commonService.getBusinessUnitListByLegalEntityId(e).subscribe(e=>{this.businessUnitList=e},e=>{this.errorHandling(e)}))}selectedBusinessUnit(e){e&&(this.billingorInvoiceForm.managementStructureId=e,this.commonService.getDivisionListByBU(e).subscribe(e=>{this.divisionList=e},e=>{this.errorHandling(e)}))}selectedDivision(e){e&&(this.billingorInvoiceForm.managementStructureId=e,this.commonService.getDepartmentListByDivisionId(e).subscribe(e=>{this.departmentList=e},e=>{this.errorHandling(e)}))}selectedDepartment(e){e&&(this.billingorInvoiceForm.managementStructureId=e)}resetOtherOptions(){this.billingorInvoiceForm.totalWorkOrderValue=null,this.billingorInvoiceForm.totalWorkOrderCostPlus=0,!0===this.billingorInvoiceForm.totalWorkOrder&&(this.resetMisCharges(),this.resetMaterial(),this.resetLaborOverHead(),this.calculateTotalWorkOrderCost())}calculateTotalWorkOrderCost(){this.sumOfMaterialList(),this.sumofCharges(),this.sumofLaborOverHead(),this.billingorInvoiceForm&&(this.billingorInvoiceForm.totalWorkOrderCost=(Math.round(this.billingorInvoiceForm.materialCost)+Math.round(this.billingorInvoiceForm.miscChargesCost)+Math.round(this.billingorInvoiceForm.laborOverHeadCost)).toFixed(2),this.calculateTotalWorkOrderCostPlus(0))}calculateTotalWorkOrderCostPlus(e){const r=Number(this.billingorInvoiceForm.materialCost)+Number(this.billingorInvoiceForm.materialCost)*Number(e)/100,t=Number(this.billingorInvoiceForm.miscChargesCost)+Number(this.billingorInvoiceForm.miscChargesCost)*Number(e)/100,n=Number(this.billingorInvoiceForm.laborOverHeadCost)+Number(this.billingorInvoiceForm.laborOverHeadCost)*Number(e)/100;this.billingorInvoiceForm.totalWorkOrderCostPlus=Math.round(Math.round(r)+Math.round(t)+Math.round(n)).toFixed(2)}resetMaterial(){this.billingorInvoiceForm&&(!1===this.billingorInvoiceForm.material||!0===this.billingorInvoiceForm.totalWorkOrder?(this.billingorInvoiceForm.material=!1,this.billingorInvoiceForm.materialValue=null,this.billingorInvoiceForm.materialCostPlus=this.billingorInvoiceForm.materialCost):(this.sumOfMaterialList(),this.calculateMaterialCostPlus(0)))}resetLaborOverHead(){this.billingorInvoiceForm&&(!1===this.billingorInvoiceForm.laborOverHead||!0===this.billingorInvoiceForm.totalWorkOrder?(this.billingorInvoiceForm.laborOverHead=!1,this.billingorInvoiceForm.laborOverHeadValue=null,this.billingorInvoiceForm.laborOverHeadCostPlus=this.billingorInvoiceForm.laborOverHeadCost):(this.sumofLaborOverHead(),this.calculateLaborOverHeadCostPlus(0)))}resetMisCharges(){this.billingorInvoiceForm&&(!1===this.billingorInvoiceForm.miscCharges||!0===this.billingorInvoiceForm.totalWorkOrder?(this.billingorInvoiceForm.miscCharges=!1,this.billingorInvoiceForm.miscChargesValue=null,this.billingorInvoiceForm.miscChargesCostPlus=this.billingorInvoiceForm.miscChargesCost):(this.sumofCharges(),this.calculateMiscChargesCostPlus(0)))}sumOfMaterialList(){console.log("material build sumOfMaterialList",this.billingorInvoiceForm),this.billingorInvoiceForm&&"Approved"==this.quotestatusofCurrentPart&&(this.billingorInvoiceForm.materialCost=this.buildMethodDetails?this.buildMethodDetails.materialFlatBillingAmount:0)}calculateMaterialCostPlus(e){this.billingorInvoiceForm&&(this.billingorInvoiceForm.materialCostPlus=Math.round(Number(this.billingorInvoiceForm.materialCost)+Number(this.billingorInvoiceForm.materialCost)*Number(e)/100).toFixed(2))}sumofLaborOverHead(){this.billingorInvoiceForm&&"Approved"==this.quotestatusofCurrentPart&&(this.billingorInvoiceForm.laborOverHeadCost=this.buildMethodDetails?this.buildMethodDetails.laborFlatBillingAmount:0)}calculateLaborOverHeadCostPlus(e){this.billingorInvoiceForm&&(this.billingorInvoiceForm.laborOverHeadCostPlus=Math.round(Number(this.billingorInvoiceForm.laborOverHeadCost)+Number(this.billingorInvoiceForm.laborOverHeadCost)*Number(e)/100).toFixed(2))}sumofCharges(){this.billingorInvoiceForm&&"Approved"==this.quotestatusofCurrentPart&&(this.billingorInvoiceForm.miscChargesCost=this.buildMethodDetails?this.buildMethodDetails.chargesFlatBillingAmount:0)}calculateMiscChargesCostPlus(e){this.billingorInvoiceForm&&(this.billingorInvoiceForm.miscChargesCostPlus=Math.round(Number(this.billingorInvoiceForm.miscChargesCost)+Number(this.billingorInvoiceForm.miscChargesCost)*Number(e)/100).toFixed(2))}calculateGrandTotal(){if(this.billingorInvoiceForm)if(!1===this.billingorInvoiceForm.totalWorkOrder)if("Cost Plus"===this.billingorInvoiceForm.costPlusType){const e=null===this.billingorInvoiceForm.materialValue?this.billingorInvoiceForm.materialCost:this.billingorInvoiceForm.materialCostPlus,r=null===this.billingorInvoiceForm.miscChargesValue?this.billingorInvoiceForm.miscChargesCost:this.billingorInvoiceForm.miscChargesCostPlus,t=null===this.billingorInvoiceForm.laborOverHeadValue?this.billingorInvoiceForm.laborOverHeadCost:this.billingorInvoiceForm.laborOverHeadCostPlus;this.billingorInvoiceForm.grandTotal=(Math.round(e)+Math.round(r)+Math.round(t)).toFixed(2)}else{const e=this.billingorInvoiceForm.material?this.billingorInvoiceForm.materialCostPlus:this.billingorInvoiceForm.materialCost,r=this.billingorInvoiceForm.laborOverHead?this.billingorInvoiceForm.miscChargesCostPlus:this.billingorInvoiceForm.miscChargesCost,t=this.billingorInvoiceForm.miscCharges?this.billingorInvoiceForm.laborOverHeadCostPlus:this.billingorInvoiceForm.laborOverHeadCost;this.billingorInvoiceForm.grandTotal=(Math.round(e)+Math.round(r)+Math.round(t)).toFixed(2)}else{const e=null===this.billingorInvoiceForm.totalWorkOrder?this.billingorInvoiceForm.totalWorkOrderCost:this.billingorInvoiceForm.totalWorkOrderCostPlus;this.billingorInvoiceForm.grandTotal=Math.round(e).toFixed(2)}}saveWorkOrderBilling(){this.saveWOBilling.emit(this.billingorInvoiceForm)}updateWorkOrderBilling(){this.updateWOBilling.emit(this.billingorInvoiceForm)}onChangeWOCostPlus(){this.billingorInvoiceForm.totalWorkOrder&&(this.billingorInvoiceForm.grandTotal=Math.round(this.billingorInvoiceForm.totalWorkOrderCostPlus).toFixed(2)),this.billingorInvoiceForm.totalWorkOrderCostPlus=this.billingorInvoiceForm.totalWorkOrderCostPlus.toFixed(2)}onChangeMaterialCostPlus(){this.billingorInvoiceForm.materialCostPlus=this.billingorInvoiceForm.materialCostPlus.toFixed(2)}onChangeLaborOHCostPlus(){this.billingorInvoiceForm.laborOverHeadCostPlus=this.billingorInvoiceForm.laborOverHeadCostPlus.toFixed(2)}onChangeMiscChCostPlus(){this.billingorInvoiceForm.miscChargesCostPlus=this.billingorInvoiceForm.miscChargesCostPlus.toFixed(2)}getSiteNames(e){const{customerId:r}=e;this.customerService.getCustomerShipAddressGet(r).subscribe(e=>{this.soldCustomerShippingOriginalData=e[0],this.soldCustomerSiteList=e[0].map(e=>({label:e.siteName,value:e.customerShippingAddressId})),this.soldCustomerShippingOriginalData.forEach(e=>{e.isPrimary&&(this.billingorInvoiceForm.soldToSiteId=e.customerShippingAddressId,this.changeOfSoldSiteName(e.customerShippingAddressId))}),this.shipCustomerShippingOriginalData=e[0],this.shipCustomerSiteList=e[0].map(e=>({label:e.siteName,value:e.customerShippingAddressId})),this.shipCustomerShippingOriginalData.forEach(e=>{e.isPrimary&&(this.billingorInvoiceForm.shipToSiteId=e.customerShippingAddressId,this.changeOfShipSiteName(e.customerShippingAddressId))})},e=>{this.errorHandling(e)})}errorHandling(e){e.error.errors?e.error.errors.forEach(e=>{this.alertService.showMessage(this.moduleName,e.message,k.d.error)}):this.alertService.showMessage(this.moduleName,"Saving data Failed due to some input error",k.d.error)}handleError(e){e.error.errors?e.error.errors.forEach(e=>{this.alertService.showMessage(this.moduleName,e.message,k.d.error)}):this.alertService.showMessage(this.moduleName,"Saving data Failed due to some input error",k.d.error)}pageIndexChange(e){}tmchange(){}markupChanged(e,r){}parseToInt(e){return Number(e)}};Ae.ctorParameters=()=>[{type:u.a},{type:p.a},{type:H.a},{type:c.a},{type:k.b}],n.b([Object(a.Input)()],Ae.prototype,"quotestatusofCurrentPart",void 0),n.b([Object(a.Input)()],Ae.prototype,"employeesOriginalData",void 0),n.b([Object(a.Input)()],Ae.prototype,"billingorInvoiceForm",void 0),n.b([Object(a.Input)()],Ae.prototype,"savedWorkOrderData",void 0),n.b([Object(a.Input)()],Ae.prototype,"currencyList",void 0),n.b([Object(a.Input)()],Ae.prototype,"isEditBilling",void 0),n.b([Object(a.Input)()],Ae.prototype,"workOrderQuoteId",void 0),n.b([Object(a.Input)()],Ae.prototype,"taskList",void 0),n.b([Object(a.Input)()],Ae.prototype,"quoteExclusionList",void 0),n.b([Object(a.Input)()],Ae.prototype,"quoteMaterialList",void 0),n.b([Object(a.Input)()],Ae.prototype,"quoteFreightsList",void 0),n.b([Object(a.Input)()],Ae.prototype,"quoteChargesList",void 0),n.b([Object(a.Input)()],Ae.prototype,"workOrderChargesList",void 0),n.b([Object(a.Input)()],Ae.prototype,"quoteLaborList",void 0),n.b([Object(a.Input)()],Ae.prototype,"legalEntityList",void 0),n.b([Object(a.Input)()],Ae.prototype,"buildMethodDetails",void 0),n.b([Object(a.Input)()],Ae.prototype,"isViewMode",void 0),n.b([Object(a.Output)()],Ae.prototype,"saveWOBilling",void 0),n.b([Object(a.Output)()],Ae.prototype,"updateWOBilling",void 0),n.b([Object(a.Input)()],Ae.prototype,"workFlowWorkOrderId",void 0),n.b([Object(a.Input)()],Ae.prototype,"workFlowId",void 0),n.b([Object(a.Input)()],Ae.prototype,"labordata",void 0),n.b([Object(a.Input)()],Ae.prototype,"workOrderLaborList",void 0),n.b([Object(a.Input)()],Ae.prototype,"isbillingNotCreated",void 0),Ae=n.b([Object(a.Component)({selector:"app-work-order-billing",template:n.c(t("EBTQ")).default,animations:[F.a],styles:[n.c(t("Zmz0")).default]})],Ae);let Ee=class{constructor(){}};Ee=n.b([Object(a.Component)({selector:"app-work-order-shipping",template:n.c(t("Wqbo")).default,animations:[F.a],styles:[n.c(t("3tlT")).default]})],Ee);let Re=class{constructor(e,r){this.workOrderService=e,this.alertService=r,this.resetSelectedTab=new a.EventEmitter,this.hideHeader=!0,this.gridActiveTab="",this.workFlowObject={materialList:[],equipments:[],charges:[],exclusions:[]},this.materialListDetailedViewOpened=!1,this.labourDetailedViewOpened=!1,this.materialListHeader=[{header:"Task",field:"task"},{header:"MPN",field:"partNumber"},{header:"Revised Part No",field:"revisedPartNo"},{header:"Part Description",field:"partDescription"},{header:"SN",field:"serialNo"},{header:"Stock Line No",field:"stockLineNo"},{header:"Stock Type",field:"stockType"},{header:"Control #",field:"controllerId"},{header:"Control Num",field:"controllerNo"},{header:"Cond #",field:"condition"},{header:"Item Type",field:"itemType"},{header:"Qty Required",field:"quantityReq"},{header:"Qty On Hand",field:"quantityOnHand"},{header:"Qty Available",field:"quantityAvailable"},{header:"QTY Issued",field:"qtyssued"},{header:"Unit Cost",field:"unitCost"},{header:"Extended Cost",field:"extendedCost"},{header:"Warehouse",field:"warehouse"},{header:"Location",field:"location"},{header:"Receiver",field:"receiver"},{header:"Site",field:"site"},{header:"Shelf",field:"shelf"}],this.labourListHeader=[{header:"MPN",field:"partNumber"},{header:"Revised Part No",field:"revisedPartNo"},{header:"Part Description",field:"partDescription"},{header:"Data Entered By",field:"dataEnteredBy"},{header:"Expertise",field:"expertise"},{header:"Employee",field:"employee"},{header:"Task Completed By One",field:"taskCompletedByOne"},{header:"Add Hours By",field:"addHoursBy"},{header:"Total Hours",field:"totalHours"}],this.labourAnalysisListHeader=[{header:"MPN",field:"partNumber"},{header:"Revised Part No",field:"revisedPartNo"},{header:"Part Description",field:"partDescription"},{header:"Action",field:"action"},{header:"Tech",field:"expertise"},{header:"Hours",field:"hours"},{header:"Customer",field:"customer"},{header:"WO Num",field:"workOrderNum"},{header:"Stage",field:"stage"}],this.chargesListHeader=[{header:"MPN",field:"partNumber"},{header:"Revised Part No",field:"revisedPartNo"},{header:"Part Description",field:"partDescription"},{header:"Item",field:"chargeType"},{header:"Vendor",field:"vendor"},{header:"QTY",field:"quantity"},{header:"RO Num",field:"roNum"},{header:"Ref Num",field:"refNum"},{header:"Invoice Num",field:"invoiceNum"},{header:"Amount",field:"unitPrice"}],this.documentsListHeader=[{header:"MPN",field:"partNumber"},{header:"Revised Part No",field:"revisedPartNo"},{header:"Part Description",field:"partDescription"},{header:"Description",field:"description"},{header:"Code",field:"code"},{header:"Link",field:"link"}],this.freightsListHeader=[{header:"MPN",field:"partNumber"},{header:"Revised Part No",field:"revisedPartNo"},{header:"Part Description",field:"partDescription"},{header:"Ship Via",field:"shipVia"},{header:"Dimention",field:"dimention"},{header:"Weight",field:"weight"},{header:"Memo",field:"memo"},{header:"Amount",field:"amount"}],this.isView=!0,this.selectedCommunicationTab="",this.freight=[],this.isSpinnerVisible=!1,this.moduleName="WO Summarized data"}ngOnInit(){}ngOnChanges(){this.gridActiveTab="",this.selectedCommunicationTab=""}resetParentTab(){this.resetSelectedTab.emit()}gridTabChange(e){switch(e){case"materialList":this.gridActiveTab=e,this.isSpinnerVisible=!0,this.workOrderService.getMaterialListMPNS(this.workOrderId).subscribe(e=>{this.isSpinnerVisible=!1,this.materialListMPNs=e,this.materialListMPNs.forEach(e=>{this.mpnPartNumbersList.forEach(r=>{e.workFlowWorkOrderId==r.value.workOrderWorkFlowId&&(e.workOrderPartNumberId=r.value.workOrderPartNumberId)})}),console.log(this.materialListMPNs)},e=>{this.isSpinnerVisible=!1,this.errorHandling(e)});break;case"labour":this.gridActiveTab=e,this.isSpinnerVisible=!0,this.workOrderService.getLabourListMPNS(this.workOrderId).subscribe(e=>{this.isSpinnerVisible=!1,this.labourListMPNs=e,this.labourListMPNs.forEach(e=>{this.mpnPartNumbersList.forEach(r=>{e.workFlowWorkOrderId==r.value.workOrderWorkFlowId&&(e.workOrderPartNumberId=r.value.workOrderPartNumberId)})}),console.log(this.labourListMPNs)},e=>{this.isSpinnerVisible=!1,this.errorHandling(e)});break;case"labourAnalysis":this.gridActiveTab=e,this.isSpinnerVisible=!0,this.workOrderService.getLabourAnalysisListMPNS(this.workOrderId).subscribe(e=>{this.isSpinnerVisible=!1,this.labourAnalysisListMPNs=e,this.labourAnalysisListMPNs.forEach(e=>{this.mpnPartNumbersList.forEach(r=>{e.partNumber==r.label&&(e.workOrderPartNumberId=r.value.workOrderPartNumberId)})}),console.log(this.labourAnalysisListMPNs)},e=>{this.isSpinnerVisible=!1,this.errorHandling(e)});break;case"charges":this.gridActiveTab=e,this.isSpinnerVisible=!0,this.workOrderService.getChargesListMPNS(this.workOrderId).subscribe(e=>{this.isSpinnerVisible=!1,this.chargesListMPNs=e,this.chargesListMPNs.forEach(e=>{this.mpnPartNumbersList.forEach(r=>{e.workFlowWorkOrderId==r.value.workOrderWorkFlowId&&(e.workOrderPartNumberId=r.value.workOrderPartNumberId)})}),console.log(this.chargesListMPNs)},e=>{this.isSpinnerVisible=!1,this.errorHandling(e)});break;case"documents":this.gridActiveTab=e,this.isSpinnerVisible=!0,this.workOrderService.getDocumentsListMPNS(this.workOrderId).subscribe(e=>{this.isSpinnerVisible=!1,this.documentsListMPNs=e,this.documentsListMPNs.forEach(e=>{this.mpnPartNumbersList.forEach(r=>{e.workFlowWorkOrderId==r.value.workOrderWorkFlowId&&(e.workOrderPartNumberId=r.value.workOrderPartNumberId)})}),console.log(this.documentsListMPNs)},e=>{this.isSpinnerVisible=!1,this.errorHandling(e)});break;case"memo":this.gridActiveTab="communication",this.isSpinnerVisible=!0,this.workOrderService.getMemosListMPNS(this.workOrderId).subscribe(e=>{this.isSpinnerVisible=!1,this.memoListMPNs=e,this.memoListMPNs.forEach(e=>{this.mpnPartNumbersList.forEach(r=>{e.partNumber==r.label&&(e.workOrderPartNumberId=r.value.workOrderPartNumberId)})}),console.log(this.memoListMPNs)},e=>{this.isSpinnerVisible=!1,this.errorHandling(e)});break;case"email":this.gridActiveTab="communication",this.isSpinnerVisible=!0,this.workOrderService.getEmailsListMPNS(this.workOrderId).subscribe(e=>{this.isSpinnerVisible=!1,this.emailListMPNs=e,this.emailListMPNs.forEach(e=>{this.mpnPartNumbersList.forEach(r=>{e.partNumber==r.label&&(e.workOrderPartNumberId=r.value.workOrderPartNumberId)})})},e=>{this.isSpinnerVisible=!1,this.errorHandling(e)});break;case"phone":this.gridActiveTab="communication",this.isSpinnerVisible=!0,this.workOrderService.getPhonesListMPNS(this.workOrderId).subscribe(e=>{this.isSpinnerVisible=!1,this.phoneListMPNs=e,this.phoneListMPNs.forEach(e=>{this.mpnPartNumbersList.forEach(r=>{e.partNumber==r.label&&(e.workOrderPartNumberId=r.value.workOrderPartNumberId)})})},e=>{this.isSpinnerVisible=!1,this.errorHandling(e)});break;case"text":this.gridActiveTab="communication",this.isSpinnerVisible=!0,this.workOrderService.getTextsListMPNS(this.workOrderId).subscribe(e=>{this.isSpinnerVisible=!1,this.textListMPNs=e,this.textListMPNs.forEach(e=>{this.mpnPartNumbersList.forEach(r=>{e.partNumber==r.label&&(e.workOrderPartNumberId=r.value.workOrderPartNumberId)})})},e=>{this.isSpinnerVisible=!1,this.errorHandling(e)});break;case"freight":this.gridActiveTab="freight",this.isSpinnerVisible=!0,this.workOrderService.getFreightsListMPNS(this.workOrderId).subscribe(e=>{this.isSpinnerVisible=!1,this.freightsListMPNs=e},e=>{this.isSpinnerVisible=!1,this.errorHandling(e)});break;case"shipping":this.gridActiveTab="shipping",this.isSpinnerVisible=!0,this.workOrderService.getShippingListMPNS(this.workOrderId).subscribe(e=>{this.isSpinnerVisible=!1,this.shippingListMPNs=e},e=>{this.isSpinnerVisible=!1,this.errorHandling(e)});break;case"woAnalysis":this.gridActiveTab="woAnalysis",this.isSpinnerVisible=!0,this.workOrderService.getWOAnalysisMPNs(this.workOrderId).subscribe(e=>{this.isSpinnerVisible=!1,this.woAnalysisMPNs=e},e=>{this.isSpinnerVisible=!1,this.errorHandling(e)});break;case"quoteAnalysis":this.gridActiveTab="quoteAnalysis",this.isSpinnerVisible=!0,this.workOrderService.getQuoteAnalysisMPNs(this.workOrderId).subscribe(e=>{this.isSpinnerVisible=!1,this.quoteAnalysisMPNs=e},e=>{this.isSpinnerVisible=!1,this.errorHandling(e)});break;case"billingAndInvoice":this.gridActiveTab="billingAndInvoice",this.isSpinnerVisible=!0,this.workOrderService.getBillingAndInvoiceMPNs(this.workOrderId).subscribe(e=>{this.isSpinnerVisible=!1,this.billingAndInvoiceMPNs=e},e=>{this.isSpinnerVisible=!1,this.errorHandling(e)})}}collapseAll(e,r,t,n){for(var a in"materialList"==r?this.materialListDetailedViewOpened=!this.materialListDetailedViewOpened:"labour"==r&&(this.labourDetailedViewOpened=!this.labourDetailedViewOpened),t)this.materialListDetailedViewOpened||this.labourDetailedViewOpened?(w(`#${r}_${a}`).collapse("show"),n&&this[n](t[a])):w(`#${r}_${a}`).collapse("hide")}getMaterialListData(e){this.isSpinnerVisible=!0,this.workOrderService.getWorkOrderMaterialList(e.workFlowWorkOrderId,this.workOrderId).subscribe(r=>{this.isSpinnerVisible=!1,r.length>0&&(r.forEach(e=>{this.getValues(e),e.isShowPlus=!0,e.currency&&(e.currency=e.currency.symbol)}),e.workOrderMaterialList=r,e.materialStatus=r[0].partStatusId)},e=>{this.isSpinnerVisible=!1,this.errorHandling(e)})}getLabourListData(e){this.workOrderService.getLabourListForDetailedView(e.workFlowWorkOrderId).subscribe(r=>{e.labor=r})}getChargesListData(e){this.isSpinnerVisible=!0,this.workOrderService.getWorkOrderChargesList(e.workFlowWorkOrderId,this.workOrderId).subscribe(r=>{this.isSpinnerVisible=!1,e.workOrderChargesList=r;for(let t in e.workOrderChargesList)e.workOrderChargesList[t].unitCost=e.workOrderChargesList[t].unitCost.toFixed(2),e.workOrderChargesList[t].extendedCost=e.workOrderChargesList[t].extendedCost.toFixed(2),e.workOrderChargesList[t].unitPrice=e.workOrderChargesList[t].unitPrice.toFixed(2),e.workOrderChargesList[t].extendedPrice=e.workOrderChargesList[t].extendedPrice.toFixed(2);"billorInvoice"===this.gridActiveTab&&(e.workOrderChargesList=e.workOrderChargesList)},e=>{this.isSpinnerVisible=!1,this.errorHandling(e)})}getDocumentsListData(e){this.isSpinnerVisible=!0,this.workOrderService.getDocumentsList(e.workFlowWorkOrderId,this.workOrderId,!1,0).subscribe(r=>{let t=[];this.isSpinnerVisible=!1;r.map(e=>{for(var r=0;r<e.attachmentDetails.length;r++){const n=e.attachmentDetails;t.push(Object.assign({},e,{fileName:n[r].fileName,fileCreatedDate:n[r].createdDate,fileCreatedBy:n[r].createdBy,fileUpdatedBy:n[r].updatedBy,fileUpdatedDate:n[r].updatedDate,fileSize:n[r].fileSize,link:n[r].link,attachmentDetailId:n[r].attachmentDetailId}))}});e.documentsDestructuredData=t},r=>{this.isSpinnerVisible=!1,this.errorHandling(r),e.documentsDestructuredData=[]})}getValues(e){e.stockLineNumber&&(e.stockLineNumber.indexOf(",")>-1?e.isMultipleStockLine="Multiple":e.isMultipleStockLine="Single"),e.controlNo&&(e.controlNo.indexOf(",")>-1?e.isMultipleControlNo="Multiple":e.isMultipleControlNo="Single"),e.controlId&&(e.controlId.indexOf(",")>-1?e.isMultiplecontrolId="Multiple":e.isMultiplecontrolId="Single"),e.receiver&&(e.receiver.indexOf(",")>-1?e.isMultiplereceiver="Multiple":e.isMultiplereceiver="Single")}getFreightListByWorkOrderId(e){0!==e.workFlowWorkOrderId&&this.workOrderId&&(this.isSpinnerVisible=!0,this.workOrderService.getWorkOrderFrieghtsList(e.workFlowWorkOrderId,this.workOrderId,!1,0).subscribe(r=>{this.isSpinnerVisible=!1,e.workOrderFreightList=r},e=>{this.errorHandling(e),this.isSpinnerVisible=!1}))}errorHandling(e){this.alertService.showMessage(this.moduleName,"Error while fetching data",k.d.error)}globalizeAmount(e,r){if(!e||"unitCost"!=r&&"extendedCost"!=r)return e;return Object(C.b)(e,"0")+".00"}};Re.ctorParameters=()=>[{type:p.a},{type:k.b}],n.b([Object(a.Input)()],Re.prototype,"workOrderId",void 0),n.b([Object(a.Input)()],Re.prototype,"savedWorkOrderData",void 0),n.b([Object(a.Input)()],Re.prototype,"mpnPartNumbersList",void 0),n.b([Object(a.Input)()],Re.prototype,"employeesOriginalData",void 0),n.b([Object(a.Input)()],Re.prototype,"taskList",void 0),n.b([Object(a.Input)()],Re.prototype,"workOrderWorkFlowOriginalData",void 0),n.b([Object(a.Input)()],Re.prototype,"customerContactList",void 0),n.b([Object(a.Input)()],Re.prototype,"defaultTab",void 0),n.b([Object(a.Output)()],Re.prototype,"resetSelectedTab",void 0),Re=n.b([Object(a.Component)({selector:"app-common-wo-summarization",template:n.c(t("22cT")).default,styles:[n.c(t("TXuG")).default]})],Re);let Be=class{constructor(e){this.workOrderService=e,this.gridData=[],this.fields=[],this.isSpinnerVisible=!1}ngOnInit(){this.value&&this.value.forEach(e=>{this.gridData.push({data:e,children:{data:[]}})})}ngOnChanges(){this.gridData=[],this.fields=[{header:"Task",field:"task"},{header:"Expertise",field:"expertise"},{header:"Employee",field:"employee"},{header:"Billable",field:"billable"}],this.value&&(this.value.forEach(e=>{this.gridData.push({data:e})}),"Labour Clock In/Out"==this.gridData[0].data.labourHours&&(this.fields.push({header:"Start Date",field:"startDate"}),this.fields.push({header:"End Date",field:"endDate"})),this.fields.push({header:"AdjustedHours",field:"adjustedHours"}))}};Be.ctorParameters=()=>[{type:p.a}],n.b([Object(a.Input)()],Be.prototype,"value",void 0),n.b([Object(a.Input)()],Be.prototype,"type",void 0),n.b([Object(a.Input)()],Be.prototype,"partNumber",void 0),Be=n.b([Object(a.Component)({selector:"app-labour-wo-summarization",template:n.c(t("y+N7")).default,styles:[n.c(t("vx5h")).default]})],Be);let Ve=class{constructor(e){this.workOrderService=e,this.gridData=[],this.isOpenedAll=!1,this.isSpinnerVisible=!1}ngOnInit(){}ngOnChanges(){this.gridData=[],this.value&&this.value.forEach(e=>{0!=e.workOrderShippingId?this.gridData.push({data:e,children:[{data:[]}]}):this.gridData.push({data:e})}),this.gridData=[...this.gridData]}getShippingData(e){this.isSpinnerVisible=!0,this.workOrderService.getShippingData(e.data.workOrderShippingId).subscribe(r=>{this.isSpinnerVisible=!1,e.children=[],r.forEach(r=>{e.children.push({data:r})}),r&&0!=r.length||(e.children=[{data:[]}]),this.gridData=[...this.gridData]},r=>{this.isSpinnerVisible=!1,e.children=[{data:[]}],this.gridData=[...this.gridData]})}detailView(){this.isOpenedAll=!this.isOpenedAll,this.gridData.forEach(e=>{0!=e.data.workOrderShippingId&&this.isOpenedAll?(e.expanded=!0,this.getShippingData(e)):(e.expanded=!1,this.gridData=[...this.gridData])})}};Ve.ctorParameters=()=>[{type:p.a}],n.b([Object(a.Input)()],Ve.prototype,"value",void 0),Ve=n.b([Object(a.Component)({selector:"app-shipping-wo-summarization",template:n.c(t("fn75")).default,styles:[n.c(t("NwK8")).default]})],Ve);let qe=class{constructor(e){this.workOrderService=e,this.gridData=[],this.isOpenedAll=!1,this.isSpinnerVisible=!1}ngOnInit(){}ngOnChanges(){this.gridData=[],this.value&&this.value.forEach(e=>{0!=e.workFlowWorkOrderId?this.gridData.push({data:e,children:[{data:[]}]}):this.gridData.push({data:e})}),this.gridData=[...this.gridData]}getShippingData(e){this.isSpinnerVisible=!0,this.workOrderService.getDocumentData(e.data.workFlowWorkOrderId).subscribe(r=>{this.isSpinnerVisible=!1,e.children=[],r.forEach(r=>{e.children.push({data:r})}),r&&0!=r.length||(e.children=[{data:[]}]),this.gridData=[...this.gridData]},r=>{this.isSpinnerVisible=!1,e.children=[{data:[]}],this.gridData=[...this.gridData]})}detailView(){this.isOpenedAll=!this.isOpenedAll,this.gridData.forEach(e=>{0!=e.data.workFlowWorkOrderId&&this.isOpenedAll?(e.expanded=!0,this.getShippingData(e)):(e.expanded=!1,this.gridData=[...this.gridData])})}};qe.ctorParameters=()=>[{type:p.a}],n.b([Object(a.Input)()],qe.prototype,"value",void 0),qe=n.b([Object(a.Component)({selector:"app-document-wo-summarization",template:n.c(t("oA9t")).default,styles:[n.c(t("k32y")).default]})],qe);let He=class{constructor(e){this.workOrderService=e,this.gridData=[],this.isOpenedAll=!1,this.isSpinnerVisible=!1}ngOnInit(){this.value&&this.value.forEach(e=>{this.gridData.push({data:e,children:{data:[]}})})}ngOnChanges(){this.gridData=[],this.value&&this.value.forEach(e=>{0!=e.workFlowWorkOrderId?this.gridData.push({data:e,children:[{data:[]}]}):this.gridData.push({data:e})}),this.gridData=[...this.gridData]}getShippingData(e){this.isSpinnerVisible=!0,this.workOrderService.getChargesDataForSummarisedView(e.data.workFlowWorkOrderId).subscribe(r=>{this.isSpinnerVisible=!1,e.children=[],r.forEach(r=>{e.children.push({data:r})}),r&&0!=r.length||(e.children=[{data:[]}]),this.gridData=[...this.gridData]},r=>{this.isSpinnerVisible=!1,e.children=[{data:[]}],this.gridData=[...this.gridData]})}globalizeAmount(e){return Object(C.b)(e,"0")+".00"}detailView(){this.isOpenedAll=!this.isOpenedAll,this.gridData.forEach(e=>{0!=e.data.workFlowWorkOrderId&&this.isOpenedAll?(e.expanded=!0,this.getShippingData(e)):(e.expanded=!1,this.gridData=[...this.gridData])})}};He.ctorParameters=()=>[{type:p.a}],n.b([Object(a.Input)()],He.prototype,"value",void 0),He=n.b([Object(a.Component)({selector:"app-charges-wo-summarization",template:n.c(t("Fidx")).default,styles:[n.c(t("eVVA")).default]})],He);let Qe=class{constructor(e){this.workOrderService=e,this.gridData=[],this.isOpenedAll=!1,this.isSpinnerVisible=!1}ngOnInit(){this.value&&this.value.forEach(e=>{0!=e.workFlowWorkOrderId?this.gridData.push({data:e,children:{data:[]}}):this.gridData.push({data:e})})}ngOnChanges(){this.gridData=[],this.value&&this.value.forEach(e=>{0!=e.workFlowWorkOrderId?this.gridData.push({data:e,children:[{data:[]}]}):this.gridData.push({data:e})}),this.gridData=[...this.gridData]}getShippingData(e){this.isSpinnerVisible=!0,this.workOrderService.getFreightsDataForSummarisedView(e.data.workFlowWorkOrderId).subscribe(r=>{this.isSpinnerVisible=!1,e.children=[],r.forEach(r=>{e.children.push({data:r})}),r&&0!=r.length||(e.children=[{data:[]}]),this.gridData=[...this.gridData]},r=>{this.isSpinnerVisible=!1,e.children=[{data:[]}],this.gridData=[...this.gridData]})}globalizeAmount(e){if(e){return Object(C.b)(e,"0")+".00"}}detailView(){this.isOpenedAll=!this.isOpenedAll,this.gridData.forEach(e=>{0!=e.data.workFlowWorkOrderId&&this.isOpenedAll?(e.expanded=!0,this.getShippingData(e)):(e.expanded=!1,this.gridData=[...this.gridData])})}};Qe.ctorParameters=()=>[{type:p.a}],n.b([Object(a.Input)()],Qe.prototype,"value",void 0),Qe=n.b([Object(a.Component)({selector:"app-freight-wo-summarization",template:n.c(t("Usf9")).default,styles:[n.c(t("DZXs")).default]})],Qe);let je=class{constructor(e){this.workOrderService=e,this.gridData=[],this.isOpenedAll=!1,this.isSpinnerVisible=!1}ngOnInit(){this.value&&this.value.forEach(e=>{this.gridData.push({data:e,children:{data:[]}})})}ngOnChanges(){switch(this.gridData=[],this.value&&this.value.forEach(e=>{e.workOrderPartNo&&0!=e.workOrderPartNo?this.gridData.push({data:e,children:[{data:[]}]}):this.gridData.push({data:e})}),this.type){case"memo":this.fields=[{header:"Part Number",field:"partNumber"},{header:"Part Description",field:"partDescription"},{header:"Revised PN",field:"revisedPN"},{header:"Memo",field:"memo"}];break;case"email":this.fields=[{header:"Part Number",field:"partNumber"},{header:"Part Description",field:"partDescription"},{header:"Revised PN",field:"revisedPN"},{header:"Email Type",field:"emailType"},{header:"Subject",field:"subject"},{header:"Email Body",field:"emailBody"},{header:"Contact By",field:"contactBy"},{header:"Contact Date",field:"contactDate"}];break;case"phone":this.fields=[{header:"Part Number",field:"partNumber"},{header:"Part Description",field:"partDescription"},{header:"Revised PN",field:"revisedPN"},{header:"Phone",field:"phone"},{header:"Memo",field:"memo"},{header:"Contact By",field:"contactBy"},{header:"Contact Date",field:"contactDate"}];break;case"text":this.fields=[{header:"Part Number",field:"partNumber"},{header:"Part Description",field:"partDescription"},{header:"Revised PN",field:"revisedPN"},{header:"Mobile",field:"mobile"},{header:"Notes",field:"notes"},{header:"Contact By",field:"contactBy"},{header:"Contact Date",field:"contactDate"}]}}getShippingData(e){this.isSpinnerVisible=!0;let r="memo"==this.type?"getCommunicationMemoForSummarisedView":"email"==this.type?"getCommunicationMailForSummarisedView":"phone"==this.type?"getCommunicationPhoneForSummarisedView":"getCommunicationTextForSummarisedView";this.workOrderService[r](this.workOrderId,e.data.workOrderPartNo).subscribe(r=>{this.isSpinnerVisible=!1,e.children=[],r.forEach(r=>{e.children.push({data:r})}),r&&0!=r.length||(e.children=[{data:[]}]),this.gridData=[...this.gridData]},r=>{this.isSpinnerVisible=!1,e.children=[{data:[]}],this.gridData=[...this.gridData]})}getDate(e){if("Various"!=e&&""!=e&&e){let r=new Date(e);return`${r.getDate()}/${r.getMonth()}/${r.getFullYear()}`}return e}globalizeAmount(e){if(e)return Object(C.b)(e,"0.00")}detailView(){this.isOpenedAll=!this.isOpenedAll,this.gridData.forEach(e=>{0!=e.data.workOrderPartNo&&this.isOpenedAll?(e.expanded=!0,this.getShippingData(e)):(e.expanded=!1,this.gridData=[...this.gridData])})}};je.ctorParameters=()=>[{type:p.a}],n.b([Object(a.Input)()],je.prototype,"value",void 0),n.b([Object(a.Input)()],je.prototype,"type",void 0),n.b([Object(a.Input)()],je.prototype,"workOrderId",void 0),je=n.b([Object(a.Component)({selector:"app-communication-wo-summarization",template:n.c(t("V5LW")).default,styles:[n.c(t("OjnR")).default]})],je);let Ue=class{constructor(e){this.workOrderService=e,this.gridData=[]}ngOnInit(){this.value&&this.value.forEach(e=>{this.gridData.push({data:e})})}ngOnChanges(){switch(this.gridData=[],this.value&&this.value.forEach(e=>{this.gridData.push({data:e})}),this.type){case"woAnalysis":this.fields=[{header:"Part Number",field:"partNumber"},{header:"Part Description",field:"partDescription"},{header:"Revised PN",field:"revisedPN"},{header:"Workorder Num",field:"workOrderNum"},{header:"Stage",field:"stage"},{header:"Status",field:"status"},{header:"Customer Name",field:"customerName"},{header:"Revenue",field:"revenue"},{header:"Material Revenue",field:"materialRevenue"},{header:"Material Cost",field:"materialCost"},{header:"Material Revenue Percentage",field:"materialRevenuePercentage"},{header:"Total Labor Cost",field:"totalLaborCost"},{header:"Labor Revenue Percentage",field:"laborRevenuePercentage"},{header:"OverHead Cost",field:"overHeadCost"},{header:"OverHead Cost Revenue Percentage",field:"overHeadCostRevenuePercentage"},{header:"Charges Cost",field:"chargesCost"},{header:"Freight Cost",field:"freightCost"},{header:"Other Cost",field:"otherCost"},{header:"DirectCost",field:"directCost"},{header:"Direct Cost Revenue Percentage",field:"directCostRevenuePercentage"},{header:"Margin",field:"margin"},{header:"Margin Percentage",field:"marginPercentage"}];break;case"quoteAnalysis":this.fields=[{header:"Part Number",field:"partNumber"},{header:"Part Description",field:"partDescription"},{header:"Revised PN",field:"revisedPN"},{header:"Workorder Num",field:"workOrderNum"},{header:"Stage",field:"stage"},{header:"Status",field:"status"},{header:"Customer Name",field:"customerName"},{header:"Revenue",field:"revenue"},{header:"Material Revenue",field:"materialRevenue"},{header:"Material Cost",field:"materialCost"},{header:"Material Revenue Percentage",field:"materialRevenuePercentage"},{header:"Total Labor Cost",field:"totalLaborCost"},{header:"Labor Cost",field:"laborCost"},{header:"Labor Revenue Percentage",field:"laborRevenuePercentage"},{header:"OverHead Cost",field:"overHeadCost"},{header:"OverHead Cost Revenue Percentage",field:"overHeadCostRevenuePercentage"},{header:"Charges Cost",field:"chargesCost"},{header:"Freight Cost",field:"freightCost"},{header:"Other Cost",field:"otherCost"},{header:"DirectCost",field:"directCost"},{header:"Direct Cost Revenue Percentage",field:"directCostRevenuePercentage"},{header:"Margin",field:"margin"},{header:"Margin Percentage",field:"marginPercentage"}];break;case"labourAnalysis":this.fields=[{header:"Part Number",field:"partNumber"},{header:"Part Description",field:"partDescription"},{header:"Revised PN",field:"revisedPN"},{header:"Workorder Num",field:"workOrderNum"},{header:"Stage",field:"stage"},{header:"Status",field:"status"},{header:"Customer",field:"customer"},{header:"Action",field:"action"},{header:"Expertise",field:"expertise"},{header:"Hours",field:"hours"}];break;case"billingAndInvoice":this.fields=[{header:"Part Number",field:"partNumber"},{header:"Part Description",field:"partDescription"},{header:"SN",field:"serialNumber"},{header:"Item Group",field:"itemGroup"},{header:"Stage",field:"stage"},{header:"Status",field:"mpnStatus"},{header:"Work Order Num",field:"workOrderNum"},{header:"Revenue",field:"revenue"},{header:"Notes",field:"notes"}]}}getDate(e){if("Various"!=e&&""!=e&&e){let r=new Date(e);return`${r.getDate()}/${r.getMonth()}/${r.getFullYear()}`}return e}globalizeAmount(e,r){return!e||"adjustedHours"!=r&&"hours"!=r&&"directCost"!=r&&"directCostRevenuePercentage"!=r&&"freightCost"!=r&&"chargesCost"!=r&&"laborCost"!=r&&"laborRevenuePercentage"!=r&&"margin"!=r&&"marginPercentage"!=r&&"materialCost"!=r&&"materialRevenue"!=r&&"materialRevenuePercentage"!=r&&"otherCost"!=r&&"overHeadCost"!=r&&"overHeadCostRevenuePercentage"!=r&&"revenue"!=r&&"totalLaborCost"!=r&&"margin"!=r&&"marginPercentage"!=r?e:Object(C.b)(e,"0")+".00"}};Ue.ctorParameters=()=>[{type:p.a}],n.b([Object(a.Input)()],Ue.prototype,"value",void 0),n.b([Object(a.Input)()],Ue.prototype,"type",void 0),n.b([Object(a.Input)()],Ue.prototype,"workOrderId",void 0),Ue=n.b([Object(a.Component)({selector:"app-analysis-wo-summarization",template:n.c(t("o+nh")).default,styles:[n.c(t("xFxS")).default]})],Ue);let $e=class{constructor(e){this.workOrderService=e,this.gridData=[],this.isSpinnerVisible=!1,this.isOpenedAll=!1}ngOnChanges(){this.gridData=[],this.value&&this.value.forEach(e=>{e.workFlowWorkOrderId?this.gridData.push({data:e,children:[{data:[]}]}):this.gridData.push({data:e})}),console.log(this.gridData)}ngOnInit(){}getMateialListData(e){e.data.workOrderMaterialsId?(this.isSpinnerVisible=!0,this.workOrderService.getWorkOrderRolMaterialList(e.data.workOrderMaterialsId).subscribe(r=>{this.isSpinnerVisible=!1,e.children=[],r.forEach(r=>{e.children.push({data:r})}),r&&0!=r.length||(e.children=[{data:[]}]),this.gridData=[...this.gridData]},r=>{this.isSpinnerVisible=!1,e.children=[{data:[]}],this.gridData=[...this.gridData]})):e.data.workFlowWorkOrderId&&(this.isSpinnerVisible=!0,this.workOrderService.getMateialListDetailsForSummarisedData(e.data.workFlowWorkOrderId).subscribe(r=>{this.isSpinnerVisible=!1,e.children=[],r.forEach(r=>{r.workOrderMaterialsId?e.children.push({data:r,children:[{data:[]}]}):e.children.push({data:r})}),r&&0!=r.length||(e.children=[{data:[]}]),this.gridData=[...this.gridData]},r=>{this.isSpinnerVisible=!1,e.children=[{data:[]}],this.gridData=[...this.gridData]}))}detailView(){this.isOpenedAll=!this.isOpenedAll,this.gridData.forEach(e=>{0!=e.data.workFlowWorkOrderId&&this.isOpenedAll?(e.expanded=!0,this.openSubPart(e)):(e.expanded=!1,this.gridData=[...this.gridData])})}openAll(e){e.data.workOrderMaterialsId?(this.isSpinnerVisible=!0,this.workOrderService.getWorkOrderRolMaterialList(e.data.workOrderMaterialsId).subscribe(r=>{this.isSpinnerVisible=!1,e.children=[],r.forEach(r=>{e.children.push({data:r})}),r&&0!=r.length||(e.children=[{data:[]}]),this.gridData=[...this.gridData]},r=>{this.isSpinnerVisible=!1,e.children=[{data:[]}],this.gridData=[...this.gridData]})):e.data.workFlowWorkOrderId}openSubPart(e){this.isSpinnerVisible=!0,this.workOrderService.getMateialListDetailsForSummarisedData(e.data.workFlowWorkOrderId).subscribe(r=>{this.isSpinnerVisible=!1,e.children=[],r.forEach(r=>{r.workOrderMaterialsId?(e.children.push({data:r,children:[{data:[]}]}),this.openAll(e)):e.children.push({data:r})}),r&&0!=r.length||(e.children=[{data:[]}]),this.gridData=[...this.gridData]},r=>{this.isSpinnerVisible=!1,e.children=[{data:[]}],this.gridData=[...this.gridData]})}};$e.ctorParameters=()=>[{type:p.a}],n.b([Object(a.Input)()],$e.prototype,"value",void 0),$e=n.b([Object(a.Component)({selector:"app-materiallist-wo-summarization",template:n.c(t("Go27")).default,styles:[n.c(t("CYP/")).default]})],$e);let ze=class{constructor(e,r){this.workOrderService=e,this.alertService=r,this.partNumbersList=[],this.pageSize=10,this.pageIndex=0,this.totalRecords=0,this.isSpinnerVisible=!1,this.headers=[{field:"partNumber",header:"Part Number"},{field:"partDescription",header:"Part Description"},{field:"mcSerial",header:"MC Serial"},{field:"customer",header:"Customer"},{field:"stockLineNumber",header:"Stock Line Number"},{field:"serialNumber",header:"Serial Number"},{field:"controlId",header:"Control Id"},{field:"qtyToReturn",header:"QTY To Return"},{field:"qtyReserved",header:"QTY Reserved"}],this.moduleName="Return to customer",this.selectedColumns=this.headers}ngOnInit(){this.getPartNumberReturned()}getPartNumberReturned(){this.isSpinnerVisible=!0,this.workOrderService.getReturnedPartsToCustomer(this.workOrderId,this.workOrderPartNoId).subscribe(e=>{this.isSpinnerVisible=!1,this.partNumbersList=e,this.totalRecords=e.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)},e=>{this.errorHandling(e),this.isSpinnerVisible=!1})}pageIndexChange(e){this.pageSize=e.rows}getPageCount(e,r){return Math.ceil(e/r)}errorHandling(e){this.alertService.showMessage(this.moduleName,"Error while fetching data",k.d.error)}edit(e,r){}deleteMemo(e){}};ze.ctorParameters=()=>[{type:p.a},{type:k.b}],n.b([Object(a.Input)()],ze.prototype,"workOrderPartNoId",void 0),n.b([Object(a.Input)()],ze.prototype,"workOrderId",void 0),ze=n.b([Object(a.Component)({selector:"app-wo-return-to-customer",template:n.c(t("mv3S")).default,styles:[n.c(t("Bbri")).default]})],ze);let _e=class{constructor(e,r,t,n){this.workOrderService=e,this.authService=r,this.commonService=t,this.alertService=n,this.saveworkOrderLabor=new a.EventEmitter,this.isQuote=!1,this.isView=!1,this.isEdit=!1,this.workFlowId=0,this.buildMethodDetails={},this.selectedPartNumber={},this.workFlowData={},this.isSubWorkOrder=!1,this.frombilling=!1,this.hideHeader=!1,this.toggle_po_header=!0,this.minDateValue=new Date,this.billableList=[{label:"Billable",value:1},{label:"Non-Billable",value:2}],this.dropdownSettings={},this.selectedItems=[],this.type="",this.defaultBurdenRate=0,this.moduleName=""}ngOnInit(){if(this.allEmployees=this.employeesOriginalData,this.dropdownSettings={singleSelection:!1,idField:"taskId",textField:"description",selectAllText:"Select All",unSelectAllText:"UnSelect All",itemsShowLimit:1,allowSearchFilter:!1},this.taskList&&(this.taskListForHeader=this.taskList.map(e=>({taskId:e.taskId,description:e.description.toUpperCase()}))),this.workOrderWorkFlowList=this.workOrderWorkFlowOriginalData,this.laborForm.costPlusType="Mark Up",this.workOrderLaborList?(this.laborForm.workFlowWorkOrderId=this.workOrderLaborList.workFlowWorkOrderId?this.workOrderLaborList.workFlowWorkOrderId:this.laborForm.workFlowWorkOrderId,this.laborForm.dataEnteredBy=this.workOrderLaborList.dataEnteredBy?this.workOrderLaborList.dataEnteredBy:this.laborForm.dataEnteredBy,this.laborForm.employeeId=this.workOrderLaborList.employeeId?this.workOrderLaborList.employeeId:this.laborForm.employeeId,this.laborForm.isTaskCompletedByOne=this.workOrderLaborList.isTaskCompletedByOne,this.laborForm.expertiseId=this.workOrderLaborList.expertiseId?this.workOrderLaborList.expertiseId:this.laborForm.expertiseId,this.laborForm.dataEnteredBy||(this.laborForm.dataEnteredBy={employeeId:this.authService.currentEmployee.employeeId,label:this.authService.currentEmployee.label,name:this.authService.currentEmployee.name,value:this.authService.currentEmployee.value})):(this.laborForm.workFloworSpecificTaskorWorkOrder="specificTasks",this.laborForm.dataEnteredBy={employeeId:this.authService.currentUser.employeeId,label:this.authService.currentUser.fullName,name:this.authService.currentUser.fullName,value:this.authService.currentUser.employeeId}),this.getAllExpertiseType(),this.id=this.savedWorkOrderData.workOrderId,this.isView||this.isEdit)for(let e of this.taskList)this.calculateTaskHours(e),this.calculateAdjustmentHours(e),this.calculateAdjustedHours(e);this.laborForm.costPlusType&&(this.laborForm.costPlusType=this.laborForm.markupFixedPrice,this.overAllMarkup=Number(this.laborForm.headerMarkupId)),this.buildMethodDetails&&(this.laborForm.costPlusType=this.buildMethodDetails.laborBuildMethod,this.laborForm.laborFlatBillingAmount=this.buildMethodDetails.laborFlatBillingAmount),this.selectedPartNumber&&this.selectedPartNumber.managementStructureId&&!this.basicLabourDetail&&this.getBasicLabourData(this.selectedPartNumber.managementStructureId)}ngOnChanges(){this.allEmployees=this.employeesOriginalData,this.laborForm.employeeId=Object(C.d)("value",this.laborForm.employeeId,this.employeesOriginalData),this.laborForm.dataEnteredBy=Object(C.d)("value",this.laborForm.dataEnteredBy,this.employeesOriginalData),this.taskList&&(this.taskListForHeader=this.taskList.map(e=>({taskId:e.taskId,description:e.description.toUpperCase()}))),this.isQuote||this.getEmployeeData(),this.laborForm.costPlusType="Mark Up",this.workOrderWorkFlowList=this.workOrderWorkFlowOriginalData,this.laborForm.workOrderHoursType&&(this.laborForm.workFloworSpecificTaskorWorkOrder="specificTasks",1==this.laborForm.workOrderHoursType?this.laborForm.workFloworSpecificTaskorWorkOrder="workFlow":2==this.laborForm.workOrderHoursType?this.laborForm.workFloworSpecificTaskorWorkOrder="specificTasks":3==this.laborForm.workOrderHoursType&&(this.laborForm.workFloworSpecificTaskorWorkOrder="workOrder"));for(let e in this.laborForm.workOrderLaborList[0])if(0==this.laborForm.workOrderLaborList[0][e].length)delete this.laborForm.workOrderLaborList[0][e];else for(let r in this.taskListForHeader)e.toUpperCase()==this.taskListForHeader[r].description&&(this.selectedItems=[...this.selectedItems,{taskId:this.taskListForHeader[r].taskId,description:this.taskListForHeader[r].description}]);if(this.calculateTotalWorkHours(),setTimeout(()=>{this.workOrderLaborList?(this.employeeList=this.employeesOriginalData,this.laborForm.workFlowWorkOrderId=this.workOrderLaborList.workFlowWorkOrderId?this.workOrderLaborList.workFlowWorkOrderId:this.laborForm.workFlowWorkOrderId,this.laborForm.dataEnteredBy=this.workOrderLaborList.dataEnteredBy?this.workOrderLaborList.dataEnteredBy:this.laborForm.dataEnteredBy,this.laborForm.employeeId=this.workOrderLaborList.employeeId?this.workOrderLaborList.employeeId:this.laborForm.employeeId,this.laborForm.isTaskCompletedByOne=this.workOrderLaborList.isTaskCompletedByOne,this.laborForm.expertiseId=this.workOrderLaborList.expertiseId?this.workOrderLaborList.expertiseId:this.laborForm.expertiseId,this.laborForm.dataEnteredBy||(this.laborForm.dataEnteredBy={employeeId:this.authService.currentEmployee.employeeId,label:this.authService.currentEmployee.label,name:this.authService.currentEmployee.name,value:this.authService.currentEmployee.value})):(this.laborForm.dataEnteredBy={employeeId:this.authService.currentEmployee.employeeId,label:this.authService.currentEmployee.label,name:this.authService.currentEmployee.name,value:this.authService.currentEmployee.value},this.employeesOriginalData=[])},0),this.isView||this.isEdit)for(let e of this.taskList)this.calculateTaskHours(e),this.calculateAdjustmentHours(e),this.calculateAdjustedHours(e);this.laborForm.costPlusType&&(this.laborForm.costPlusType=this.laborForm.markupFixedPrice,this.overAllMarkup=Number(this.laborForm.headerMarkupId))}assignHoursToToalWorkOrder(){this.laborForm.isTaskCompletedByOne&&(this.clearHoursData(),this.laborForm.totalWorkHours=0,this.assignAllTask())}getWorkFlowLaborList(){if(this.workFlowData.laborList)for(let e of this.workFlowData.laborList)if(this.taskList)for(let r of this.taskList)if(r.taskId==e.taskId){this.laborForm.workOrderLaborList[0][r.description.toLowerCase()]||(this.laborForm.workOrderLaborList[0][r.description.toLowerCase()]=[]),!this.laborForm.workOrderLaborList[0][r.description.toLowerCase()][0]||null!=this.laborForm.workOrderLaborList[0][r.description.toLowerCase()][0].expertiseId&&null!=this.laborForm.workOrderLaborList[0][r.description.toLowerCase()][0].expertiseId||this.laborForm.workOrderLaborList[0][r.description.toLowerCase()].splice(0,1);let t=new y;t.workOrderLaborHeaderId=e.workOrderLaborHeaderId,t.workOrderLaborId=e.workOrderLaborId,t.expertiseId=e.expertiseId,t.employeeId=Object(C.d)("value",e.employeeId,this.employeesOriginalData),t.billableId=e.billableId,t.startDate=e.startDate?new Date(e.startDate):null,t.endDate=e.endDate?new Date(e.endDate):null,t.hours=e.hours,t.adjustments=e.adjustments,t.adjustedHours=e.adjustedHours,t.memo=e.memo,this.laborForm.workOrderLaborList[0][r.description.toLowerCase()].push(t)}for(let e of this.taskList)this.calculateTaskHours(e)}getBasicLabourData(e){this.workOrderService.getLaborOHSettingsByManagementstrucId(e).subscribe(e=>{e.length>0?(this.basicLabourDetail=e[0],this.populateDefaultData()):this.basicLabourDetail=void 0},e=>{this.basicLabourDetail=void 0,this.errorHandling(e)})}populateDefaultData(){Object(C.i)(this.laborForm.workOrderLaborList[0])&&this.basicLabourDetail?!this.isQuote&&this.basicLabourDetail?"Assign Total Hours To Work Order"==this.basicLabourDetail.laborHoursIdText?(this.laborForm.workFloworSpecificTaskorWorkOrder="workOrder",this.laborForm.isTaskCompletedByOne=!0):"Assign Hours by Specific Actions"==this.basicLabourDetail.laborHoursIdText&&(this.laborForm.workFloworSpecificTaskorWorkOrder="specificTasks"):this.populateQuoteData():this.isQuote&&!this.isEdit&&this.basicLabourDetail&&this.populateQuoteData()}populateQuoteData(){this.basicLabourDetail&&("As A % Of Technician/Mechanic Hourly Rate"==this.basicLabourDetail.burdenRateIdText?this.defaultBurdenRate=this.basicLabourDetail.burdenRateId:"Flat Amount Per Work Order"==this.basicLabourDetail.burdenRateIdText&&(this.laborForm.costPlusType=3,this.laborForm.laborFlatBillingAmount=this.basicLabourDetail.flatAmount))}calculateBurderRate(e){e.burdaenRatePercentageId&&e.directLaborOHCost&&(this.markupList.forEach(r=>{r.value==e.burdaenRatePercentageId&&(e.burdenRateAmount=e.directLaborOHCost/100*Number(r.label))}),this.calculateTotalCost(e),this.markupChanged(e,"row"))}calculateOverallTotalHours(){this.laborForm&&this.laborForm.workOrderLaborList&&(this.laborForm.totalWorkHours=0,this.laborForm.workOrderLaborList.forEach(e=>{for(let r in e)e[r].forEach(e=>{e.hours&&!e.IsDeleted&&(this.laborForm.totalWorkHours+=e.hours)})}),this.laborForm.totalWorkHours=this.laborForm.totalWorkHours.toFixed(2))}getEmployeeData(){this.laborForm&&this.laborForm.workOrderLaborList[0]&&Object.keys(this.laborForm.workOrderLaborList[0]).forEach((e,r)=>{this.laborForm.workOrderLaborList[0][e].forEach(t=>{1!=this.laborForm.hoursorClockorScan&&this.calculateWorkingHoursandMins(t),this.taskList.forEach(r=>{r.description.toLowerCase()==e.toLowerCase()&&(this.calculateTaskHours(r),this.calculateAdjustmentHours(r),this.calculateAdjustedHours(r))}),t.expertiseId&&this.commonService.getExpertiseEmployeesByCategory(t.expertiseId).subscribe(e=>{this["expertiseEmployeeOriginalData"+r]=e.map(e=>({value:e.employeeId,label:e.name}))},e=>{this.errorHandling(e)})})}),this.laborForm&&this.laborForm.expertiseId&&(!this.employeesOriginalData||this.employeesOriginalData.length<=0)&&this.commonService.getExpertiseEmployeesByCategory(this.laborForm.expertiseId).subscribe(e=>{this.employeesOriginalData=e.map(e=>({value:e.employeeId,label:e.name}))},e=>{this.errorHandling(e)})}onDeSelect(e){this.currentItem=e,this.type="single",document.body.click(),w("#confirmationTaskDelete").modal("show")}onDeSelectAll(e){this.type="all",document.body.click(),w("#confirmationTaskDelete").modal("show")}onItemSelect(e){this.laborForm.workOrderLaborList[0][e.description.toLowerCase()]||(this.laborForm.workOrderLaborList[0][e.description.toLowerCase()]=[],this.laborForm.isTaskCompletedByOne&&this.addNewTask(e.description.toLowerCase()))}onSelectAll(e){e.forEach(e=>{this.laborForm.workOrderLaborList[0][e.description.toLowerCase()]||(this.laborForm.workOrderLaborList[0][e.description.toLowerCase()]=[],this.laborForm.isTaskCompletedByOne&&this.addNewTask(e.description.toLowerCase()))})}deleteConfirmationTask(e){"single"==e?delete this.laborForm.workOrderLaborList[0][this.currentItem.description.toLowerCase()]:"all"==e&&(this.laborForm.workOrderLaborList[0]={}),Object.keys(this.laborForm.workOrderLaborList[0]).forEach((e,r)=>{this.laborForm.workOrderLaborList[0][e].forEach(r=>{1!=this.laborForm.hoursorClockorScan&&this.calculateWorkingHoursandMins(r),this.taskList.forEach(r=>{r.description.toLowerCase()==e.toLowerCase()&&(this.calculateTaskHours(r),this.calculateAdjustmentHours(r),this.calculateAdjustedHours(r))})})}),w("#confirmationTaskDelete").modal("hide")}clearHoursData(){Object.keys(this.laborForm.workOrderLaborList[0]).forEach((e,r)=>{this.laborForm.workOrderLaborList[0][e].forEach(r=>{1!=this.laborForm.hoursorClockorScan&&this.calculateWorkingHoursandMins(r),this.taskList.forEach(r=>{r.description.toLowerCase()==e.toLowerCase()&&(this.clearHours(r),this.calculateTaskHours(r),this.calculateAdjustmentHours(r),this.calculateAdjustedHours(r))})})})}dismissModelTask(){w("#confirmationTaskDelete").modal("hide"),"single"==this.type?this.selectedItems=[...this.selectedItems,{description:this.currentItem.description,taskId:this.currentItem.taskId}]:"all"==this.type&&(this.selectedItems=this.taskListForHeader)}getLenghtOfTask(e){if(e&&0==e.length&&!this.isView)return!0;if(e){for(let r of e)if(!r.IsDeleted)return!1;return!0}return!1}get userName(){return this.authService.currentUser?this.authService.currentUser.userName:""}generateLaborForm(){const e=Object.keys(this.laborForm.workOrderLaborList[0]);for(let r=0;r<e.length;r++)this.laborForm=Object.assign({},this.laborForm,{workOrderLaborList:[Object.assign({},this.laborForm.workOrderLaborList[0],{[e[r]]:[new y]})]})}calculateHoursDifference(e){if(null!=e.hours&&null!=e.adjustments){this.totalWorkHours=0,e.totalMinutes||(e.totalMinutes=0),e.totalHours||(e.totalHours=0),e.hours=Number(`${e.totalHours}.${e.totalMinutes}`),e.adjustedHours=Number(e.hours)+Number(e.adjustments)}this.calculateTotalWorkHours()}filterWorkFlowNumbers(e){if(this.workOrderWorkFlowList=this.workOrderWorkFlowOriginalData,void 0!==e.query&&null!==e.query){const r=[...this.workOrderWorkFlowOriginalData.filter(r=>r.label.toLowerCase().includes(e.query.toLowerCase()))];this.workOrderWorkFlowList=r}}filterDataEnteredBy(e){if(this.dataEnteredByList=this.allEmployees,void 0!==e.query&&null!==e.query){const r=[...this.allEmployees.filter(r=>r.label.toLowerCase().includes(e.query.toLowerCase()))];this.dataEnteredByList=r}}filterEmployee(e){if(this.employeeList=this.employeesOriginalData,void 0!==e.query&&null!==e.query){const r=[...this.employeesOriginalData.filter(r=>r.label.toLowerCase().includes(e.query.toLowerCase()))];this.employeeList=r}}getAllExpertiseType(){this.commonService.getExpertise().subscribe(e=>{this.expertiseTypeList=e.map(e=>({label:e.expertiseType,value:e.employeeExpertiseId}))},e=>{this.errorHandling(e)})}getExpertiseEmployeeByExpertiseId(e,r,t){this.isQuote||(t.employeeId=null,e&&this.commonService.getExpertiseEmployeesByCategory(e).subscribe(e=>{this["expertiseEmployeeOriginalData"+r]=e.map(e=>({value:e.employeeId,label:e.name}))},e=>{this.errorHandling(e)}))}getExpertiseEmployeeByExpertiseIdForHeader(e){this.commonService.getExpertiseEmployeesByCategory(e).subscribe(e=>{this.employeesOriginalData=e.map(e=>({value:e.employeeId,label:e.name})),this.laborForm.employeeId=void 0},e=>{this.errorHandling(e)})}getDynamicVariableData(e,r){return this[e+r]}filterExpertiseEmployee(e,r){if(this["expertiseEmployee"+r]=null==this["expertiseEmployeeOriginalData"+r]?this.employeesOriginalData:this["expertiseEmployeeOriginalData"+r],void 0!==e.query&&null!==e.query){const t=[...this["expertiseEmployeeOriginalData"+r].filter(r=>r.label.toLowerCase().includes(e.query.toLowerCase()))];this["expertiseEmployee"+r]=t}}addNewTask(e){let r=new y;r.expertiseId=Number(this.laborForm.expertiseId),r.employeeId=this.laborForm.employeeId,this.taskList.forEach(e=>{"Assemble"==e.description&&(r.taskId=e.taskId)}),this.isQuote&&this.basicLabourDetail&&("As A % Of Technician/Mechanic Hourly Rate"==this.basicLabourDetail.burdenRateIdText?(r.burdaenRatePercentageId=this.basicLabourDetail.flatAmount,this.calculateTotalCost(r),this.markupChanged(r,"row")):"Flat Amount Per Hour"==this.basicLabourDetail.burdenRateIdText&&(r.burdenRateAmount=this.basicLabourDetail.flatAmount,this.calculateTotalCost(r),this.markupChanged(r,"row")),"Use Average Rate Of ALL Technician/Mechanic"==this.basicLabourDetail.laborRateIdText&&(this.basicLabourDetail.averageRate&&(r.directLaborOHCost=Number(this.basicLabourDetail.averageRate).toFixed(2)),this.calculateTotalCost(r),this.markupChanged(r,"row"),this.calculateBurderRate(r))),this.laborForm.workOrderLaborList[0][e].unshift(r),Object.keys(this.laborForm.workOrderLaborList[0]).forEach((e,r)=>{this.laborForm.workOrderLaborList[0][e].forEach(t=>{1!=this.laborForm.hoursorClockorScan&&this.calculateWorkingHoursandMins(t),this.taskList.forEach(r=>{r.description.toLowerCase()==e.toLowerCase()&&(this.calculateTaskHours(r),this.calculateAdjustmentHours(r),this.calculateAdjustedHours(r))}),t.expertiseId&&!isNaN(t.expertiseId)&&this.commonService.getExpertiseEmployeesByCategory(t.expertiseId).subscribe(e=>{this["expertiseEmployeeOriginalData"+r]=e.map(e=>({value:e.employeeId,label:e.name}))},e=>{this.errorHandling(e)})})})}startandStop(e){null===e.startDate?e.startDate=new Date:null===e.endDate&&(e.endDate=new Date),this.calculateWorkingHoursandMins(e)}resetEndDateandTime(e){e.endDate=null}calculateWorkingHoursandMins(e){if(e.startDate&&e.endDate){const r=N(e.startDate),t=N(e.endDate),n=N(t,"DD/MM/YYYY HH:mm:ss").diff(N(r,"DD/MM/YYYY HH:mm:ss")),a=N.duration(n);e.hours=Math.floor(a.asHours())+N.utc(n).format(".mm"),e.totalMinutes=N.utc(n).format("mm"),e.totalHours=Math.floor(a.asHours()),this.calculateHoursDifference(e)}}isEditTime(e,r){("endDateandTimeIsEdit"===r||"startDateandTimeIsEdit"===r)&&(e[r]=!0!==e[r])}saveLabor(){var e=0;let r=[];this.taskList.forEach(e=>{if(this.laborForm.workOrderLaborList[0][e.description.toLowerCase()]&&this.laborForm.workOrderLaborList[0][e.description.toLowerCase()].length>0){const t={WorkOrderQuoteTaskId:0,TaskId:e.taskId,LaborHours:e.totalHours,OverHeadCost:this.getOverHeadCost(this.laborForm.workOrderLaborList[0][e.description.toLowerCase()]),AdjustmentHours:0,AdjustedHours:0,LaborCost:this.getTotalLabourCost(this.laborForm.workOrderLaborList[0][e.description.toLowerCase()]),LaborBilling:this.getTotalBillingAmount(this.laborForm.workOrderLaborList[0][e.description.toLowerCase()]),LaborRevenue:this.getTotalBillingAmount(this.laborForm.workOrderLaborList[0][e.description.toLowerCase()]),masterCompanyId:this.authService.currentUser.masterCompanyId,CreatedBy:"admin",UpdatedBy:"admin",CreatedDate:(new Date).toDateString(),UpdatedDate:(new Date).toDateString(),IsActive:!0,IsDeleted:!1};r.push(t)}}),void 0!==this.workOrderLaborList&&null!==this.workOrderLaborList&&(e=this.workOrderLaborList.workOrderLaborHeaderId);const t={createdBy:this.userName,updatedBy:this.userName,createdate:new Date,updatdate:new Date,isActive:!0};let n=this.laborForm.workOrderLaborList[0],a={};for(let s in n)"length"!=s&&(a[s]=n[s].map(e=>Object.assign({},e,t,{taskId:this.getTaksId(s),employeeId:Object(C.h)("value",e.employeeId)})));this.saveFormdata=Object.assign({},this.laborForm,{hoursorClockorScan:this.laborForm.hoursorClockorScan,dataEnteredBy:Object(C.h)("value",this.laborForm.dataEnteredBy),employeeId:Object(C.h)("value",this.laborForm.employeeId),masterCompanyId:1},t,{workOrderId:this.id,workFlowWorkOrderId:Object(C.h)("value",this.laborForm.workFlowWorkOrderId),workOrderLaborHeaderId:e,workOrderLaborList:a,totalWorkHours:this.laborForm.totalWorkHours,WorkOrderQuoteTask:r,LaborBuildMethod:this.laborForm.costPlusType}),"workFlow"==this.laborForm.workFloworSpecificTaskorWorkOrder?this.saveFormdata.workOrderHoursType=1:"specificTasks"==this.laborForm.workFloworSpecificTaskorWorkOrder?this.saveFormdata.workOrderHoursType=2:"workOrder"==this.laborForm.workFloworSpecificTaskorWorkOrder&&(this.saveFormdata.workOrderHoursType=3),this.isQuote&&(this.saveFormdata.headerMarkupId=Number(this.overAllMarkup),this.saveFormdata.markupFixedPrice=this.laborForm.costPlusType),this.saveworkOrderLabor.emit(this.saveFormdata)}getOverHeadCost(e){let r=0;return e.forEach(e=>{e.directLaborOHCost&&(e.directLaborOHCost=Number(e.directLaborOHCost).toFixed(2),r+=Number(e.directLaborOHCost))}),r}getTotalLabourCost(e){let r=0;return e.forEach(e=>{e.totalCost&&(r+=Number(e.totalCost))}),r}getExpertise(e,r){try{if(this.workOrderLaborList){for(let t of this.workOrderLaborList.laborList)if(t.taskId==r&&t.expertiseId==e.value)return!0;return!1}return!0}catch(t){return!0}}getTaksId(e){for(let r of this.taskList)if(r.description.toLowerCase()==e.toLowerCase())return r.taskId}isAllowedTask(e){try{if(this.workOrderLaborList){for(let r of this.workOrderLaborList.laborList)if(r.taskId==e)return!0;return!1}return!0}catch(r){return!0}}checkDisability(e,r){try{if(this.workOrderLaborList){if("workOrder"==this.laborForm.workFloworSpecificTaskorWorkOrder)return!0;if("workFlow"==this.laborForm.workFloworSpecificTaskorWorkOrder){for(let t of this.workOrderLaborList.laborList)t.taskId==r&&t.expertiseId==e.expertiseId&&(e.hours=t.hours,this.calculateHoursDifference(e));return!0}}return!1}catch(t){return!1}}showDeleteLabourPopup(e,r){this.deletingLabourObj={taskName:e,index:r},w("#deleteRowConfirmation").modal("show")}deleteLabor(e,r){this.laborForm.workOrderLaborList[0][e.toLowerCase()][r].IsDeleted=!0;let t=this.laborForm.workOrderLaborList[0][e.toLowerCase()].splice(r,1);this.laborForm.workOrderLaborList[0][e.toLowerCase()].push(t[0]),Object.keys(this.laborForm.workOrderLaborList[0]).forEach((e,r)=>{this.laborForm.workOrderLaborList[0][e].forEach(t=>{1!=this.laborForm.hoursorClockorScan&&this.calculateWorkingHoursandMins(t),this.taskList.forEach(r=>{r.description.toLowerCase()==e.toLowerCase()&&(this.calculateTaskHours(r),this.calculateAdjustmentHours(r),this.calculateAdjustedHours(r))}),this.commonService.getExpertiseEmployeesByCategory(t.expertiseId).subscribe(e=>{this["expertiseEmployeeOriginalData"+r]=e.map(e=>({value:e.employeeId,label:e.name}))},e=>{this.errorHandling(e)})})}),this.calculateOverallTotalHours()}calculateTotalCost(e){e.directLaborOHCost&&(e.totalCostPerHour=Number(e.directLaborOHCost),e.burdenRateAmount&&(e.totalCostPerHour+=Number(e.burdenRateAmount)),e.hours&&(e.totalCost=(Number(e.totalCostPerHour)*Number(e.hours)).toFixed(2)))}tmchange(){this.overAllMarkup="";let e=Number(this.laborForm.costPlusType);for(let r in this.laborForm.workOrderLaborList[0])for(let t of this.laborForm.workOrderLaborList[0][r])this.laborForm.costPlusType&&3==this.laborForm.costPlusType&&(t.billingAmount=0,t.billingRate=0,this.laborForm.laborFlatBillingAmount=0),t.billingMethodId=3==e?"":e,2!=e&&3!=e||(t.markupPercentageId=void 0)}markupChanged(e,r){try{this.markupList&&this.markupList.forEach(t=>{if("row"==r&&t.value==e.markupPercentageId&&e.totalCostPerHour&&e.totalCostPerHour)e.billingRate=(e.totalCostPerHour+e.totalCostPerHour/100*Number(t.label)).toFixed(2),e.billingAmount=Object(C.b)(Number(e.billingRate)*Number(e.hours),0);else if("all"==r&&t.value==this.overAllMarkup)for(let e in this.laborForm.workOrderLaborList[0])for(let r of this.laborForm.workOrderLaborList[0][e])1==r.billingMethodId&&(r.markupPercentageId=this.overAllMarkup,r.totalCostPerHour&&r.totalCostPerHour&&(r.billingRate=(r.totalCostPerHour+r.totalCostPerHour/100*Number(t.label)).toFixed(2),r.billingAmount=Object(C.b)(Number(r.billingRate)*Number(r.hours),0)))})}catch(t){}}calculateTotalWorkHours(){if(("specificTasks"==this.laborForm.workFloworSpecificTaskorWorkOrder||"workFlow"==this.laborForm.workFloworSpecificTaskorWorkOrder)&&(this.laborForm.totalWorkHours=0,this.laborForm.workOrderLaborList)){for(let e in this.laborForm.workOrderLaborList[0])if(this.laborForm.workOrderLaborList[0][e][0]&&null!=this.laborForm.workOrderLaborList[0][e][0].hours)for(let r of this.laborForm.workOrderLaborList[0][e])this.laborForm.totalWorkHours+=Number(r.hours);this.laborForm.totalWorkHours=this.laborForm.totalWorkHours.toFixed(2)}}getTotalCostPlusAmount(){let e=0;return this.laborForm.workOrderLaborList.forEach(r=>{r.labourCostPlus&&(e+=r.labourCostPlus)}),Object(C.b)(e,0)}getTotalFixedAmount(e){let r=0;for(let t of e)t.fixedAmount&&(r+=Number(t.fixedAmount.toString().split(",").join("")));return Object(C.b)(r,0)}getTotalLaborOHCost(e){let r=0;for(let t of e)t.directLaborOHCost&&(r+=Number(t.directLaborOHCost.toString().split(",").join("")));return Object(C.b)(r,0)}getTotalLaborBurdenRate(e){let r=0;for(let t of e)t.burdenRateAmount&&(r+=Number(t.burdenRateAmount.toString().split(",").join("")));return Object(C.b)(r,0)}getTotalCostPerHour(e){let r=0;for(let t of e)t.totalCostPerHour&&(r+=Number(t.totalCostPerHour.toString().split(",").join("")));return Object(C.b)(r,0)}getTotalCost(e){let r=0;for(let t of e)t.totalCost&&!t.IsDeleted&&(r+=Number(t.totalCost.toString().split(",").join("")));return Object(C.b)(r,0)}getTotalBillingRate(e){let r=0;for(let t of e)t.billingRate&&(r+=Number(t.billingRate.toString().split(",").join("")));return r.toFixed(2)}getTotalBillingAmount(e){let r=0;for(let t of e)t.billingAmount&&!t.IsDeleted&&(r+=Number(t.billingAmount.toString().split(",").join("")));return this.laborForm.laborFlatBillingAmount=r.toFixed(2),Object(C.b)(r,0)}getTotalCostPlus(e){let r=0;for(let t of e)t.labourCostPlus&&(r+=t.labourCostPlus);return r.toFixed(2)}getTotalHours(e){let r=0;for(let t of e)t.hours&&(r+=Number(t.hours));return r.toFixed(2)}calculateTotalHours(){if("specificTasks"==this.laborForm.workFloworSpecificTaskorWorkOrder||!this.laborForm.workFloworSpecificTaskorWorkOrder){this.laborForm.totalWorkHours=0;for(let e of this.taskList)e.totalWorkHours&&(this.laborForm.totalWorkHours+=Number(e.totalWorkHours));this.laborForm.totalWorkHours=this.laborForm.totalWorkHours.toFixed(2)}}calculateTotalAdjustment(){let e=0;for(let r of this.taskList)r.totalAdjustments&&(e+=r.totalAdjustments);return e}calculateTotalAdjustedHours(){let e=0;for(let r of this.taskList)r.totalAdjustedHours&&(e+=r.totalAdjustedHours);return e}calculateTaskHours(e){if(e.totalWorkHours=0,this.laborForm.workOrderLaborList[0]&&this.laborForm.workOrderLaborList[0][e.description.toLowerCase()]){for(let r of this.laborForm.workOrderLaborList[0][e.description.toLowerCase()])r.totalMinutes||(r.totalMinutes=0),r.totalHours||(r.totalHours=0),r.hours=Number(`${r.totalHours}.${r.totalMinutes}`),r.hours&&!r.IsDeleted&&(e.totalWorkHours+=Number(r.hours));e.totalWorkHours=e.totalWorkHours.toFixed(2)}this.calculateTotalHours()}calculateAdjustmentHours(e){if(e.totalAdjustments=0,this.laborForm.workOrderLaborList[0]&&this.laborForm.workOrderLaborList[0][e.description.toLowerCase()])for(let r of this.laborForm.workOrderLaborList[0][e.description.toLowerCase()])r.adjustments&&!r.IsDeleted&&(e.totalAdjustments+=Number(r.adjustments));this.calculateAdjustedHours(e)}calculateAdjustedHours(e){if(e.totalAdjustedHours=0,this.laborForm.workOrderLaborList[0]&&this.laborForm.workOrderLaborList[0][e.description.toLowerCase()])for(let r of this.laborForm.workOrderLaborList[0][e.description.toLowerCase()])r.adjustedHours&&!r.IsDeleted&&(e.totalAdjustedHours+=Number(r.adjustedHours))}clearHours(e){if(e.totalWorkHours=0,this.laborForm.workOrderLaborList[0]&&this.laborForm.workOrderLaborList[0][e.description.toLowerCase()])for(let r of this.laborForm.workOrderLaborList[0][e.description.toLowerCase()])r.hours&&!r.IsDeleted&&(r.hours=0)}getOverAlltotal(e){let r=0,t=0,n=0,a=0,s=0,i=0,o=0;for(let l in this.laborForm.workOrderLaborList[0])this.laborForm.workOrderLaborList[0][l].forEach(l=>{switch(e){case"Hours":l.hours&&(r+=Number(l.hours));case"LaborOHCost":l.directLaborOHCost&&(t+=Number(l.directLaborOHCost.toString().split(",").join("")));case"LaborBurdenRate":l.burdenRateAmount&&(n+=Number(l.burdenRateAmount.toString().split(",").join("")));case"CostPerHour":l.totalCostPerHour&&(a+=Number(l.totalCostPerHour));case"Cost":l.totalCost&&!l.IsDeleted&&(s+=Number(l.totalCost.toString().split(",").join("")));case"BillingRate":l.billingRate&&(i+=Number(l.billingRate));default:l.billingAmount&&!l.IsDeleted&&(o+=Number(l.billingAmount.toString().split(",").join("")))}});return"Hours"==e?r.toFixed(2):"LaborOHCost"==e?Object(C.b)(t,0):"LaborBurdenRate"==e?Object(C.b)(n,0):"CostPerHour"==e?Object(C.b)(a,0):"Cost"==e?Object(C.b)(s,0):"BillingRate"==e?Object(C.b)(i,0):Object(C.b)(o,0)}deleteConfirmation(){Object.keys(this.laborForm.workOrderLaborList[0]).forEach((e,r)=>{this.laborForm.workOrderLaborList[0][e]=[],this.addNewTask(e)}),Object.keys(this.laborForm.workOrderLaborList[0]).forEach((e,r)=>{this.laborForm.workOrderLaborList[0][e].forEach(r=>{1!=this.laborForm.hoursorClockorScan&&this.calculateWorkingHoursandMins(r),this.taskList.forEach(r=>{r.description.toLowerCase()==e.toLowerCase()&&(this.calculateTaskHours(r),this.calculateAdjustmentHours(r),this.calculateAdjustedHours(r))})})}),this.laborForm.isTaskCompletedByOne||(this.laborForm.workFloworSpecificTaskorWorkOrder="specificTasks",this.laborForm.totalWorkHours=0),w("#confirmation").modal("hide")}dismissModel(){this.laborForm.isTaskCompletedByOne=!this.laborForm.isTaskCompletedByOne,w("#confirmation").modal("hide")}taskComletedByConfirmation(e){w("#confirmation").modal("show")}checkHoursAndDirectLabour(){var e=!1;for(let r in this.laborForm.workOrderLaborList[0])this.laborForm.workOrderLaborList[0][r].forEach(r=>{!r.IsDeleted&&this.isQuote&&(r.hours&&r.directLaborOHCost||(e=!0))});return e}assignAllTask(){this.laborForm.workOrderLaborList[0]={},this.laborForm.hoursorClockorScan=1,"workOrder"==this.laborForm.workFloworSpecificTaskorWorkOrder&&this.taskList.forEach(e=>{"all task"==e.description.toLowerCase()&&(this.laborForm.workOrderLaborList[0][e.description.toLowerCase()]=[],this.addNewTask(e.description.toLowerCase()))})}formateCurrency(e){if(e){return e=Number(e.toString().split(",").join("")).toFixed(2),Object(C.b)(e,0)+".00"}return e}assignLabourExpertise(e){"workOrder"==this.laborForm.workFloworSpecificTaskorWorkOrder&&(this.laborForm.workOrderLaborList[0]["all task"][0].expertiseId=e)}assignLabourEmployee(e){"workOrder"==this.laborForm.workFloworSpecificTaskorWorkOrder&&(this.laborForm.workOrderLaborList[0]["all task"][0].employeeId=e)}errorHandling(e){e.error.errors?e.error.errors.forEach(e=>{this.alertService.showMessage(this.moduleName,e.message,k.d.error)}):this.alertService.showMessage(this.moduleName,"Saving data Failed due to some input error",k.d.error)}handleError(e){e.error.errors?e.error.errors.forEach(e=>{this.alertService.showMessage(this.moduleName,e.message,k.d.error)}):this.alertService.showMessage(this.moduleName,"Saving data Failed due to some input error",k.d.error)}};_e.ctorParameters=()=>[{type:p.a},{type:v.a},{type:u.a},{type:k.b}],n.b([Object(a.Input)()],_e.prototype,"savedWorkOrderData",void 0),n.b([Object(a.Input)()],_e.prototype,"laborForm",void 0),n.b([Object(a.Input)()],_e.prototype,"workOrderWorkFlowOriginalData",void 0),n.b([Object(a.Output)()],_e.prototype,"saveworkOrderLabor",void 0),n.b([Object(a.Input)()],_e.prototype,"workOrderLaborList",void 0),n.b([Object(a.Input)()],_e.prototype,"taskList",void 0),n.b([Object(a.Input)()],_e.prototype,"isQuote",void 0),n.b([Object(a.Input)()],_e.prototype,"markupList",void 0),n.b([Object(a.Input)()],_e.prototype,"employeesOriginalData",void 0),n.b([Object(a.Input)()],_e.prototype,"isView",void 0),n.b([Object(a.Input)()],_e.prototype,"isEdit",void 0),n.b([Object(a.Input)()],_e.prototype,"workFlowId",void 0),n.b([Object(a.Input)()],_e.prototype,"buildMethodDetails",void 0),n.b([Object(a.Input)()],_e.prototype,"selectedPartNumber",void 0),n.b([Object(a.Input)()],_e.prototype,"workFlowData",void 0),n.b([Object(a.Input)()],_e.prototype,"subWorkOrderDetails",void 0),n.b([Object(a.Input)()],_e.prototype,"subWOPartNoId",void 0),n.b([Object(a.Input)()],_e.prototype,"isSubWorkOrder",void 0),n.b([Object(a.Input)()],_e.prototype,"frombilling",void 0),n.b([Object(a.Input)()],_e.prototype,"hideHeader",void 0),_e=n.b([Object(a.Component)({selector:"app-work-order-labor",template:n.c(t("x6VS")).default,encapsulation:a.ViewEncapsulation.None,styles:[n.c(t("GbG4")).default]})],_e);let Ge=class{constructor(e){this.workOrderService=e,this.selectedPartNumber={},this.isSubWorkOrder=!1,this.pageSize=10,this.pageIndex=0,this.totalRecords=0,this.totalPages=10,this.data=[],this.isSpinnerVisible=!1,this.onDestroy$=new M.a,this.headers=[{field:"partNumber",header:"Main PN"},{field:"revisedPN",header:"Revised PN"},{field:"partDescription",header:"PN Description"},{field:"action",header:"Task"},{field:"expertise",header:"Tech"},{field:"hours",header:"Hours"},{field:"customer",header:"Customer"},{field:"workOrderNum",header:"WO Num"},{field:"stage",header:"Stage"},{field:"status",header:"Status"}],this.selectedColumns=this.headers}ngOnInit(){this.workOrderId=this.savedWorkOrderData.workOrderId,0!=this.data.length&&(this.totalRecords=this.data.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)),this.getWorkOrderLabourAnalysisData(this.workOrderId)}ngOnChanges(){0!=this.data.length&&(this.totalRecords=this.data.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize))}ngOnDestroy(){this.onDestroy$.next()}getWorkOrderLabourAnalysisData(e){this.isSpinnerVisible=!0;const r=this.isSubWorkOrder?this.subWOPartNoId:this.selectedPartNumber.workOrderPartNumberId;this.workOrderService.workOrderLabourAnalysisData(e,r,this.isSubWorkOrder).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.isSpinnerVisible=!1,e&&(this.data=e)},e=>{this.isSpinnerVisible=!1})}pageIndexChange(e){this.pageSize=e.rows}getPageCount(e,r){return Math.ceil(e/r)}};Ge.ctorParameters=()=>[{type:p.a}],n.b([Object(a.Input)()],Ge.prototype,"savedWorkOrderData",void 0),n.b([Object(a.Input)()],Ge.prototype,"selectedPartNumber",void 0),n.b([Object(a.Input)()],Ge.prototype,"subWorkOrderDetails",void 0),n.b([Object(a.Input)()],Ge.prototype,"isSubWorkOrder",void 0),n.b([Object(a.Input)()],Ge.prototype,"subWOPartNoId",void 0),Ge=n.b([Object(a.Component)({selector:"app-work-order-labour-analysis",template:n.c(t("0ozo")).default,styles:[n.c(t("EyS0")).default]})],Ge);var Ye=t("8YFm"),Ke=t("MCl+"),Je=t("CYTX"),Ze=t("bv+N"),Xe=t("Jfay"),er=t("sa3O"),rr=t("1joE"),tr=t("pyKh"),nr=t("1bHX"),ar=t("dLo5"),sr=t("3/N/"),ir=t("FfGd"),or=t("I0ai");let lr=class{constructor(e,r,t,n,s){this.workOrderService=e,this.authService=r,this.alertService=t,this.modalService=n,this.cdRef=s,this.isView=!1,this.refreshData=new a.EventEmitter,this.saveEquipmentListForWO=new a.EventEmitter,this.updateEquipmentListForWO=new a.EventEmitter,this.isSubWorkOrder=!1,this.assetChekinCheckoutheaders=[{header:"",field:"checkbox"},{header:"Tool Name",field:"assetName"},{header:"Tool ID",field:"assetId"},{header:"Inventory Num",field:"inventoryNumber"},{header:"Tool Type",field:"assetType"},{header:"Manufacturer",field:"manufacturer"},{header:"Serial Num",field:"serialNo"},{header:"Location",field:"assetLocation"},{header:"Status",field:"inventoryStatus"},{header:"Checked Out by",field:"checkOutById"},{header:"Checked Out Date",field:"checkOutDate"},{header:"Checked In by",field:"checkInById"},{header:"Checked In Date",field:"checkInDate"},{header:"Notes",field:"notes"}],this.moduleName="Tool",this.assets={description:"",assetIdNumber:null,employeeId:null,checkInEmpId:null,checkOutEmpId:null,date:new Date,assetId:null,assetStatus:null,quantity:null,checkInQty:null,checkOutQty:null},this.assetsform=Object.assign({},this.assets),this.isEdit=!1,this.addNewEquipment=!1,this.assetInventoryId=0,this.workOrderCheckInCheckOutList=[],this.showcheckInOutlist=!1,this.finalAssetArray=[],this.quantitySelected=0,this.releaseData=[],this.currentRow={}}ngOnInit(){}get userName(){return this.authService.currentUser?this.authService.currentUser.userName:""}get employeeId(){return this.authService.currentUser?this.authService.currentUser.employeeId:0}filterEmployee(e){if(this.employeeList=this.employeesOriginalData,void 0!==e.query&&null!==e.query){const r=[...this.employeesOriginalData.filter(r=>r.label.toLowerCase().includes(e.query.toLowerCase()))];this.employeeList=r}}viewAsstes(e){this.assetRecordId=e.assetRecordId}openGrid(){this.showcheckInOutlist=!0,this.workOrderCheckInCheckOutList=[],this.AvailableCount=0,"checkIn"==this.status?this.workOrderService.checkInAseetInventoryList(this.currentRecord.workOrderAssetId).subscribe(e=>{this.workOrderCheckInCheckOutList=e,this.workOrderCheckInCheckOutList&&0!=this.workOrderCheckInCheckOutList.length&&this.workOrderCheckInCheckOutList.map(e=>{e.checkOutDate=e.checkOutDate?new Date(e.checkOutDate):new Date,e.checkInDate=e.checkInDate?new Date(e.checkInDate):new Date,e.isSelected=!1,e.checkInById=this.authService.currentEmployee,"Available"==e.inventoryStatus&&this.AvailableCount}),console.log("res chekin",e)}):"checkOut"==this.status&&this.workOrderService.checkOutAseetInventoryList(this.currentRecord.workOrderAssetId,this.workOrderId,this.workOrderPartNumberId,this.currentRecord.assetRecordId,"admin",1).subscribe(e=>{console.log("res chekin",e),this.workOrderCheckInCheckOutList=e,this.workOrderCheckInCheckOutList&&0!=this.workOrderCheckInCheckOutList.length&&this.workOrderCheckInCheckOutList.map(e=>{e.checkOutDate=e.checkOutDate?new Date(e.checkOutDate):new Date,e.checkInDate=e.checkInDate?new Date(e.checkInDate):new Date,e.isSelected=!1,e.checkOutById=this.authService.currentEmployee,"Available"==e.inventoryStatus&&(this.AvailableCount=this.AvailableCount+1)}),console.log("res chekout",e)})}checkStatus(e,r){this.showcheckInOutlist=!1,this.assetsform=Object.assign({},this.assetsform,{description:e.description,assetIdNumber:e.rowData,assetId:e.assetId,assetStatus:r,quantity:e.quantity,checkInQty:e.checkInQty,checkOutQty:e.checkOutQty,checkInEmpId:Object(C.d)("value",this.employeeId,this.employeesOriginalData),checkOutEmpId:Object(C.d)("value",this.employeeId,this.employeesOriginalData)}),this.currentRecord=e,this.status=r,console.log("asset check in data",e)}checkValue(e){e.forEach(e=>{1==e.isChecked?this.quantitySelected=this.quantitySelected+1:this.quantitySelected>0?this.quantitySelected=this.quantitySelected-1:this.quantitySelected=0})}saveAssets(e){this.finalAssetArray=[],console.log("chekc date",e);Object.assign({},this.assetsform,{employeeId:Object(C.a)("value",this.assetsform.employeeId)});"checkIn"===this.status?(e.forEach(e=>{e.checkInById=e.checkInById.value,e.createdBy=this.userName,e.UpdatedBy=this.userName,e.masterCompanyId=1,1==e.isChecked&&this.finalAssetArray.push(e)}),this.finalAssetArray&&0!=this.finalAssetArray.length&&this.workOrderService.saveCheckInInventory(this.finalAssetArray).subscribe(e=>{this.refreshData.emit(),this.alertService.showMessage("","Inventory Checked-In successfully!",k.d.success)},e=>{e&&"Inventory Checked-In successfully!"==e.error.text?this.alertService.showMessage("","Inventory Checked-In successfully!",k.d.success):this.errorHandling(e)})):(console.log("checkindata",e),e.forEach(e=>{e.checkOutById=e.checkOutById.value,"Available"==e.inventoryStatus&&this.finalAssetArray.push(e)}),this.finalAssetArray&&0!=this.finalAssetArray.length&&this.workOrderService.saveCheckOutInventory(this.finalAssetArray).subscribe(e=>{console.log("response",e),this.refreshData.emit(),this.alertService.showMessage("","Inventory Checked-Out successfully!",k.d.success)},e=>{e&&"Inventory Checked-Out successfully!"==e.error.text?this.alertService.showMessage("","Inventory Checked-Out successfully!",k.d.success):this.errorHandling(e),console.log("response",e)}))}releaseInventory(){this.releaseData=[],"checkOut"==this.assetsform.assetStatus&&this.workOrderCheckInCheckOutList&&0!=this.workOrderCheckInCheckOutList.length&&(this.workOrderCheckInCheckOutList.forEach(e=>{e.checkOutById=e.checkOutById.value,"Available"==e.inventoryStatus&&this.releaseData.push(e)}),this.releaseData&&0!=this.releaseData.length&&this.workOrderService.releaseAssetInventoryList(this.releaseData).subscribe(e=>{}))}closeAddNew(){this.addNewEquipment=!1}createNew(){this.isEdit=!1,this.editData=void 0,this.addNewEquipment=!0}edit(e){this.createNew(),this.cdRef.detectChanges(),this.isEdit=!0,this.addNewEquipment=!0,this.editData=e}getAuditHistoryById(e){const{workOrderAssetId:r}=e;this.workOrderService.assetsHistoryByWorkOrderAssetId(r).subscribe(e=>{this.assetAuditHistory=e},e=>{this.errorHandling(e)})}openDelete(e,r){this.currentRow=r,this.modal=this.modalService.open(e,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then(()=>{},()=>{})}delete(){this.workOrderService.deleteWorkOrderAssetByAssetId(this.isSubWorkOrder?this.currentRow.subWorkOrderAssetId:this.currentRow.workOrderAssetId,this.userName,this.isSubWorkOrder).subscribe(e=>{this.refreshData.emit(),this.alertService.showMessage("","Deleted WorkOrder Asset  Successfully",k.d.success)},e=>{this.errorHandling(e)}),this.modal.close()}dismissModel(){this.modal.close()}saveEquipmentList(e){this.saveEquipmentListForWO.emit(e),w("#addNewEquipments").modal("hide"),this.addNewEquipment=!1}updateEquipmentList(e){this.updateEquipmentListForWO.emit(e),this.isEdit=!1,w("#addNewEquipments").modal("hide"),this.addNewEquipment=!1}getColorCodeForHistory(e,r,t){const n=this.assetAuditHistory,a=n.length;if(e>=0&&e<=a)return e+1===a||n[e+1][r]===t}errorHandling(e){e.error.errors?e.error.errors.forEach(e=>{this.alertService.showMessage(this.moduleName,e.message,k.d.error)}):this.alertService.showMessage(this.moduleName,"Saving data Failed due to some input error",k.d.error)}handleError(e){e.error.errors?e.error.errors.forEach(e=>{this.alertService.showMessage(this.moduleName,e.message,k.d.error)}):this.alertService.showMessage(this.moduleName,"Saving data Failed due to some input error",k.d.error)}onAddTextAreaInfo(e,r){this.memoIndex=r,this.textAreaInfo=e.notes}onSaveTextAreaInfo(e){e&&(this.textAreaInfo=e,this.workOrderCheckInCheckOutList[this.memoIndex].notes=this.textAreaInfo),w("#textarea-popup").modal("hide")}onCloseTextAreaInfo(){w("#textarea-popup").modal("hide")}};lr.ctorParameters=()=>[{type:p.a},{type:v.a},{type:k.b},{type:ve.c},{type:a.ChangeDetectorRef}],n.b([Object(a.Input)()],lr.prototype,"isView",void 0),n.b([Object(a.Input)()],lr.prototype,"savedWorkOrderData",void 0),n.b([Object(a.Input)()],lr.prototype,"workOrderAssetList",void 0),n.b([Object(a.Input)()],lr.prototype,"isWorkOrder",void 0),n.b([Object(a.Input)()],lr.prototype,"employeesOriginalData",void 0),n.b([Object(a.Input)()],lr.prototype,"workFlowObject",void 0),n.b([Object(a.Output)()],lr.prototype,"refreshData",void 0),n.b([Object(a.Output)()],lr.prototype,"saveEquipmentListForWO",void 0),n.b([Object(a.Output)()],lr.prototype,"updateEquipmentListForWO",void 0),n.b([Object(a.Input)()],lr.prototype,"subWorkOrderDetails",void 0),n.b([Object(a.Input)()],lr.prototype,"subWOPartNoId",void 0),n.b([Object(a.Input)()],lr.prototype,"isSubWorkOrder",void 0),n.b([Object(a.Input)()],lr.prototype,"woNumber",void 0),n.b([Object(a.Input)()],lr.prototype,"customerName",void 0),n.b([Object(a.Input)()],lr.prototype,"woOperDate",void 0),n.b([Object(a.Input)()],lr.prototype,"workOrderPartNumberId",void 0),n.b([Object(a.Input)()],lr.prototype,"workOrderId",void 0),lr=n.b([Object(a.Component)({selector:"app-work-order-assets",template:n.c(t("uAjG")).default,styles:[n.c(t("+Yay")).default]})],lr);let dr=class{constructor(){this.siteDropdownMenu=[{label:"Select Location",value:""},{label:"NewyorkLocation",value:"NewyorkLocation"},{label:"HyderabadLocation",value:"HyderabadLocation"},{label:"Chicago Location",value:"Chicago Location"}]}ngOnInit(){}saveAddress(){console.log(this.addressesForm)}};n.b([Object(a.Input)()],dr.prototype,"addressesForm",void 0),dr=n.b([Object(a.Component)({selector:"app-work-order-addresses",template:n.c(t("OiEd")).default,styles:[n.c(t("Hw2q")).default]})],dr);var cr=t("r5xa"),pr=t("Gi4r"),ur=t("BY74");let hr=class{constructor(e,r,t,n,a,s,i,o,l,d,c,p){this.alertService=e,this.workOrderService=r,this.creditTermsService=t,this.customerService=n,this.employeeService=a,this.itemMasterService=s,this.workOrderPartNumberService=i,this.stocklineService=o,this.commonService=l,this.authService=d,this.acRouter=c,this.salesOrderService=p,this.workOrderId=0,this.currencyList=[],this.employeesOriginalData=[],this.recCustomerId=0,this.workOrderGeneralInformation=new K,this.isEdit=!0,this.onDestroy$=new M.a,this.salesPersonOriginalList=[],this.agentsOriginalList=[],this.salesAgentsOriginalList=[],this.isSpinnerEnable=!1,this.masterCompanyId=1,this.salesOrderService.getReferenceObject().subscribe(e=>{}),this.salesOrderService.salesOrderReferenceSubj$.subscribe(e=>{this.salesOrderReferenceData=e})}ngOnInit(){this.getBasicDetails()}ngOnChanges(){}ngOnDestroy(){this.onDestroy$.next()}getBasicDetails(){this.getConditionsList(),this.getAllWorkOrderTypes(),this.getAllWorkOrderStatus(),this.getAllCreditTerms(),this.getAllTecStations(),this.getJobTitles(),this.getAllWorkScpoes(),this.getAllWorkOrderStages(),this.getAllExpertiseType(),this.getAllPriority(),this.getLegalEntity(),this.getMultiplePartsNumbers(),this.workOrderId||this.recCustomerId?(this.recCustomerId=0,this.workOrderService.getWorkOrderById(this.workOrderId,this.recCustomerId).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.isSpinnerEnable=!0,this.isEdit=!0;const r=Object.assign({},e,{workOrderNumber:e.workOrderNum,openDate:new Date(e.openDate),customerId:e.customerId,partNumbers:e.partNumbers.map(r=>Object.assign({},r,{promisedDate:0==this.recCustomerId?new Date(r.promisedDate):null,estimatedCompletionDate:0==this.recCustomerId?new Date(r.estimatedCompletionDate):null,estimatedShipDate:0==this.recCustomerId?new Date(r.estimatedShipDate):null,receivedDate:0==this.recCustomerId&&null==e.receivingCustomerWorkId?null:new Date(r.receivedDate)}))});this.editWorkOrderGeneralInformation=r})):this.getWorkOrderDefaultSetting()}getAllExpertiseType(){this.commonService.getExpertise().subscribe(e=>{this.expertiseTypeList=e.map(e=>{"Technician"!=e.expertiseType||this.getExpertiseEmployeeByExpertiseId(e.employeeExpertiseId)})})}getExpertiseEmployeeByExpertiseId(e){this.commonService.getExpertiseEmployeesByCategory(e).subscribe(e=>{this.technicianByExpertiseTypeList=e})}getWorkOrderDefaultSetting(e){const r=e||this.workOrderGeneralInformation.workOrderTypeId;this.commonService.workOrderDefaultSettings(this.masterCompanyId,r).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{if(e.length>0){const r=e[0];this.workorderSettings=e[0],this.workOrderGeneralInformation=Object.assign({},this.workOrderGeneralInformation,{partNumbers:this.workOrderGeneralInformation.partNumbers.map(e=>Object.assign({},e,{workOrderStageId:r.defaultStageCodeId,workOrderPriorityId:r.defaultPriorityId}))})}})}getCustomerNameandCodeById(e){const{customerId:r}=e;this.commonService.getCustomerNameandCodeById(r).pipe(Object(P.a)(this.onDestroy$)).subscribe(r=>{e.customer=r})}getAllWorkOrderTypes(){this.workOrderService.getAllWorkOrderTypes().pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.workOrderTypes=e})}getAllWorkOrderStatus(){this.commonService.smartDropDownList("WorkOrderStatus","ID","Description").pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.workOrderStatusList=e.sort((function(e,r){return e.value-r.value}))})}getAllCreditTerms(){this.commonService.smartDropDownList("CreditTerms","CreditTermsId","Name").pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.creditTerms=e})}getJobTitles(){this.commonService.getJobTitles().subscribe(e=>{this.jobTitles=e,this.getSalesPersonList(),this.getCSRList(),this.getAgentsList(),this.getTechnicianList()})}getSalesPersonList(){const e=Object(C.f)("jobTitle","Sales",this.jobTitles);void 0!==e&&this.commonService.getEmployeesByCategory(e[0].jobTitleId).subscribe(e=>{this.salesPersonOriginalList=e,this.salesAgentsOriginalList=[...this.salesPersonOriginalList]})}getCSRList(){const e=Object(C.f)("jobTitle","CSR",this.jobTitles);void 0!==e&&this.commonService.getEmployeesByCategory(e[0].jobTitleId).subscribe(e=>{this.csrOriginalList=e})}getAgentsList(){const e=Object(C.f)("jobTitle","Agents",this.jobTitles);void 0!==e&&this.commonService.getEmployeesByCategory(e[0].jobTitleId).subscribe(e=>{this.agentsOriginalList=e,this.salesAgentsOriginalList=[...this.salesAgentsOriginalList,...this.agentsOriginalList]})}getTechnicianList(){const e=Object(C.f)("jobTitle","Technician",this.jobTitles);void 0!==e&&this.commonService.getEmployeesByCategory(e[0].jobTitleId).subscribe(e=>{this.technicianOriginalList=e})}getAllEmployees(){return n.a(this,void 0,void 0,(function*(){yield this.commonService.smartDropDownList("Employee","EmployeeId","FirstName").pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.employeesOriginalData=e.map(e=>Object.assign({},e,{employeeId:e.value,name:e.label}))})}))}getAllTecStations(){return n.a(this,void 0,void 0,(function*(){yield this.commonService.smartDropDownList("EmployeeStation","EmployeeStationId","StationName").pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.techStationList=e.map(e=>Object.assign({},e,{techStationId:e.value,name:e.label}))})}))}getAllWorkScpoes(){this.workOrderService.getAllWorkScopes().pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.workScopesList=e.map(e=>({label:e.description,value:e.workScopeId}))})}getAllWorkOrderStages(){this.workOrderService.getWorkOrderStageAndStatus().pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.workOrderStagesList=e.map(e=>Object.assign({},e,{value:e.workOrderStageId,label:e.workOrderStage}))})}getAllPriority(){this.commonService.smartDropDownList("Priority","PriorityId","Description").pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.priorityList=e})}getMultiplePartsNumbers(){this.workOrderService.getMultipleParts().pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.partNumberOriginalData=e})}getPartNosByCustomer(e,r){return n.a(this,void 0,void 0,(function*(){yield this.workOrderService.getPartNosByCustomer(e,r).pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.partNumberOriginalData=e})}))}getLegalEntity(){this.commonService.getLegalEntityList().pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.legalEntityList=e})}getConditionsList(){this.commonService.smartDropDownList("Condition","ConditionId","Description").pipe(Object(P.a)(this.onDestroy$)).subscribe(e=>{this.conditionList=e;const r=e.find(e=>e.label.includes("As Removed"));this.workOrderGeneralInformation=Object.assign({},this.workOrderGeneralInformation,{partNumbers:this.workOrderGeneralInformation.partNumbers.map(e=>Object.assign({},e,{conditionId:void 0!==r?r.value:null}))}),this.isSpinnerEnable=!0})}};hr.ctorParameters=()=>[{type:k.b},{type:p.a},{type:q.a},{type:H.a},{type:Q.a},{type:j.a},{type:G},{type:Y.a},{type:u.a},{type:v.a},{type:o.ActivatedRoute},{type:J.a}],n.b([Object(a.Input)()],hr.prototype,"workOrderId",void 0),n.b([Object(a.Input)()],hr.prototype,"currencyList",void 0),n.b([Object(a.Input)()],hr.prototype,"employeesOriginalData",void 0),hr=n.b([Object(a.Component)({selector:"app-work-view-component",template:n.c(t("yd6t")).default})],hr);var mr=t("7lxq"),br=t("hZbH");let gr=class{constructor(e,r,t,n,a){this.customerService=e,this.commonService=r,this.workorderService=t,this.alertService=n,this.authService=a,this.customerId=0,this.workOrderPartNumberId=0,this.isView=!1,this.quoteForm={},this.orignSiteNames=[],this.soldCustomerAddress=new Fe.a,this.shipCustomerAddress=new Fe.a,this.shippingHeader={workOrderShippingId:0,woShippingStatusId:1,openDate:new Date,shipDate:new Date,isActive:!0,isDeleted:!1,workOrderCustomsInfo:{masterCompanyId:1,createdBy:"admin",updatedBy:"admin",isActive:!0,isDeleted:!1}},this.shipViaList=[],this.countryList=[],this.shipCustomerSiteList=[],this.siteList=[],this.moduleName="Shipping",this.isSpinnerVisible=!1}ngOnInit(){console.log("general info",this.workOrderGeneralInformation),this.getShipVia(),this.getCountriesList(),this.getSiteName(),this.getShippingData(),this.getCustomerNameList(),this.workOrderGeneralInformation&&(this.shippingHeader.soldToName=this.workOrderGeneralInformation.customerDetails.customerName,this.shippingHeader.shipToName=this.workOrderGeneralInformation.customerDetails.customerName,this.shippingHeader.shipToCustomerId||(this.shippingHeader.shipToCustomerId=this.workOrderGeneralInformation.customerDetails,this.getSiteNamesByShipCustomerId(this.workOrderGeneralInformation.customerDetails)),this.shippingHeader.customerId=this.workOrderGeneralInformation.customerDetails.customerId)}ngOnChanges(e){null!=this.managementStructureId&&this.getOriginSiteNames()}getOriginSiteNames(){this.orignSiteNames=[],this.commonService.getSitesbymanagementstructrue(this.managementStructureId).subscribe(e=>{e&&e.length>0&&(this.orignSiteNames=e,console.log("this.orignnames",this.orignSiteNames[0]))},e=>{this.errorHandling(e)})}calculateExpiryDate(){}getCustomerNameList(){this.commonService.getCustomerNameandCode("",1).subscribe(e=>{this.customerNamesList=e,console.log("res,res",e)},e=>{this.errorHandling(e)})}getShipVia(){this.commonService.smartDropDownList("ShippingVia","ShippingViaId","Name").subscribe(e=>{this.shipViaList=e},e=>{this.errorHandling(e)})}getSiteName(){this.workorderService.getSiteByCustomerId(this.workOrderGeneralInformation.customerDetails.customerId).subscribe(e=>{this.siteList=e,this.shippingHeader.soldToSiteId||this.siteList.forEach(e=>{e.isPrimary&&(this.shippingHeader.soldToSiteId=e.customerShippingAddressId,this.setSoldToAddress())})},e=>{this.errorHandling(e)})}getCountriesList(){this.commonService.smartDropDownList("Countries","countries_id","nice_name").subscribe(e=>{this.countryList=e},e=>{this.errorHandling(e)})}setShipToAddress(){this.shipCustomerSiteList.forEach(e=>{e.customerShippingAddressId==this.shippingHeader.shipToSiteId&&(this.shippingHeader.shipToAddress1=e.address1,this.shippingHeader.shipToAddress2=e.address2,this.shippingHeader.shipToCity=e.city,this.shippingHeader.shipToState=e.stateOrProvince,this.shippingHeader.shipToZip=e.postalCode,this.shippingHeader.shipToCountryId=e.countryId,this.shippingHeader.shipToSiteName=e.siteName,this.shippingHeader.shipToCountryName=e.countryName,this.shippingHeader.shipToCountryId=e.countryId)})}setOriginToAddress(e){console.log("orignsiteId",e),console.log("sitenames",this.orignSiteNames),this.orignSiteNames.forEach(r=>{r.originSiteId==e&&(this.shippingHeader.originName=r.originName,this.shippingHeader.originAddress1=r.originAddress1,this.shippingHeader.originAddress2=r.originAddress2,this.shippingHeader.originCity=r.originCity,this.shippingHeader.originState=r.originState,this.shippingHeader.originZip=r.originZip,this.shippingHeader.originCountryName=r.originCountryName,this.shippingHeader.originCountryId=r.originCountryId,console.log("shipping heder",this.shippingHeader))})}clearShipToAddress(){this.shipCustomerSiteList=[],this.shippingHeader.shipToAddress1="",this.shippingHeader.shipToAddress2="",this.shippingHeader.shipToCity="",this.shippingHeader.shipToState="",this.shippingHeader.shipToZip="",this.shippingHeader.shipToCountryId="",this.shippingHeader.shipToSiteName="",this.shippingHeader.shipToCountryName="",this.shippingHeader.shipToCountryId=""}setSoldToAddress(){this.siteList.forEach(e=>{e.customerShippingAddressId==this.shippingHeader.soldToSiteId&&(this.shippingHeader.soldToAddress1=e.address1,this.shippingHeader.soldToAddress2=e.address2,this.shippingHeader.soldToCity=e.city,this.shippingHeader.soldToState=e.stateOrProvince,this.shippingHeader.soldToZip=e.postalCode,this.shippingHeader.soldToCountryId=e.countryId,this.shippingHeader.soldToSiteName=e.siteName,this.shippingHeader.soldToCountryName=e.countryName)})}assignDetails(e){1==e&&(this.shippingHeader.shipToCustomerId=this.workOrderGeneralInformation.customerDetails,this.getSiteNamesByShipCustomerId(this.workOrderGeneralInformation.customerDetails),this.shippingHeader.shipToSiteId=this.shippingHeader.soldToSiteId,this.shippingHeader.shipToAddress1=this.shippingHeader.soldToAddress1,this.shippingHeader.shipToAddress2=this.shippingHeader.soldToAddress2,this.shippingHeader.shipToCity=this.shippingHeader.soldToCity,this.shippingHeader.shipToState=this.shippingHeader.soldToState,this.shippingHeader.shipToZip=this.shippingHeader.soldToZip,this.shippingHeader.shipToCountryId=this.shippingHeader.countryId,this.shippingHeader.shipToSiteName=this.shippingHeader.soldToSiteName,this.shippingHeader.shipToCountryName=this.shippingHeader.soldToCountryName,this.shippingHeader.shipToCountryId=this.shippingHeader.soldToCountryId)}filterCustomerName(e){const r=e.query.toLowerCase();this.commonService.getCustomerNameandCode(r,1).subscribe(e=>{this.customerNamesList=e},e=>{this.errorHandling(e)})}getSiteNamesByShipCustomerId(e){return n.a(this,void 0,void 0,(function*(){console.log("object",e),this.clearShipToAddress();const{customerId:r}=e;yield this.customerService.getCustomerShipAddressGet(r).subscribe(e=>{this.shipCustomerShippingOriginalData=e[0],this.shipCustomerSiteList=e[0],this.shipCustomerShippingOriginalData.forEach(e=>{e.isPrimary&&(this.shippingHeader.shipToSiteId=e.customerShippingAddressId,this.setShipToAddress())})},e=>{this.errorHandling(e)})}))}clearAddress(e,r){""===r&&"SoldTo"===e?this.soldCustomerAddress=new Fe.a:""===r&&"ShipTo"===e&&(this.shipCustomerAddress=new Fe.a)}getShippingData(){this.isSpinnerVisible=!0,this.workorderService.getShippingForWorkOrderPart(this.workOrderPartNumberId).subscribe(e=>{this.isSpinnerVisible=!1,e&&(e.response||(this.getEditSiteData(e.shipToCustomerId),console.log("this.shipCustomerSiteList",this.shipCustomerSiteList),this.shippingHeader=e,this.shippingHeader.openDate=new Date(this.shippingHeader.openDate),this.shippingHeader.shipDate=new Date(this.shippingHeader.shipDate),this.shippingHeader.shipToCustomerId={customerId:e.shipToCustomerId,customerName:e.shipToCustomer}))},e=>{this.isSpinnerVisible=!1,this.errorHandling(e)})}getEditSiteData(e){return n.a(this,void 0,void 0,(function*(){yield this.customerService.getCustomerShipAddressGet(e).subscribe(e=>{this.shipCustomerSiteList=e[0]},e=>{this.errorHandling(e)})}))}save(){this.shippingHeader.workOrderId=this.workOrderGeneralInformation.workOrderId,this.shippingHeader.workOrderPartNoId=this.workOrderPartNumberId,this.shippingHeader.masterCompanyId=this.workOrderGeneralInformation.masterCompanyId,this.shippingHeader.workOrderCustomsInfo.masterCompanyId=this.workOrderGeneralInformation.masterCompanyId,this.shippingHeader.createdBy=this.userName,this.shippingHeader.updatedBy=this.userName,this.shippingHeader.createdDate=(new Date).toDateString(),this.shippingHeader.updatedDate=(new Date).toDateString(),this.shippingHeader.workOrderCustomsInfo.createdDate=(new Date).toDateString(),this.shippingHeader.workOrderCustomsInfo.updatedDate=(new Date).toDateString(),this.shippingHeader.shipToCustomerId=Object(C.a)("customerId",this.shippingHeader.shipToCustomerId),this.isSpinnerVisible=!0,this.workorderService.saveWorkOrderShipping(this.shippingHeader).subscribe(e=>{this.isSpinnerVisible=!1,this.getEditSiteData(e.shipToCustomerId),this.shippingHeader=e,this.shippingHeader.openDate=new Date(this.shippingHeader.openDate),this.shippingHeader.shipDate=new Date(this.shippingHeader.shipDate),this.shippingHeader.shipToCustomerId={customerId:e.shipToCustomerId,customerName:e.shipToCustomer},this.customerNamesList.forEach(r=>{r.customerId==e.shipToCustomerId&&(this.shippingHeader.shipToCustomerId=r)}),this.alertService.showMessage("Work Order","Work Order Shipping created Succesfully",k.d.success),this.getShippingData()},e=>{this.isSpinnerVisible=!1,this.errorHandling(e)})}errorHandling(e){e.error.errors?e.error.errors.forEach(e=>{this.alertService.showMessage(this.moduleName,e.message,k.d.error)}):this.alertService.showMessage(this.moduleName,"Saving data Failed due to some input error",k.d.error)}handleError(e){e.error.errors?e.error.errors.forEach(e=>{this.alertService.showMessage(this.moduleName,e.message,k.d.error)}):this.alertService.showMessage(this.moduleName,"Saving data Failed due to some input error",k.d.error)}get userName(){return this.authService.currentUser?this.authService.currentUser.userName:""}};gr.ctorParameters=()=>[{type:H.a},{type:u.a},{type:p.a},{type:k.b},{type:v.a}],n.b([Object(a.Input)()],gr.prototype,"customerId",void 0),n.b([Object(a.Input)()],gr.prototype,"workOrderGeneralInformation",void 0),n.b([Object(a.Input)()],gr.prototype,"workOrderPartNumberId",void 0),n.b([Object(a.Input)()],gr.prototype,"isView",void 0),n.b([Object(a.Input)()],gr.prototype,"managementStructureId",void 0),gr=n.b([Object(a.Component)({selector:"app-shipping",template:n.c(t("z0RJ")).default,styles:[n.c(t("gwmu")).default]})],gr);var vr=t("Q3MU"),wr=t("ix9C"),kr=t("a8Oy");let fr=class{constructor(e,r,t,n,s,i){this.workOrderService=e,this.authService=r,this.alertService=t,this.modalService=n,this.cdRef=s,this.commonService=i,this.isQuote=!1,this.saveChargesListForWO=new a.EventEmitter,this.updateChargesListForWO=new a.EventEmitter,this.refreshData=new a.EventEmitter,this.createQuote=new a.EventEmitter,this.isView=!1,this.taskList=[],this.view=!1,this.fromquote=!1,this.buildMethodDetails={},this.isSubWorkOrder=!1,this.cols=[{field:"vendorName",header:"Vendor Name"},{field:"quantity",header:"Qty"},{field:"refNum",header:"Ref Num"},{field:"chargeType",header:"Charge Type"},{field:"description",header:"Description"},{field:"unitCost",header:"Unit Cost"},{field:"extendedCost",header:"Extented Cost"}],this.isEdit=!1,this.costPlusType=0,this.addNewCharges=!1,this.currentRow={}}ngOnChanges(){if(this.workOrderChargesList&&this.workOrderChargesList.length>0&&this.workOrderChargesList[0].headerMarkupId&&(this.costPlusType=Number(this.workOrderChargesList[0].markupFixedPrice),this.overAllMarkup=this.workOrderChargesList[0].headerMarkupId),this.workOrderChargesList){this.workOrderChargesLists=this.workOrderChargesList.reduce((function(e,r){return e[r.taskId]=e[r.taskId]||[],e[r.taskId].push(r),e}),Object.create(null)),this.workOrderChargesList=[];for(let e in this.workOrderChargesLists)this.workOrderChargesList.push(this.workOrderChargesLists[e])}this.fromquote=this.fromquote,1==this.fromquote&&(this.addNewCharges=!0),this.buildMethodDetails&&(this.costPlusType=this.buildMethodDetails.chargesBuildMethod,this.chargesFlatRateBillingAmount=this.buildMethodDetails.chargesFlatBillingAmount)}ngOnInit(){this.getRONumberList(),this.workOrderChargesList&&this.workOrderChargesList.length>0&&this.workOrderChargesList[0].markupFixedPrice&&(this.costPlusType=Number(this.workOrderChargesList[0].markupFixedPrice),this.overAllMarkup=this.workOrderChargesList[0].headerMarkupId),this.buildMethodDetails&&(this.costPlusType=this.buildMethodDetails.chargesBuildMethod,this.chargesFlatRateBillingAmount=this.buildMethodDetails.chargesFlatBillingAmount)}get userName(){return this.authService.currentUser?this.authService.currentUser.userName:""}closeAddNew(){this.addNewCharges=!1,this.isEdit=!1,this.editData=void 0}createNew(){this.isEdit=!1,this.editData=void 0,this.addNewCharges=!0,this.workFlowObject.charges=[{}],this.taskList&&this.taskList.forEach(e=>{"Assemble"==e.description&&(this.workFlowObject.charges[0].taskId=e.taskId)})}edit(e,r,t){e.workflowChargeTypeId=e.chargesTypeId,e.refNum=e.referenceNo,this.mainEditingIndex=r,this.subEditingIndex=t,this.createNew(),this.cdRef.detectChanges(),this.isEdit=!0,this.addNewCharges=!0,this.editData=e}openDelete(e,r){this.currentRow=r,this.modal=this.modalService.open(e,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then(()=>{},()=>{})}dismissModel(){this.modal.close()}delete(){if(this.isQuote)this.currentRow.isDeleted=!0,this.modal.close();else{const e=1==this.isSubWorkOrder?this.currentRow.subWorkOrderChargesId:this.currentRow.workOrderChargesId;this.workOrderService.deleteWorkOrderChargesByChargesId(e,this.userName,this.isSubWorkOrder).subscribe(e=>{this.refreshData.emit(),this.alertService.showMessage("","Deleted WorkOrder Charges Successfully",k.d.success),this.modal.close()})}}saveChargesList(e){e.charges.forEach(e=>{e.billingAmount=Number(e.extendedCost.toString().split(",").join("")).toFixed(2)}),this.saveChargesListForWO.emit(e),w("#addNewCharges").modal("hide")}updateChargesList(e){this.isQuote&&this.isEdit?(this.workOrderChargesList[this.mainEditingIndex][this.subEditingIndex]=e.charges[0],w("#addNewCharges").modal("hide"),this.isEdit=!1):(this.updateChargesListForWO.emit(e),w("#addNewCharges").modal("hide"),this.isEdit=!1)}getTaskName(e){let r="";return this.taskList.forEach(t=>{e==t.taskId&&(r=t.description)}),r}createChargeQuote(){let e=[];this.workOrderChargesList.forEach(r=>{this.taskList.forEach(t=>{t.taskId==r[0].taskId&&e.push({WorkOrderQuoteTaskId:0,TaskId:t.taskId,ChargesCost:this.getTotalTaskUnitCost(r),ChargesBilling:this.getTotalTaskBillingAmount(r),ChargesRevenue:this.getTotalTaskBillingAmount(r),masterCompanyId:this.authService.currentUser.masterCompanyId,CreatedBy:"admin",UpdatedBy:"admin",CreatedDate:(new Date).toDateString(),UpdatedDate:(new Date).toDateString(),IsActive:!0,IsDeleted:!1})})});let r=this.workOrderChargesList,t=[];for(let a=0;a<r.length;a++)t=[...t,...r[a]];t=t.map(e=>Object.assign({},e,{markupFixedPrice:this.costPlusType,headerMarkupId:Number(this.overAllMarkup)}));let n={data:t,taskSum:e,chargesFlatRateBillingAmount:this.chargesFlatRateBillingAmount,ChargesBuildMethod:this.costPlusType};this.createQuote.emit(n)}markupChanged(e,r){try{this.markupList.forEach(t=>{"row"==r&&t.value==e.markupPercentageId?(e.billingRate=Object(C.b)(Number(e.unitCost.toString().split(",").join(""))+Number(e.unitCost.toString().split(",").join(""))/100*Number(t.label),0),e.billingAmount=Object(C.b)(Number(e.billingRate.toString().split(",").join(""))*Number(e.quantity),0)):"all"==r&&t.value==this.overAllMarkup&&this.workOrderChargesList.forEach(e=>{e.forEach(e=>{e.billingMethodId&&1==Number(e.billingMethodId)&&(e.markupPercentageId=this.overAllMarkup,e.billingRate=Object(C.b)(Number(e.unitCost.toString().split(",").join(""))+Number(e.unitCost.toString().split(",").join(""))/100*Number(t.label),0),e.billingAmount=Object(C.b)(Number(e.billingRate.toString().split(",").join(""))*Number(e.quantity),0))})})})}catch(t){}}tmchange(){let e=Number(this.costPlusType);for(let r of this.workOrderChargesList)r.forEach(r=>{r.billingMethodId=3==e?"":e,r.markupPercentageId="",r.billingRate=0,r.billingAmount=r.extendedCost,3==this.costPlusType&&(r.billingAmount=0,this.chargesFlatRateBillingAmount=0),1==Number(this.costPlusType)&&(this.overAllMarkup="")})}getTotalQuantity(){let e=0;return this.workOrderChargesList&&this.workOrderChargesList.forEach(r=>{e+=this.getTotalTaskQuantity(r)}),e}getTotalTaskQuantity(e){let r=0;return e&&e.forEach(e=>{e.quantity&&!e.isDeleted&&(r+=Number(e.quantity))}),r}getTotalUnitCost(){let e=0;this.workOrderChargesList&&this.workOrderChargesList.forEach(r=>{e+=Number(this.getTotalTaskUnitCost(r).toString().split(",").join(""))});return(e?Object(C.b)(e,0):"0")+".00"}getTotalTaskUnitCost(e){let r=0;e&&e.forEach(e=>{e.extendedCost&&!e.isDeleted&&(r+=Number(e.extendedCost.toString().split(",").join("")))});return(r?Object(C.b)(r,0):"0")+".00"}getTotalBillingRate(){let e=0;return this.workOrderChargesList&&this.workOrderChargesList.forEach(r=>{r.billingRate&&!r.isDeleted&&(e+=Number(r.billingRate.toString().split(",").join("")))}),e?Object(C.b)(e,0):"0.00"}getTotalBillingAmount(){let e=0;this.workOrderChargesList&&this.workOrderChargesList.forEach(r=>{e+=Number(this.getTotalTaskBillingAmount(r).toString().split(",").join(""))}),this.chargesFlatRateBillingAmount=e.toFixed(2);return(e?Object(C.b)(e,0):"0")+".00"}getTotalTaskBillingAmount(e){let r=0;e&&e.forEach(e=>{e.billingAmount&&!e.isDeleted&&(r+=Number(e.billingAmount.toString().split(",").join("")))});return(r?Object(C.b)(r,0):"0")+".00"}getRONumberList(){this.roNumList&&0==this.roNumList.length&&this.commonService.smartDropDownList("RepairOrder","RepairOrderId","RepairOrderNumber").subscribe(e=>{this.roNumList=e})}formateCurrency(e){return e?Object(C.b)(e,0):"0.00"}};fr.ctorParameters=()=>[{type:p.a},{type:v.a},{type:k.b},{type:ve.c},{type:a.ChangeDetectorRef},{type:u.a}],n.b([Object(a.Input)()],fr.prototype,"workOrderChargesList",void 0),n.b([Object(a.Input)()],fr.prototype,"workFlowObject",void 0),n.b([Object(a.Input)()],fr.prototype,"isWorkOrder",void 0),n.b([Object(a.Input)()],fr.prototype,"isQuote",void 0),n.b([Object(a.Input)()],fr.prototype,"markupList",void 0),n.b([Object(a.Output)()],fr.prototype,"saveChargesListForWO",void 0),n.b([Object(a.Output)()],fr.prototype,"updateChargesListForWO",void 0),n.b([Object(a.Output)()],fr.prototype,"refreshData",void 0),n.b([Object(a.Output)()],fr.prototype,"createQuote",void 0),n.b([Object(a.Input)()],fr.prototype,"isView",void 0),n.b([Object(a.Input)()],fr.prototype,"taskList",void 0),n.b([Object(a.Input)()],fr.prototype,"view",void 0),n.b([Object(a.Input)()],fr.prototype,"fromquote",void 0),n.b([Object(a.Input)()],fr.prototype,"buildMethodDetails",void 0),n.b([Object(a.Input)()],fr.prototype,"isSubWorkOrder",void 0),n.b([Object(a.Input)()],fr.prototype,"subWOPartNoId",void 0),fr=n.b([Object(a.Component)({selector:"app-work-order-charges",template:n.c(t("542D")).default,encapsulation:a.ViewEncapsulation.None,styles:[n.c(t("MQJV")).default]})],fr);let yr=class{constructor(e,r,t,n){this.workOrderService=e,this.authService=r,this.alertService=t,this.cdRef=n,this.saveExclusionsListForWO=new a.EventEmitter,this.updateExclusionsListForWO=new a.EventEmitter,this.refreshData=new a.EventEmitter,this.isQuote=!1,this.isView=!1,this.taskList=[],this.view=!1,this.addNewExclusion=!1,this.isEdit=!1,this.costPlusType=0,this.cols=[{field:"epn",header:"EPN"},{field:"epnDescription",header:"EPN Description"},{field:"quantity",header:"Qty"},{field:"unitCost",header:"Unit Cost"},{field:"extendedCost",header:"Extended Cost"},{field:"memo",header:"Memo"}]}ngOnInit(){this.workOrderExclusionsList&&this.workOrderExclusionsList.length>0&&this.workOrderExclusionsList[0].headerMarkupId&&(this.costPlusType=this.workOrderExclusionsList[0].markupFixedPrice,this.overAllMarkup=Number(this.workOrderExclusionsList[0].headerMarkupId))}ngOnChanges(e){if(this.workOrderExclusionsList&&this.workOrderExclusionsList.length>0&&this.workOrderExclusionsList[0].headerMarkupId&&(this.costPlusType=this.workOrderExclusionsList[0].markupFixedPrice,this.overAllMarkup=Number(this.workOrderExclusionsList[0].headerMarkupId)),this.workOrderExclusionsList){if(this.workOrderExclusionsList[0]&&this.workOrderExclusionsList[0].length){let e=[];this.workOrderExclusionsList.forEach(r=>{e=[...e,...r]}),this.workOrderExclusionsList=e}this.workOrderExclusionsLists=this.workOrderExclusionsList.reduce((function(e,r){return e[r.taskId]=e[r.taskId]||[],e[r.taskId].push(r),e}),Object.create(null)),this.workOrderExclusionsList=[];for(let e in this.workOrderExclusionsLists)this.workOrderExclusionsList.push(this.workOrderExclusionsLists[e])}}get userName(){return this.authService.currentUser?this.authService.currentUser.userName:""}markupChanged(e,r){try{this.markupList.forEach(t=>{"row"==r&&t.value==e.markUpPercentageId?(e.billingRate=(Number(e.unitCost.split(",").join(""))+Number(e.unitCost.split(",").join(""))/100*Number(t.label)).toFixed(2),e.billingAmount=(Number(e.billingRate)*Number(e.quantity)).toFixed(2)):"all"==r&&t.value==this.overAllMarkup&&this.workOrderExclusionsList.forEach(e=>{e.forEach(e=>{e.billingMethodId&&1==Number(e.billingMethodId)&&(e.markUpPercentageId=Number(this.overAllMarkup),e.billingRate=(Number(e.unitCost.toString().split(",").join(""))+Number(e.unitCost.toString().split(",").join(""))/100*Number(t.label)).toFixed(2),e.billingAmount=(Number(e.billingRate)*Number(e.quantity)).toFixed(2))})})})}catch(t){console.log(t)}}tmchange(){for(let e of this.workOrderExclusionsList)e.forEach(e=>{e.billingMethodId=this.costPlusType,e.markUpPercentageId="",e.billingAmount=e.extendedCost,1==Number(this.costPlusType)&&(this.overAllMarkup="")})}closeAddNew(){this.addNewExclusion=!1,this.isEdit=!1,this.editData=void 0}createNew(){this.isEdit=!1,this.editData=void 0,this.addNewExclusion=!0,this.workFlowObject.exclusions=[{}],this.cdRef.detectChanges(),this.taskList&&this.taskList.forEach(e=>{"Assemble"==e.description&&(this.workFlowObject.exclusions[0].taskId=e.taskId)})}edit(e,r,t){this.mainEditingIndex=r,this.subEditingIndex=t,this.createNew(),this.cdRef.detectChanges(),this.isEdit=!0,this.addNewExclusion=!0,this.editData=Object.assign({},e,{estimtPercentOccurrance:e.estimtPercentOccurranceId})}delete(e,r){if(this.isQuote)e.isDeleted=!0;else{const{workOrderExclusionsId:r}=e;this.workOrderService.deleteWorkOrderExclusionByExclusionId(r,this.userName).subscribe(e=>{this.refreshData.emit(),this.alertService.showMessage("","Deleted WorkOrder Exclusion Successfully",k.d.success)})}}saveExclusionsList(e){if(this.workOrderExclusionsList||(this.workOrderExclusionsList=[]),e.exclusions.forEach(e=>{e.billingAmount=e.extendedCost}),this.isQuote){let r=[];this.workOrderExclusionsList.forEach(e=>{r=[...r,...e]}),r=[...r,...e.exclusions.map(e=>Object.assign({},e,{epn:e.partNumber,epnDescription:e.partDescription,markupFixedPrice:this.costPlusType,headerMarkupId:Number(this.overAllMarkup)}))],this.workOrderExclusionsLists=r.reduce((function(e,r){return e[r.taskId]=e[r.taskId]||[],e[r.taskId].push(r),e}),Object.create(null)),this.workOrderExclusionsList=[];for(let e in this.workOrderExclusionsLists)this.workOrderExclusionsList.push(this.workOrderExclusionsLists[e]);w("#addNewExclusions").modal("hide")}else this.saveExclusionsListForWO.emit(e),w("#addNewExclusions").modal("hide")}updateExclusionsList(e){this.isQuote&&this.isEdit?(this.workOrderExclusionsList[this.mainEditingIndex][this.subEditingIndex]=e.exclusions[0],w("#addNewExclusions").modal("hide"),this.isEdit=!1):(this.updateExclusionsListForWO.emit(e),w("#addNewExclusions").modal("hide"),this.isEdit=!1)}saveQuotation(){let e=[];this.workOrderExclusionsList.forEach(r=>{this.taskList.forEach(t=>{t.taskId==r[0].taskId&&e.push({WorkOrderQuoteTaskId:0,TaskId:t.taskId,ExclusionsCost:this.getTotalTaskUnitCost(r),ExclusionsBilling:this.getTotalTaskBillingAmount(r),ExclusionsRevenue:this.getTotalTaskBillingAmount(r),masterCompanyId:this.authService.currentUser.masterCompanyId,CreatedBy:"admin",UpdatedBy:"admin",CreatedDate:(new Date).toDateString(),UpdatedDate:(new Date).toDateString(),IsActive:!0,IsDeleted:!1})})});let r=this.workOrderExclusionsList,t=[];for(let a=0;a<r.length;a++)t=[...t,...r[a]];t=t.map(e=>Object.assign({},e,{headerMarkupId:Number(this.overAllMarkup),markupFixedPrice:this.costPlusType}));let n={data:t,taskSum:e};this.saveExclusionsListForWO.emit(n)}getTotalQuantity(){let e=0;return this.workOrderExclusionsList&&this.workOrderExclusionsList.forEach(r=>{e+=Number(this.getTotalTaskQuantity(r))}),e}getTotalTaskQuantity(e){let r=0;return e&&e.forEach(e=>{e.quantity&&!e.isDeleted&&(r+=Number(e.quantity))}),r}getTotalUnitCost(){let e=0;return this.workOrderExclusionsList&&this.workOrderExclusionsList.forEach(r=>{e+=Number(this.getTotalTaskUnitCost(r))}),e.toFixed(2)}getTotalTaskUnitCost(e){let r=0;return e&&e.forEach(e=>{if(e.extendedCost&&!e.isDeleted){let t=e.extendedCost.toString().split(",").join("");r+=Number(t)}}),r.toFixed(2)}getTotalBillingRate(){let e=0;return this.workOrderExclusionsList&&this.workOrderExclusionsList.forEach(r=>{e+=Number(this.getTotalTaskBillingRate(r))}),e.toFixed(2)}getTotalTaskBillingRate(e){let r=0;return e&&e.forEach(e=>{e.billingRate&&!e.isDeleted&&(r+=Number(e.billingRate))}),r.toFixed(2)}getTotalBillingAmount(){let e=0;return this.workOrderExclusionsList&&this.workOrderExclusionsList.forEach(r=>{e+=Number(this.getTotalTaskBillingAmount(r))}),e.toFixed(2)}getTotalTaskBillingAmount(e){let r=0;return e&&e.forEach(e=>{if(e.billingAmount&&!e.isDeleted){let t=e.billingAmount.toString().split(",").join("");r+=Number(t)}}),r.toFixed(2)}};yr.ctorParameters=()=>[{type:p.a},{type:v.a},{type:k.b},{type:a.ChangeDetectorRef}],n.b([Object(a.Input)()],yr.prototype,"workOrderExclusionsList",void 0),n.b([Object(a.Input)()],yr.prototype,"workFlowObject",void 0),n.b([Object(a.Input)()],yr.prototype,"isWorkOrder",void 0),n.b([Object(a.Input)()],yr.prototype,"markupList",void 0),n.b([Object(a.Output)()],yr.prototype,"saveExclusionsListForWO",void 0),n.b([Object(a.Output)()],yr.prototype,"updateExclusionsListForWO",void 0),n.b([Object(a.Output)()],yr.prototype,"refreshData",void 0),n.b([Object(a.Input)()],yr.prototype,"isQuote",void 0),n.b([Object(a.Input)()],yr.prototype,"isView",void 0),n.b([Object(a.Input)()],yr.prototype,"taskList",void 0),n.b([Object(a.Input)()],yr.prototype,"view",void 0),n.b([Object(a.Input)()],yr.prototype,"addNewExclusion",void 0),yr=n.b([Object(a.Component)({selector:"app-work-order-exclusions",template:n.c(t("dgsx")).default,styles:[n.c(t("X58S")).default]})],yr);let Ir=class{constructor(e,r){this._router=e,this.workOrderService=r,this.isView=!1,this.forSubWorkOrder=!1,this.subWorkOrderData=[],this.subWorkOrderCols=[{field:"subWorkOrderNo",header:"Sub WorkOrderNo"},{field:"masterPartNo",header:"Part"},{field:"masterPartDescription",header:"Description"},{field:"revisedPartNo",header:"Revised PartNo"},{field:"openDate",header:"Open Date"}],this.showTableGrid=!1,this.pageSize=10}ngOnInit(){this.getSubWorkOrderByWorkOrderId()}getSubWorkOrderByWorkOrderId(){console.log(this.workOrderId),this.workOrderService.getSubWorkOrderListByWorkOrderId(this.workOrderId).subscribe(e=>{this.subWorkOrderData=e})}openNewSubWorkOrder(){window.open(`/workordersmodule/workorderspages/app-sub-work-order?workorderid=${this.workOrderId}&mpnid=${this.mpnId}&subworkorderid=0`)}view(e){console.log(e);const{subWorkOrderId:r}=e;this.workOrderService.getSubWorkOrderView(r).subscribe(e=>{this.subWorkOrderHeader=e,this.getAllTabsData(e.workFlowWorkOrderId,r)})}getAllTabsData(e,r){this.getEquipmentByWorkOrderId(e,r),this.getMaterialListByWorkOrderId(e,r),this.getPublicationListByWorkOrderId(e,r),this.getChargesListByWorkOrderId(e,r),this.getExclusionListByWorkOrderId(e,r),this.getLaborListByWorkOrderId(e,r),this.getDirectionByWorkOrderId(e,r),this.showTableGrid=!0,this.activeIndex=0}getEquipmentByWorkOrderId(e,r){e&&this.workOrderService.getWorkOrderAssetList(e,r,0,!1).subscribe(e=>{console.log(e),this.workOrderAssetList=e})}getMaterialListByWorkOrderId(e,r){e&&this.workOrderService.getWorkOrderMaterialList(e,r).subscribe(e=>{this.workOrderMaterialList=e})}getPublicationListByWorkOrderId(e,r){e&&this.workOrderService.getWorkOrderPublicationList(e,r).subscribe(e=>{this.workOrderPublicationList=e})}getChargesListByWorkOrderId(e,r){e&&this.workOrderService.getWorkOrderChargesList(e,r).subscribe(e=>{this.workOrderChargesList=e})}getExclusionListByWorkOrderId(e,r){e&&this.workOrderService.getWorkOrderExclusionsList(e,r).subscribe(e=>{this.workOrderExclusionsList=e})}getLaborListByWorkOrderId(e,r){e&&this.workOrderService.getWorkOrderLaborList(e,r,!1,0).subscribe(e=>{this.workOrderLaborList=e.laborList})}getDirectionByWorkOrderId(e,r){e&&this.workOrderService.getWorkOrderDirectionList(e,r).subscribe(e=>{this.workOrderDirectionList=e})}edit(e){const{subWorkOrderId:r}=e;window.open(`/workordersmodule/workorderspages/app-sub-work-order?workorderid=${this.workOrderId}&mpnid=${this.mpnId}&subworkorderid=${r}`)}delete(e){}getPageCount(e,r){return Math.ceil(e/r)}AddSubWo(e){window.open(`/workordersmodule/workorderspages/app-sub-work-order?workorderid=${this.workOrderId}&mpnid=${this.mpnId}&subworkorderid=${e.subWorkOrderId}&workOrderMaterialsId=${this.workOrderMaterialsId}&exist=1`)}showOtherOptions(){}otherOptionSelected(e){}};Ir.ctorParameters=()=>[{type:o.Router},{type:p.a}],n.b([Object(a.Input)()],Ir.prototype,"workOrderId",void 0),n.b([Object(a.Input)()],Ir.prototype,"mpnId",void 0),n.b([Object(a.Input)()],Ir.prototype,"isView",void 0),n.b([Object(a.Input)()],Ir.prototype,"forSubWorkOrder",void 0),n.b([Object(a.Input)()],Ir.prototype,"workOrderMaterialsId",void 0),Ir=n.b([Object(a.Component)({selector:"app-sub-work-orderlist",template:n.c(t("5PLl")).default})],Ir);var Or=t("Mz6y"),Dr=t("DzC7");let xr=class{constructor(e,r){this.workOrderService=e,this.localStorage=r,this.isView=!1,this.workOrderRoList=[],this.pageSize=10,this.globalSettings={},this.isSpinnerVisible=!1,this.roListColumns=[{field:"partNumber",header:"MCPN"},{field:"partDescription",header:"MCPN Description"},{field:"serialNumber",header:"MC Serial #"},{field:"repairOrderNumber",header:"RO Num"},{field:"quantityOrdered",header:"# of Items"},{field:"controlNumber",header:"Control #"},{field:"controllerId",header:"Control Id"},{field:"unitCost",header:"Unit Cost"},{field:"extendedCost",header:"Extended Cost"},{field:"currency",header:"Currency"},{field:"vendorName",header:"Vendor Name"},{field:"status",header:"Status"},{field:"openDate",header:"Open Date"},{field:"needByDate",header:"Need By Date"}]}ngOnInit(){this.getExistingRoList(),this.getGlobalSettings()}getGlobalSettings(){this.globalSettings=this.localStorage.getDataObject(L.a.GLOBAL_SETTINGS)||{},this.global_lang=this.globalSettings.cultureName}getExistingRoList(){this.isSpinnerVisible=!0,this.workOrderService.getExistingWOROList().subscribe(e=>{this.workOrderRoList=e.map(e=>(this.isSpinnerVisible=!1,Object.assign({},e,{unitCost:this.formatCost(e.unitCost),extendedCost:this.formatCost(e.extendedCost)}))),console.log(e)},e=>{this.isSpinnerVisible=!1})}edit(e){if(1==this.isSubWorkOrder){const{repairOrderId:r}=e;window.open(`/vendorsmodule/vendorpages/workorder-ro-edit/${r}/0/0/0/${this.subWOPartNoId}`)}else{const{repairOrderId:r}=e;window.open(`/vendorsmodule/vendorpages/workorder-ro-edit/${r}/${this.mpnId}`)}}formatCost(e){if(e)return 1==isNaN(e)&&(e=Number(e.replace(/[^0-9.-]+/g,""))),e=new Intl.NumberFormat(this.global_lang,{style:"decimal",minimumFractionDigits:2,maximumFractionDigits:2}).format(e)}getPageCount(e,r){return Math.ceil(e/r)}};xr.ctorParameters=()=>[{type:p.a},{type:ee.a}],n.b([Object(a.Input)()],xr.prototype,"mpnId",void 0),n.b([Object(a.Input)()],xr.prototype,"isView",void 0),n.b([Object(a.Input)()],xr.prototype,"subWOPartNoId",void 0),n.b([Object(a.Input)()],xr.prototype,"isSubWorkOrder",void 0),xr=n.b([Object(a.Component)({selector:"app-work-order-ro-list",template:n.c(t("MESU")).default})],xr);let Sr=class{constructor(e){this.workOrderService=e,this.workOrderROPartsList=[],this.pageSize=10,this.isView=!1,this.isSpinnerVisible=!0,this.roListColumns=[{field:"mcpn",header:"MCPN"},{field:"mcpndescription",header:"MCPN Description"},{field:"mcserial",header:"MC Serial #"},{field:"stockline",header:"Stock Line "},{field:"control",header:"Control"},{field:"controlid",header:"Control #"},{field:"controllerId",header:"Control Id"},{field:"qtytorepair",header:"Qty to Repair"},{field:"qtyreserved",header:"Qty to Reserved"}]}ngOnInit(){console.log(this.mpnId),this.getNewROCreate()}getNewROCreate(){this.isSpinnerVisible=!0,this.workOrderService.createNewWORO(this.mpnId).subscribe(e=>{this.isSpinnerVisible=!1,this.workOrderROPartsList=[e]},e=>{this.isSpinnerVisible=!1})}createNewRoWorkOrder(e){1==this.isSubWorkOrder?window.open("/vendorsmodule/vendorpages/workorder-ro-create/0/0/0/0/"+this.subWOPartNoId):window.open("/vendorsmodule/vendorpages/workorder-ro-create/0/"+this.mpnId)}getPageCount(e,r){return Math.ceil(e/r)}closeModel(){}};Sr.ctorParameters=()=>[{type:p.a}],n.b([Object(a.Input)()],Sr.prototype,"isView",void 0),n.b([Object(a.Input)()],Sr.prototype,"mpnId",void 0),n.b([Object(a.Input)()],Sr.prototype,"subWOPartNoId",void 0),n.b([Object(a.Input)()],Sr.prototype,"isSubWorkOrder",void 0),Sr=n.b([Object(a.Component)({selector:"app-work-order-ro-create",template:n.c(t("TrUR")).default})],Sr);class Cr{constructor(){this.taskId=null,this.shipViaId=null,this.length=null,this.width=null,this.height=null,this.weight=null,this.memo="",this.amount=null,this.uomId=null,this.dimensionUOMId=null,this.currencyId=null,this.isShowDelete=!0}}var Lr=t("OmvT");let Tr=class{constructor(e,r,t,n,s,i){this.workOrderService=e,this.authService=r,this.alertService=t,this.commonService=n,this.modalService=s,this.cdRef=i,this.saveFreightListForWO=new a.EventEmitter,this.updateFreightListForWo=new a.EventEmitter,this.refreshData=new a.EventEmitter,this.view=!1,this.isQuote=!1,this.isView=!1,this.taskList=[],this.buildMethodDetails={},this.isSubWorkOrder=!1,this.costPlusType=0,this.cols=[{field:"shipVia",header:"Ship Via"},{field:"weight",header:"Weight"},{field:"uom",header:"UOM"}],this.isEdit=!1,this.unitOfMeasureList=[],this.currencyList=[],this.currentRow={}}ngOnInit(){this.freightForm&&(this.freightForm=[...this.freightForm,new Cr]),this.customerId=Object(C.a)("customerId",this.savedWorkOrderData.customerId),this.getShipViaByCustomerId(),this.getUOMList(),this.getCurrencyList(),this.getCarrierList(),console.log(this.workOrderFreightList),this.workOrderFreightList&&this.workOrderFreightList.length>0&&this.workOrderFreightList[0].headerMarkupId&&(this.costPlusType=this.workOrderFreightList[0].markupFixedPrice,this.overAllMarkup=Number(this.workOrderFreightList[0].headerMarkupId)),this.buildMethodDetails&&(this.costPlusType=this.buildMethodDetails.freightBuildMethod,this.buildMethodDetails.freightFlatBillingAmount&&(this.freightFlatBillingAmount=this.formateCurrency(this.buildMethodDetails.freightFlatBillingAmount)))}ngOnChanges(){if(this.workOrderFreightList&&this.workOrderFreightList.length>0&&this.workOrderFreightList[0].headerMarkupId&&(this.costPlusType=this.workOrderFreightList[0].markupFixedPrice,this.overAllMarkup=Number(this.workOrderFreightList[0].headerMarkupId)),this.workOrderFreightList){this.workOrderFreightLists=this.workOrderFreightList.reduce((function(e,r){return e[r.taskId]=e[r.taskId]||[],e[r.taskId].push(r),e}),Object.create(null)),this.workOrderFreightList=[];for(let e in this.workOrderFreightLists)this.workOrderFreightList.push(this.workOrderFreightLists[e])}this.buildMethodDetails&&(this.costPlusType=this.buildMethodDetails.freightBuildMethod,this.buildMethodDetails.freightFlatBillingAmount&&(this.freightFlatBillingAmount=this.formateCurrency(this.buildMethodDetails.freightFlatBillingAmount)))}get userName(){return this.authService.currentUser?this.authService.currentUser.userName:""}getUOMList(){this.commonService.smartDropDownList("UnitOfMeasure","UnitOfMeasureId","ShortName").subscribe(e=>{console.log(e),this.unitOfMeasureList=e})}parsedText(e){if(e){return(new DOMParser).parseFromString("<!doctype html><body>"+e,"text/html").body.textContent}}getCurrencyList(){this.commonService.smartDropDownList("Currency","CurrencyId","Code").subscribe(e=>{console.log(e),this.currencyList=e})}getCarrierList(){this.commonService.smartDropDownList("Carrier","CarrierId","Description").subscribe(e=>{this.carrierList=e})}getShipViaByCustomerId(){this.commonService.getShipViaDetailsByModule(Object(Lr.a)("Customer"),this.subWorkOrderDetails?this.subWorkOrderDetails.customerId:this.customerId).subscribe(e=>{this.shipViaList=e.map(e=>({label:e.name,value:e.shippingViaId}))})}createNew(){this.isEdit=!1;let e=new Cr;e.isShowDelete=!1,e.amount=this.formateCurrency(e.amount);const r=this.taskList.filter(e=>"Shipping"===e.description);console.log(r),e=Object.assign({},e,{taskId:r[0].taskId}),this.freightForm=[e],console.log(e)}addNewRow(){let e=new Cr;const r=this.taskList.filter(e=>"Shipping"===e.description);e=Object.assign({},e,{taskId:r[0].taskId}),this.freightForm=[...this.freightForm,e]}edit(e,r,t){this.mainEditingIndex=r,this.subEditingIndex=t,this.isEdit=!0,this.freightForm=[e]}deleteRow(e){null==this.freightForm[e].workOrderFreightId||"0"==this.freightForm[e].workOrderFreightId||""==this.freightForm[e].workOrderFreightId?this.freightForm.splice(e,1):this.freightForm.isDelete=!0}onAddTextAreaInfo(e,r){this.memoIndex=r,console.log("memolist",e,r),this.textAreaInfo=e.memo}onSaveTextAreaInfo(e){e&&(this.textAreaInfo=e,console.log("hello cjkf",this.freightForm),this.freightForm[this.memoIndex].memo=this.textAreaInfo,console.log("index",this.freightForm)),w("#textarea-popupFreight").modal("hide")}onCloseTextAreaInfo(){w("#textarea-popupFreight").modal("hide")}saveFreightList(){if(this.isQuote)if(this.freightForm=this.freightForm.map(e=>Object.assign({},e,{uom:e.uomId?Object(C.g)("label","value",e.uomId,this.unitOfMeasureList):"",dimensionUOM:e.dimensionUOMId?Object(C.g)("label","value",e.dimensionUOMId,this.unitOfMeasureList):"",currency:e.currencyId?Object(C.g)("label","value",e.currencyId,this.currencyList):"",billingAmount:this.formateCurrency(e.amount)})),this.isEdit)this.workOrderFreightList[this.mainEditingIndex][this.subEditingIndex]=this.freightForm[0],w("#addNewFreight").modal("hide"),this.isEdit=!1;else{let e=[];this.workOrderFreightList.forEach(r=>{e=[...e,...r]}),e=[...e,...this.freightForm],this.workOrderFreightLists=e.reduce((function(e,r){return e[r.taskId]=e[r.taskId]||[],e[r.taskId].push(r),e}),Object.create(null)),this.workOrderFreightList=[];for(let r in this.workOrderFreightLists)this.workOrderFreightList.push(this.workOrderFreightLists[r]);w("#addNewFreight").modal("hide")}else this.isEdit?(this.updateFreightListForWo.emit(this.freightForm),w("#addNewFreight").modal("hide"),this.isEdit=!1):(this.saveFreightListForWO.emit(this.freightForm),w("#addNewFreight").modal("hide"))}createFreightsQuote(){let e=[];this.workOrderFreightList.forEach(r=>{this.taskList.forEach(t=>{t.taskId==r[0].taskId&&e.push({WorkOrderQuoteTaskId:0,TaskId:t.taskId,FreightCost:this.getTotalTaskAmount(r),FreightBilling:this.getTotalTaskBillingAmount(r),FreightRevenue:this.getTotalTaskBillingAmount(r),masterCompanyId:this.authService.currentUser.masterCompanyId,CreatedBy:"admin",UpdatedBy:"admin",CreatedDate:(new Date).toDateString(),UpdatedDate:(new Date).toDateString(),IsActive:!0,IsDeleted:!1})})});let r=this.workOrderFreightList,t=[];for(let a=0;a<r.length;a++)t=[...t,...r[a]];t=t.map(e=>Object.assign({},e,{headerMarkupId:Number(this.overAllMarkup),markupFixedPrice:this.costPlusType}));let n={data:t,taskSum:e,freightFlatBillingAmount:this.formateCurrency(this.freightFlatBillingAmount),FreightBuildMethod:this.costPlusType};this.saveFreightListForWO.emit(n)}openDelete(e,r){this.currentRow=r,this.modal=this.modalService.open(e,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then(()=>{},()=>{})}dismissModel(){this.modal.close()}delete(){if(this.isQuote)this.currentRow.isDeleted=!0,w("#addNewFreight").modal("hide"),this.isEdit=!1;else{const e=this.isSubWorkOrder?this.currentRow.subWorkOrderFreightId:this.currentRow.workOrderFreightId;this.workOrderService.deleteWorkOrderFreightList(e,this.userName,this.isSubWorkOrder).subscribe(e=>{this.refreshData.emit(),this.alertService.showMessage("","Deleted WorkOrder Freight Successfully",k.d.success)})}this.modal.close()}markupChanged(e,r){try{this.markupList.forEach(t=>{"row"==r&&t.value==e.markupPercentageId?e.billingAmount=this.formateCurrency(Number(e.amount.toString().replace(/\,/g,""))+Number(e.amount.toString().replace(/\,/g,""))/100*Number(t.label)):"all"==r&&t.value==this.overAllMarkup&&this.workOrderFreightList.forEach(e=>{e.forEach(e=>{e.billingMethodId&&1==Number(e.billingMethodId)&&(e.markupPercentageId=Number(this.overAllMarkup),e.billingAmount=this.formateCurrency(Number(e.amount.toString().replace(/\,/g,""))+Number(e.amount.toString().replace(/\,/g,""))/100*Number(t.label)))})})})}catch(t){console.log(t)}}tmchange(){for(let e of this.workOrderFreightList)e.forEach(e=>{e.billingMethodId=this.costPlusType,e.markupPercentageId="",e.billingAmount=this.formateCurrency(Number(e.amount.toString().replace(/\,/g,""))),3==this.costPlusType&&(e.billingAmount="0.00",this.freightFlatBillingAmount="0.00"),1==Number(this.costPlusType)&&(this.overAllMarkup="")})}getTotalAmount(){let e=0;return this.workOrderFreightList&&this.workOrderFreightList.forEach(r=>{e+=Number(this.getTotalTaskAmount(r))}),this.formateCurrency(e)}getTotalTaskAmount(e){let r=0;return e&&e.forEach(e=>{e.amount&&!e.isDeleted&&(r+=Number(e.amount.toString().replace(/\,/g,"")))}),r.toFixed(2)}getTotalBillingAmount(){let e=0;return this.workOrderFreightList&&this.workOrderFreightList.forEach(r=>{e+=Number(this.getTotalTaskBillingAmount(r))}),this.freightFlatBillingAmount=e.toFixed(2),this.formateCurrency(e)}getTotalTaskBillingAmount(e){let r=0;return e&&e.forEach(e=>{e.billingAmount&&!e.isDeleted&&(r+=Number(e.billingAmount.toString().replace(/\,/g,"")))}),r.toFixed(2)}formateCurrency(e){return e?Object(C.b)(e,2):"0.00"}};Tr.ctorParameters=()=>[{type:p.a},{type:v.a},{type:k.b},{type:u.a},{type:ve.c},{type:a.ChangeDetectorRef}],n.b([Object(a.Input)()],Tr.prototype,"workOrderFreightList",void 0),n.b([Object(a.Input)()],Tr.prototype,"freightForm",void 0),n.b([Object(a.Input)()],Tr.prototype,"savedWorkOrderData",void 0),n.b([Object(a.Output)()],Tr.prototype,"saveFreightListForWO",void 0),n.b([Object(a.Output)()],Tr.prototype,"updateFreightListForWo",void 0),n.b([Object(a.Output)()],Tr.prototype,"refreshData",void 0),n.b([Object(a.Input)()],Tr.prototype,"view",void 0),n.b([Object(a.Input)()],Tr.prototype,"subWorkOrderDetails",void 0),n.b([Object(a.Input)()],Tr.prototype,"isWorkOrder",void 0),n.b([Object(a.Input)()],Tr.prototype,"isQuote",void 0),n.b([Object(a.Input)()],Tr.prototype,"markupList",void 0),n.b([Object(a.Input)()],Tr.prototype,"isView",void 0),n.b([Object(a.Input)()],Tr.prototype,"taskList",void 0),n.b([Object(a.Input)()],Tr.prototype,"buildMethodDetails",void 0),n.b([Object(a.Input)()],Tr.prototype,"isSubWorkOrder",void 0),n.b([Object(a.Input)()],Tr.prototype,"subWOPartNoId",void 0),Tr=n.b([Object(a.Component)({selector:"app-work-order-freight",template:n.c(t("iD4C")).default,encapsulation:a.ViewEncapsulation.None,styles:[n.c(t("Zchf")).default]})],Tr);let Mr=class{constructor(e,r,t){this.commonService=e,this.workorderMainService=r,this.workOrderService=t,this.isView=!1,this.labor=new f,this.quoteForm=new d,this.isEdit=!1,this.selectedPartNumber="",this.selectedPartDescription="",this.selectedStockLineNumber=""}ngOnInit(){0!=this.workorderid&&(this.getEmployeeList(this.workorderid),this.getTaskList(),this.getMarkup(),this.loadCurrency())}ngOnChanges(){0!=this.workorderid&&(this.getEmployeeList(this.workorderid),this.getTaskList(),this.getMarkup(),this.loadCurrency())}getEmployeeList(e){this.commonService.smartDropDownList("Employee","EmployeeId","FirstName").subscribe(r=>{this.employeeList=r,this.getWorkOrderInfo(e),this.getMPNDetails(e)})}getTaskList(){null==this.labor&&(this.labor=new f),this.labor.workOrderLaborList=[],this.labor.workOrderLaborList.push({}),this.workorderMainService.getAllTasks().subscribe(e=>{this.labor.workOrderLaborList[0]={},this.taskList=e,this.formTaskList()},e=>{console.log(e)})}getMarkup(){this.commonService.smartDropDownList("[Percent]","PercentId","PercentValue").subscribe(e=>{this.markupList=e})}loadCurrency(){this.commonService.smartDropDownList("Currency","CurrencyId","symbol").subscribe(e=>this.currencyList=e,e=>{})}getWorkOrderInfo(e){this.workOrderService.getWorkOrderById(e).subscribe(e=>{e&&(this.savedWorkOrderData=e,this.customerCode=e.customerDetails.customerId,this.customerName=e.customerDetails.customerName,this.customerContact=e.customerDetails.customerContact,this.customerRef=e.customerDetails.customerRef,this.csr=e.customerDetails.csrName,this.customerEmail=e.customerDetails.customerEmail,this.customerPhone=e.customerDetails.customerPhone,this.creditLimit=e.creditLimit,this.workOrderNumber=e.workOrderNum,this.quoteForm.WorkOrderId=e.workOrderId,this.quoteForm.WorkFlowWorkOrderId=e.workFlowWorkOrderId,this.quoteForm.openDate=new Date(e.openDate),this.quoteForm.customerId=e.customerDetails.customerId,this.quoteForm.CustomerPhone=e.customerDetails.customerPhone,this.quoteForm.salesPersonId=e.salesPersonId,this.quoteForm.employeeId=e.employeeId,this.quoteForm.masterCompanyId=e.masterCompanyId,this.quoteForm.creditTermsandLimit=e.customerDetails.creditLimit,this.workOrderService.getWorkOrderQuoteDetail(e.workOrderId,e.workFlowWorkOrderId).subscribe(e=>{e&&(this.isEdit=!0,this.dso=e.workOrderQuote.dso,this.validFor=e.workOrderQuote.validForDays,e.workOrderQuote.openDate=new Date(e.workOrderQuote.openDate),this.quoteForm=Object.assign({},e.workOrderQuote,{WorkOrderId:e.workOrderId,WorkFlowWorkOrderId:e.workFlowWorkOrderId,quoteNumber:e.workOrderQuote.quoteNumber,expirationDateStatus:e.workOrderQuote.quoteStatusId}),this.quoteDueDate=new Date(e.workOrderQuote.quoteDueDate),this.expirationDate=new Date(e.workOrderQuote.expirationDate),this.currency=e.workOrderQuote.currencyId,this.accountsReceivableBalance=e.workOrderQuote.accountsReceivableBalance,this.warnings=e.warnings,this.memo=e.memo,this.getQuoteTabData())}),this.getCreditTerms(e.creditTermsId),this.setEmpAndSalesPersonName(e.employeeId,e.salesPersonId),this.getMPNList(e.workOrderId))})}getMPNDetails(e){this.workOrderService.getPartsDetail(e).subscribe(e=>{this.workOrderPartsDetail=e})}formTaskList(){this.taskList.forEach(e=>{this.labor.workOrderLaborList[0][e.description.toLowerCase()]=[]})}getQuoteTabData(){this.getQuoteExclusionListByWorkOrderQuoteId(),this.getQuoteMaterialListByWorkOrderQuoteId(),this.getQuoteChargesListByWorkOrderQuoteId(),this.getQuoteLaborListByWorkOrderQuoteId(),this.getQuoteFreightListByWorkOrderQuoteId()}getQuoteExclusionListByWorkOrderQuoteId(){this.workOrderQuoteDetailsId&&this.workOrderService.getQuoteExclusionList(this.workOrderQuoteDetailsId,1).subscribe(e=>{this.workOrderExclusionsList=e})}getQuoteMaterialListByWorkOrderQuoteId(){this.workOrderQuoteDetailsId&&this.workOrderService.getQuoteMaterialList(this.workOrderQuoteDetailsId,1).subscribe(e=>{this.materialListQuotation=e,this.materialListQuotation&&this.materialListQuotation.length>0&&this.materialListQuotation[0].headerMarkupId&&(this.costPlusType=this.materialListQuotation[0].markupFixedPrice,this.overAllMarkup=Number(this.materialListQuotation[0].headerMarkupId))})}getQuoteFreightListByWorkOrderQuoteId(){this.workOrderQuoteDetailsId&&this.workOrderService.getQuoteFreightsList(this.workOrderQuoteDetailsId,1).subscribe(e=>{this.workOrderFreightList=e})}getQuoteChargesListByWorkOrderQuoteId(){this.workOrderQuoteDetailsId&&this.workOrderService.getQuoteChargesList(this.workOrderQuoteDetailsId,1).subscribe(e=>{this.workOrderChargesList=e})}getQuoteLaborListByWorkOrderQuoteId(){this.workOrderQuoteDetailsId&&this.workOrderService.getQuoteLaborList(this.workOrderQuoteDetailsId,1).subscribe(e=>{if(e){let r=this.labor.workFlowWorkOrderId;if(e){let t=this.labor.workOrderLaborList;this.labor=Object.assign({},e,{workOrderLaborList:t}),this.labor.workFlowWorkOrderId=r,this.taskList.forEach(r=>{this.labor.workOrderLaborList[0][r.description.toLowerCase()]=[],e.laborList.forEach(e=>{if(e.taskId==r.taskId){let t={};t=Object.assign({},e,{employeeId:{label:e.employeeName,value:e.employeeId}}),this.labor.workOrderLaborList[0][r.description.toLowerCase()].push(t)}})})}}})}getCreditTerms(e){this.commonService.smartDropDownList("CreditTerms","CreditTermsId","Name").subscribe(r=>{for(let t of r)t.value==e&&(this.creditTerms=t.label)})}setEmpAndSalesPersonName(e,r){for(let t of this.employeeList)t.value==e&&(this.employeeName=t.label),t.value==r&&(this.salesPerson=t.label)}getMPNList(e){this.workOrderService.getWorkOrderWorkFlowNumbers(e).subscribe(e=>{this.workOrderWorkFlowOriginalData=e,console.log(e),this.mpnPartNumbersList=e.map(e=>({value:{workOrderWorkFlowId:e.value,workOrderNo:e.label,masterPartId:e.masterPartId,workflowId:e.workflowId,workflowNo:e.workflowNo,partNumber:e.partNumber,workOrderScopeId:e.workOrderScopeId,itemMasterId:e.itemMasterId,partDescription:e.description,stockLineNumber:e.stockLineNo},label:e.partNumber})),this.savedWorkOrderData&&this.savedWorkOrderData.isSinglePN&&(this.selectedPartNumber=this.mpnPartNumbersList[0].label,this.partNumberSelected())})}partNumberSelected(){this.gridActiveTab="",this.clearQuoteData();let e=0;this.mpnPartNumbersList.forEach(r=>{r.label==this.selectedPartNumber&&(this.selectedPartDescription=r.value.partDescription,this.selectedStockLineNumber=r.value.stockLineNumber,e=r.value.masterPartId,this.labor.workFlowWorkOrderId=r,this.workFlowWorkOrderId=r.value.workOrderWorkFlowId,this.selectedWorkFlowWorkOrderId=r.value.workOrderWorkFlowId,this.workOrderService.getSavedQuoteDetails(this.selectedWorkFlowWorkOrderId).subscribe(e=>{e&&e.workOrderQuoteDetailsId?(this.workOrderQuoteDetailsId=e.workOrderQuoteDetailsId,this.getQuoteTabData()):this.workOrderQuoteDetailsId=0}))})}clearQuoteData(){this.materialListQuotation=[]}gridTabChange(e){this.gridActiveTab=e}calculateExpiryDate(){}getTotalQuantity(){let e=0;return this.materialListQuotation.forEach(r=>{r.quantity&&(e+=r.quantity)}),e}getTotalUnitCost(){let e=0;return this.materialListQuotation.forEach(r=>{r.unitCost&&r.quantity&&(e+=Number(r.quantity*r.unitCost))}),e.toFixed(2)}totalMaterialBillingAmount(){let e=0;return this.materialListQuotation.forEach(r=>{r.billingAmount&&(e+=Number(r.billingAmount))}),e.toFixed(2)}saveWorkOrderExclusionsList(e){}updateWorkOrderExclusionsList(e){}getExclusionListByWorkOrderId(){}saveWorkOrderFreightsList(e){}updateWorkOrderFreightsList(e){}getFreightListByWorkOrderId(){}saveworkOrderLabor(e){}saveWorkOrderChargesList(e){}updateWorkOrderChargesList(e){}createChargeQuote(e){}getChargesListByWorkOrderId(){}editMaterialList(e){}deleteMaterialList(e){}markupChanged(e,r){}tmchange(){}};Mr.ctorParameters=()=>[{type:u.a},{type:p.a},{type:c.a}],n.b([Object(a.Input)()],Mr.prototype,"workorderid",void 0),n.b([Object(a.Input)()],Mr.prototype,"isView",void 0),Mr=n.b([Object(a.Component)({selector:"grd-quote-view",template:n.c(t("JUvD")).default,styles:[n.c(t("zc4k")).default]})],Mr);var Pr=t("NGzr");class Nr{constructor(){this.workOrderTeardownId=0,this.workOrderId=0,this.workFlowWorkOrderId=0,this.masterCompanyId=1,this.createdBy=new Date,this.updatedBy=new Date,this.createdDate=new Date,this.updatedDate=new Date,this.isActive=!0,this.isDeleted=!1,this.isAdditionalComments=!1,this.isBulletinsModification=!1,this.isDiscovery=!1,this.isFinalInspection=!1,this.isFinalTest=!1,this.isPmaDerBulletins=!1,this.isPreAssemblyInspection=!1,this.isPreAssmentResults=!1,this.isPreliinaryReview=!1,this.isRemovalReasons=!1,this.isTestDataUsed=!1,this.isWorkPerformed=!1,this.workOrderRemovalReasons={workOrderRemovalReasonsId:0,workOrderTeardownId:0,reasonId:0,memo:""},this.workOrderPmaDerBulletins={workOrderPmaDerBulletinsId:0,workOrderTeardownId:0,airworthinessDirecetives:"",mandatoryService:"",requestedService:"",serviceLetters:"",pmaParts:"",derRepairs:""},this.workOrderPreliinaryReview={workOrderPreliinaryReviewId:0,workOrderTeardownId:0,memo:"",reasonId:0,inspectorId:0,inspectorDate:new Date},this.workOrderPreAssmentResults={workOrderPreAssmentResultsId:0,workOrderTeardownId:0,reasonId:0,memo:"",technicianId:0,technicianDate:new Date,inspectorId:0,inspectorDate:new Date},this.workOrderDiscovery={workOrderDiscoveryId:0,workOrderTeardownId:0,reasonId:0,memo:"",technicianId:0,technicianDate:new Date,inspectorId:0,inspectorDate:new Date},this.workOrderPreAssemblyInspection={workOrderPreAssemblyInspectionId:0,workOrderTeardownId:0,memo:"",reasonId:0,technicianId:0,technicianDate:new Date,inspectorId:0,inspectorDate:new Date},this.workOrderWorkPerformed={workOrderWorkPerformedId:0,workOrderTeardownId:0,reasonId:0,memo:"",technicianId:0,technicianDate:new Date,inspectorId:0,inspectorDate:new Date},this.workOrderTestDataUsed={workOrderTestDataUsedId:0,workOrderTeardownId:0,reasonId:0,memo:""},this.workOrderBulletinsModification={workOrderBulletinsModificationId:0,workOrderTeardownId:0,reasonId:0,memo:""},this.workOrderFinalTest={workOrderFinalTestId:0,workOrderTeardownId:0,reasonId:0,memo:"",technicianId:0,technicianDate:new Date,inspectorId:0,inspectorDate:new Date},this.workOrderFinalInspection={workOrderFinalInspectionId:0,workOrderTeardownId:0,reasonId:0,memo:"",inspectorId:0,inspectorDate:new Date},this.workOrderAdditionalComments={workOrderAdditionalCommentsId:0,workOrderTeardownId:0,reasonId:0,memo:""}}}let Wr=class{constructor(e,r,t,n){this.workOrderService=e,this.authService=r,this.alertService=t,this.commonService=n,this.onDestroy$=new M.a,this.startDate=new Date,this.minimumDate=new Date,this.saveTearDownData=Object.assign({},new Nr),this.createdDate=new Date,this.updatedDate=new Date,this.technicianOriginalList=[],this.inspectorsOriginalList=[],this.checkMandatoryFields=!1,this.isSpinnerVisible=!1,this.showViewTemplate=!1,this.isView=!1,this.workOrderGeneralInformation={},this.isSubWorkOrder=!1,this.woSettingsTeardownsList=[],this.technicianList=[],this.inspectionList=[]}ngOnInit(){this.getTeardownServicesList(),this.getReasonsByChecked(),this.getTechnicianList(),this.getInspectiorsList(),this.getTearDownListFromWOSettings(),console.log("viewData",this.getsaveTearDownData),this.getsaveTearDownData&&0!=this.getsaveTearDownData.length&&null!=this.getsaveTearDownData&&null!=this.getsaveTearDownData&&""!=this.getsaveTearDownData&&(this.showViewTemplate=!0,console.log("view in ngonInt",this.showViewTemplate))}getTearDownListFromWOSettings(){this.workOrderService.getTearDownTypesFromWOSettings(this.workOrderGeneralInformation.masterCompanyId?this.workOrderGeneralInformation.masterCompanyId:this.authService.currentUser.masterCompanyId,this.workOrderGeneralInformation.workOrderTypeId?this.workOrderGeneralInformation.workOrderTypeId:1).subscribe(e=>{e&&e.result?this.woSettingsTeardownsList=[]:e&&(this.woSettingsTeardownsList=e)})}checkForTeardownAvalabilityFromWO(e){let r=!1;return this.woSettingsTeardownsList.forEach(t=>{t.name.toLowerCase()==e.toLowerCase()&&(r=!0)}),r}getReasonsByChecked(){this.getsaveTearDownData&&(this.getsaveTearDownData.isRemovalReasons?this.worOrderTearDownReasonListById(1):this.getsaveTearDownData.isPmaDerBulletins?this.worOrderTearDownReasonListById(2):this.getsaveTearDownData.isPreliinaryReview?this.worOrderTearDownReasonListById(3):this.getsaveTearDownData.isPreAssmentResults?this.worOrderTearDownReasonListById(4):this.getsaveTearDownData.isDiscovery?this.worOrderTearDownReasonListById(5):this.getsaveTearDownData.isPreAssemblyInspection?this.worOrderTearDownReasonListById(6):this.getsaveTearDownData.isWorkPerformed?this.worOrderTearDownReasonListById(7):this.getsaveTearDownData.isTestDataUsed?this.worOrderTearDownReasonListById(8):this.getsaveTearDownData.isBulletinsModification?this.worOrderTearDownReasonListById(9):this.getsaveTearDownData.isFinalTest?this.worOrderTearDownReasonListById(10):this.getsaveTearDownData.isFinalInspection?this.worOrderTearDownReasonListById(11):this.getsaveTearDownData.isAdditionalComments?this.worOrderTearDownReasonListById(12):this.worOrderTearDownReasonListById(1))}ngOnChanges(e){this.technicianList=this.technicianOriginalList,this.getsaveTearDownData&&0!=this.getsaveTearDownData.length&&null!=this.getsaveTearDownData?(this.showViewTemplate=!0,console.log("view in ng onchanges",this.showViewTemplate),this.getReasonsByChecked(),this.assignDatatoFields(this.getsaveTearDownData)):(this.saveTearDownData=Object.assign({},new Nr),this.showViewTemplate=!1)}ngOnDestroy(){}ExpandAllCustomerDetailsModelEdit(){w("#stepadd1").collapse("show"),w("#stepadd2").collapse("show"),w("#stepadd3").collapse("show"),w("#stepadd4").collapse("show"),w("#stepadd5").collapse("show"),w("#stepadd6").collapse("show"),w("#stepadd7").collapse("show"),w("#stepadd8").collapse("show"),w("#stepadd9").collapse("show"),w("#stepadd10").collapse("show"),w("#stepadd11").collapse("show"),w("#stepadd12").collapse("show")}CloseAllCustomerDetailsModelEdit(){w("#stepadd1").collapse("hide"),w("#stepadd2").collapse("hide"),w("#stepadd3").collapse("hide"),w("#stepadd4").collapse("hide"),w("#stepadd5").collapse("hide"),w("#stepadd6").collapse("hide"),w("#stepadd7").collapse("hide"),w("#stepadd8").collapse("hide"),w("#stepadd9").collapse("hide"),w("#stepadd10").collapse("hide"),w("#stepadd11").collapse("hide"),w("#stepadd12").collapse("hide")}getInspectiorsList(){const e=Object(C.f)("jobTitle","Inspector",this.jobTitles);void 0!==e&&this.commonService.getEmployeesByCategory(e[0].jobTitleId).subscribe(e=>{this.inspectorsOriginalList=e})}getTechnicianList(){const e=Object(C.f)("jobTitle","Technician",this.jobTitles);void 0!==e&&this.commonService.getEmployeesByCategory(e[0].jobTitleId).subscribe(e=>{this.technicianOriginalList=e})}getTeardownServicesList(){this.commonService.smartDropDownList("TeardownType","TeardownTypeId","Name").subscribe(e=>{this.teadownTypesList=e.map(e=>Object.assign({},e,{teardownTypeId:e.value,name:e.label}))})}worOrderTearDownReasonListById(e){this.workOrderService.worOrderTearDownReasonListById(e).subscribe(r=>{this.deStructureReasonsData(e,r)})}deStructureReasonsData(e,r){const t=r.map(e=>Object.assign({},e,{value:e.teardownReasonId,label:e.reason}));1===e?this.RemovalReasonsList=t:3==e?this.prelinnaryReview=t:4==e?this.preAssesmentResults=t:5==e?this.tearDownDescovery=t:6==e?this.preAssemblyInspection=t:7==e?this.workPerformed=t:8==e?this.testDataUsed=t:9==e?this.bullitensAndModifications=t:10==e?this.finalTest=t:11==e?this.finalInspection=t:12==e&&(this.additionalComments=t)}get userName(){return this.authService.currentUser?this.authService.currentUser.userName:""}getUpdatedvalue(e){}onSelectedTechnician(e){}filterTWTechnician(e){if(this.technicianList=this.technicianOriginalList,void 0!==e.query&&null!==e.query){const r=[...this.technicianOriginalList.filter(r=>r.name.toLowerCase().includes(e.query.toLowerCase()))];this.technicianList=r}}filterTWInspections(e){if(this.inspectionList=this.inspectorsOriginalList,void 0!==e.query&&null!==e.query){const r=[...this.inspectorsOriginalList.filter(r=>r.name.toLowerCase().includes(e.query.toLowerCase()))];this.inspectionList=r}}selectedReason(e,r){0!=e&&this.workOrderService.getteardownreasonbyidData(e).subscribe(e=>{this.TearDownReasons=e,this.TearDownReasons&&(1==r?this.saveTearDownData.workOrderRemovalReasons.memo=this.TearDownReasons.memo:2==r?this.saveTearDownData.workOrderPreliinaryReview.memo=this.TearDownReasons.memo:3==r?this.saveTearDownData.workOrderPreAssmentResults.memo=this.TearDownReasons.memo:4==r?this.saveTearDownData.workOrderDiscovery.memo=this.TearDownReasons.memo:5==r?this.saveTearDownData.workOrderPreAssemblyInspection.memo=this.TearDownReasons.memo:6==r?this.saveTearDownData.workOrderWorkPerformed.memo=this.TearDownReasons.memo:7==r?this.saveTearDownData.workOrderTestDataUsed.memo=this.TearDownReasons.memo:8==r?this.saveTearDownData.workOrderBulletinsModification.memo=this.TearDownReasons.memo:9==r?this.saveTearDownData.workOrderFinalTest.memo=this.TearDownReasons.memo:10==r?this.saveTearDownData.workOrderFinalInspection.memo=this.TearDownReasons.memo:11==r&&(this.saveTearDownData.workOrderAdditionalComments.memo=this.TearDownReasons.memo))})}tearDownView(){this.isView=!0,this.workFlowWorkOrderId=this.workFlowWorkOrderId}checkValue(e,r,t){e.target.checked&&2!=t&&this.worOrderTearDownReasonListById(t),1==t?(r.reasonId=0,r.memo=""):2==t?(r.airworthinessDirecetives="",r.mandatoryService="",r.requestedService="",r.serviceLetters="",r.pmaParts="",r.derRepairs=""):3==t?(r.memo="",r.reasonId=0,r.inspectorId=0,r.inspectorDate=new Date):4==t?(r.reasonId=0,r.memo="",r.technicianId=0,r.inspectorId=0,r.technicianDate=new Date):5==t?(r.reasonId=0,r.memo="",r.technicianId=0,r.technicianDate=new Date,r.inspectorId=0,r.inspectorDate=new Date):6==t?(r.memo="",r.reasonId=0,r.technicianId=0,r.technicianDate=new Date,r.inspectorId=0,r.inspectorDate=new Date):7==t?(r.reasonId=0,r.memo="",r.technicianId=0,r.technicianDate=new Date,r.inspectorId=0,r.inspectorDate=new Date):8==t||9==t?(r.reasonId=0,r.memo=""):10==t?(r.reasonId=0,r.memo="",r.technicianId=0,r.technicianDate=new Date,r.inspectorId=0,r.inspectorDate=new Date):11==t?(r.reasonId=0,r.memo="",r.inspectorId=0,r.inspectorDate=new Date):12==t&&(r.reasonId=0,r.memo="")}createTearDownData(e){this.saveTearDownData=Object.assign({},this.saveTearDownData,{workOrderId:this.workOrderId,workFlowWorkOrderId:this.workFlowWorkOrderId,updatedDate:this.updatedDate,createdBy:this.userName,updatedBy:this.userName}),this.saveTearDownData.workOrderPreAssmentResults.technicianId=Object(C.a)("employeeId",this.saveTearDownData.workOrderPreAssmentResults.technicianId),this.saveTearDownData.workOrderPreAssmentResults.inspectorId=Object(C.a)("employeeId",this.saveTearDownData.workOrderPreAssmentResults.inspectorId),this.saveTearDownData.workOrderDiscovery.technicianId=Object(C.a)("employeeId",this.saveTearDownData.workOrderDiscovery.technicianId),this.saveTearDownData.workOrderDiscovery.inspectorId=Object(C.a)("employeeId",this.saveTearDownData.workOrderDiscovery.inspectorId),this.saveTearDownData.workOrderPreAssemblyInspection.technicianId=Object(C.a)("employeeId",this.saveTearDownData.workOrderPreAssemblyInspection.technicianId),this.saveTearDownData.workOrderPreAssemblyInspection.inspectorId=Object(C.a)("employeeId",this.saveTearDownData.workOrderPreAssemblyInspection.inspectorId),this.saveTearDownData.workOrderWorkPerformed.technicianId=Object(C.a)("employeeId",this.saveTearDownData.workOrderWorkPerformed.technicianId),this.saveTearDownData.workOrderWorkPerformed.inspectorId=Object(C.a)("employeeId",this.saveTearDownData.workOrderWorkPerformed.inspectorId),this.saveTearDownData.workOrderFinalTest.technicianId=Object(C.a)("employeeId",this.saveTearDownData.workOrderFinalTest.technicianId),this.saveTearDownData.workOrderFinalTest.inspectorId=Object(C.a)("employeeId",this.saveTearDownData.workOrderFinalTest.inspectorId),this.saveTearDownData.workOrderFinalInspection.inspectorId=Object(C.a)("employeeId",this.saveTearDownData.workOrderFinalInspection.inspectorId),this.saveTearDownData.workOrderPreliinaryReview.inspectorId=Object(C.a)("employeeId",this.saveTearDownData.workOrderPreliinaryReview.inspectorId);const r=this.saveTearDownData;return 1==this.isSubWorkOrder&&(this.saveTearDownData.subWOPartNoId=this.subWOPartNoId,this.saveTearDownData.subWorkOrderId=this.subWorkOrderDetails.subWorkOrderId,this.saveTearDownData.workOrderId=this.subWorkOrderDetails.workOrderId),(1!=this.saveTearDownData.isRemovalReasons||""!=this.saveTearDownData.workOrderRemovalReasons.memo&&0!=this.saveTearDownData.workOrderRemovalReasons.reasonId)&&(1!=this.saveTearDownData.isPmaDerBulletins||""!=this.saveTearDownData.workOrderPmaDerBulletins.airworthinessDirecetives&&""!=this.saveTearDownData.workOrderPmaDerBulletins.mandatoryService&&""!=this.saveTearDownData.workOrderPmaDerBulletins.requestedService&&""!=this.saveTearDownData.workOrderPmaDerBulletins.serviceLetters&&""!=this.saveTearDownData.workOrderPmaDerBulletins.pmaParts&&""!=this.saveTearDownData.workOrderPmaDerBulletins.derRepairs)&&(1!=this.saveTearDownData.isPreliinaryReview||""!=this.saveTearDownData.workOrderPreliinaryReview.memo&&0!=this.saveTearDownData.workOrderPreliinaryReview.reasonId&&0!=this.saveTearDownData.workOrderPreliinaryReview.inspectorId)&&(1!=this.saveTearDownData.isPreAssmentResults||""!=this.saveTearDownData.workOrderPreAssmentResults.memo&&0!=this.saveTearDownData.workOrderPreAssmentResults.reasonId&&0!=this.saveTearDownData.workOrderPreAssmentResults.technicianId&&0!=this.saveTearDownData.workOrderPreAssmentResults.inspectorId)?1!=this.saveTearDownData.isDiscovery||""!=this.saveTearDownData.workOrderDiscovery.memo&&0!=this.saveTearDownData.workOrderDiscovery.reasonId&&0!=this.saveTearDownData.workOrderDiscovery.technicianId&&0!=this.saveTearDownData.workOrderDiscovery.inspectorId?1!=this.saveTearDownData.isPreAssemblyInspection||""!=this.saveTearDownData.workOrderPreAssemblyInspection.memo&&0!=this.saveTearDownData.workOrderPreAssemblyInspection.reasonId&&0!=this.saveTearDownData.workOrderPreAssemblyInspection.technicianId&&0!=this.saveTearDownData.workOrderPreAssemblyInspection.inspectorId?1!=this.saveTearDownData.isWorkPerformed||""!=this.saveTearDownData.workOrderWorkPerformed.memo&&0!=this.saveTearDownData.workOrderWorkPerformed.reasonId&&0!=this.saveTearDownData.workOrderWorkPerformed.technicianId&&0!=this.saveTearDownData.workOrderWorkPerformed.inspectorId?(1!=this.saveTearDownData.isTestDataUsed||""!=this.saveTearDownData.workOrderTestDataUsed.memo&&0!=this.saveTearDownData.workOrderTestDataUsed.reasonId)&&(1!=this.saveTearDownData.isBulletinsModification||""!=this.saveTearDownData.workOrderBulletinsModification.memo&&0!=this.saveTearDownData.workOrderBulletinsModification.reasonId)&&(1!=this.saveTearDownData.isFinalTest||""!=this.saveTearDownData.workOrderFinalTest.memo&&0!=this.saveTearDownData.workOrderFinalTest.reasonId&&0!=this.saveTearDownData.workOrderFinalTest.technicianId&&0!=this.saveTearDownData.workOrderFinalTest.inspectorId)&&(1!=this.saveTearDownData.isFinalInspection||""!=this.saveTearDownData.workOrderFinalInspection.memo&&0!=this.saveTearDownData.workOrderFinalInspection.reasonId)&&(1!=this.saveTearDownData.isAdditionalComments||""!=this.saveTearDownData.workOrderAdditionalComments.memo&&0!=this.saveTearDownData.workOrderAdditionalComments.reasonId)?(this.isSpinnerVisible=!0,void this.workOrderService.createworkOrderTearDownData(r,this.isSubWorkOrder).subscribe(e=>{this.saveTearDownData=e,this.isSpinnerVisible=!1,this.showViewTemplate=!0,this.assignDatatoFields(this.saveTearDownData),this.alertService.showMessage(""," WorkOrder TearDown saved Successfully",k.d.success)},e=>{this.isSpinnerVisible=!1})):(this.checkMandatoryFields=!0,this.validator()):this.validator():(this.checkMandatoryFields=!0,this.validator()):(this.checkMandatoryFields=!0,console.log("alert 5"),this.validator()):(this.checkMandatoryFields=!0,this.validator())}validator(){this.alertService.showMessage("Alert"," Please Add Mandatory Fields",k.d.success)}assignDatatoFields(e){e&&(e.workOrderPreliinaryReview.inspectorDate=e.workOrderPreliinaryReview.inspectorDate?new Date(e.workOrderPreliinaryReview.inspectorDate):null,e.workOrderPreAssmentResults.technicianDate=e.workOrderPreAssmentResults.technicianDate?new Date(e.workOrderPreAssmentResults.technicianDate):null,e.workOrderPreAssmentResults.inspectorDate=e.workOrderPreAssmentResults.inspectorDate?new Date(e.workOrderPreAssmentResults.inspectorDate):null,e.workOrderDiscovery.technicianDate=e.workOrderDiscovery.technicianDate?new Date(e.workOrderDiscovery.technicianDate):null,e.workOrderDiscovery.inspectorDate=e.workOrderDiscovery.inspectorDate?new Date(e.workOrderDiscovery.inspectorDate):null,e.workOrderPreAssemblyInspection.technicianDate=e.workOrderPreAssemblyInspection.technicianDate?new Date(e.workOrderPreAssemblyInspection.technicianDate):null,e.workOrderPreAssemblyInspection.inspectorDate=e.workOrderPreAssemblyInspection.inspectorDate?new Date(e.workOrderPreAssemblyInspection.inspectorDate):null,e.workOrderWorkPerformed.technicianDate=e.workOrderWorkPerformed.technicianDate?new Date(e.workOrderWorkPerformed.technicianDate):null,e.workOrderWorkPerformed.inspectorDate=e.workOrderWorkPerformed.inspectorDate?new Date(e.workOrderWorkPerformed.inspectorDate):null,e.workOrderFinalTest.technicianDate=e.workOrderFinalTest.technicianDate?new Date(e.workOrderFinalTest.technicianDate):null,e.workOrderFinalTest.inspectorDate=e.workOrderFinalTest.inspectorDate?new Date(e.workOrderFinalTest.inspectorDate):null,e.workOrderFinalInspection.inspectorDate=e.workOrderFinalInspection.inspectorDate?new Date(e.workOrderFinalInspection.inspectorDate):null,null!=e.workOrderPreAssmentResults&&(e.workOrderPreAssmentResults.technicianId=Object(C.d)("employeeId",e.workOrderPreAssmentResults.technicianId,this.technicianOriginalList),e.workOrderPreAssmentResults.inspectorId=Object(C.d)("employeeId",e.workOrderPreAssmentResults.inspectorId,this.inspectorsOriginalList)),null!=e.workOrderDiscovery&&(e.workOrderDiscovery.technicianId=Object(C.d)("employeeId",e.workOrderDiscovery.technicianId,this.technicianOriginalList),e.workOrderDiscovery.inspectorId=Object(C.d)("employeeId",e.workOrderDiscovery.inspectorId,this.inspectorsOriginalList)),null!=e.workOrderPreAssemblyInspection&&(e.workOrderPreAssemblyInspection.technicianId=Object(C.d)("employeeId",e.workOrderPreAssemblyInspection.technicianId,this.technicianOriginalList),e.workOrderPreAssemblyInspection.inspectorId=Object(C.d)("employeeId",e.workOrderPreAssemblyInspection.inspectorId,this.inspectorsOriginalList)),null!=e.workOrderWorkPerformed&&(e.workOrderWorkPerformed.technicianId=Object(C.d)("employeeId",e.workOrderWorkPerformed.technicianId,this.technicianOriginalList),e.workOrderWorkPerformed.inspectorId=Object(C.d)("employeeId",e.workOrderWorkPerformed.inspectorId,this.inspectorsOriginalList)),null!=e.workOrderFinalTest&&(e.workOrderFinalTest.technicianId=Object(C.d)("employeeId",e.workOrderFinalTest.technicianId,this.technicianOriginalList),e.workOrderFinalTest.inspectorId=Object(C.d)("employeeId",e.workOrderFinalTest.inspectorId,this.inspectorsOriginalList)),null!=e.workOrderFinalInspection&&(e.workOrderFinalInspection.inspectorId=Object(C.d)("employeeId",e.workOrderFinalInspection.inspectorId,this.inspectorsOriginalList)),null!=e.workOrderPreliinaryReview&&(e.workOrderPreliinaryReview.inspectorId=Object(C.d)("employeeId",e.workOrderPreliinaryReview.inspectorId,this.inspectorsOriginalList)),this.saveTearDownData=e)}};Wr.ctorParameters=()=>[{type:p.a},{type:v.a},{type:k.b},{type:u.a}],n.b([Object(a.Input)()],Wr.prototype,"workOrderId",void 0),n.b([Object(a.Input)()],Wr.prototype,"isEdit",void 0),n.b([Object(a.Input)()],Wr.prototype,"jobTitles",void 0),n.b([Object(a.Input)()],Wr.prototype,"workFlowWorkOrderId",void 0),n.b([Object(a.Input)()],Wr.prototype,"getsaveTearDownData",void 0),n.b([Object(a.Input)()],Wr.prototype,"tearDownReasons",void 0),n.b([Object(a.Input)()],Wr.prototype,"isView",void 0),n.b([Object(a.Input)()],Wr.prototype,"workOrderGeneralInformation",void 0),n.b([Object(a.Input)()],Wr.prototype,"savedWorkOrderData",void 0),n.b([Object(a.Input)()],Wr.prototype,"isSubWorkOrder",void 0),n.b([Object(a.Input)()],Wr.prototype,"subWOPartNoId",void 0),n.b([Object(a.Input)()],Wr.prototype,"subWorkOrderDetails",void 0),Wr=n.b([Object(a.Component)({selector:"app-common-teardown",template:n.c(t("NNg4")).default,styles:[n.c(t("PKib")).default]})],Wr);let Fr=class{constructor(e){this.workOrderService=e,this.isSubWorkOrder=!1,this.saveTearDownData={},this.isSpinnerVisible=!1,this.newSaveTearDownData={isRemovalReasons:!1,isPmaDerBulletins:!1,isPreliinaryReview:!1,isPreAssmentResults:!1,isDiscovery:!1,isPreAssemblyInspection:!1,isWorkPerformed:!1,isTestDataUsed:!1,isBulletinsModification:!1,isFinalTest:!1,isFinalInspection:!1,isAdditionalComments:!1}}ngOnInit(){this.workFlowWorkOrderId1&&(this.getTearDownData(),console.log("hello check it once"))}ngOnChanges(e){console.log("hell",this.workFlowWorkOrderId1),this.getTearDownData()}ExpandAllCustomerDetailsModel(){w("#step1").collapse("show"),w("#step2").collapse("show"),w("#step3").collapse("show"),w("#step4").collapse("show"),w("#step5").collapse("show"),w("#step6").collapse("show"),w("#step7").collapse("show"),w("#step8").collapse("show"),w("#step9").collapse("show"),w("#step10").collapse("show"),w("#step11").collapse("show"),w("#step12").collapse("show")}CloseAllCustomerDetailsModel(){w("#step1").collapse("hide"),w("#step2").collapse("hide"),w("#step3").collapse("hide"),w("#step4").collapse("hide"),w("#step5").collapse("hide"),w("#step6").collapse("hide"),w("#step7").collapse("hide"),w("#step8").collapse("hide"),w("#step9").collapse("hide"),w("#step10").collapse("hide"),w("#step11").collapse("hide"),w("#step12").collapse("hide")}getTearDownData(){this.workFlowWorkOrderId1&&(1==this.isSubWorkOrder&&(this.workFlowWorkOrderId1=this.subWOPartNoId),this.isSpinnerVisible=!0,this.workOrderService.getworkOrderTearDownViewData(this.workFlowWorkOrderId1,this.isSubWorkOrder).subscribe(e=>{this.saveTearDownData=null!=e?e:this.newSaveTearDownData,this.isSpinnerVisible=!1},e=>{this.isSpinnerVisible=!1}))}};Fr.ctorParameters=()=>[{type:p.a}],n.b([Object(a.Input)()],Fr.prototype,"workFlowWorkOrderId1",void 0),n.b([Object(a.Input)()],Fr.prototype,"isSubWorkOrder",void 0),n.b([Object(a.Input)()],Fr.prototype,"subWOPartNoId",void 0),Fr=n.b([Object(a.Component)({selector:"app-teardown-overview",template:n.c(t("+RlG")).default,styles:[n.c(t("PjNb")).default]})],Fr);let Ar=class{constructor(e,r,t,n){this.activeModal=e,this.employeeService=r,this.communicationService=t,this.alertService=n,this.isView=!1,this.savedWorkOrderData=[],this.selectedPartNumber={},this.isSubWorkOrder=!1,this.pageSize=10,this.pageIndex=0,this.totalRecords=0,this.data=[],this.headers=[{field:"SERIAL_NO",header:"Memo Id"},{field:"description",header:"Memo"},{field:"updatedBy",header:"Updated By"},{field:"updatedDate",header:"Updated Date"}],this.selectedColumns=[{field:"SERIAL_NO",header:"Memo Id"},{field:"descriptionData",header:"Memo"},{field:"updatedBy",header:"Updated By"},{field:"updatedDate",header:"Updated Date"}],this.addList=[],this.moduleName="Communication",this.isSpinnerVisible=!1}ngOnInit(){1==this.isSubWorkOrder?(this.workOrderId=this.subWorkOrderDetails.subWorkOrderId?this.subWorkOrderDetails.subWorkOrderId:this.workOrderId,this.moduleId=60,this.partNo=this.subWOPartNoId):(this.moduleId=38,this.partNo=this.selectedPartNumber.workOrderPartNumberId),console.log(this.selectedPartNumber),console.log(this.savedWorkOrderData),console.log(this.customerContactList),this.getAllMemoList()}ngOnChanges(){console.log(this.selectedPartNumber),console.log(this.savedWorkOrderData),console.log(this.customerContactList)}dismissModel(){this.activeModal.close()}loadData(e){this.lazyLoadEventData=e;const r=parseInt(e.first)/e.rows;this.pageIndex=r,this.pageSize=e.rows,e.first=r,console.log(e)}addMemo(){this.isEdit=!1,this.addList=[],this.addList.push({memoId:"",description:""})}edit(e,r){this.isEdit=!0,this.addList=[e],console.log("this.addList",this.addList)}deleteMemo(e){this.communicationService.deleteMemoList(e.memoId).subscribe(e=>{this.alertService.showMessage(this.moduleName,"Deleted Succesfully",k.d.success),this.getAllMemoList()},e=>{this.errorHandling(e)})}deleteMemoConfirmation(e){this.deletingRow=e,w("#deleteRowConfirmation").modal("show")}saveMemo(){if(this.isEdit){w("#addNewMemo").modal("hide");let e=this.formData(this.addList[0]);this.isSpinnerVisible=!0,this.communicationService.updateMemo(e).subscribe(e=>{this.isSpinnerVisible=!1,this.getAllMemoList()},e=>{this.isSpinnerVisible=!1,this.errorHandling(e)})}else{w("#addNewMemo").modal("hide");let e=this.formData(this.addList[0]);this.isSpinnerVisible=!0,this.communicationService.saveMemo(e).subscribe(e=>{this.isSpinnerVisible=!1,this.getAllMemoList()},e=>{this.isSpinnerVisible=!1,this.errorHandling(e)})}this.addList=[]}formData(e){console.log("data",e),1==this.isSubWorkOrder?this.moduleId=60:this.moduleId=38;let r={MemoCode:0,ModuleId:this.moduleId,ReferenceId:this.workOrderId,WorkOrderPartNo:this.partNo,MasterCompanyId:1,CreatedBy:"admin",UpdatedBy:"admin",CreatedDate:new Date,UpdatedDate:new Date,IsActive:!0,IsDeleted:!1,Description:e.description};return this.isEdit&&(r.MemoId=e.memoId),r}getAllEmployees(){this.employeeService.getEmployeeList().subscribe(e=>{this.employees=e[0],console.log(this.employees)},e=>{this.errorHandling(e)})}getAllMemoList(){this.data=[],console.log("this.work order details",this.subWorkOrderDetails),null==this.workOrderId&&(this.workOrderId=this.subWorkOrderDetails.subWorkOrderId),this.communicationService.getMemoList(this.workOrderId,this.moduleId,this.partNo).subscribe(e=>{e&&e.length>0?(e=e.map(e=>Object.assign({},e,{descriptionData:this.getString(e.description)})),this.newdata=e.reverse().map((e,r)=>(e.SERIAL_NO=r+1,e)),this.data=this.newdata?this.newdata.reverse():[]):this.data=[],this.totalRecords=e.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize),console.log("dayata",this.data)},e=>{this.errorHandling(e)})}pageIndexChange(e){this.pageSize=e.rows}getHtml(e,r){return"description"==r?w.parseHTML(e)[0]:e}getPageCount(e,r){return Math.ceil(e/r)}errorHandling(e){e.error.errors?e.error.errors.forEach(e=>{this.alertService.showMessage(this.moduleName,e.message,k.d.error)}):this.alertService.showMessage(this.moduleName,"Saving data Failed due to some input error",k.d.error)}getString(e){var r=document.createElement("div");return r.innerHTML=e,r.textContent||r.innerText||""}};Ar.ctorParameters=()=>[{type:ve.b},{type:Q.a},{type:br.a},{type:k.b}],n.b([Object(a.Input)()],Ar.prototype,"workOrderId",void 0),n.b([Object(a.Input)()],Ar.prototype,"isView",void 0),n.b([Object(a.Input)()],Ar.prototype,"savedWorkOrderData",void 0),n.b([Object(a.Input)()],Ar.prototype,"selectedPartNumber",void 0),n.b([Object(a.Input)()],Ar.prototype,"customerContactList",void 0),n.b([Object(a.Input)()],Ar.prototype,"subWorkOrderDetails",void 0),n.b([Object(a.Input)()],Ar.prototype,"isSubWorkOrder",void 0),n.b([Object(a.Input)()],Ar.prototype,"subWOPartNoId",void 0),Ar=n.b([Object(a.Component)({selector:"app-memo",template:n.c(t("J1L2")).default,styles:[n.c(t("QIWc")).default]})],Ar);let Er=class{constructor(e,r,t,n,a,s,i,o,l){this.activeModal=e,this.communicationService=r,this.employeeService=t,this.commonService=n,this.authService=a,this.modalService=s,this.salesQuoteService=i,this.alertService=o,this.configurations=l,this.customerInfoFromSalesQuote={},this.salesQuoteId=null,this.SalesOrderId=null,this.isViewFromWO=!1,this.savedWorkOrderData=[],this.selectedPartNumber={},this.customerContactList=[],this.isSubWorkOrder=!1,this.formData=new FormData,this.isView=!1,this.pageSize=10,this.pageIndex=0,this.totalRecords=0,this.totalPages=0,this.data=[],this.headers=[{field:"emailType",header:"Email Type"},{field:"subject",header:"Subject"},{field:"contactBy",header:"Contacted By"},{field:"contactDate",header:"Contact Date"}],this.selectedColumns=this.headers,this.addList=[],this.employeeList=[],this.employeesOriginalData=[],this.emailViewData={},this.moduleId=0,this.referenceId=0,this.customerDetails={},this.moduleName="Communication",this.isSpinnerVisible=!1}ngOnInit(){1==this.isSubWorkOrder?(this.customerDetails=this.subWorkOrderDetails,this.referenceId=this.subWorkOrderDetails.subWorkOrderId,this.moduleId=60,this.partNo=this.subWOPartNoId):(this.partNo=this.selectedPartNumber.workOrderPartNumberId,this.salesQuoteId?(this.customerDetails={customerName:this.customerInfoFromSalesQuote.customerName,customerCode:this.customerInfoFromSalesQuote.customerCode},this.moduleId=L.a.SALES_ORDER_QUOTE_MODULE_ID,this.referenceId=this.salesQuoteId):(this.customerDetails={customerName:this.savedWorkOrderData.customerId.customerName,customerCode:this.savedWorkOrderData.customerId.customerCode},this.moduleId=L.a.WORK_ORDER_MODULE_ID,this.referenceId=this.workOrderId)),this.getAllEmployees(),this.getAllEmail(),this.getAllEmailType()}ngOnChanges(){}dismissModel(){this.activeModal.close()}loadData(e){this.lazyLoadEventData=e;const r=parseInt(e.first)/e.rows;this.pageIndex=r,this.pageSize=e.rows,e.first=r}addMemo(){if(this.formData=new FormData,console.log("email",this.customerContactList),this.customerContactList.length>0)for(let e=0;e<this.customerContactList.length;e++)1==this.customerContactList[e].isDefaultContact&&(this.customerContact=this.customerContactList[e],this.contactSelected(this.customerContactList[e]));this.bcc="",this.cc="",this.emailBody="",this.contactBy=this.authService.currentEmployee,this.subject="",this.emailTypes.forEach(e=>{"Manual"==e.label&&(this.emailType=e.value)}),this.fileUploadInput.clear(),this.addList.push({memoId:"",memo:""})}showDeleteConfirmation(e){this.deletingRecord=e}delete(e){this.isSpinnerVisible=!0,this.communicationService.deleteEmailList(e.emailId).subscribe(()=>{this.isSpinnerVisible=!1,this.alertService.showMessage(this.moduleName,"Deleted Succesfully",k.d.success),this.getAllEmail()},e=>{this.errorHandling(e),this.isSpinnerVisible=!1})}fileUpload(e){for(let r of e.files)this.formData.append(r.name,r)}removeFile(e){this.formData.delete(e.file.name)}get userName(){return this.authService.currentUser?this.authService.currentUser.userName:""}send(e){if(e)if(this.salesQuoteId){let e=this.emailQuotePopup;this.getQuotePDF(),this.modal=this.modalService.open(e,{size:"sm"})}else if(this.SalesOrderId){let e=this.emailQuotePopup;this.getSOPDF(),this.modal=this.modalService.open(e,{size:"sm"}),this.modal.result.then(()=>{console.log("When user closes")},()=>{console.log("Backdrop click")})}else this.triggerMail()}triggerMailSalesQuote(){this.formData=new FormData,null==this.cc&&(this.cc=""),null==this.bcc&&(this.bcc="");const e={WorkOrderPartNo:this.selectedPartNumber.workOrderPartNumberId,fromEmail:L.a.FROM_EMAIL_FOR_SENDING_MAIL,toEmail:this.toEmail,masterCompanyId:1,cc:this.cc,bcc:this.bcc,subject:this.subject,emailBody:this.emailBody,moduleId:this.moduleId,referenceId:this.referenceId,createdBy:this.userName,updatedBy:this.userName,createdDate:new Date,updatedDate:new Date,isActive:!0,isDeleted:!1,contactById:this.contactBy.employeeId,emailType:this.emailType,isCommunicationTab:!1};for(var r in e)this.formData.append(r,e[r]);this.isSpinnerVisible=!0,this.closeModal(),this.communicationService.saveAndUpdateEmailOfSalesQuote(this.formData).subscribe(e=>{this.isSpinnerVisible=!1,this.contactBy=null,this.emailType=null,this.cc="",this.bcc="",this.toEmail="",this.emailBody="",this.subject="",w("#addNewMemo").modal("hide"),this.getAllEmail(),this.closeModal(),this.fileUploadInput&&this.fileUploadInput.clear()},e=>{this.errorHandling(e)})}triggerMail(){1==this.isSubWorkOrder&&(this.moduleId=60);const e={WorkOrderPartNo:this.partNo,fromEmail:L.a.FROM_EMAIL_FOR_SENDING_MAIL,toEmail:this.toEmail,masterCompanyId:1,cc:this.cc,bcc:this.bcc,subject:this.subject,emailBody:this.emailBody,moduleId:this.moduleId,referenceId:this.referenceId,createdBy:this.userName,updatedBy:this.userName,createdDate:new Date,updatedDate:new Date,isActive:!0,isDeleted:!1,contactById:this.contactBy.employeeId,emailType:this.emailType,customerContactId:this.customerContact.contactId};for(var r in e)this.formData.append(r,e[r]);this.isSpinnerVisible=!0,w("#addNewMemo").modal("hide"),this.communicationService.saveAndUpdateEmail(this.formData).subscribe(e=>{this.isSpinnerVisible=!1,this.contactBy=null,this.emailType=null,this.cc="",this.bcc="",this.toEmail="",this.emailBody="",this.subject="",this.getAllEmail(),this.salesQuoteId&&this.closeModal()},e=>{this.isSpinnerVisible=!1,this.errorHandling(e)})}emailView(e){this.isSpinnerVisible=!0,this.communicationService.getEmailDataByEmailId(e.emailId).subscribe(e=>{this.isSpinnerVisible=!1,this.emailViewData=e,this.isView=!0},e=>{this.errorHandling(e),this.isSpinnerVisible=!1})}downloadFileUpload(e){const r=`${this.configurations.baseUrl}/api/FileUpload/downloadattachedfile?filePath=${e}`;window.location.assign(r)}getQuotePDF(){this.isSpinnerVisible=!0,this.communicationService.soqsendmailpdfpreview(this.salesQuoteId).subscribe(e=>{this.isSpinnerVisible=!1,this.pdfPath=e},e=>{this.errorHandling(e),this.isSpinnerVisible=!1})}getSOPDF(){this.isSpinnerVisible=!0,this.communicationService.sosendmailpdfpreview(this.SalesOrderId).subscribe(e=>{this.isSpinnerVisible=!1,this.pdfPath=e},e=>{this.errorHandling(e),this.isSpinnerVisible=!1})}getAllEmployees(){return n.a(this,void 0,void 0,(function*(){this.isSpinnerVisible=!0,yield this.commonService.smartDropDownList("Employee","EmployeeId","FirstName").subscribe(e=>{this.isSpinnerVisible=!1,this.employeesOriginalData=e.map(e=>Object.assign({},e,{employeeId:e.value,name:e.label}))},e=>{this.errorHandling(e),this.isSpinnerVisible=!1})}))}filterEmployee(e){if(this.employeeList=this.employeesOriginalData,void 0!==e.query&&null!==e.query){const r=[...this.employeesOriginalData.filter(r=>r.label.toLowerCase().includes(e.query.toLowerCase()))];this.employeeList=r}}filterCustomerContact(e){if(console.log("email",this.customerContactList),this.cusContactList=this.customerContactList,void 0!==e.query&&null!==e.query){const r=[...this.customerContactList.filter(r=>r.contactName.toLowerCase().includes(e.query.toLowerCase()))];this.cusContactList=r}}getAllEmail(){this.isSpinnerVisible=!0,this.communicationService.getEmailList(this.referenceId,this.moduleId,this.partNo).subscribe(e=>{this.isSpinnerVisible=!1,this.data=e},e=>{this.errorHandling(e),this.isSpinnerVisible=!1})}getAllEmailType(){this.isSpinnerVisible=!0,this.commonService.smartDropDownList("EmailType","EmailTypeId","Name").subscribe(e=>{this.isSpinnerVisible=!1,this.emailTypes=e},e=>{this.errorHandling(e),this.isSpinnerVisible=!1})}editEmail(e){this.toEmail=e.toEmail,this.cc=e.cc,this.bcc=e.bcc,this.subject=e.subject,this.emailBody=e.emailBody,this.contactBy=e.contactBy,this.emailType=e.emailType}getPageCount(e,r){return Math.ceil(e/r)}closeModal(){this.modal.close(),this.fileUploadInput&&this.fileUploadInput.clear()}contactSelected(e){this.toEmail=e.email}checkValidEmails(){let e=!1;var r=/^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/;if(this.cc||this.bcc){if(e=!0,this.cc){let e=this.cc.split(","),t=!1;if(e.forEach(e=>{r.test(e)||(t=!0)}),t)return!0}if(this.bcc){let e=this.bcc.split(","),t=!1;if(e.forEach(e=>{r.test(e)||(t=!0)}),t)return!0}e=!1}return e}errorHandling(e){e.error.errors?e.error.errors.forEach(e=>{this.alertService.showMessage(this.moduleName,e.message,k.d.error)}):this.alertService.showMessage(this.moduleName,"Saving data Failed due to some input error",k.d.error)}};Er.ctorParameters=()=>[{type:ve.b},{type:br.a},{type:Q.a},{type:u.a},{type:v.a},{type:ve.c},{type:vr.a},{type:k.b},{type:z.a}],n.b([Object(a.ViewChild)("fileUploadInput",{static:!1})],Er.prototype,"fileUploadInput",void 0),n.b([Object(a.Input)()],Er.prototype,"customerInfoFromSalesQuote",void 0),n.b([Object(a.Input)()],Er.prototype,"workOrderId",void 0),n.b([Object(a.Input)()],Er.prototype,"salesQuoteId",void 0),n.b([Object(a.Input)()],Er.prototype,"SalesOrderId",void 0),n.b([Object(a.Input)()],Er.prototype,"isViewFromWO",void 0),n.b([Object(a.Input)()],Er.prototype,"savedWorkOrderData",void 0),n.b([Object(a.Input)()],Er.prototype,"selectedPartNumber",void 0),n.b([Object(a.Input)()],Er.prototype,"customerContactList",void 0),n.b([Object(a.Input)()],Er.prototype,"subWorkOrderDetails",void 0),n.b([Object(a.Input)()],Er.prototype,"isSubWorkOrder",void 0),n.b([Object(a.Input)()],Er.prototype,"subWOPartNoId",void 0),n.b([Object(a.ViewChild)("emailQuotePopup",{static:!1})],Er.prototype,"emailQuotePopup",void 0),Er=n.b([Object(a.Component)({selector:"app-email",template:n.c(t("MCDi")).default,encapsulation:a.ViewEncapsulation.None,styles:[n.c(t("T6jA")).default]})],Er);let Rr=class{constructor(e,r,t,n,a,s){this.activeModal=e,this.communicationService=r,this.employeeService=t,this.commonService=n,this.alertService=a,this.authService=s,this.isView=!1,this.savedWorkOrderData=[],this.selectedPartNumber={},this.isSubWorkOrder=!1,this.phoneViewData={},this.isEdit=!1,this.pageSize=10,this.viewPageSize=10,this.pageIndex=0,this.viewPageIndex=0,this.totalRecords=0,this.viewTotalRecords=0,this.employees=[],this.employeeList=[],this.data=[],this.viewdata=[],this.headers=[{field:"phoneNo",header:"Phone",width:"100px"},{field:"contactBy",header:"Contacted By",width:"100px"},{field:"notes",header:"Notes",width:"200px"},{field:"createdDate",header:"Created Date",width:"130px"},{field:"createdBy",header:"Created By",width:"130px"}],this.selectedColumns=[{field:"phoneNo",header:"Phone",width:"100px"},{field:"contactBy",header:"Contacted By",width:"100px"},{field:"notesData",header:"Notes",width:"200px"},{field:"createdDate",header:"Created Date",width:"130px"},{field:"createdBy",header:"Created By",width:"130px"}],this.addList=[],this.moduleName="Communication",this.isSpinnerVisible=!1}ngOnInit(){1==this.isSubWorkOrder?(this.savedWorkOrderData=this.subWorkOrderDetails,this.workOrderId=this.subWorkOrderDetails.subWorkOrderId,this.moduleId=60,this.partNo=this.subWOPartNoId):(this.moduleId=38,this.partNo=this.selectedPartNumber.workOrderPartNumberId),this.getAllPhoneList(),this.getAllEmployees()}ngOnChanges(){}filterCustomerContact(e){if(this.cusContactList=this.customerContactList,void 0!==e.query&&null!==e.query&&""!==e.query){const r=[...this.customerContactList.filter(r=>r.name.toLowerCase().includes(e.query.toLowerCase()))];this.cusContactList=r}}contactSelected(e){this.addList[0].phoneNo=e.workPhone.trim()}edit(e,r){this.isEdit=!0,e.contactId==this.authService.currentEmployee.employeeId?e.contactId=this.authService.currentEmployee:e.contactId=Object(C.d)("employeeId",e.contactId,this.employees),this.addList=[Object.assign({},e)]}getAllPhoneList(){this.isSpinnerVisible=!0,this.communicationService.getPhoneList(this.workOrderId,this.moduleId,this.partNo).subscribe(e=>{e=e.map(e=>Object.assign({},e,{notesData:this.getString(e.notes)})),this.isSpinnerVisible=!1,this.data=e,this.totalRecords=e.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)},e=>{this.errorHandling(e),this.isSpinnerVisible=!1})}getString(e){var r=document.createElement("div");return r.innerHTML=e,r.textContent||r.innerText||""}dismissModel(){this.activeModal.close()}loadData(e){this.lazyLoadEventData=e;const r=parseInt(e.first)/e.rows;this.pageIndex=r,e.first=r,console.log(e)}addPhone(){this.addList=[],this.addList.push({phoneNo:"",contactId:this.authService.currentEmployee,notes:""}),this.customerContactList.forEach(e=>{e.isDefaultContact&&(this.customerContact=e,this.addList[0].phoneNo=e.workPhone.trim())})}savePhone(){if(this.isEdit){let e=this.formData(this.addList);this.isSpinnerVisible=!0,this.communicationService.updatePhone(e).subscribe(e=>{this.isSpinnerVisible=!1,this.getAllPhoneList(),this.isEdit=!1},e=>{this.isSpinnerVisible=!1,this.errorHandling(e)})}else{let e=this.formData(this.addList);this.isSpinnerVisible=!0,this.communicationService.savePhone(e).subscribe(e=>{this.isSpinnerVisible=!1,this.getAllPhoneList()},e=>{this.isSpinnerVisible=!1,this.errorHandling(e)})}this.addList=[]}formData(e){1==this.isSubWorkOrder?this.moduleId=60:this.moduleId=38;let r={PhoneNo:e[0].phoneNo,Notes:e[0].notes,ContactById:this.getEmpId(e[0].contactId),WorkOrderPartNo:this.partNo,customerContactId:this.customerContact.contactId,ModuleId:this.moduleId,ReferenceId:this.workOrderId,MasterCompanyId:1,CreatedBy:"admin",UpdatedBy:"admin",CreatedDate:"2019-12-31T04:30:28.21",UpdatedDate:"2019-12-31T04:30:28.21",IsActive:!0,IsDeleted:!1};return this.isEdit&&(r.communicationPhoneId=e[0].communicationPhoneId),[r]}getPhoneData(e){this.communicationService.getPhoneData(this.workOrderId,this.partNo,this.moduleId,e.phoneNo).subscribe(e=>{this.viewdata=e,this.viewTotalRecords=e.length,this.viewTotalPages=Math.ceil(this.totalRecords/this.pageSize)},e=>{this.errorHandling(e)})}getEmpId(e){return e.employeeId?e.employeeId:null}getAllEmployees(){this.commonService.smartDropDownList("Employee","EmployeeId","FirstName").subscribe(e=>{console.log("REs",e),this.employees=e.map(e=>Object.assign({},e,{employeeId:e.value,name:e.label}))},e=>{this.errorHandling(e)})}showDeletePhoneConfirmation(e){this.deletingRecord=e,w("#deleteRowConfirmation").modal("show")}deletePhone(e){this.isSpinnerVisible=!0,this.communicationService.deletePhoneList(e.communicationPhoneId).subscribe(e=>{this.isSpinnerVisible=!1,this.alertService.showMessage(this.moduleName,"Deleted Succesfully",k.d.success),this.getAllPhoneList()},e=>{this.errorHandling(e),this.isSpinnerVisible=!1})}getPageCount(e,r){return Math.ceil(e/r)}pageIndexChange(e){this.pageSize=e.rows}viewPageIndexChange(e){this.viewPageSize=e.rows}filterEmployee(e){if(this.employeeList=this.employees,void 0!==e.query&&null!==e.query){const r=[...this.employees.filter(r=>r.label.toLowerCase().includes(e.query.toLowerCase()))];this.employeeList=r}}phoneView(e){this.phoneViewData=e,this.getPhoneData(e)}errorHandling(e){e.error.errors?e.error.errors.forEach(e=>{this.alertService.showMessage(this.moduleName,e.message,k.d.error)}):this.alertService.showMessage(this.moduleName,"Saving data Failed due to some input error",k.d.error)}};Rr.ctorParameters=()=>[{type:ve.b},{type:br.a},{type:Q.a},{type:u.a},{type:k.b},{type:v.a}],n.b([Object(a.Input)()],Rr.prototype,"workOrderId",void 0),n.b([Object(a.Input)()],Rr.prototype,"isView",void 0),n.b([Object(a.Input)()],Rr.prototype,"savedWorkOrderData",void 0),n.b([Object(a.Input)()],Rr.prototype,"selectedPartNumber",void 0),n.b([Object(a.Input)()],Rr.prototype,"customerContactList",void 0),n.b([Object(a.Input)()],Rr.prototype,"subWorkOrderDetails",void 0),n.b([Object(a.Input)()],Rr.prototype,"isSubWorkOrder",void 0),n.b([Object(a.Input)()],Rr.prototype,"subWOPartNoId",void 0),Rr=n.b([Object(a.Component)({selector:"app-phone",template:n.c(t("buFw")).default,styles:[n.c(t("PMZK")).default]})],Rr);let Br=class{constructor(e,r,t,n,a,s){this.activeModal=e,this.communicationService=r,this.employeeService=t,this.commonService=n,this.alertService=a,this.authService=s,this.isView=!1,this.savedWorkOrderData=[],this.selectedPartNumber={},this.isSubWorkOrder=!1,this.pageSize=10,this.pageIndex=0,this.totalRecords=0,this.employees=[],this.employeeList=[],this.data=[],this.headers=[{field:"mobile",header:"Mobile"},{field:"contactBy",header:"Contacted By"},{field:"notes",header:"Notes"}],this.selectedColumns=[{field:"mobile",header:"Mobile"},{field:"contactBy",header:"Contacted By"},{field:"notesData",header:"Notes"}],this.addList=[],this.moduleName="Communication",this.viewdata=[],this.viewPageSize=10,this.viewPageIndex=0,this.viewTotalRecords=0,this.isSpinnerVisible=!1}ngOnInit(){1==this.isSubWorkOrder?(this.referenceId=this.subWorkOrderDetails.subWorkOrderId?this.subWorkOrderDetails.subWorkOrderId:this.workOrderId,this.moduleId=60,this.partNo=this.subWOPartNoId):(this.moduleId=38,this.partNo=this.selectedPartNumber.workOrderPartNumberId,this.referenceId=this.workOrderId),this.getAllEmployees(),this.getAllTextList()}ngOnChanges(){}dismissModel(){this.activeModal.close()}loadData(e){this.lazyLoadEventData=e;const r=parseInt(e.first)/e.rows;this.pageIndex=r,this.pageSize=e.rows,e.first=r,console.log(e)}addText(){console.log("current EMployeee",this.authService.currentEmployee),this.addList=[],this.addList.push({mobile:"",contactId:this.authService.currentEmployee,notes:""})}edit(e,r){this.isEdit=!0,e.contactId==this.authService.currentEmployee.employeeId?e.contactId=this.authService.currentEmployee:e.contactId=Object(C.d)("employeeId",e.contactId,this.employees),this.addList=[Object.assign({},e)]}savePhone(){if(this.isEdit){let e=this.formData(this.addList);this.isSpinnerVisible=!0,this.communicationService.updateText(e).subscribe(e=>{this.isSpinnerVisible=!1,this.getAllTextList(),this.isEdit=!1},e=>{this.isSpinnerVisible=!1,this.errorHandling(e)})}else{let e=this.formData(this.addList);this.isSpinnerVisible=!0,this.communicationService.saveText(e).subscribe(e=>{this.isSpinnerVisible=!1,this.getAllTextList()},e=>{this.isSpinnerVisible=!1,this.errorHandling(e)})}this.addList=[]}formData(e){return 1==this.isSubWorkOrder?this.moduleId=60:this.moduleId=38,e.map(e=>{let r={Mobile:e.mobile,Notes:e.notes,ContactById:this.getEmpId(e.contactId),WorkOrderPartNo:this.partNo,ModuleId:this.moduleId,ReferenceId:this.referenceId,MasterCompanyId:1,CreatedBy:"admin",UpdatedBy:"admin",CreatedDate:"2019-12-31T04:30:28.21",UpdatedDate:"2019-12-31T04:30:28.21",IsActive:!0,IsDeleted:!1};return this.isEdit&&(r.communicationTextId=e.communicationTextId),r})}getEmpId(e){return e.employeeId?e.employeeId:null}getAllEmployees(){this.isSpinnerVisible=!0,this.commonService.smartDropDownList("Employee","EmployeeId","FirstName").subscribe(e=>{this.isSpinnerVisible=!1,this.employees=e.map(e=>Object.assign({},e,{employeeId:e.value,name:e.label}))},e=>{this.errorHandling(e),this.isSpinnerVisible=!1})}getAllTextList(){this.isSpinnerVisible=!0,this.communicationService.getTextList(this.referenceId,this.moduleId,this.partNo).subscribe(e=>{e=e.map(e=>Object.assign({},e,{notesData:this.getString(e.notes)})),this.isSpinnerVisible=!1,this.data=e,this.totalRecords=e.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)},e=>{this.errorHandling(e),this.isSpinnerVisible=!1})}getString(e){var r=document.createElement("div");return r.innerHTML=e,r.textContent||r.innerText||""}deleteText(e){this.isSpinnerVisible=!0,this.communicationService.deleteTextList(e.communicationTextId).subscribe(e=>{this.isSpinnerVisible=!1,this.alertService.showMessage(this.moduleName,"Deleted Succesfully",k.d.success),this.getAllTextList()},e=>{this.errorHandling(e),this.isSpinnerVisible=!1})}pageIndexChange(e){this.pageSize=e.rows}getPageCount(e,r){return Math.ceil(e/r)}filterEmployee(e){if(this.employeeList=this.employees,void 0!==e.query&&null!==e.query){const r=[...this.employees.filter(r=>r.label.toLowerCase().includes(e.query.toLowerCase()))];this.employeeList=r}}errorHandling(e){e.error.errors?e.error.errors.forEach(e=>{this.alertService.showMessage(this.moduleName,e.message,k.d.error)}):this.alertService.showMessage(this.moduleName,"Saving data Failed due to some input error",k.d.error)}viewPageIndexChange(e){this.viewPageSize=e.rows}getViewData(e){this.isSpinnerVisible=!0,this.communicationService.getTextData(this.referenceId,this.partNo,this.moduleId,e.mobile).subscribe(e=>{this.isSpinnerVisible=!1,this.viewdata=e,this.viewTotalRecords=e.length,this.viewTotalPages=Math.ceil(this.totalRecords/this.pageSize)},e=>{this.errorHandling(e),this.isSpinnerVisible=!1})}};Br.ctorParameters=()=>[{type:ve.b},{type:br.a},{type:Q.a},{type:u.a},{type:k.b},{type:v.a}],n.b([Object(a.Input)()],Br.prototype,"workOrderId",void 0),n.b([Object(a.Input)()],Br.prototype,"isView",void 0),n.b([Object(a.Input)()],Br.prototype,"savedWorkOrderData",void 0),n.b([Object(a.Input)()],Br.prototype,"selectedPartNumber",void 0),n.b([Object(a.Input)()],Br.prototype,"customerContactList",void 0),n.b([Object(a.Input)()],Br.prototype,"subWorkOrderDetails",void 0),n.b([Object(a.Input)()],Br.prototype,"isSubWorkOrder",void 0),n.b([Object(a.Input)()],Br.prototype,"subWOPartNoId",void 0),Br=n.b([Object(a.Component)({selector:"app-text",template:n.c(t("/Z8S")).default,styles:[n.c(t("DGVF")).default]})],Br);var Vr=t("dmMT");let qr=class{transform(e){const r=Math.floor(e/60);return("00"+r).slice(-2)+":"+("00"+Math.floor(e-60*r)).slice(-2)}};qr=n.b([Object(a.Pipe)({name:"formatTime"})],qr);var Hr=t("ldMm");t.d(r,"WorkOrderPagesModule",(function(){return Qr}));let Qr=class{};Qr=n.b([Object(a.NgModule)({imports:[s.FormsModule,s.ReactiveFormsModule,i.CommonModule,pr.a,de,Ye.TableModule,Ke.ButtonModule,Je.SelectButtonModule,Ze.InputTextModule,Xe.MultiSelectModule,er.AutoCompleteModule,tr.WorkFlowPagesModule,nr.CalendarModule,ar.DropdownModule,sr.CheckboxModule,ir.RadioButtonModule,or.InputSwitchModule,cr.TooltipModule,ur.TabViewModule,mr.AccordionModule,kr.AssetmanagementModule,tr.WorkFlowPagesModule,Or.a,Pr.FileUploadModule,ce.a,pe.EditorModule,Hr.TreeTableModule],declarations:[l,fe,ye,Ie,Oe,De,fr,yr,xe,xe,Te,Me,Pe,Ne,We,Ae,T,W,Ee,E,B,re,_e,Ge,ae,se,ie,oe,qr,Re,Be,$e,ze,lr,dr,Z,hr,Ir,ne,xr,Sr,Tr,Mr,Wr,Fr,Ar,Er,Rr,Br,gr,Ve,qe,He,Qe,je,Ue],entryComponents:[],providers:[h.a,p.a,rr.a,G,_,u.a,c.a,Dr.a,br.a,J.a,Vr.a,vr.a,wr.a],exports:[ne,Er]})],Qr)},"3OoJ":function(e,r,t){"use strict";t.r(r),r.default='label {\n  text-align: left;\n  width: 140px;\n  margin-right: 0;\n  font-weight: normal;\n}\n\ninput[type=text],\ninput[type=number],\nselect,\ntextarea {\n  height: 100px;\n  border-radius: 5px !important;\n}\n\n.form-control[readonly] {\n  background-color: #e9ecef !important;\n}\n\n.pad_workflo th, .pad_workflo td {\n  padding: 4px !important;\n}\n\n.list_caps {\n  background: #f1f1f1;\n  margin-top: 10px;\n  padding: 10px;\n  margin-bottom: 10px;\n}\n\n.set_align {\n  padding: 6px 12px !important;\n  margin-left: 9px;\n  margin-bottom: 10px;\n}\n\n@media (min-width: 768px) {\n  .col-md-6 .col-md-6 {\n    max-width: 44%;\n    margin-right: 15px;\n  }\n\n  .col-md-3 {\n    max-width: 22%;\n    margin-right: 15px;\n  }\n\n  .col-md-6-cstm {\n    max-width: 45%;\n    margin-right: 20px;\n    padding-right: 0;\n  }\n}\n\n.p-radiobutton-label-horizontal .ui-radiobutton-label {\n  color: white;\n}\n\nselect:disabled {\n  background-color: #e9ecef !important;\n}\n\n.select-read-only {\n  border: none;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  text-indent: 1px;\n  text-overflow: "";\n  box-shadow: none !important;\n}\n\n.matlist-table {\n  background-color: #fff !important;\n}\n\n.matlist-table thead tr th {\n  min-width: 50px;\n  padding: 4px !important;\n}\n\nbody .ui-radiobutton .ui-radiobutton-box {\n  border: 3px solid #ffffff;\n}\n\n.ui-radiobutton .ui-radiobutton-box.ui-state-active .ui-radiobutton-icon {\n  background-color: #212121 !important;\n}\n\n.text-area-cstm {\n  height: 90px !important;\n}\n\n.footer {\n  background-color: #eaf2fd;\n}\n\n.table-header-col1 {\n  border-top: 1px solid #fff !important;\n  border-bottom: 1px solid #fff !important;\n  border-left: 1px solid #fff !important;\n}\n\n.table select.select-read-only {\n  background-color: #ffffff !important;\n}\n\ntable thead tr th {\n  text-align: center;\n}\n\n.text-align-right {\n  text-align: right;\n}\n\n.p-radiobutton-label-horizontal .ui-radiobutton-label {\n  width: unset !important;\n}\n\n.ui-radiobutton-label {\n  margin-right: 10px;\n}\n\n.approver-limit-exceeded td {\n  background-color: #d01313;\n}\n\n.approver-limit-exceeded td label {\n  color: white;\n}'},"3tlT":function(e,r,t){"use strict";t.r(r),r.default=""},"517n":function(e,r,t){"use strict";t.r(r),r.default='<div [@fadeInOut] class="page-content">\r\n    <div class="right_col" role="main">\r\n        <div class="col-md-12">\r\n            <div class="x_panel" style="">\r\n                <div class="x_content">\r\n                    <nav aria-label="breadcrumb">\r\n                        <ol class="breadcrumb">\r\n                            <li class="breadcrumb-item"><a routerLink="/">Dashboard</a></li>\r\n                            <li class="breadcrumb-item"><a routerLink="/">WO Setup</a></li>\r\n                            <li class="breadcrumb-item active" aria-current="page">Add Labor Hours</li>\r\n                        </ol>\r\n                    </nav>\r\n                    <div class="pheading">\r\n                        <h4 class="page-heading clr-green">WO Setup - Add Labor Hours</h4>\r\n                    </div>\r\n                    <div class="cdetails-top">\r\n                        <div class="col-sm-12">\r\n                            <label>Company</label>\r\n                            <span>Silverxis</span>\r\n                        </div>\r\n                        <div class="col-sm-12">\r\n                            <label>BU</label>\r\n                            <span>Adso</span>\r\n                        </div>\r\n                        <div class="col-sm-12">\r\n                            <label>Division</label>\r\n                            <span>Development</span>\r\n                        </div>\r\n                        <div class="col-sm-12">\r\n                            <label>Dept</label>\r\n                            <span>Java</span>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div class="clear"></div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class="col-md-12 col-sm-12 col-12 po-ro-setup labor-hrs">\r\n            <div class="x_panel">\r\n                <div class="x_content labor-hrs">\r\n                    <form id="" class="form-horizontal ro-grid-form mtop10" name="" action="#" method="post" onsubmit="return false;">\r\n                        <div class="col-sm-3">\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">WO ID</label>\r\n                                <div class="col-sm-7">\r\n                                    <div class="inner-addon right-addon inline-block">\r\n                                        <i class="fa fa-search"></i>\r\n                                        <input type="text" class="form-control numberids" value="123456">\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">Employee</label>\r\n                                <div class="col-sm-7">\r\n                                    <div class="inner-addon right-addon inline-block">\r\n                                        <i class="fa fa-search"></i>\r\n                                        <input type="text" class="form-control names" value="Roger">\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">Expertise</label>\r\n                                <div class="col-sm-7">\r\n                                    <select>\r\n                                        <option value="">Select Expertise</option>\r\n                                        <option value="Technician">Technician</option>\r\n                                        <option value="Quality">Quality</option>\r\n                                        <option value="Mechanic">Mechanic</option>\r\n                                        <option value="Inspector">Inspector</option>\r\n                                        <option value="Receiver">Receiver</option>\r\n                                        <option value="Auditor">Auditor</option>\r\n                                        <option value="Engineer">Engineer</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div class="col-sm-7">\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">Actions completed by ONE Tech/Mech</label>\r\n                                <div class="col-sm-7">\r\n                                    <input type="checkbox" class="form-control">\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">Assign hours by specific Actions</label>\r\n                                <div class="col-sm-7">\r\n                                    <input type="checkbox" class="form-control">\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">Assign Total Hours to Work Order</label>\r\n                                <div class="col-sm-7">\r\n                                    <input type="checkbox" class="form-control">\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n\r\n                        </div>\r\n                        <div class="clear"></div>\r\n\r\n\r\n                    </form>\r\n                    <div class="table-responsive">\r\n                        <div class="clear mtop5"></div>\r\n                        <table class="table table-bordered table-striped po-ro-setup-table">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Actions</th>\r\n                                    <th>Employee</th>\r\n                                    <th>Expertise</th>\r\n                                    <th>Billable /NonBillable</th>\r\n                                    <th>Start</th>\r\n                                    <th>Start Date and Time</th>\r\n                                    <th>Stop</th>\r\n                                    <th>End Date and Time</th>\r\n                                    <th>Hours/Mins</th>\r\n                                    <th>Adjustments</th>\r\n                                    <th>Adjusted Hours</th>\r\n                                    <th>Hours</th>\r\n                                    <th>Select Tech/Mech</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>Total Hours - ALL Actions</td>\r\n                                    <td>\r\n                                        <div class="inner-addon right-addon inline-block">\r\n                                            <i class="fa fa-search"></i>\r\n                                            <input type="text" class="form-control names" value="Roger">\r\n                                        </div>\r\n                                    </td>\r\n                                    <td>\r\n                                        <select>\r\n                                            <option value="">Select Expertise</option>\r\n                                            <option value="Technician">Technician</option>\r\n                                            <option value="Quality">Quality</option>\r\n                                            <option value="Mechanic">Mechanic</option>\r\n                                            <option value="Inspector">Inspector</option>\r\n                                            <option value="Receiver">Receiver</option>\r\n                                            <option value="Auditor">Auditor</option>\r\n                                            <option value="Engineer">Engineer</option>\r\n                                        </select>\r\n                                    </td>\r\n                                    <td>Bill123</td>\r\n                                    <td><input type="checkbox" class="start-date-checkbox" /></td>\r\n                                    <td><span class="start-date">26/03/2018 10:00</span></td>\r\n                                    <td><input type="checkbox" class="end-date-checkbox" /></td>\r\n                                    <td><span class="end-date">26/03/2018 10:30</span></td>\r\n                                    <td>20</td>\r\n                                    <td><input type="number" class="form-control w50" /></td>\r\n                                    <td>20</td>\r\n                                    <td> - </td>\r\n                                    <td>\r\n                                        <div class="inner-addon right-addon inline-block">\r\n                                            <i class="fa fa-search"></i>\r\n                                            <input type="text" class="form-control names" value="Roger">\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Receive</td>\r\n                                    <td>\r\n                                        <div class="inner-addon right-addon inline-block">\r\n                                            <i class="fa fa-search"></i>\r\n                                            <input type="text" class="form-control names" value="Roger">\r\n                                        </div>\r\n                                    </td>\r\n                                    <td>\r\n                                        <select>\r\n                                            <option value="">Select Expertise</option>\r\n                                            <option value="Technician">Technician</option>\r\n                                            <option value="Quality">Quality</option>\r\n                                            <option value="Mechanic">Mechanic</option>\r\n                                            <option value="Inspector">Inspector</option>\r\n                                            <option value="Receiver">Receiver</option>\r\n                                            <option value="Auditor">Auditor</option>\r\n                                            <option value="Engineer">Engineer</option>\r\n                                        </select>\r\n                                    </td>\r\n                                    <td>Bill485</td>\r\n                                    <td><input type="checkbox" class="start-date-checkbox" /></td>\r\n                                    <td><span class="start-date">26/03/2018 10:00</span></td>\r\n                                    <td><input type="checkbox" class="end-date-checkbox" /></td>\r\n                                    <td><span class="end-date">26/03/2018 10:30</span></td>\r\n                                    <td>20</td>\r\n                                    <td><input type="number" class="form-control w50" /></td>\r\n                                    <td>20</td>\r\n                                    <td> - </td>\r\n                                    <td>\r\n                                        <div class="inner-addon right-addon inline-block">\r\n                                            <i class="fa fa-search"></i>\r\n                                            <input type="text" class="form-control names" value="Roger">\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Inspect</td>\r\n                                    <td>\r\n                                        <div class="inner-addon right-addon inline-block">\r\n                                            <i class="fa fa-search"></i>\r\n                                            <input type="text" class="form-control names" value="Roger">\r\n                                        </div>\r\n                                    </td>\r\n                                    <td>\r\n                                        <select>\r\n                                            <option value="">Select Expertise</option>\r\n                                            <option value="Technician">Technician</option>\r\n                                            <option value="Quality">Quality</option>\r\n                                            <option value="Mechanic">Mechanic</option>\r\n                                            <option value="Inspector">Inspector</option>\r\n                                            <option value="Receiver">Receiver</option>\r\n                                            <option value="Auditor">Auditor</option>\r\n                                            <option value="Engineer">Engineer</option>\r\n                                        </select>\r\n                                    </td>\r\n                                    <td>Bill856</td>\r\n                                    <td><input type="checkbox" class="start-date-checkbox" /></td>\r\n                                    <td><span class="start-date">26/03/2018 10:00</span></td>\r\n                                    <td><input type="checkbox" class="end-date-checkbox" /></td>\r\n                                    <td><span class="end-date">26/03/2018 10:30</span></td>\r\n                                    <td>20</td>\r\n                                    <td><input type="number" class="form-control w50" /></td>\r\n                                    <td>20</td>\r\n                                    <td> - </td>\r\n                                    <td>\r\n                                        <div class="inner-addon right-addon inline-block">\r\n                                            <i class="fa fa-search"></i>\r\n                                            <input type="text" class="form-control names" value="Roger">\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Evaluate</td>\r\n                                    <td>\r\n                                        <div class="inner-addon right-addon inline-block">\r\n                                            <i class="fa fa-search"></i>\r\n                                            <input type="text" class="form-control names" value="Roger">\r\n                                        </div>\r\n                                    </td>\r\n                                    <td>\r\n                                        <select>\r\n                                            <option value="">Select Expertise</option>\r\n                                            <option value="Technician">Technician</option>\r\n                                            <option value="Quality">Quality</option>\r\n                                            <option value="Mechanic">Mechanic</option>\r\n                                            <option value="Inspector">Inspector</option>\r\n                                            <option value="Receiver">Receiver</option>\r\n                                            <option value="Auditor">Auditor</option>\r\n                                            <option value="Engineer">Engineer</option>\r\n                                        </select>\r\n                                    </td>\r\n                                    <td>Bill860</td>\r\n                                    <td><input type="checkbox" class="start-date-checkbox" /></td>\r\n                                    <td><span class="start-date">26/03/2018 10:00</span></td>\r\n                                    <td><input type="checkbox" class="end-date-checkbox" /></td>\r\n                                    <td><span class="end-date">26/03/2018 10:30</span></td>\r\n                                    <td>20</td>\r\n                                    <td><input type="number" class="form-control w50" /></td>\r\n                                    <td>20</td>\r\n                                    <td> - </td>\r\n                                    <td>\r\n                                        <div class="inner-addon right-addon inline-block">\r\n                                            <i class="fa fa-search"></i>\r\n                                            <input type="text" class="form-control names" value="Roger">\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Teardown</td>\r\n                                    <td>\r\n                                        <div class="inner-addon right-addon inline-block">\r\n                                            <i class="fa fa-search"></i>\r\n                                            <input type="text" class="form-control names" value="Roger">\r\n                                        </div>\r\n                                    </td>\r\n                                    <td>\r\n                                        <select>\r\n                                            <option value="">Select Expertise</option>\r\n                                            <option value="Technician">Technician</option>\r\n                                            <option value="Quality">Quality</option>\r\n                                            <option value="Mechanic">Mechanic</option>\r\n                                            <option value="Inspector">Inspector</option>\r\n                                            <option value="Receiver">Receiver</option>\r\n                                            <option value="Auditor">Auditor</option>\r\n                                            <option value="Engineer">Engineer</option>\r\n                                        </select>\r\n                                    </td>\r\n                                    <td>Bill002</td>\r\n                                    <td><input type="checkbox" class="start-date-checkbox" /></td>\r\n                                    <td><span class="start-date">26/03/2018 10:00</span></td>\r\n                                    <td><input type="checkbox" class="end-date-checkbox" /></td>\r\n                                    <td><span class="end-date">26/03/2018 10:30</span></td>\r\n                                    <td>20</td>\r\n                                    <td><input type="number" class="form-control w50" /></td>\r\n                                    <td>20</td>\r\n                                    <td> - </td>\r\n                                    <td>\r\n                                        <div class="inner-addon right-addon inline-block">\r\n                                            <i class="fa fa-search"></i>\r\n                                            <input type="text" class="form-control names" value="Roger">\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Disassemble</td>\r\n                                    <td>\r\n                                        <div class="inner-addon right-addon inline-block">\r\n                                            <i class="fa fa-search"></i>\r\n                                            <input type="text" class="form-control names" value="Roger">\r\n                                        </div>\r\n                                    </td>\r\n                                    <td>\r\n                                        <select>\r\n                                            <option value="">Select Expertise</option>\r\n                                            <option value="Technician">Technician</option>\r\n                                            <option value="Quality">Quality</option>\r\n                                            <option value="Mechanic">Mechanic</option>\r\n                                            <option value="Inspector">Inspector</option>\r\n                                            <option value="Receiver">Receiver</option>\r\n                                            <option value="Auditor">Auditor</option>\r\n                                            <option value="Engineer">Engineer</option>\r\n                                        </select>\r\n                                    </td>\r\n                                    <td>Bill112</td>\r\n                                    <td><input type="checkbox" class="start-date-checkbox" /></td>\r\n                                    <td><span class="start-date">26/03/2018 10:00</span></td>\r\n                                    <td><input type="checkbox" class="end-date-checkbox" /></td>\r\n                                    <td><span class="end-date">26/03/2018 10:30</span></td>\r\n                                    <td>20</td>\r\n                                    <td><input type="number" class="form-control w50" /></td>\r\n                                    <td>20</td>\r\n                                    <td> - </td>\r\n                                    <td>\r\n                                        <div class="inner-addon right-addon inline-block">\r\n                                            <i class="fa fa-search"></i>\r\n                                            <input type="text" class="form-control names" value="Roger">\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Assemble</td>\r\n                                    <td>\r\n                                        <div class="inner-addon right-addon inline-block">\r\n                                            <i class="fa fa-search"></i>\r\n                                            <input type="text" class="form-control names" value="Roger">\r\n                                        </div>\r\n                                    </td>\r\n                                    <td>\r\n                                        <select>\r\n                                            <option value="">Select Expertise</option>\r\n                                            <option value="Technician">Technician</option>\r\n                                            <option value="Quality">Quality</option>\r\n                                            <option value="Mechanic">Mechanic</option>\r\n                                            <option value="Inspector">Inspector</option>\r\n                                            <option value="Receiver">Receiver</option>\r\n                                            <option value="Auditor">Auditor</option>\r\n                                            <option value="Engineer">Engineer</option>\r\n                                        </select>\r\n                                    </td>\r\n                                    <td>Bill325</td>\r\n                                    <td><input type="checkbox" class="start-date-checkbox" /></td>\r\n                                    <td><span class="start-date">26/03/2018 10:00</span></td>\r\n                                    <td><input type="checkbox" class="end-date-checkbox" /></td>\r\n                                    <td><span class="end-date">26/03/2018 10:30</span></td>\r\n                                    <td>20</td>\r\n                                    <td><input type="number" class="form-control w50" /></td>\r\n                                    <td>20</td>\r\n                                    <td> - </td>\r\n                                    <td>\r\n                                        <div class="inner-addon right-addon inline-block">\r\n                                            <i class="fa fa-search"></i>\r\n                                            <input type="text" class="form-control names" value="Roger">\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Testing</td>\r\n                                    <td>\r\n                                        <div class="inner-addon right-addon inline-block">\r\n                                            <i class="fa fa-search"></i>\r\n                                            <input type="text" class="form-control names w100" value="Roger">\r\n                                        </div>\r\n                                    </td>\r\n                                    <td>\r\n                                        <select>\r\n                                            <option value="">Select Expertise</option>\r\n                                            <option value="Technician">Technician</option>\r\n                                            <option value="Quality">Quality</option>\r\n                                            <option value="Mechanic">Mechanic</option>\r\n                                            <option value="Inspector">Inspector</option>\r\n                                            <option value="Receiver">Receiver</option>\r\n                                            <option value="Auditor">Auditor</option>\r\n                                            <option value="Engineer">Engineer</option>\r\n                                        </select>\r\n                                    </td>\r\n                                    <td>Bill184</td>\r\n                                    <td><input type="checkbox" class="start-date-checkbox" /></td>\r\n                                    <td><span class="start-date">26/03/2018 10:00</span></td>\r\n                                    <td><input type="checkbox" class="end-date-checkbox" /></td>\r\n                                    <td><span class="end-date">26/03/2018 10:30</span></td>\r\n                                    <td>20</td>\r\n                                    <td><input type="number" class="form-control w50" /></td>\r\n                                    <td>20</td>\r\n                                    <td> - </td>\r\n                                    <td>\r\n                                        <div class="inner-addon right-addon inline-block">\r\n                                            <i class="fa fa-search"></i>\r\n                                            <input type="text" class="form-control names" value="Roger">\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>QC</td>\r\n                                    <td>\r\n                                        <div class="inner-addon right-addon inline-block">\r\n                                            <i class="fa fa-search"></i>\r\n                                            <input type="text" class="form-control names" value="Roger">\r\n                                        </div>\r\n                                    </td>\r\n                                    <td>\r\n                                        <select>\r\n                                            <option value="">Select Expertise</option>\r\n                                            <option value="Technician">Technician</option>\r\n                                            <option value="Quality">Quality</option>\r\n                                            <option value="Mechanic">Mechanic</option>\r\n                                            <option value="Inspector">Inspector</option>\r\n                                            <option value="Receiver">Receiver</option>\r\n                                            <option value="Auditor">Auditor</option>\r\n                                            <option value="Engineer">Engineer</option>\r\n                                        </select>\r\n                                    </td>\r\n                                    <td>Bill788</td>\r\n                                    <td><input type="checkbox" class="start-date-checkbox" /></td>\r\n                                    <td><span class="start-date">26/03/2018 10:00</span></td>\r\n                                    <td><input type="checkbox" class="end-date-checkbox" /></td>\r\n                                    <td><span class="end-date">26/03/2018 10:30</span></td>\r\n                                    <td>20</td>\r\n                                    <td><input type="number" class="form-control w50" /></td>\r\n                                    <td>20</td>\r\n                                    <td> - </td>\r\n                                    <td>\r\n                                        <div class="inner-addon right-addon inline-block">\r\n                                            <i class="fa fa-search"></i>\r\n                                            <input type="text" class="form-control names" value="Roger">\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Ship</td>\r\n                                    <td>\r\n                                        <div class="inner-addon right-addon inline-block">\r\n                                            <i class="fa fa-search"></i>\r\n                                            <input type="text" class="form-control names" value="Roger">\r\n                                        </div>\r\n                                    </td>\r\n                                    <td>\r\n                                        <select>\r\n                                            <option value="">Select Expertise</option>\r\n                                            <option value="Technician">Technician</option>\r\n                                            <option value="Quality">Quality</option>\r\n                                            <option value="Mechanic">Mechanic</option>\r\n                                            <option value="Inspector">Inspector</option>\r\n                                            <option value="Receiver">Receiver</option>\r\n                                            <option value="Auditor">Auditor</option>\r\n                                            <option value="Engineer">Engineer</option>\r\n                                        </select>\r\n                                    </td>\r\n                                    <td>Bill302</td>\r\n                                    <td><input type="checkbox" class="start-date-checkbox" /></td>\r\n                                    <td><span class="start-date">26/03/2018 10:00</span></td>\r\n                                    <td><input type="checkbox" class="end-date-checkbox" /></td>\r\n                                    <td><span class="end-date">26/03/2018 10:30</span></td>\r\n                                    <td>20</td>\r\n                                    <td><input type="number" class="form-control w50" /></td>\r\n                                    <td>20</td>\r\n                                    <td> - </td>\r\n                                    <td>\r\n                                        <div class="inner-addon right-addon inline-block">\r\n                                            <i class="fa fa-search"></i>\r\n                                            <input type="text" class="form-control names" value="Roger">\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Clean</td>\r\n                                    <td>\r\n                                        <div class="inner-addon right-addon inline-block">\r\n                                            <i class="fa fa-search"></i>\r\n                                            <input type="text" class="form-control names" value="Roger">\r\n                                        </div>\r\n                                    </td>\r\n                                    <td>\r\n                                        <select>\r\n                                            <option value="">Select Expertise</option>\r\n                                            <option value="Technician">Technician</option>\r\n                                            <option value="Quality">Quality</option>\r\n                                            <option value="Mechanic">Mechanic</option>\r\n                                            <option value="Inspector">Inspector</option>\r\n                                            <option value="Receiver">Receiver</option>\r\n                                            <option value="Auditor">Auditor</option>\r\n                                            <option value="Engineer">Engineer</option>\r\n                                        </select>\r\n                                    </td>\r\n                                    <td>Bill956</td>\r\n                                    <td><input type="checkbox" class="start-date-checkbox" /></td>\r\n                                    <td><span class="start-date">26/03/2018 10:00</span></td>\r\n                                    <td><input type="checkbox" class="end-date-checkbox" /></td>\r\n                                    <td><span class="end-date">26/03/2018 10:30</span></td>\r\n                                    <td>20</td>\r\n                                    <td><input type="number" class="form-control w50" /></td>\r\n                                    <td>20</td>\r\n                                    <td> - </td>\r\n                                    <td>\r\n                                        <div class="inner-addon right-addon inline-block">\r\n                                            <i class="fa fa-search"></i>\r\n                                            <input type="text" class="form-control names" value="Roger">\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                <div class="clear"></div>\r\n                <br />\r\n                <a class="btn btn-info">Submit</a>\r\n\r\n\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>'},"542D":function(e,r,t){"use strict";t.r(r),r.default='<div *ngIf="!isView && !isQuote">\r\n  <button data-target="#addNewCharges" data-toggle="modal" (click)="createNew()" class="btn btn-primary">\r\n    Add Charges\r\n  </button>\r\n</div>\r\n\r\n<div id="addNewCharges" class="modal fade" role="dialog" data-backdrop="static" *ngIf="!view">\r\n  <div class="modal-dialog modal-xl">\r\n    \x3c!-- Modal content--\x3e\r\n    <div class="modal-content">\r\n      <div class="modal-header">\r\n        <button type="button" class="close" data-dismiss="modal" (click)="closeAddNew()">\r\n          &times;\r\n        </button>\r\n        <h4 class="modal-title"> {{isEdit ? \'Edit\' : \'Add\'}} Charges</h4>\r\n      </div>\r\n      <div class="modal-body">\r\n        \x3c!-- && addNewCharges --\x3e\r\n        <div *ngIf="!isEdit ">\r\n          <grd-charges [workFlow]="workFlowObject" [isWorkOrder]="isWorkOrder" [isQuote]="isQuote"\r\n            [markupList]="markupList" [taskList]="taskList" (saveChargesListForWO)="saveChargesList($event)">\r\n          </grd-charges>\r\n        </div>\r\n        \x3c!-- && addNewCharges --\x3e\r\n        <div *ngIf="isEdit && editData ">\r\n          <grd-charges [isEdit]="isEdit" [editData]="editData" [workFlow]="workFlowObject" [isWorkOrder]="isWorkOrder"\r\n            [markupList]="markupList" [isQuote]="isQuote" [taskList]="taskList"\r\n            (updateChargesListForWO)="updateChargesList($event)"></grd-charges>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div>\r\n  <p-table class="rpo-table-cstm rro-table-cstm pub-ptable-cstm ptable-f10" [columns]="cols" [value]="workOrderChargesList"\r\n    [paginator]="true" [rows]="10">\r\n    <ng-template pTemplate="header" let-columns>\r\n      <tr style="color: #f1f1f1;" *ngIf="isQuote">\r\n        <th colspan="8" style="background: #fff; border: 1px solid #fff;border-right: 1px solid #e7ecf1;">&nbsp;</th>\r\n        <ng-container *ngIf="isView">\r\n            <th colspan="4" style="background: #fff; border: 1px solid #e7ecf1;">\r\n                \x3c!-- <div class="form-group" style="text-align: center;">\r\n                      <p-radioButton\r\n                        class="p-radiobutton-label-horizontal p-radio-custom"\r\n                        name="costPlusType"\r\n                        label="T&M"\r\n                        value="Mark Up"\r\n                        [(ngModel)]="costPlusType"\r\n                        [disabled]="isView"\r\n                      ></p-radioButton>\r\n                      <div style="display: flex;">\r\n                        <label style="color: #ffffff;">Mat Mark Up %</label>\r\n                        <select class="form-control wf-pub-id" (change)="markupChanged({}, \'all\')" [(ngModel)]="overAllMarkup" [disabled]="isView || costPlusType != \'Mark Up\'">\r\n                          <option value="">Select</option>\r\n                          <option *ngFor="let markUp of markupList" [value]="markUp.value">{{markUp.label}}</option>\r\n                        </select>\r\n                      </div>\r\n                    </div> --\x3e\r\n      \r\n                <div class="display-flex">\r\n                  <div class="form-group" style="text-align: center; display: flex;">\r\n                    <p-radioButton class="p-radiobutton-label-horizontal p-radiobutton-label-w92" name="costPlusType"\r\n                      label="T&M - Mark Up" value="1" [(ngModel)]="costPlusType" [disabled]="isView" (click)="tmchange()">\r\n                    </p-radioButton>\r\n                    <div>\r\n                      <select class="form-group select-markup" (change)="markupChanged({}, \'all\')" [(ngModel)]="overAllMarkup"\r\n                        [disabled]="isView || costPlusType != 1" style="margin-top: 10px;">\r\n                        <option value="">Select</option>\r\n                        <option *ngFor="let markUp of markupList" [value]="markUp.value">{{markUp.label}}</option>\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n                  <div style="float: left;margin-left: 10px;margin-right: 10px;">\r\n                    <p-radioButton class="p-radiobutton-label-horizontal" name="costPlusType" value="2"\r\n                      label="Actual" [(ngModel)]="costPlusType" [disabled]="isView" (click)="tmchange()"></p-radioButton>\r\n                  </div>\r\n                  <div>\r\n                    <p-radioButton class="p-radiobutton-label-horizontal" name="costPlusType"\r\n                      value="3" label="Flat Rate" [(ngModel)]="costPlusType" [disabled]="isView" (click)="(!isView)?tmchange():\'\'">\r\n                    </p-radioButton>\r\n                  </div>\r\n                </div>\r\n              </th>\r\n        </ng-container>\r\n        <ng-container *ngIf="!isView">\r\n            <th colspan="4" style="background: #fff; border: 1px solid #e7ecf1;">\r\n                \x3c!-- <div class="form-group" style="text-align: center;">\r\n                      <p-radioButton\r\n                        class="p-radiobutton-label-horizontal p-radio-custom"\r\n                        name="costPlusType"\r\n                        label="T&M"\r\n                        value="Mark Up"\r\n                        [(ngModel)]="costPlusType"\r\n                        [disabled]="isView"\r\n                      ></p-radioButton>\r\n                      <div style="display: flex;">\r\n                        <label style="color: #ffffff;">Mat Mark Up %</label>\r\n                        <select class="form-control wf-pub-id" (change)="markupChanged({}, \'all\')" [(ngModel)]="overAllMarkup" [disabled]="isView || costPlusType != \'Mark Up\'">\r\n                          <option value="">Select</option>\r\n                          <option *ngFor="let markUp of markupList" [value]="markUp.value">{{markUp.label}}</option>\r\n                        </select>\r\n                      </div>\r\n                    </div> --\x3e\r\n      \r\n                <div class="display-flex">\r\n                  <div class="form-group" style="text-align: center; display: flex;">\r\n                    <p-radioButton class="p-radiobutton-label-horizontal p-radiobutton-label-w92" name="costPlusType"\r\n                      label="T&M - Mark Up" value="1" [(ngModel)]="costPlusType" [disabled]="isView" (click)="(!isView)?tmchange():\'\'">\r\n                    </p-radioButton>\r\n                    <div>\r\n                      <select class="form-group select-markup" (change)="markupChanged({}, \'all\')" [(ngModel)]="overAllMarkup"\r\n                        [disabled]="isView || costPlusType != 1" style="margin-top: 10px;">\r\n                        <option value="">Select</option>\r\n                        <option *ngFor="let markUp of markupList" [value]="markUp.value">{{markUp.label}}</option>\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n                  <div style="float: left;margin-left: 10px;margin-right: 10px;">\r\n                    <p-radioButton class="p-radiobutton-label-horizontal" name="costPlusType" value="2"\r\n                      label="Actual" [(ngModel)]="costPlusType" [disabled]="isView" (click)="(!isView)?tmchange():\'\'"></p-radioButton>\r\n                  </div>\r\n                  <div>\r\n                    <p-radioButton class="p-radiobutton-label-horizontal" name="costPlusType"\r\n                      value="3" label="Flat Rate" [(ngModel)]="costPlusType" [disabled]="isView" (click)="(!isView)?tmchange():\'\'">\r\n                    </p-radioButton>\r\n                  </div>\r\n                </div>\r\n              </th>\r\n              \x3c!-- <th style="background: #fff; border: 1px solid #fff;"></th> --\x3e\r\n        </ng-container>\r\n      </tr>\r\n      <tr>\r\n        <th>Task</th>\r\n        <th *ngFor="let col of columns">\r\n          {{ col.header }}\r\n        </th>\r\n        <ng-container *ngIf="isQuote">\r\n          <th>Billing Method</th>\r\n          <th>Mark Up</th>\r\n          \x3c!-- <th tooltip="Time & Materials">T&M Amount</th>\r\n          <th>Flate Rate</th> --\x3e\r\n          <th>\r\n            Billing Rate\r\n          </th>\r\n          <th>\r\n            Billing Amount\r\n          </th>\r\n        </ng-container>\r\n        <th *ngIf="!isView">Actions</th>\r\n        \x3c!-- <th colspan="4" class="text-center" *ngIf="!isView"></th> --\x3e\r\n      </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate="body" let-rowData let-columns="columns" let-mainIndex="rowIndex">\r\n      <ng-container *ngFor="let dt of rowData; let subIndex = index">\r\n          <tr *ngIf="!dt[\'isDeleted\']">\r\n            <td>\r\n              <select class="form-control select-read-only" [(ngModel)]="dt.taskId" disabled>\r\n                <option value="">Select</option>\r\n                <option *ngFor="let task of taskList" [value]="task.taskId">{{task.description}}</option>\r\n              </select>\r\n              \x3c!-- <p>{{dt.taskName}}</p> --\x3e\r\n            </td>\r\n            <ng-container *ngFor="let col of columns">\r\n              <td *ngIf="col.field != \'roNumberId\'" [ngClass]="{\'content-to-end\': col.field == \'unitCost\' || col.field == \'extendedCost\' || col.field == \'quantity\' || col.field == \'extendedPrice\' || col.field == \'unitPrice\'}">\r\n                \x3c!-- {{ (col.field == \'unitPrice\' || col.field == \'extendedPrice\' || col.field == \'unitCost\' || col.field == \'extendedCost\')?formateCurrency(dt[col.field]):dt[col.field] }} --\x3e\r\n                {{dt[col.field]}}\r\n              </td>\r\n              <td *ngIf="col.field == \'roNumberId\'">\r\n                <select class="form-control select-read-only" id="roNum_{{mainIndex}}" [(ngModel)]="dt[col.field]"\r\n                  style="width: 130px;" name="roNum_{{mainIndex}}" disabled>\r\n                  <option [value]="0">Select</option>\r\n                  <option [value]="ctype.value" *ngFor="let ctype of roNumList">{{\r\n                    ctype.label\r\n                  }}</option>\r\n                </select>\r\n              </td>\r\n            </ng-container>\r\n            <ng-container *ngIf="isQuote">\r\n              <td>\r\n                <select class="form-control" [(ngModel)]="dt.billingMethodId" [disabled]="isView || costPlusType == 3" (change)="dt.markupPercentageId = \'\';dt.billingRate = 0;(dt.billingMethodId == \'2\')?dt.billingAmount = dt.extendedCost:\'\';">\r\n                  <option value="">Select</option>\r\n                  <option *ngFor="let bm of [{\'label\': \'T&M\', \'value\': \'1\'}, {\'label\': \'Actual\', \'value\': \'2\'}]"\r\n                    [value]="bm.value">{{bm.label}}</option>\r\n                </select>\r\n              </td>\r\n              <td>\r\n                <select class="form-control select-markup" (change)="markupChanged(dt, \'row\')"\r\n                  [(ngModel)]="dt.markupPercentageId" [disabled]="isView || dt.billingMethodId != \'1\'">\r\n                  <option value="">Select</option>\r\n                  <option *ngFor="let markUp of markupList" [value]="markUp.value">{{ markUp.label }}</option>\r\n                </select>\r\n              </td>\r\n              \x3c!-- <td>{{ dt.tmAmount }}</td>\r\n              <td>\r\n                <input type="number" [(ngModel)]="dt.flateRate" [disabled]="dt.billingMethodId != 2"/>\r\n              </td> --\x3e\r\n              <td class="content-to-end">{{ formateCurrency(dt.billingRate) }}</td>\r\n              <td>\r\n                <input type="text" class="form-control text-right" pInputText pKeyFilter="money" (change)="dt.billingAmount = dt.billingAmount.toFixed(2)" [(ngModel)]="dt.billingAmount"\r\n                  [disabled]="isView || dt.billingMethodId != \'2\'" />\r\n              </td>\r\n            </ng-container>\r\n            <td *ngIf="!isView">\r\n\r\n              <span data-target="#addNewCharges" data-toggle="modal"><a class="btn nobg btn-edit-cstm"\r\n                (click)="edit(dt, mainIndex, subIndex)" matTooltip="Edit"><i class="fa fa-pencil"></i></a> </span>\r\n            <span><a class="btn nobg btn-delete-cstm" (click)="openDelete(content,dt)"  matTooltip="Delete"><i\r\n                  class="fa fa-trash"></i></a> </span> \r\n\r\n              \x3c!-- <button class="btn-edit ptable-wo-btns buton_back_bordernon" mat-icon-button \r\n              data-target="#addNewCharges" data-toggle="modal"\r\n                (click)="edit(dt, mainIndex, subIndex)" matTooltip="Edit">\r\n                <mat-icon>edit</mat-icon>\r\n              </button>\r\n              <button class="btn-delete ptable-wo-btns buton_back_bordernon" mat-icon-button\r\n               matTooltip="Delete" (click)="delete(dt, i)">\r\n                <mat-icon color="warn">delete</mat-icon>\r\n              </button> --\x3e\r\n            </td>\r\n          </tr>\r\n      </ng-container>\r\n      <tr *ngIf="rowData && rowData[0]" class="task-total">\r\n        <td><strong>Total ({{getTaskName(rowData[0].taskId)}})</strong></td>\r\n        <td>&nbsp;</td>\r\n        <td class="content-to-end"><strong>{{ getTotalTaskQuantity(rowData) }}</strong></td>\r\n        <td>&nbsp;</td>\r\n        <td>&nbsp;</td>\r\n\r\n        <td>&nbsp;</td>\r\n        <td>&nbsp;</td>\r\n        <td class="content-to-end"><strong>{{ getTotalTaskUnitCost(rowData) }} </strong></td>\r\n        \x3c!-- <td>&nbsp;</td> --\x3e\r\n        \x3c!-- <td>&nbsp;</td> --\x3e\r\n        <td *ngIf="isQuote">&nbsp;</td>\r\n        <td *ngIf="isQuote" class="content-to-end"><strong>{{ getTotalTaskBillingAmount(rowData) }}</strong> </td>\r\n        <td *ngIf="!isView">&nbsp;</td>\r\n      </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate="footer" *ngIf="isQuote">\r\n      <tr class="footer">\r\n        <td>Total</td>\r\n        <td>&nbsp;</td>\r\n        <td class="content-to-end"><strong>{{ getTotalQuantity() }} </strong></td>\r\n        <td>&nbsp;</td>\r\n        <td>&nbsp;</td>\r\n\r\n        <td>&nbsp;</td>\r\n        <td>&nbsp;</td>\r\n        <td class="content-to-end"><strong>{{ getTotalUnitCost() }} </strong></td>\r\n        <td>&nbsp;</td>\r\n        <td>&nbsp;</td>\r\n        <td></td>\r\n        <ng-container *ngIf="costPlusType != 3">\r\n          <td class="content-to-end"><strong>{{ getTotalBillingAmount()}} </strong></td>\r\n        </ng-container>\r\n        <ng-container *ngIf="costPlusType == 3">\r\n            <input type="number" [(ngModel)]="chargesFlatRateBillingAmount" [disabled]="isView" />\r\n        </ng-container>\r\n        \r\n        <td *ngIf="!isView">&nbsp;</td>\r\n      </tr>\r\n    </ng-template>\r\n  </p-table>\r\n  <button class="btn btn-primary pull-right" (click)="createChargeQuote()" *ngIf="isQuote && !isView">\r\n    Save Charges\r\n  </button>\r\n</div>\r\n<ng-template #content let-c="close" let-d="dismiss">\r\n  <div class="modal-header">\r\n      \r\n      <h4 class="modal-title">Are You Sure Want to Delete?</h4>\r\n      <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n          <span aria-hidden="true">&times;</span>\r\n\r\n      \r\n      </button>\r\n    \r\n  </div>\r\n\r\n  <div class="modal-footer">\r\n    <button type="button" class="btn btn-primary" (click)="delete()">Yes</button>\r\n    <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n  </div>\r\n\r\n\r\n</ng-template>\r\n\x3c!-- <div class="equipment-tab-content">\r\n  <div class="x_panel" *ngIf="workOrderChargesList">\r\n    <div class="tab-content">\r\n      <div\r\n        class="table-responsive table-overflow"\r\n        id="workflow-attributes-block"\r\n      >\r\n        <table class="table table-bordered ">\r\n          <thead>\r\n            <tr *ngIf="isQuote">\r\n              <td colspan="8">&nbsp;</td>\r\n              <td colspan="3">\r\n                  <div class="form-group">\r\n                    <p-radioButton\r\n                      class="p-radiobutton-label-horizontal"\r\n                      name="costPlusType"\r\n                      label="Mark Up"\r\n                      value="Mark Up"\r\n                      [(ngModel)]="costPlusType"\r\n                      [disabled]="isView"\r\n                    ></p-radioButton>\r\n                    <p-radioButton\r\n                      class="p-radiobutton-label-horizontal col-width"\r\n                      name="costPlusType"\r\n                      value="Cost Plus"\r\n                      label="Cost Plus"\r\n                      [(ngModel)]="costPlusType"\r\n                      [disabled]="isView"\r\n                    ></p-radioButton>\r\n                  </div>\r\n              </td>\r\n              <td colspan="2" *ngIf="!isView">&nbsp;</td>\r\n            </tr>\r\n            <tr>\r\n              <th class="text-center">Charge Type</th>\r\n              <th class="text-center">Description</th>\r\n              <th class="text-center">Quantity</th>\r\n              <th class="text-center">Unit Cost</th>\r\n              <th class="text-center">Extented Cost</th>\r\n              <th class="text-center">Unit Price</th>\r\n              <th class="text-center">Extended Price</th>\r\n              <th class="text-center">vendorName</th>\r\n              <ng-container *ngIf="isQuote">\r\n                <th *ngIf="costPlusType == \'Mark Up\'">MARKUP</th>\r\n                <th>Cost plus amount</th>\r\n                <th>Fixed Amount</th>\r\n              </ng-container>\r\n              <th colspan="4" class="text-center" *ngIf="!isView"></th>\r\n            </tr>\r\n          </thead>\r\n\r\n\r\n\r\n          <tbody>\r\n            <ng-container *ngFor="let w of workOrderChargesList; let i = index">\r\n              <tr *ngIf="!w[\'isDeleted\']">\r\n                <td>{{ w.chargeType }}</td>\r\n                <td>{{ w.description }}</td>\r\n                <td>{{ w.quantity }}</td>\r\n                <td>{{ w.unitCost }}</td>\r\n                <td>{{ w.extendedCost }}</td>\r\n                <td>{{ w.unitPrice }}</td>\r\n                <td>{{ w.extendedPrice }}</td>\r\n                <td>{{ w.vendorName }}</td>\r\n                <ng-container *ngIf="isQuote">\r\n                    <td *ngIf="costPlusType == \'Mark Up\'">\r\n                        <select class="form-control wf-pub-id" (change)="markupChanged(w)" [(ngModel)]="w.markupPercentageId" [disabled]="isView">\r\n                          <option value="">Select</option>\r\n                          <option *ngFor="let markUp of markupList" [value]="markUp.value">{{markUp.label}}</option>\r\n                        </select>\r\n                    </td>\r\n                    <td *ngIf="costPlusType == \'Mark Up\'">{{ w.chargesCostPlus }}</td>\r\n                    <td *ngIf="costPlusType == \'Cost Plus\'">\r\n                      <input type="number" [(ngModel)]="w.chargesCostPlus" [disabled]="isView"/>\r\n                    </td>\r\n                    <td>{{ w.fixedAmount }}</td>\r\n                </ng-container>\r\n                <td *ngIf="!isView">\r\n                  <button\r\n                    class="btn-edit ptable-wo-btns"\r\n                    mat-icon-button\r\n                    data-target="#addNewCharges"\r\n                    data-toggle="modal"\r\n                    (click)="edit(w, i)"\r\n                    matTooltip="Edit"\r\n                  >\r\n                    <mat-icon>edit</mat-icon>\r\n                  </button>\r\n                </td>\r\n                <td *ngIf="!isView">\r\n                  <button\r\n                    class="btn-delete ptable-wo-btns"\r\n                    mat-icon-button\r\n                    matTooltip="Delete"\r\n                    (click)="delete(w, i)"\r\n                  >\r\n                    <mat-icon color="warn">delete</mat-icon>\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            </ng-container>\r\n          </tbody>\r\n          <tfoot *ngIf="isQuote">\r\n            <tr>\r\n                <td>Total Charges</td>\r\n                <td>&nbsp;</td>\r\n                <td>{{getTotalQuantity()}}</td>\r\n                <td>{{getTotalUnitCost()}}</td>\r\n                <td>&nbsp;</td>\r\n                <td>&nbsp;</td>\r\n                <td>&nbsp;</td>\r\n                <td>&nbsp;</td>\r\n                <td>&nbsp;</td>\r\n                <td>{{getChargesCostPlus()}}</td>\r\n                <td>{{getTotalFixedAmount()}}</td>\r\n                <td *ngIf="!isView">&nbsp;</td>\r\n            </tr>\r\n          </tfoot>\r\n        </table>\r\n        <button class="btn btn-primary pull-right" (click)="createChargeQuote()" *ngIf="!isView">Save</button>\r\n      </div>\r\n    </div>\r\n    <div class="clear"></div>\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <br />\r\n  </div>\r\n</div> --\x3e'},"5PLl":function(e,r,t){"use strict";t.r(r),r.default='\r\n\r\n<div class="">\r\n  \r\n</div>\r\n\r\n<div class="card">\r\n  <div class="card-body">\r\n    \x3c!-- <div style="margin-left: 5px;">\r\n      <button class="btn btn-primary"\r\n        (click)="openNewSubWorkOrder()" *ngIf="!isView">\r\n        Add New Sub-WO\r\n      </button>\r\n    </div> --\x3e\r\n    <p-table #dt class="rpo-table-cstm rro-table-cstm ptable-f10"\r\n      [columns]="subWorkOrderCols"\r\n      [value]="subWorkOrderData"\r\n      [paginator]="true"\r\n      [rows]="pageSize" [resizableColumns]="true" [reorderableColumns]="true" [pageLinks]="3" [rowsPerPageOptions]="[10, 20, 50, 100]" [scrollable]="true" scrollHeight="450px"\r\n    >\r\n    <ng-template pTemplate="colgroup" let-columns>\r\n      <colgroup>\r\n          <col *ngFor="let col of columns" style="width:102px">\r\n      </colgroup>\r\n    </ng-template>\r\n      <ng-template pTemplate="header" let-columns>\r\n        <tr>\r\n          <th style="width:auto"\r\n              *ngFor="let col of columns"\r\n              pResizableColumn\r\n              pReorderableColumn\r\n              [pSortableColumn]="col.field">\r\n              {{ col.header }}\r\n              <p-sortIcon [field]="col.field"></p-sortIcon>\r\n          </th>\r\n          <th style="width:80px;position:sticky" *ngIf="!isView">\r\n            Actions\r\n          </th>\r\n        </tr>\r\n        <tr>\r\n          <th *ngFor="let col of columns" [ngSwitch]="col.field">\r\n            <input  pInputText type="text" (input)="dt.filter($event.target.value, col.field, \'contains\')">\r\n          </th>\r\n          <th *ngIf="!isView"></th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate="body" let-rowData let-columns="columns">\r\n        <tr>\r\n          <td *ngFor="let col of columns">\r\n            {{\r\n              col.field == \'openDate\'\r\n                ? (rowData[col.field] | date: \'MM/dd/yyyy\')\r\n                : rowData[col.field] && col.field == \'needDate\'\r\n                ? (rowData[col.field] | date: \'MM/dd/yyyy\')\r\n                : rowData[col.field]\r\n            }}\r\n          </td>\r\n          <td style="width:80px;position:sticky" *ngIf="subWorkOrderData && !isView">\r\n            \x3c!-- <p-inputSwitch\r\n              [(ngModel)]="rowData[\'isActive\']"\r\n              name="isActive{{ rowIndex }}"\r\n              (onChange)="changeStatus(rowData)"\r\n            ></p-inputSwitch> --\x3e\r\n\r\n            <span data-toggle="modal" data-target="#viewSubWOrkOrder" *ngIf="!forSubWorkOrder"><a class="btn nobg btn-view-cstm" \r\n              (click)="view(rowData)" matTooltip="View" matTooltipPosition="above"><i class="fa fa-eye"></i></a></span>\r\n            <span *ngIf="!forSubWorkOrder"><a class="btn nobg btn-edit-cstm" \r\n              (click)="edit(rowData)" matTooltip="Edit" matTooltipPosition="above"><i class="fa fa-pencil"></i></a> </span>\r\n         <span *ngIf="forSubWorkOrder==true">\r\n          <a class="btn nobg btn-edit-cstm"   (click)="AddSubWo(rowData)" >\r\n            <i class="fa fa-plus" style="color:green" matTooltip="Add to Existing Sub Work Order" matTooltipPosition="above" ></i>\r\n          </a>\r\n         </span>\r\n              \r\n         \r\n              \x3c!-- <span data-toggle="modal" data-target="#viewSubWOrkOrder">\r\n              <a\r\n                class="btn btn-info boxed-float-btn nobg"\r\n                data-toggle="tooltip"\r\n                (click)="view(rowData)"\r\n              >\r\n                <i class="fa fa-eye"></i>\r\n              </a>\r\n            </span> --\x3e\r\n            \x3c!-- <button\r\n              class="btn-edit ptable-wo-btns"\r\n              mat-icon-button\r\n              (click)="edit(rowData)"\r\n              matTooltip="Edit"\r\n            >\r\n              <mat-icon>edit</mat-icon>\r\n            </button> --\x3e\r\n\x3c!-- \r\n            <button\r\n              class="btn-delete ptable-wo-btns"\r\n              mat-icon-button\r\n              matTooltip="Delete"\r\n              data-target="#delete"\r\n              data-toggle="modal"\r\n              (click)="delete(rowData)"\r\n            >\r\n              <mat-icon color="warn">delete</mat-icon>\r\n            </button> --\x3e\r\n            \x3c!-- <button\r\n              class="btn-history ptable-wo-btns"\r\n              mat-icon-button\r\n              matTooltip="History"\r\n              data-target="#contentHist"\r\n              data-toggle="modal"\r\n              (click)="getAuditHistoryById(rowData)"\r\n            >\r\n              <mat-icon color="green">history</mat-icon>\r\n            </button> --\x3e\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate="emptymessage" let-columns *ngIf="subWorkOrderData.length == 0">\r\n        <tr>\r\n          <td colspan="9" style="color: red; font-weight: bold; text-align: center">\r\n            No records found\r\n          </td>\r\n        </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate="summary" id="footer">\r\n        <label id="footer">Total:</label>\r\n        <input style="width: 5%;" [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText type="text" />\r\n        &nbsp;&nbsp;\r\n        <label id="footer">Pages Count:</label>    \r\n        <input style="width: 5%;" [ngModel]="getPageCount(dt._totalRecords, pageSize)" [disabled]="true" pInputText type="text" />\r\n      </ng-template>\r\n    </p-table>\r\n  </div>\r\n</div>\r\n\r\n<div id="viewSubWOrkOrder" class="modal fade" role="dialog" data-backdrop="static">\r\n  <div class="modal-dialog modal-xl">\r\n    \x3c!-- Modal content--\x3e\r\n    <div class="modal-content">\r\n      <div class="modal-header">\r\n        <button type="button" class="close" data-dismiss="modal">\r\n          &times;\r\n        </button>\r\n        <h4 class="modal-title">Sub WorkOrder View</h4>\r\n      </div>\r\n\r\n      <div class="modal-body" *ngIf="subWorkOrderHeader">\r\n        <div class="card">\r\n          <div class="card-body">\r\n            <div class="table-responsive default-bg clear">\r\n              <div>\r\n                <div class="col-md-6">\r\n                  <p>\r\n                    <span class="label"><b> WorkOrder Number </b></span\r\n                    ><span class="value">{{\r\n                      subWorkOrderHeader.workOrderNum\r\n                    }}</span>\r\n                  </p>\r\n                </div>\r\n                <div class="col-md-6">\r\n                  <p>\r\n                    <span class="label"><b> Master Part </b></span\r\n                    ><span class="value">{{ subWorkOrderHeader.mcpn }}</span>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <hr style="clear: both;" />\r\n\r\n              <div>\r\n                <div class="col-sm-3">\r\n                  <p>\r\n                    <span class="label"><b> Sub WO Number </b></span\r\n                    ><span class="value">{{\r\n                      subWorkOrderHeader.subWorkOrderNo\r\n                    }}</span>\r\n                  </p>\r\n                  <p>\r\n                    <span class="label"><b>Open Date: </b></span\r\n                    ><span class="value">{{\r\n                      subWorkOrderHeader.openDate | date: \'MM/dd/yyyy\'\r\n                    }}</span>\r\n                  </p>\r\n                  <p>\r\n                    <span class="label"><b>Sub WO Need Date: </b></span\r\n                    ><span class="value">{{\r\n                      subWorkOrderHeader.needDate\r\n                    }}</span>\r\n                  </p>\r\n                </div>\r\n                <div class="col-sm-3">\r\n                  <p>\r\n                    <span class="label"><b>Sub WO Est.Completed Date: </b></span\r\n                    ><span class="value">{{\r\n                      subWorkOrderHeader.estCompDate\r\n                    }}</span>\r\n                  </p>\r\n                  <p>\r\n                    <span class="label"><b>Sub WO Stage: </b></span\r\n                    ><span class="value">{{\r\n                      subWorkOrderHeader.workOrderStage\r\n                    }}</span>\r\n                  </p>\r\n                  <p>\r\n                    <span class="label"><b>Sub WO Status: </b></span\r\n                    ><span class="value">{{\r\n                      subWorkOrderHeader.workOrderStatus\r\n                    }}</span>\r\n                  </p>\r\n                </div>\r\n\r\n                <div class="col-sm-3">\r\n                  <p>\r\n                    <span class="label"><b>Sub Wo CMM: </b></span\r\n                    ><span class="value">{{\r\n                      subWorkOrderHeader.workOrderCMM\r\n                    }}</span>\r\n                  </p>\r\n\r\n                  <p>\r\n                    <span class="label"><b>Sub Wo Work Flow : </b></span\r\n                    ><span class="value">{{\r\n                      subWorkOrderHeader.workFlowNo\r\n                    }}</span>\r\n                  </p>\r\n                </div>\r\n                <div class="col-sm-3">\r\n                  <p>\r\n                    <span class="label"><b>Is PMA: </b></span\r\n                    ><span class="value">\r\n                      {{ subWorkOrderHeader.isPMA }}\r\n                    </span>\r\n                  </p>\r\n                  <p>\r\n                    <span class="label"><b>Is DER: </b></span\r\n                    ><span class="value">{{ subWorkOrderHeader.isDER }}</span>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n\r\n          <div class="card"  >\r\n                <div class="card-body" *ngIf="showTableGrid">\r\n                  <p-tabView  class="pas-tabview" [activeIndex]="activeIndex">\r\n                              \r\n                    <p-tabPanel  *ngIf="workFlowId" header="Work Flow">\r\n                        <app-workflow-list [isWorkOrder]="isWorkOrder"   [workFlowId]="workFlowId" ></app-workflow-list>  \r\n                    </p-tabPanel>\r\n      \r\n                    <p-tabPanel header="Material List">\r\n                        <div class="equipment-tab-content"  >\r\n                            <div class="x_panel" *ngIf="workOrderMaterialList">\r\n                                <div class="tab-content">\r\n                                    <div class="table-responsive table-overflow" id="workflow-attributes-block">\r\n                                        <table class="table table-bordered ">\r\n                                            <thead>\r\n                                                <tr>\r\n        \r\n                                                    <th class="text-center">Part Number </th>\r\n                                                    <th class="text-center">Part Description</th>\r\n                                                    <th class="text-center">Alternate PN</th>\r\n                                                    <th class="text-center">SerialNumber</th>\r\n                                                    <th class="text-center">Provision</th>\r\n                                                    <th class="text-center">OEM</th>\r\n                                                    <th class="text-center">Control</th>\r\n                                                    <th class="text-center">Condition</th>\r\n                                                    <th class="text-center">Item Type</th>\r\n                                                    <th class="text-center">Qunatity Requried</th>\r\n                                                    <th class="text-center">Qunatity Reserved</th>\r\n                                                    <th class="text-center">Qunatity TurnIn</th>\r\n                                                    <th class="text-center">Qunatity Issued</th>\r\n                                                    <th class="text-center">Qunatity BackOrder</th>\r\n                                                    <th class="text-center">Qunatity Remaining</th>\r\n                                                    <th class="text-center">Unit Cost</th>\r\n                                                    <th class="text-center">Extended Cost</th>\r\n                                                    <th class="text-center">Currency</th>\r\n                                                    <th class="text-center">Purchase OrderNumber</th>\r\n                                                    <th class="text-center">Repair OrderNumber</th>\r\n                                                    <th class="text-center">Part Quantity OnHand</th>\r\n                                                    <th class="text-center">Part Quantity Available</th>\r\n                                                    <th class="text-center">Part Quantity OnOrder</th>\r\n                                                    <th class="text-center">WorkOrder Number</th>\r\n                                                    <th class="text-center">Sub WorkOrder</th>\r\n                                                    <th class="text-center">SalesOrder</th>\r\n                                                    <th class="text-center">Condition</th>\r\n                                                    <th class="text-center">TimeLife</th>\r\n                                                    <th class="text-center">Ware House</th>\r\n                                                    <th class="text-center">Location</th>\r\n                                                    <th class="text-center">Shelf</th>\r\n                                                    <th class="text-center">Bin</th>\r\n        \r\n                                                </tr>\r\n                                            </thead>\r\n                                        \r\n                                            <tbody>\r\n                                                <tr *ngFor="let m  of workOrderMaterialList; let i=index;">\r\n                                                    <td>{{m.partNumber}}</td>\r\n                                                    <td>{{m.partDescription}}</td>\r\n                                                    <td>{{m.altPartNumber}}</td>\r\n                                                    <td>{{m.serialNumber}}</td>\r\n                                                    <td>{{m.provision}}</td>\r\n                                                    <td>{{m.oem}}</td>\r\n                                                    <td>{{m.control}}</td>\r\n                                                    <td>{{m.condition}}</td>\r\n                                                    <td>{{m.itemType}}</td>\r\n                                                    <td>{{m.qunatityRequried}}</td>\r\n                                                    <td>{{m.qunatityReserved}}</td>\r\n                                                    <td>{{m.qunatityTurnIn}}</td>\r\n                                                    <td>{{m.qunatityIssued}}</td>\r\n                                                    <td>{{m.qunatityBackOrder}}</td>\r\n                                                    <td>{{m.qunatityRemaining}}</td>\r\n                                                    <td>{{m.unitCost}}</td>\r\n                                                    <td>{{m.extendedCost}}</td>\r\n                                                    <td>{{m.currency}}</td>\r\n                                                    <td>{{m.purchaseOrderNumber}}</td>\r\n                                                    <td>{{m.repairOrderNumber}}</td>\r\n                                                    <td>{{m.partQuantityOnHand}}</td>\r\n                                                    <td>{{m.partQuantityAvailable}}</td>\r\n                                                    <td>{{m.partQuantityOnOrder}}</td>\r\n                                                    <td>{{m.receiver}}</td>\r\n                                                    <td>{{m.workOrderNumber}}</td>\r\n                                                    <td>{{m.subWorkOrder}}</td>\r\n                                                    <td>{{m.salesOrder}}</td>\r\n                                                    <td>{{m.timeLife}}</td>\r\n                                                    <td>{{m.wareHouse}}</td>\r\n                                                    <td>{{m.location}}</td>\r\n                                                    <td>{{m.shelf}}</td>\r\n                                                    <td>{{m.bin}}</td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="clear"></div>\r\n                                <br />\r\n                                <br />\r\n                                <br />\r\n                                <br />\r\n                            </div>\r\n                        </div>\r\n                      </p-tabPanel> \r\n      \r\n      \r\n                      <p-tabPanel  header="Labor">\r\n      \r\n                          <p-accordion [multiple]="true">\r\n         \r\n                                <p-accordionTab header="{{x.task}}" *ngFor="let x of workOrderLaborList; let i = index;" >\r\n                    \r\n                                    <div class="equipment-tab-content" >\r\n                                        <div class="x_panel" *ngIf="workOrderLaborList">\r\n                                            <div class="tab-content">\r\n                                                <div class="table-responsive table-overflow" id="workflow-attributes-block">\r\n                                                    <table class="table table-bordered ">\r\n                                                        <thead>\r\n                                                            <tr>\r\n                                                                <th class="text-center">Expertise</th>\r\n                                                                <th class="text-center">Description</th>\r\n             \r\n                                                            </tr> \r\n                                                        </thead>\r\n                                                    \r\n                                                        <tbody>\r\n                                                          <tr >\r\n                                                                <td>{{x.expertise}}</td>\r\n                                                                <td>{{x.hours}}</td>\r\n                                                            </tr> \r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class="clear"></div>\r\n                                            <br />\r\n                                            <br />\r\n                                            <br />\r\n                                            <br />\r\n                                        </div>\r\n                                    </div> \r\n                                  </p-accordionTab>\r\n              \r\n             \r\n                            \r\n                            \r\n                          </p-accordion>\r\n                       \r\n         \r\n         \r\n                      </p-tabPanel> \r\n                    <p-tabPanel header="Assets">\r\n                     \r\n                        <div class="equipment-tab-content" *ngIf="workOrderAssetList">\r\n                            <div class="x_panel">\r\n                                <div class="tab-content">\r\n                                    <div class="table-responsive" id="workflow-attributes-block">\r\n                                        <table class="table table-bordered ">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <th colspan="4" class="text-center"></th>\r\n                                                    <th colspan="4" class="text-center">TOLERANCE</th>\r\n                     \r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <th class="text-center">Equipment </th>\r\n                                                    <th class="text-center">Equipment Description</th>\r\n                                                    <th class="text-center">Equipment Type</th>\r\n                                                    <th class="text-center">Qty</th>\r\n                                                    <th class="text-center">Min</th>\r\n                                                    <th class="text-center">Max</th>\r\n                                                    <th class="text-center">Expected</th>\r\n                                                    <th class="text-center">Findings</th>\r\n                                     \r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                <tr *ngFor="let asset of workOrderAssetList; let i=index;">\r\n                                                    <td>{{asset.asset}}</td>\r\n                                                    <td>{{asset.description}}</td>\r\n                                                    <td>{{asset.assetTypeName}}</td>\r\n                                                    <td>{{asset.quantity}}</td>\r\n                                                    <td>\r\n                                                       {{asset.minQuantity}}\r\n                                                    </td>\r\n                                                    <td>\r\n                                                       {{asset.maxQuantity}}\r\n                                                    </td>\r\n                                                    <td>\r\n                                                      {{asset.expectedQuantity}}\r\n                                                    </td>\r\n                                                    <td>\r\n                                                      {{asset.findings}}\r\n                                                    </td>\r\n                              \r\n                                                </tr>\r\n      \r\n                        \r\n                                                \r\n                         \r\n                                            </tbody>\r\n                                        </table>\r\n      \r\n                                    </div>\r\n                                </div>\r\n                                <div class="clear"></div>\r\n                                <br />\r\n                                <br />\r\n                                <br />\r\n                                <br />\r\n                            </div>\r\n                        </div>\r\n      \r\n      \r\n                    </p-tabPanel> \r\n      \r\n      \r\n                    <p-tabPanel header ="Quote">\r\n      \r\n                      <div class="h-300">\r\n                      <h3>No Data Found</h3>\r\n                      </div>\r\n      \r\n                    </p-tabPanel>\r\n                    <p-tabPanel header ="Main Component">\r\n                          <div class="h-300">\r\n                                  <h3>No Data Found</h3>\r\n                                  </div>\r\n                      </p-tabPanel>\r\n                      <p-tabPanel header ="Billing/Invocing">\r\n                          <div class="h-300">\r\n                                  <h3>No Data Found</h3>\r\n                                  </div>\r\n                        </p-tabPanel>\r\n      \r\n                        <p-tabPanel header ="Shipping">\r\n                              <div class="h-300">\r\n                                      <h3>No Data Found</h3>\r\n                                      </div>\r\n                          </p-tabPanel>\r\n      \r\n                          <p-tabPanel header ="Sub-WO">\r\n                                  <div class="h-300">\r\n                                          <h3>No Data Found</h3>\r\n                                          </div>\r\n                            </p-tabPanel>\r\n      \r\n                            <p-tabPanel header ="Communication">\r\n                                  <div class="h-300">\r\n                                          <h3>No Data Found</h3>\r\n                                          </div>\r\n                              </p-tabPanel>\r\n      \r\n      \r\n                              <p-tabPanel header ="Documents">\r\n                                      <div class="h-300">\r\n                                              <h3>No Data Found</h3>\r\n                                              </div>\r\n                                </p-tabPanel>\r\n      \r\n      \r\n                                <p-tabPanel header ="Work Complete">\r\n                                      <div class="h-300">\r\n                                              <h3>No Data Found</h3>\r\n                                              </div>\r\n                                  </p-tabPanel>\r\n      \r\n      \r\n      \r\n                                  <p-tabPanel header ="WO Analysis">\r\n                                          <div class="h-300">\r\n                                                  <h3>No Data Found</h3>\r\n                                                  </div>\r\n                                    </p-tabPanel>\r\n      \r\n      \r\n                                    <p-tabPanel header ="Labor Analysis">\r\n                                          <div class="h-300">\r\n                                                  <h3>No Data Found</h3>\r\n                                                  </div>\r\n                                      </p-tabPanel>\r\n                                      <p-tabPanel header ="Tear Down">\r\n                                              <div class="h-300">\r\n                                                      <h3>No Data Found</h3>\r\n                                                      </div>\r\n                                        </p-tabPanel>\r\n      \r\n      \r\n                                      <p-tabPanel>\r\n                                          <ng-template pTemplate="header" style="height: 36px; width: 134px;">Other Options\r\n                                              <i (click)="showOtherOptions()" class="fa fa-caret-down" aria-hidden="true"></i>\r\n                                                <div class="vertical-menu-wolist" *ngIf="otherOptionShow">\r\n                                                    <a (click)="otherOptionSelected(\'freight\')" style="color: #333333 !important">Freight</a>\r\n                                                    <a (click)="otherOptionSelected(\'contactGrid\')" style="color: #333333 !important">Contact Grid</a>\r\n                                                    <a (click)="otherOptionSelected(\'accounting\')" style="color: #333333 !important">Accounting</a>\r\n                                                    <a (click)="otherOptionSelected(\'charges\')" style="color: #333333 !important">Charges</a>\r\n                                                    <a (click)="otherOptionSelected(\'exclusion\')" style="color: #333333 !important">Exclusion</a>\r\n                                                  </div>\r\n      \r\n                                          </ng-template>\r\n      \r\n                                          <div >\r\n                                       \r\n                                                  <div class="equipment-tab-content" *ngIf="selectedOtherSubTask === \'charges\'" >\r\n                                                    <div class="x_panel" *ngIf="workOrderChargesList">\r\n                                                        <div class="tab-content">\r\n                                                            <div class="table-responsive table-overflow" id="workflow-attributes-block">\r\n                                                                <table class="table table-bordered ">\r\n                                                                    <thead>\r\n                                                                        <tr>\r\n                                                                            <th class="text-center">Charge Type </th>\r\n                                                                            <th class="text-center">Description</th>\r\n                                                                            <th class="text-center">Quantity</th>\r\n                                                                            <th class="text-center">Unit Cost</th>\r\n                                                                            <th class="text-center">Extented Cost</th>\r\n                                                                            <th class="text-center">Unit Price</th>\r\n                                                                            <th class="text-center">Extended Price</th>\r\n                                                                            <th class="text-center">vendorName</th>\r\n                                                                        </tr> \r\n                                                                    </thead>\r\n                                                                \r\n                                                                    <tbody>\r\n                                                                      <tr *ngFor="let w  of workOrderChargesList; let i=index;">\r\n                                                                            <td>{{w.chargeType}}</td>\r\n                                                                            <td>{{w.description}}</td>\r\n                                                                            <td>{{w.quantity}}</td>\r\n                                                                            <td>{{w.unitCost}}</td>\r\n                                                                            <td>{{w.extendedCost}}</td>\r\n                                                                            <td>{{w.unitPrice}}</td>\r\n                                                                            <td>{{w.extendedPrice}}</td>\r\n                                                                            <td>{{w.vendorName}}</td>\r\n                                                                        </tr> \r\n                                                                    </tbody>\r\n                                                                </table>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div class="clear"></div>\r\n                                                        <br />\r\n                                                        <br />\r\n                                                        <br />\r\n                                                        <br />\r\n                                                    </div>\r\n                                                </div>\r\n                                         \r\n        \r\n                                          </div>\r\n                                          \r\n                                          <div *ngIf="selectedOtherSubTask === \'exclusion\'">\r\n                                            \r\n      \r\n                                                  <div class="equipment-tab-content" >\r\n                                                      <div class="x_panel" *ngIf="workOrderExclusionsList">\r\n                                                          <div class="tab-content">\r\n                                                              <div class="table-responsive table-overflow" id="workflow-attributes-block">\r\n                                                                  <table class="table table-bordered ">\r\n                                                                      <thead>\r\n                                                                          <tr>\r\n                                                                              <th class="text-center">EPN</th>\r\n                                                                              <th class="text-center">EPN Description</th>\r\n                                                                              <th class="text-center">Quantity</th>\r\n                                                                              <th class="text-center">Unit Cost</th>\r\n                                                                              <th class="text-center">Extended Cost</th>\r\n                                                                              <th class="text-center">Memo</th>\r\n                                                                          </tr> \r\n                                                                      </thead>\r\n                                                                  \r\n                                                                      <tbody>\r\n                                                                        <tr *ngFor="let w  of workOrderExclusionsList; let i=index;">\r\n                                                                              <td>{{w.epn}}</td>\r\n                                                                              <td>{{w.epnDescription}}</td>\r\n                                                                              <td>{{w.quantity}}</td>\r\n                                                                              <td>{{w.unitCost}}</td>\r\n                                                                              <td>{{w.extendedCost}}</td>\r\n                                                                              <td>{{w.memo}}</td>\r\n                                     \r\n                                                                          </tr> \r\n                                                                      </tbody>\r\n                                                                  </table>\r\n                                                              </div>\r\n                                                          </div>\r\n                                                          <div class="clear"></div>\r\n                                                          <br />\r\n                                                          <br />\r\n                                                          <br />\r\n                                                          <br />\r\n                                                      </div>\r\n                                                  </div>\r\n                                             \r\n                                          </div>\r\n                                      </p-tabPanel>\r\n      \r\n    \r\n      \r\n                    \r\n                  </p-tabView>\r\n                </div>\r\n              </div> \r\n        </div>\r\n        <div class="modal-footer">\r\n          <button type="button" class="btn btn-danger" data-dismiss="modal">\r\n            Close\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n'},"7ACA":function(e,r,t){"use strict";t.r(r),r.default=""},Bbri:function(e,r,t){"use strict";t.r(r),r.default=""},"CYP/":function(e,r,t){"use strict";t.r(r),r.default=""},DGVF:function(e,r,t){"use strict";t.r(r),r.default='.select-read-only {\n  border: none;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  text-indent: 1px;\n  text-overflow: "";\n  box-shadow: none !important;\n}\n\nselect-read-only {\n  background-color: white !important;\n}\n\nselect:disabled {\n  background-color: white !important;\n}'},DPyc:function(e,r,t){"use strict";t.r(r),r.default='<div *ngIf="(fromWoList ==false || fromWoList ==undefined) && !isView">\r\n    <button data-target="#addNewMaterials" data-toggle="modal" class="btn btn-primary"\r\n        (click)="createNew(); " style="margin-left: 5px;">Add PN</button>\r\n    <button *ngIf="workOrderMaterialList && workOrderMaterialList.length > 0" class="btn btn-primary" \r\n        (click)="partsIssueRI(1)" data-toggle="modal"\r\n        data-target="#reserve">Reserve </button>\r\n    <button *ngIf="workOrderMaterialList && workOrderMaterialList.length > 0" class="btn btn-primary"\r\n         (click)="partsIssueRI(2)" data-toggle="modal" data-target="#reserve"> Issue\r\n    </button>\r\n    <button *ngIf="workOrderMaterialList && workOrderMaterialList.length > 0" class="btn btn-primary"\r\n         (click)="partsIssueRI(3)" data-toggle="modal" data-target="#reserve">\r\n        Reserve & Issue </button>\r\n    <button *ngIf="workOrderMaterialList && workOrderMaterialList.length > 0" class="btn btn-primary"\r\n         (click)="partsIssueRI(4)" data-toggle="modal" data-target="#reserve">\r\n        UnIssue </button>\r\n    <button *ngIf="workOrderMaterialList && workOrderMaterialList.length > 0" class="btn btn-primary"\r\n         (click)="partsIssueRI(5)" data-toggle="modal" data-target="#reserve">\r\n        UnReserve </button>\r\n</div>\r\n<div id="addNewMaterials" class="modal fade" role="dialog" data-backdrop="static">\r\n    <div class="modal-dialog modal-xl">\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">{{ isEdit ? \'Edit\' : \'Add\'  }} PN</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <div *ngIf="!isEdit && addNewMaterial">\r\n                    <grd-material [isWorkOrder]="isWorkOrder" [isSubWorkOrder]="isSubWorkOrder" [workFlow]="workFlowObject" [taskList]="taskList"\r\n                        (saveMaterialListForWO)="saveMaterialList($event)"  [mpnPartNumbersList]="mpnPartNumbersList"></grd-material>\r\n                </div>\r\n                <div *ngIf="isEdit && editData && addNewMaterial">\r\n                    <grd-material [isEdit]="isEdit" [editData]="editData" [isWorkOrder]="isWorkOrder" [isSubWorkOrder]="isSubWorkOrder"\r\n                        [workFlow]="workFlowObject" [taskList]="taskList"\r\n                        (updateMaterialListForWO)="updateMaterialList($event)" [mpnPartNumbersList]="mpnPartNumbersList">\r\n                    </grd-material>\r\n                </div>\r\n            </div>\r\n        </div> \r\n    </div>\r\n</div> \r\n<div>\r\n    <p-table class="rpo-table-cstm rro-table-cstm pub-ptable-cstm ptable-f10 " id="custome_material" [columns]="cols" #materialTble\r\n        [value]="workOrderMaterialList" [paginator]="true" [rows]="pageSize" [rowsPerPageOptions]="[5, 10, 20,50, 100]"\r\n        (onPage)="pageIndexChange($event)">\r\n        <ng-template pTemplate="header" let-columns>\r\n            <tr>\r\n                <th></th>\r\n                <th *ngFor="let col of columns">\r\n                    {{col.header}} \r\n                </th>\r\n                <th *ngIf="(fromWoList ==false || fromWoList ==undefined) && !isView">Actions </th>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate="body" let-rowData let-i="rowIndex" let-columns="columns">\r\n            <tr [ngClass]="{\'color_pick\': rowData.isRoleUp==false }">\r\n                <td style="text-align: center;">\r\n                    <span *ngIf="rowData.partStatusId !=0">\r\n                        <i *ngIf="rowData.isRoleUp==false && rowData.isShowPlus ==true" class="fa fa-plus btn btn-success btn-cstm btn-xs"  matTooltip="Show stock line details" matTooltipPosition="above" style="padding: 3px 8px !important;" (click)="getRollupMaterialList(rowData,i)" ></i> \r\n                    </span>\r\n                    \x3c!-- <span *ngIf="rowData.partStatusId ==0">\r\n                        <i *ngIf="rowData.isRoleUp==false && rowData.isShowPlus ==true" class="fa fa-plus btn btn-default btn-cstm btn-xs ex-gray"  matTooltip="Show stock line details" matTooltipPosition="above" style="padding: 3px 8px !important;"></i>\r\n                    </span> --\x3e\r\n                    <i *ngIf="rowData.isRoleUp==false && rowData.isShowPlus ==false" class="fa fa-minus btn-danger btn-cstm btn-xs"  matTooltip="Show stock line details" matTooltipPosition="above" style="padding: 7px 8px !important;" (click)="removeRollUpList(rowData,i)"></i>   \r\n                </td>\r\n                <td *ngFor="let col of columns">\r\n                    <p *ngIf="col.field !=\'line\' && col.field !=\'memo\' && col.field !=\'defered\' && col.field !=\'stockLineNumber\' && col.field !=\'controlNo\' && col.field !=\'controlId\' && col.field !=\'receiver\' && col.field !=\'altEquiv\' " class="m-0 p-0"  [ngClass]="{align_rightset : (col && col.align ==1)}">  {{rowData[col.field]}}</p>\r\n                    <p *ngIf="col.field ==\'line\' && col.field !=\'memo\' && col.field !=\'defered\' && col.field !=\'stockLineNumber\' && col.field !=\'controlNo\' && col.field !=\'controlId\' && col.field !=\'receiver\'" class="m-0 p-0 text-right"> {{ rowData.line == undefined ?( i + 1):rowData.line }}</p>\r\n                    <p *ngIf="col.field ==\'stockLineNumber\' " [matTooltip]="rowData.stockLineNumber"  [matTooltipDisabled]="rowData.isMultipleStockLine == \'Single\'" matTooltipPosition="above" class="m-0"> {{ rowData.isMultipleStockLine== \'Single\' ? rowData[col.field] : rowData.isMultipleStockLine}}</p>\r\n                    <p *ngIf=" col.field ==\'controlNo\'" [matTooltip]="rowData.controlNo"  [matTooltipDisabled]="rowData.isMultipleControlNo == \'Single\'"  matTooltipPosition="above" class="m-0 p-0"> {{rowData.isMultipleControlNo== \'Single\' ? rowData[col.field] : rowData.isMultipleControlNo  }}</p>\r\n                    <p *ngIf=" col.field ==\'controlId\'" [matTooltip]="rowData.controlId"  [matTooltipDisabled]="rowData.isMultiplecontrolId == \'Single\'"  matTooltipPosition="above" class="m-0 p-0"> {{ rowData.isMultiplecontrolId== \'Single\' ? rowData[col.field] : rowData.isMultiplecontrolId }}</p>\r\n                    <p *ngIf=" col.field ==\'receiver\'" [matTooltip]="rowData.receiver"  [matTooltipDisabled]="rowData.isMultiplereceiver == \'Single\'"  matTooltipPosition="above" class="m-0 p-0"> {{ rowData.isMultiplereceiver== \'Single\' ? rowData[col.field] : rowData.isMultiplereceiver }}</p>\r\n                    <p *ngIf="col.field ==\'altEquiv\'">{{rowData.isAltPart ? \'Alternative\' : rowData.isEquPart ? \'Equivalent\' : \'-\'}}</p>\r\n                    <input type="checkbox" name="contract {{i}}" #contract="ngModel" *ngIf="col.field ==\'defered\'"\r\n                    class="form-control w60" [(ngModel)]="rowData.defered" style="pointer-events: none;margin-left: 43%;">\r\n                    \x3c!-- {{ (pageIndex - 1) * pageSize + i + 1 }} --\x3e\r\n                    <span *ngIf="col.field ==\'memo\'" [innerHTML]="rowData[col.field]" class="p_textEditor"></span>\r\n                </td>\r\n                <td class="materiallist-action" *ngIf="(fromWoList ==false || fromWoList ==undefined) && !isView">\r\n                    <span data-target="#addNewMaterials" data-toggle="modal"><button class="btn nobg btn-edit-cstm" (click)="edit(rowData)" matTooltip="Edit" matTooltipPosition="above"><i class="fa fa-pencil"></i></button></span>\r\n                    <span><button type="button" class="btn nobg btn-pluspo-cstm" (click)="createNewPoWorkOrder(rowData)" *ngIf="rowData.isRoleUp==false" [disabled]="!(rowData.quantity > rowData.quantityIssued + rowData.quantityReserved + rowData.partQuantityAvailable)"  matTooltip="Create PO" matTooltipPosition="above" [ngClass]="{\'btn_disabled\': !(rowData.quantity > (rowData.quantityIssued + rowData.quantityReserved + rowData.partQuantityAvailable))}"><i class="fa fa-plus"></i></button></span>\r\n                   \r\n                    <span *ngIf="!isSubWorkOrder && rowData.provision==\'Sub Work Order\'">\r\n                        <button type="button" class="btn nobg btn-pluspo-cstm" *ngIf="rowData.subWorkOrderId == 0" (click)="subWoClick(rowData)" [matTooltip]="rowData.subWorkOrderId ==0 ? \'Create Sub Work Order\' : \'Edit Sub Work Order\'" matTooltipPosition="above" [disabled]="!(rowData.partStatusId ==2 || rowData.partStatusId ==3)" >\r\n                        <i class="fa fa-plus grn_clr" style="color:green"  [ngClass]="{\'btn_disabled\':!(rowData.partStatusId ==2 || rowData.partStatusId ==3)}"></i>\r\n                        \x3c!-- && ( rowData.partStatusId !=0 || rowData.partStatusId !=null) --\x3e\r\n                    </button>\r\n                    <button type="button" class="btn nobg btn-pluspo-cstm" *ngIf="rowData.subWorkOrderId != 0" (click)="editSubWo(rowData)" [matTooltip]="rowData.subWorkOrderId ==0 ? \'Create Sub Work Order\' : \'Edit Sub Work Order\'" matTooltipPosition="above">\r\n                        <i class="fa fa-pencil grn_clr" style="color:green" ></i>\r\n                    </button>\r\n                </span>\r\n\r\n\r\n                <span *ngIf="!isSubWorkOrder && rowData.provision !=\'Sub Work Order\'">\r\n                    <button type="button" class="btn nobg btn-pluspo-cstm"  disabled >\r\n                    <i class="fa fa-plus" style="color: #b7b7b7;" ></i>\r\n                </button>\r\n            </span>\r\n\r\n\r\n\r\n                    \x3c!-- <span><button type="button" class="btn nobg btn-pluspo-cstm"  *ngIf="rowData.provision==\'Sub Work Order\'" matTooltip="Add to Sub Work Order" matTooltipPosition="above" [disabled]="rowData.provision!=\'Sub Work Order\'"><i class="fa fa-plus" style="color:green"></i></button></span> --\x3e\r\n                    <span><button type="button" class="btn nobg btn-delete-cstm" *ngIf="rowData.isRoleUp==false;" (click)="openDelete(content,rowData)"  [ngClass]="{\'btn_disabled\': rowData.quantityIssued==0}" [disabled]="rowData.quantityIssued==0" matTooltip="Delete" matTooltipPosition="above"><i class="fa fa-trash"></i></button> </span>\r\n                </td>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate="summary" id="footer">\r\n            <label id="footer" class="footer">Total:</label>\r\n            <input style="width: 5%;" [(ngModel)]="materialTble._totalRecords" [disabled]="true" pInputText\r\n                type="text" />\r\n            &nbsp;&nbsp;\r\n            <label id="footer" class="footer1">Pages Count:</label>\r\n            <input style="width: 5%;" [ngModel]="\r\n            getPageCount(materialTble._totalRecords, pageSize)\r\n          " [disabled]="true" pInputText type="text" />\r\n        </ng-template>\r\n    </p-table>\r\n</div>\r\n<div id="reserve" class="modal fade" role="dialog" data-backdrop="static">\r\n    <div class="modal-dialog modal-xlg">\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal" (click)="closeMaterial()">&times;</button>\r\n                <h4 class="modal-title" *ngIf="statusId === 1">Reserved Parts</h4>\r\n                <h4 class="modal-title" *ngIf="statusId === 2">Issued Parts</h4>\r\n                <h4 class="modal-title" *ngIf="statusId === 3">Reserve & Issue Parts</h4>\r\n                <h4 class="modal-title" *ngIf="statusId === 4">UnIssue Parts</h4>\r\n                <h4 class="modal-title" *ngIf="statusId === 5">UnReserve Parts</h4>\r\n                \x3c!-- <p id="clockdiv" class="clockdiv" *ngIf="counter"> Session Expire in  {{counter.min}} <span>m</span> : {{counter.sec}} <span>s</span></p> --\x3e\r\n                <p id="clockdiv" class="clockdiv" *ngIf="counter"> Session Expire in {{counter | formatTime}}</p>\r\n            </div>\r\n            <div class="form-row" style="margin-left: 15px;" *ngIf="statusId !== 2 && statusId !== 4 && statusId !== 5">\r\n                <div class="col-md-2">\r\n                    <p-checkbox class="p-checkbox-label-womaterial" name="task" binary="false" \r\n                        label="Include Alternate PN" (onChange)="resetAlternateParts($event)" [(ngModel)]="isShowAlternatePN">\r\n                    </p-checkbox>\r\n                </div>\r\n                <div class="col-md-4">\r\n                    <p-checkbox class="p-checkbox-label-womaterial" name="task" binary="false" label="Include Eq PN"\r\n                        (onChange)="resetEqParts($event)" [(ngModel)]="isShowEqPN"></p-checkbox>\r\n                </div> \r\n            </div>\r\n            <form #reserveData="ngForm">\r\n                <div class="modal-body" *ngIf="reservedList">\r\n                    <div class="table-responsive" id="workflow-attributes-block">\r\n                        <table class="table table-bordered table-border-modal">\r\n                            <thead> \r\n                                <tr>\r\n                                    <th class="text-center" colspan="1"></th>\r\n                                    <th *ngIf="isShowAlternatePN  " class="text-center" colspan="1"> </th>\r\n                                    <th *ngIf=" isShowEqPN" class="text-center" colspan="1"> </th>\r\n                                    <th colspan="11" class="text-center"> Materials</th>\r\n                                    <th colspan="2" class="text-center"> Stock</th>\r\n                                    \x3c!-- <th class="text-center" colspan="3" *ngIf="(statusId == 2 || statusId == 4 || statusId == 5)"></th>\r\n                                    *ngIf=" (statusId == 1 || statusId == 3)" --\x3e\r\n                                    <th class="text-center" colspan="4" ></th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th class="text-center" style="width:65px;">\r\n                                        Select All\r\n                                        <input type="checkbox" name="isSelectAll"\r\n                                        [(ngModel)]="isAllow"  (change)="allowAll($event.target.checked)">\r\n                                    </th>\r\n                                    <th *ngIf="isShowAlternatePN && (statusId == 1 || statusId == 3) " class="text-center">\r\n                                        Alternate Parts\r\n                                    </th>\r\n                                    <th *ngIf="isShowEqPN && (statusId == 1 || statusId == 3)" class="text-center">\r\n                                        Equivalent Parts\r\n                                    </th>\r\n                                    \r\n                                    <th *ngIf="(statusId == 2 || statusId == 4 || statusId == 5) && (showAlternateParts ||showEqParts) ">Alt/Equiv</th>\r\n                                    <th class="text-center" style="min-width: 110px;">PN </th>\r\n                                    <th class="text-center" style="min-width: 110px;">Part Description</th>\r\n                                    <th class="text-center" style="min-width: 96px;"> Alternate PN For</th>\r\n                                    <th class="text-center"> Cond Type</th>\r\n                                    <th class="text-center width-50"> Stk Type</th>\r\n                                    <th class="text-center width-50">Qty Req</th> \r\n                                    <th class="text-center width-50">Qty Res</th>\r\n                                    <th class="text-center" >  Qty To Be Reserved</th>\r\n                                    <th class="text-center" >\r\n                                        <span style="font-size: 10px !important;" *ngIf="statusId == 1 || statusId == 5 ">\r\n                                        {{ statusId != 5 ? \'Qty Actually Reserving\' : \'Qty Actually UnReserving\'}} </span>\r\n                                        <span style="font-size: 10px !important;" *ngIf="statusId == 2 || statusId == 4 ">\r\n                                            {{ statusId != 4  ?  \'Qty Actually Issuing\' : \'Qty Actually UnIssuing\'}}\r\n                                        </span>\r\n                                        <span style="font-size: 10px !important;" *ngIf="statusId == 3"> Qty Actually Resver & Issue</span>\r\n                                    </th>\r\n                                 <th class="text-center"> Qty  Issued   </th>\r\n                                    <th class="text-center" *ngIf="statusId !==2 && statusId !==4"> Qty To Be Issued\r\n                                    </th>\r\n                                    <th class="text-center" *ngIf="statusId === 2  || statusId === 4"> Qty To Be Issued\r\n                                    </th>\r\n                                   <th class="text-center"> Qty on Hand </th>\r\n                                    <th class="text-center width-50"> Qty Avail </th>\r\n                                    <th class="text-center"> Qty on Order </th>\r\n                                    <th class="text-center" *ngIf="statusId === 1 || statusId === 5 ">\r\n                                        {{statusId == 1 ? \'Reserved\' : \'UnReserved\'  }} Date</th>\r\n                                        <th class="text-center" *ngIf="statusId === 2 || statusId === 3 || statusId === 4">\r\n                                            {{statusId === 2  ? \'Issued\'  : \r\n                                        statusId === 3 ? \'Reserved & Issued\'  \r\n                                        : \'UnIssued\' \r\n                                         }}\r\n                                            Date</th>\r\n                                    <th class="text-center" *ngIf="statusId === 1 || statusId === 5">\r\n                                        {{statusId === 1 ? \'Reserved\' : \'UnReserved\'}} By</th>\r\n                                    <th class="text-center" *ngIf="statusId === 2 || statusId === 3 || statusId === 4">\r\n                                        {{statusId === 2  ? \'Issued\' : statusId === 3 ? \'Reserved & Issued\'  :\'UnIssued\'  }}\r\n                                        By</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <ng-container *ngFor="let x of reservedList; let i=index;" >\r\n                                <tr>\r\n                                    <td style="text-align: center;">\r\n                                      <input type="checkbox" name="isParentSelected{{i}}" *ngIf="(statusId === 1 || statusId === 5)"\r\n                                            [(ngModel)]="x.isParentSelected" (change)="selectedParts(x,$event)" [disabled]="x.quantityReserved==0">\r\n                                            <input type="checkbox" name="isParentSelected{{i}}" *ngIf="(statusId === 2 || statusId === 3 || statusId === 4)"\r\n                                            [(ngModel)]="x.isParentSelected" (change)="selectedParts(x,$event)" [disabled]="x.quantityIssued==0">\r\n                                        </td>\r\n                                    <td *ngIf="isShowAlternatePN && (statusId == 1 || statusId == 3)" style="text-align: center;">\r\n                                       <input type="checkbox" name="showAlternateParts{{i}}" \r\n                                            (ngModelChange)="showAlternateParts($event , x.woReservedIssuedAltParts)"\r\n                                            [(ngModel)]="x.showAlternateParts" >\r\n                                    </td>\r\n                                    <td *ngIf="isShowEqPN && (statusId == 1 || statusId == 3)" style="text-align: center;">\r\n                                        <input type="checkbox" name="showEqParts{{i}}"\r\n                                            (ngModelChange)="showEquantParts($event , x.woReservedIssuedEquParts)" \r\n                                            [(ngModel)]="x.showEqParts">\r\n                                    </td>\r\n                                    <th *ngIf="(statusId == 2 || statusId == 4 || statusId == 5)"></th>\r\n                                    <td>{{x.partNumber}}</td>\r\n                                    <td>{{x.partDescription}}</td>\r\n                                    <td></td>\r\n                                    <td>{{x.condition}}</td>\r\n                                    <td>{{x.stockType}}</td>\r\n                                    <td class="tex_end">\r\n                                        {{x.quantity}}\r\n                                    </td>\r\n                                    <td class="tex_end">\r\n                                        {{x.quantityAlreadyReserved}}\r\n                                    </td>\r\n                                    <td class="tex_end" *ngIf="(statusId === 1 || statusId === 5)">\r\n                                        {{ statusId !=5  ? x.qtyToBeReserved : x.qtyToBeReserved}}\r\n                                    </td>\r\n                                    <td class="tex_end" *ngIf="(statusId === 2 || statusId === 3 || statusId === 4)">\r\n                                        {{x.qtyToBeReserved}}  \r\n                                    </td>\r\n                                    <td *ngIf="(statusId === 1 || statusId === 5)">\r\n                                        <input type="number" name="quantity{{i}}" [(ngModel)]="x.quantityReserved"  (keypress)="restrictMinus($event)"\r\n                                            (keyup)="validatePartsQuantity($event,x)" [disabled]="!x.isParentSelected">\r\n                                    </td>\r\n                                    <td *ngIf="(statusId === 2 || statusId === 3 || statusId === 4)">\r\n                                        <input type="number" name="quantity{{i}}" [(ngModel)]="x.quantityIssued" (keypress)="restrictMinus($event)"\r\n                                            (keyup)="validatePartsQuantity($event,x)" \r\n                                            [disabled]="!x.isParentSelected">\r\n                                    </td>\r\n                                    <td class="tex_end">\r\n                                        {{x.quantityAlreadyIssued}} \r\n                                    </td>\r\n                                    <td  class="tex_end">\r\n                                        {{x.qtyToBeIssued}} \r\n                                    </td>\r\n                                    <td class="tex_end">{{x.quantityOnHand}}</td>\r\n                                    <td class="tex_end">{{x.quantityAvailable}}</td>\r\n                                    <td class="tex_end">{{x.quantityOnOrder}}</td>\r\n                                    <td *ngIf="statusId != 2 && statusId != 3 && statusId != 4">\r\n                                        <p-calendar [showIcon]="true" class="calender-cstm" name="reservedDate{{i}}"\r\n                                            #reservedDate="ngModel" [required]="x.isParentSelected" [maxDate]="minDateValue"\r\n                                            [(ngModel)]="x.reservedDate" [maxDate]="minDateValue" disabled>\r\n                                        </p-calendar>\r\n                                        \x3c!-- [disabled]="!x.isParentSelected" --\x3e\r\n                                    </td>\r\n                                    <td *ngIf="statusId != 1 &&  statusId != 5 ">\r\n                                        <p-calendar [showIcon]="true" class="calender-cstm" name="issuedDate{{i}}"\r\n                                            #issuedDate="ngModel" [(ngModel)]="x.issuedDate" [maxDate]="minDateValue"\r\n                                            [required]="x.isParentSelected" [maxDate]="minDateValue" disabled>\r\n                                        </p-calendar>\r\n                                    </td>\r\n                                    <td *ngIf="statusId != 2 && statusId  != 3 && statusId != 4">\r\n                                        \x3c!-- <p-dropdown [options]="employeesOriginalData" name="reservedBy{{i}}"\r\n                                            #reservedBy="ngModel" placeholder="Select "\r\n                                            class="p-dropdown-custom-md-Header-table" [(ngModel)]="x.reservedById"\r\n                                            [required]="x.isParentSelected" [disabled]="!x.isParentSelected">\r\n                                        </p-dropdown> --\x3e\r\n                                        <p-autoComplete field="name"\r\n                                        [(ngModel)]="x.reservedById" \r\n                                        name="reservedBy{{i}}" #reservedBy="ngModel"\r\n                                        errorMessage="Records not found" [forceSelection]="true"\r\n                                        [dropdown]="true" [suggestions]="employeeList"\r\n                                        (completeMethod)="filterEmployee($event)"\r\n                                        (onClear)="clearautoCompleteInput(workOrderGeneralInformation, \'employeeId\' )"\r\n                                        [size]="30" [minLength]="1" [dropdown]="true"\r\n                                        class="p-autoComplete-ctsm"  [required]="x.isParentSelected" [disabled]="!x.isParentSelected">\r\n                                    </p-autoComplete>\r\n                                    </td>\r\n                                    <td *ngIf="statusId != 1 && statusId != 5 ">\r\n                                        \x3c!-- <p-dropdown [options]="employeesOriginalData" name="issuedBy{{i}}"\r\n                                            #issuedBy="ngModel" placeholder="Select "\r\n                                            class="p-dropdown-custom-md-Header-table" [(ngModel)]="x.issuedById"\r\n                                             [required]="x.isParentSelected" [disabled]="!x.isParentSelected">\r\n                                        </p-dropdown> --\x3e\r\n                                        <p-autoComplete field="name"\r\n                                        [(ngModel)]="x.issuedById"\r\n                                        name="issuedBy{{i}}" #issuedBy="ngModel"\r\n                                        errorMessage="Records not found" [forceSelection]="true"\r\n                                        [dropdown]="true" [suggestions]="employeeList"\r\n                                        (completeMethod)="filterEmployee($event)"\r\n                                        (onClear)="clearautoCompleteInput(workOrderGeneralInformation, \'employeeId\' )"\r\n                                        [size]="30" [minLength]="1" [dropdown]="true"\r\n                                        class="p-autoComplete-ctsm"  [required]="x.isParentSelected" [disabled]="!x.isParentSelected">\r\n                                    </p-autoComplete>\r\n\r\n                                    </td> \r\n                                </tr>\r\n                                <ng-container *ngIf="x.showAlternateParts==true" >\r\n                                <tr *ngFor="let b of x.woReservedIssuedAltParts; let y=index;">\r\n                                    <td style="text-align: center;">\r\n                                        <input type="checkbox" [(ngModel)]="b.isChildSelected"\r\n                                            name="isChildSelected{{y}}" (change)="selectedParts(b,$event)">\r\n                                    </td>\r\n                                    \x3c!-- <td  > --\x3e\r\n                                        \x3c!-- *ngIf="isShowAlternatePN" --\x3e\r\n                                    \x3c!-- </td> --\x3e\r\n                                    <td  *ngIf="isShowAlternatePN && (statusId == 1 || statusId == 3)">\r\n                                    </td>\r\n                                    <td *ngIf="isShowEqPN && (statusId == 1 || statusId == 3)">\r\n                                    </td>\r\n                                    <td  *ngIf="statusId == 2 || statusId == 4 || statusId == 5">\r\n                                        <span>Alternative</span>\r\n                                        \x3c!-- <span>Equivalent</span> --\x3e\r\n                                    </td>\r\n                                    <td>{{b.altPartNumber}}</td>\r\n                                    <td>{{b.altPartDescription}}</td>\r\n                                    <td>{{b.parentPartNo}}</td>\r\n\r\n\r\n                                    <td>{{b.condition}}</td>\r\n                                    <td>{{b.stockType}}</td>\r\n                                    <td class="tex_end">\r\n                                        {{b.quantity}}\r\n                                    </td>\r\n                                    <td class="tex_end"> {{b.quantityAlreadyReserved}}</td> \r\n                                    \x3c!-- <td *ngIf="(statusId !== 1 && statusId !== 5)">\r\n                                        {{b.quantityReserved}}\r\n                                    </td> --\x3e\r\n                                    <td class="tex_end">\r\n                                        {{b.qtyToBeReserved}}   \r\n                                    </td>\r\n                                    <td *ngIf="(statusId === 1 || statusId === 5)">\r\n                                        <input type="number" name="quantity1_{{y}}" [(ngModel)]="b.quantityReserved" (keypress)="restrictMinus($event)"\r\n                                            (keyup)="validatePartsQuantity($event,b)" (input)="childPartValidate($event.target.value, b,1)"\r\n                                            [disabled]="!b.isChildSelected">\r\n\r\n                                    </td>\r\n                                    <td *ngIf="(statusId === 2 || statusId === 3 || statusId === 4)">\r\n\r\n                                        <input type="number" name="quantity2_{{y}}" [(ngModel)]="b.quantityIssued" (keypress)="restrictMinus($event)"\r\n                                            (keyup)="validatePartsQuantity($event,b)"\r\n                                            (input)="childPartValidate($event.target.value, b,1)"\r\n                                            [disabled]="!b.isChildSelected">\r\n                                    </td>\r\n                                    <td class="tex_end">{{b.quantityAlreadyIssued}}</td>\r\n                                    \x3c!-- <td *ngIf="(statusId !== 2 && statusId !== 3 && statusId !== 4)">\r\n                                        {{b.quantityIssued}}\r\n                                    </td> --\x3e\r\n                                    <td class="tex_end">{{b.qtyToBeIssued}}</td>\r\n                                    <td class="tex_end">\r\n                                        {{b.quantityOnHand}}\r\n                                        \x3c!-- <input type="number" name="alterHand{{i}}" [(ngModel)]="b.quantityOnHand"> --\x3e\r\n                                    </td>\r\n                                    <td class="tex_end">\r\n                                        {{b.quantityAvailable}}\r\n                                        \x3c!-- <input type="number" name="alterAvailable{{i}}" [(ngModel)]="b.quantityAvailable"> --\x3e\r\n                                    </td>\r\n                                    <td class="tex_end">\r\n                                        {{b.quantityOnOrder}}\r\n                                        \x3c!-- <input type="number" name="alterOrder{{i}}" [(ngModel)]="b.quantityOnOrder"> --\x3e\r\n                                    </td>\r\n                                    <td *ngIf="statusId != 2 && statusId != 3 && statusId != 4">\r\n                                        <p-calendar [showIcon]="true" class="calender-cstm" name="reservedDateAlt{{y}}"\r\n                                            #reservedDateAlt="ngModel" [required]="b.isChildSelected" disabled\r\n                                            [(ngModel)]="b.reservedDate"></p-calendar>\r\n                                            \x3c!-- [disabled]="!b.isChildSelected" --\x3e\r\n                                    </td>\r\n                                    <td *ngIf="statusId != 1 &&  statusId != 5 ">\r\n                                        <p-calendar [showIcon]="true" class="calender-cstm" name="issuedDateAlt{{y}}"\r\n                                            #issuedDateAlt="ngModel" [(ngModel)]="b.issuedDate" disabled\r\n                                            [required]="b.isChildSelected">\r\n                                        </p-calendar>\r\n\r\n                                    </td>\r\n                                    <td *ngIf="statusId != 2 && statusId  != 3 && statusId != 4">\r\n                                        \x3c!-- <p-dropdown [options]="employeesOriginalData" name="reservedByAlt{{y}}"\r\n                                            #reservedByAlt="ngModel" placeholder="Select " [disabled]="!b.isChildSelected"\r\n                                            class="p-dropdown-custom-md-Header-table" [(ngModel)]="b.reservedById"\r\n                                            [required]="b.isChildSelected">\r\n                                        </p-dropdown> --\x3e\r\n\r\n                                        <p-autoComplete field="name"\r\n                                       [(ngModel)]="b.reservedById"\r\n                                       name="reservedByAlt{{y}}" #reservedByAlt="ngModel"\r\n                                        errorMessage="Records not found" [forceSelection]="true"\r\n                                        [dropdown]="true" [suggestions]="employeeList"\r\n                                        (completeMethod)="filterEmployee($event)"\r\n                                        (onClear)="clearautoCompleteInput(workOrderGeneralInformation, \'employeeId\' )"\r\n                                        [size]="30" [minLength]="1" [dropdown]="true"\r\n                                        class="p-autoComplete-ctsm"   [required]="b.isChildSelected"  [disabled]="!b.isChildSelected">\r\n                                    </p-autoComplete>\r\n\r\n\r\n                                    </td>\r\n                                    <td *ngIf="statusId != 1 && statusId != 5 ">\r\n                                        \x3c!-- <p-dropdown [options]="employeesOriginalData" name="issuedByAlt{{y}}"\r\n                                            #issuedByAlt="ngModel" placeholder="Select " [disabled]="!b.isChildSelected"\r\n                                            class="p-dropdown-custom-md-Header-table" [(ngModel)]="b.issuedById"\r\n                                            required [required]="b.isChildSelected">\r\n                                        </p-dropdown> --\x3e\r\n                                        <p-autoComplete field="name"\r\n                                        [(ngModel)]="b.issuedById"\r\n                                        name="issuedByAlt{{y}}" #issuedByAlt="ngModel"\r\n                                         errorMessage="Records not found" [forceSelection]="true"\r\n                                         [dropdown]="true" [suggestions]="employeeList"\r\n                                         (completeMethod)="filterEmployee($event)"\r\n                                         (onClear)="clearautoCompleteInput(workOrderGeneralInformation, \'employeeId\' )"\r\n                                         [size]="30" [minLength]="1" [dropdown]="true"\r\n                                         class="p-autoComplete-ctsm"   [required]="b.isChildSelected"  [disabled]="!b.isChildSelected">\r\n                                     </p-autoComplete>\r\n\r\n                                    </td>\r\n                                </tr>\r\n                                </ng-container>\r\n                                <ng-container *ngIf="x.showEqParts==true" >\r\n                                <tr *ngFor="let c of x.woReservedIssuedEquParts; let z=index; ">\r\n                                    <td style="text-align: center;">\r\n                                        <input type="checkbox" [(ngModel)]="c.isChildSelected"\r\n                                            name="isChildSelected{{z}}" (change)="selectedParts(c,$event)">\r\n                                    </td>\r\n                                    <td  *ngIf="isShowAlternatePN && (statusId == 1 || statusId == 3)">\r\n                                    </td>\r\n                                    <td *ngIf="isShowEqPN && (statusId == 1 || statusId == 3)">\r\n                                    </td>\r\n\r\n                                    \x3c!-- <td *ngIf="isShowAlternatePN" style="text-align: center;">\r\n                                        <input type="checkbox" name="showAlternateParts{{i}}" \r\n                                             (ngModelChange)="showAlternateParts($event , x.woReservedIssuedAltParts)"\r\n                                             [(ngModel)]="x.showAlternateParts" >\r\n                                     </td>\r\n                                     <td *ngIf="isShowEqPN" style="text-align: center;">\r\n                                         <input type="checkbox" name="showEqParts{{i}}"\r\n                                             (ngModelChange)="showEquantParts($event , x.woReservedIssuedEquParts)" \r\n                                             [(ngModel)]="x.showEqParts">\r\n                                     </td> --\x3e\r\n                                     <td  *ngIf="statusId == 2 || statusId == 4 || statusId == 5">\r\n                                         \x3c!-- <span>Alternative</span> --\x3e\r\n                                         <span>Equivalent</span>\r\n                                     </td>\r\n\r\n\r\n                                    <td>{{c.equPartNumber}}</td>\r\n                                    <td>{{c.equPartDescription}}</td>\r\n                                    <td>{{c.parentPartNo}}</td>\r\n                                    <td>{{c.condition}}</td>\r\n                                    <td>{{c.stockType}}</td>\r\n                                    <td class="tex_end">\r\n                                        {{c.quantity}}\r\n                                    </td>\r\n                                    <td class="tex_end">{{c.quantityAlreadyReserved}}</td>\r\n                                   <td class="tex_end">\r\n                                        {{c.qtyToBeReserved}}  \r\n                                    </td>\r\n                                    <td *ngIf="(statusId === 1 || statusId === 5)">\r\n                                        <input type="number" name="quantity11_{{z}}" [(ngModel)]="c.quantityReserved" (keypress)="restrictMinus($event)"\r\n                                            (keyup)="validatePartsQuantity($event,c)" (input)="childPartValidate($event.target.value, c,2)"\r\n                                            [disabled]="!c.isChildSelected">\r\n                                    </td>\r\n                                    <td *ngIf="(statusId === 2 || statusId === 3 || statusId === 4)">\r\n                                        <input type="number" name="quantity22_{{z}}" [(ngModel)]="c.quantityIssued"\r\n                                            (keyup)="validatePartsQuantity($event,c)" (keypress)="restrictMinus($event)"\r\n                                             (input)="childPartValidate($event.target.value, c,2)"\r\n                                            [disabled]="!c.isChildSelected">\r\n                                    </td>\r\n                                    <td class="tex_end">{{c.quantityAlreadyIssued}}</td>\r\n                                  <td class="tex_end">{{c.qtyToBeIssued}}</td>\r\n                                    <td class="tex_end">\r\n                                        {{c.quantityOnHand}}\r\n                                    </td>\r\n                                    <td class="tex_end">\r\n                                        {{c.quantityAvailable}}\r\n                                    </td>\r\n                                    <td class="tex_end">\r\n                                        {{c.quantityOnOrder}}\r\n                                    </td>\r\n                                    <td *ngIf="statusId != 2 && statusId != 3 && statusId != 4">\r\n                                        <p-calendar [showIcon]="true" class="calender-cstm" name="reservedDateEq{{i}}"\r\n                                            #reservedDateEq="ngModel" [required]="c.isChildSelected" [maxDate]="minDateValue" disabled\r\n                                            [(ngModel)]="c.reservedDate"></p-calendar>\r\n                                            \x3c!-- [disabled]="!c.isChildSelected" --\x3e\r\n                                    </td>\r\n                                    <td *ngIf="statusId != 1 &&  statusId != 5 ">\r\n                                        \x3c!-- [disabled]="!c.isChildSelected" --\x3e\r\n                                        <p-calendar [showIcon]="true" class="calender-cstm" name="issuedDateEq{{z}}"\r\n                                            #issuedDateEq="ngModel" [(ngModel)]="c.issuedDate" [maxDate]="minDateValue" disabled\r\n                                            [required]="c.isChildSelected"  >\r\n                                        </p-calendar>\r\n                                    </td>\r\n                                    <td *ngIf="statusId != 2 && statusId  != 3 && statusId != 4">\r\n                                        \x3c!-- <p-dropdown [options]="employeesOriginalData" name="reservedByEq{{z}}"\r\n                                            #reservedByEq="ngModel" placeholder="Select " \r\n                                            class="p-dropdown-custom-md-Header-table" [(ngModel)]="c.reservedById"\r\n                                            [required]="c.isChildSelected"  [disabled]="!c.isChildSelected">\r\n                                        </p-dropdown> --\x3e\r\n\r\n                                        <p-autoComplete field="name"\r\n                                        [(ngModel)]="c.reservedById"\r\n                                        name="reservedByEq{{z}}" #reservedByEq="ngModel"\r\n                                         errorMessage="Records not found" [forceSelection]="true"\r\n                                         [dropdown]="true" [suggestions]="employeeList"\r\n                                         (completeMethod)="filterEmployee($event)"\r\n                                         (onClear)="clearautoCompleteInput(workOrderGeneralInformation, \'employeeId\' )"\r\n                                         [size]="30" [minLength]="1" [dropdown]="true"\r\n                                         class="p-autoComplete-ctsm"  [required]="c.isChildSelected"  [disabled]="!c.isChildSelected">\r\n                                     </p-autoComplete>\r\n                                    </td>\r\n                                    <td *ngIf="statusId != 1 && statusId != 5 ">\r\n                                        \x3c!-- <p-dropdown [options]="employeesOriginalData" name="issuedByEq{{z}}"\r\n                                            #issuedByEq="ngModel" placeholder="Select "\r\n                                            class="p-dropdown-custom-md-Header-table" [(ngModel)]="c.issuedById"\r\n                                            required [required]="c.isChildSelected"  [disabled]="!c.isChildSelected">\r\n                                        </p-dropdown> --\x3e\r\n\r\n                                        <p-autoComplete field="name"\r\n                                        [(ngModel)]="c.issuedById"\r\n                                        name="issuedByEq{{z}}" #issuedByEq="ngModel"\r\n                                         errorMessage="Records not found" [forceSelection]="true"\r\n                                         [dropdown]="true" [suggestions]="employeeList"\r\n                                         (completeMethod)="filterEmployee($event)"\r\n                                         (onClear)="clearautoCompleteInput(workOrderGeneralInformation, \'employeeId\' )"\r\n                                         [size]="30" [minLength]="1" [dropdown]="true"\r\n                                         class="p-autoComplete-ctsm"   [required]="c.isChildSelected"  [disabled]="!c.isChildSelected">\r\n                                     </p-autoComplete> \r\n                                    </td>\r\n                                </tr>\r\n                            </ng-container>\r\n                        </ng-container>\r\n                            </tbody>\r\n                        </table>\r\n                        <div style="float:right">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \x3c!-- !((checkedParts.length>0) && --\x3e\r\n                \x3c!-- !(checkedParts.length>0) && --\x3e\r\n                \x3c!-- !reserveData.valid  && --\x3e\r\n                <div class="modal-footer">\r\n                    <button class="btn btn-primary btn-primary" data-dismiss="modal" (click)="saveRIPart()"\r\n                        [disabled]="!savebutonDisabled "\r\n                        style="padding: 6px 12px !important;">\r\n                    <span *ngIf="statusId === 1">Reserve</span>\r\n                    <span *ngIf="statusId === 2">Issue</span>\r\n                    <span *ngIf="statusId === 3">Reserve & Issue</span>\r\n                    <span *ngIf="statusId === 4"> UnIssue</span>\r\n                    <span *ngIf="statusId === 5">UnReserve</span>\r\n                    \r\n                    </button>\r\n                    <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="closeMaterial()" style="height: 30px;">Cancel</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n<ng-template #timerAlertNotfi let-c="close" let-d="dismiss">\r\n    <div class="modal-header">\r\n      <button type="button" class="close" data-dismiss="modal" (click)="dismissTimerAlert()">&times;</button>\r\n      <h4 class="modal-title">Confirmation</h4>\r\n    </div>\r\n    <div class="modal-body">\r\n      <h6 class="text-center">\r\n        your session getting timeout do you want to reset the time\r\n      </h6>\r\n    </div>\r\n    <div class="modal-footer">\r\n  \r\n      <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="dismissTimerAlert()">No</button>\r\n      <button type="button" class="btn btn-primary" data-dismiss="modal" (click)="actionTimerReset()">Yes</button>\r\n    </div>\r\n  </ng-template>\r\n\r\n  <ng-template #tabRedirectConfirmationModal let-c="close" let-d="dismiss">\r\n    <div class="modal-header">\r\n      <button\r\n        type="button"\r\n        class="close"\r\n        data-dismiss="modal"\r\n        (click)="dismissModel()"\r\n      >\r\n        &times;\r\n      </button>\r\n      <h4 class="modal-title">Confirmation</h4>\r\n    </div>\r\n    <div class="modal-body">\r\n      <h6 class="text-center">\r\nDo you  to  create new Sub Work Order  or Add to existing Work Order ?\r\n      </h6>\r\n    </div>\r\n    <div class="modal-footer">\r\n      <button  type="button"  class="btn btn-danger" data-target="#existingSubWo" data-toggle="modal" data-dismiss="modal"   (click)="addToExistingSubWo()">\r\n        Add to Existing Record\r\n      </button>\r\n      <button\r\n        type="button"\r\n        class="btn btn-primary" data-dismiss="modal" (click)="createNewSubWo()">\r\n        Create New </button>\r\n    </div>\r\n  </ng-template>\r\n  <div id="existingSubWo" class="modal fade" role="dialog" data-backdrop="static" >\r\n    <div class="modal-dialog modal-xl">\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Sub Work Order List</h4>\r\n            </div>\r\n            <div class="modal-body" *ngIf="subWoRecord && subWoRecord.workOrderMaterialsId !=0 && viewSubWolist==true">\r\n                <app-sub-work-orderlist [workOrderId]="workOrderId" [mpnId]="mpnId" [forSubWorkOrder]="true" [workOrderMaterialsId]="subWoRecord.workOrderMaterialsId" >\r\n                </app-sub-work-orderlist>\r\n                \x3c!-- [requiredQty]="subWoRecord.workOrderMaterialsId" --\x3e\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="dismissModel2()" style="height: 30px;">Close</button>\r\n            </div>\r\n            </div> \r\n    </div>\r\n  </div> \r\n  <ng-template #content let-c="close" let-d="dismiss">\r\n    <div class="modal-header">\r\n        \r\n        <h4 class="modal-title">Are You Sure Want to Delete?</h4>\r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n  \r\n        \r\n        </button>\r\n      \r\n    </div>\r\n\x3c!--   \r\n    <div class="modal-body">\r\n        <strong>\r\n            Task Name:\r\n            <span class="new-label">{{currentRow.taskName}}</span>\r\n        </strong>\r\n    </div> --\x3e\r\n  \r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-primary" (click)="delete()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n    </div>\r\n  \r\n  \r\n  </ng-template>\r\n\r\n  <div class="preloader" *ngIf="isSpinnerVisible">\r\n    <div class="loading">\r\n        <div class="lds-roller">\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    </div>\r\n</div>'},DZXs:function(e,r,t){"use strict";t.r(r),r.default=""},EBTQ:function(e,r,t){"use strict";t.r(r),r.default='<div class="card">\r\n  <div class="card-body p-t-0">\r\n    <h3>Billing/Invoicing</h3>\r\n    <form #billinForm="ngForm">\r\n      <div class="row">\r\n        <div class="col-md-5">\r\n          <div class="card">\r\n            <div class="card-body" *ngIf="billingorInvoiceForm">\r\n              <div class="row">\r\n                <div class="col-md-6">\r\n                  <div class="form-group ">\r\n                    <label> Invoice Type <span class="clr-red">*</span></label>\r\n                    <p-dropdown \r\n                    [options]="invoiceTypeList"\r\n                    name="invoiceType"\r\n                    #invoiceType="ngModel"\r\n                    placeholder="Select"\r\n                    class="p-dropdown-custom-md-Header"\r\n                    [(ngModel)]="billingorInvoiceForm.invoiceTypeId" [disabled]="isViewMode" required\r\n                  >\r\n                  </p-dropdown>\r\n                  </div>\r\n                </div>\r\n                <div class="col-md-6">\r\n                  <div class="form-group ">\r\n                    <label> REV Type </label>\r\n                    <input\r\n                      type="number"\r\n                      class="form-control wo-input"\r\n                      name="revType"\r\n                      #revType="ngModel"\r\n                      [(ngModel)]="billingorInvoiceForm.revType"\r\n                      [disabled]="isViewMode"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class="row">\r\n                <div class="col-md-6">\r\n                  <div class="form-group ">\r\n                    <label> Invoice Number </label>\r\n                    <input\r\n                      type="text"\r\n                      class="form-control wo-input"\r\n                      name="invoiceNumber"\r\n                      #invoiceNumber="ngModel"\r\n                      [(ngModel)]="billingorInvoiceForm.invoiceNo"\r\n                      [disabled] = "isViewMode"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div class="col-md-6">\r\n                  <div class="form-group ">\r\n                    <label> WO Type </label>\r\n                    <input\r\n                      type="text"\r\n                      class="form-control wo-input"\r\n                      name="woType"\r\n                      #woType="ngModel"\r\n                      disabled\r\n                      [(ngModel)]="billingorInvoiceForm.woType"\r\n                      [disabled]="isViewMode"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class="row">\r\n                <div class="col-md-6">\r\n                  <div class="form-group ">\r\n                    <label> Customer Ref </label>\r\n                    <input\r\n                      type="text"\r\n                      class="form-control wo-input"\r\n                      name="customerRef"\r\n                      #customerRef="ngModel"\r\n                      disabled\r\n                      [(ngModel)]="billingorInvoiceForm.customerRef"\r\n                      [disabled]="isViewMode"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div class="col-md-6">\r\n                  <div class="form-group ">\r\n                    <label> Work Scope <span class="clr-red">*</span></label>\r\n                    <input\r\n                      type="text"\r\n                      class="form-control wo-input"\r\n                      name="workScope"\r\n                      #workScope="ngModel"\r\n                      [(ngModel)]="billingorInvoiceForm.workScope"\r\n                      disabled\r\n                      required\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class="row">\r\n                <div class="col-md-6">\r\n                  <div class="form-group ">\r\n                    <label> Invoice Date <span class="clr-red">*</span></label>\r\n                    <p-calendar\r\n                      [showIcon]="true"\r\n                      class="calender-cstm"\r\n                      [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100"\r\n                      name="invoiceDate"\r\n                      #invoiceDate="ngModel"\r\n                      [(ngModel)]="billingorInvoiceForm.invoiceDate"\r\n                      [disabled]="isViewMode"\r\n                      required\r\n                    ></p-calendar>\r\n                  </div>\r\n                </div>\r\n                <div class="col-md-6">\r\n                  <div class="form-group ">\r\n                    <label> WO Open Date </label>\r\n                    <p-calendar\r\n                      [showIcon]="true"\r\n                      class="calender-cstm"\r\n                      [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100"\r\n                      name="woOpenDate"\r\n                      #woOpenDate="ngModel"\r\n                      [disabled]=true\r\n                      [(ngModel)]="billingorInvoiceForm.woOpenDate"\r\n                      [disabled]="isViewMode"\r\n                    ></p-calendar>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n \r\n              <div class="row">\r\n                <div class="col-md-6">\r\n                  <div class="form-group ">\r\n                    <label> Time <span class="clr-red">*</span></label>\r\n                    <p-calendar\r\n                      name="invoiceTime"\r\n                      class="billInvoiceTime"\r\n                      [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100"\r\n                      #invoiceTime="ngModel"\r\n                      [timeOnly]="true"\r\n                      [(ngModel)]="billingorInvoiceForm.invoiceTime"\r\n                      showTime="true"\r\n                      hourFormat="24" \r\n                      [disabled]="isViewMode" required\r\n                    ></p-calendar>\r\n                    \x3c!-- <p-calendar  [(ngModel)]="billingorInvoiceForm.invoiceTime" required [disabled]="isViewMode" showTime="true" hourFormat="24"></p-calendar> --\x3e\r\n                  </div>\r\n                </div>\r\n                <div class="col-md-6">\r\n                  <div class="form-group ">\r\n                    <label> Sales Person </label>\r\n                    <input\r\n                      type="text"\r\n                      class="form-control wo-input"\r\n                      name="salesPerson"\r\n                      #salesPerson="ngModel"\r\n                      disabled\r\n                      [(ngModel)]="billingorInvoiceForm.salesPerson"\r\n                      [disabled]="isViewMode"\r\n                    />\r\n\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class="row">\r\n                <div class="col-md-6">\r\n                  <div class="form-group ">\r\n                    <label> Print Date </label>\r\n                    <p-calendar\r\n                      [showIcon]="true"\r\n                      class="calender-cstm"\r\n                      [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100"\r\n                      name="printDate"\r\n                      #printDate="ngModel"\r\n                      [(ngModel)]="billingorInvoiceForm.printDate"\r\n                      [disabled]="isViewMode"\r\n                    ></p-calendar>\r\n                  </div>\r\n                </div>\r\n                <div class="col-md-6">\r\n                  <div class="form-group">\r\n                    <label for="credit" style="width: 100%;"\r\n                      >Currency <span class="clr-red">*</span>\r\n                    </label>\r\n                    <p-dropdown\r\n                      [options]="currencyList"\r\n                      name="currency"\r\n                      #currency="ngModel" required\r\n                      placeholder="Select"\r\n                      class="p-dropdown-custom-md-Header"\r\n                      [(ngModel)]="billingorInvoiceForm.currencyId"\r\n                      [disabled]="isViewMode"\r\n                    >\r\n                    </p-dropdown>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class="row">\r\n                <div class="col-md-6">\r\n                  <div class="form-group ">\r\n                    <label> Ship Date </label>\r\n                    <p-calendar\r\n                      [showIcon]="true"\r\n                      [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100"\r\n                      class="calender-cstm"\r\n                      name="shipDate"\r\n                      #shipDate="ngModel"\r\n                      [(ngModel)]="billingorInvoiceForm.shipDate"\r\n                      [disabled]="isViewMode"\r\n                    ></p-calendar>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class="col-md-6">\r\n                  <div class="form-group ">\r\n                    <label> Available Credit</label>\r\n                    <input\r\n                      type="number"\r\n                      class="form-control wo-input"\r\n                      name="salePerson"\r\n                      #salePerson="ngModel"\r\n                      [(ngModel)]="billingorInvoiceForm.availableCredit"\r\n                      [disabled]="isViewMode"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class="row">\r\n                <div class="col-md-6">\r\n                  <div class="form-group ">\r\n                    <label> No of Pieces </label>\r\n                    <input\r\n                      type="number"\r\n                      class="form-control wo-input"\r\n                      name="noofPieces"\r\n                      #noofPieces="ngModel"\r\n                      [(ngModel)]="billingorInvoiceForm.noofPieces"\r\n                      [disabled]="isViewMode"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div class="col-md-6">\r\n                  <div class="form-group ">\r\n                    <label>Credit Terms </label>\r\n                    <input\r\n                      type="text"\r\n                      class="form-control wo-input"\r\n                      name="creditTerms"\r\n                      #creditTerms="ngModel"\r\n                      disabled\r\n                      [(ngModel)]="billingorInvoiceForm.creditTerm"\r\n                      [disabled]="isViewMode"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class="row">\r\n                <div class="col-md-6">\r\n                  <div class="form-group ">\r\n                    <label for="employee">Employee </label>\r\n                    <input\r\n                      type="text"\r\n                      class="form-control wo-input"\r\n                      name="employee"\r\n                      #employee="ngModel"\r\n                      disabled\r\n                      [(ngModel)]="billingorInvoiceForm.employeeName"\r\n                      [disabled]="isViewMode"\r\n                    />\r\n\r\n                    \x3c!-- <p-autoComplete\r\n                          field="label"\r\n                          [(ngModel)]="billingorInvoiceForm.employeeId"\r\n                          name="employees"\r\n                          #employees="ngModel"\r\n                          errorMessage="Records not found"\r\n                          [forceSelection]="true"\r\n                          [dropdown]="true"\r\n                          [suggestions]="employeeList"\r\n                          (completeMethod)="filterEmployee($event)"\r\n                          [size]="30"\r\n                          [minLength]="1"\r\n                          [dropdown]="true"\r\n                          class="p-autoComplete-ctsm"\r\n                        >\r\n                        </p-autoComplete> --\x3e\r\n                  </div>\r\n                </div>\r\n                <div class="col-md-6">\r\n                  <div class="form-group ">\r\n                    <label>Stage Code </label>\r\n                    <input\r\n                      type="number"\r\n                      class="form-control wo-input"\r\n                      name="gateStatus"\r\n                      #gateStatus="ngModel"\r\n                      [(ngModel)]="billingorInvoiceForm.gateStatus"\r\n                      [disabled]="isViewMode"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class="col-md-4">\r\n          <div class="card" *ngIf="billingorInvoiceForm">\r\n            <div class="card-body">\r\n              <div class="row">\r\n              \r\n                <div class="col-md-6">\r\n                    <h5 class="po-heading">Sold To</h5>\r\n                  <div class="form-group ">\r\n                    <label>Customer\r\n                    </label><span class="clr-red">*</span>\r\n                    <p-autoComplete\r\n                      field="customerName"\r\n                      [(ngModel)]="billingorInvoiceForm.soldToCustomerId"\r\n                      name="soldcustomerName"\r\n                      errorMessage="Records not found"\r\n                      [forceSelection]="true"\r\n                      (onSelect)="getSiteNamesBySoldCustomerId($event)"\r\n                      [suggestions]="customerNamesList"\r\n                      (completeMethod)="filterCustomerName($event)"\r\n                      (onKeyUp)="clearAddress(\'SoldTo\' , $event.target.value)"\r\n                      [size]="30"\r\n                      [minLength]="1"\r\n                      #customerName="ngModel"\r\n                      required\r\n                      [dropdown]="true"\r\n                      class="p-autoComplete-ctsm"\r\n                      [disabled]="isViewMode"\r\n                    >\r\n                    </p-autoComplete>\r\n                  </div>\r\n                </div>\r\n                <div class="col-md-6">\r\n                    <h5 class="po-heading">Ship To</h5>\r\n                  <div class="form-group ">\r\n                    <label>Customer\r\n                    </label><span class="clr-red">*</span>\r\n                    <p-autoComplete\r\n                      field="customerName"\r\n                      [(ngModel)]="billingorInvoiceForm.shipToCustomerId"\r\n                      name="shipcustomerName"\r\n                      errorMessage="Records not found"\r\n                      [forceSelection]="true"\r\n                      (onSelect)="getSiteNamesByShipCustomerId($event)"\r\n                      [suggestions]="customerNamesList"\r\n                      (completeMethod)="filterCustomerName($event)"\r\n                      (onKeyUp)="clearAddress(\'ShipTo\', $event.target.value)"\r\n                      [size]="30"\r\n                      [minLength]="1"\r\n                      #customerName="ngModel"\r\n                      required\r\n                      [dropdown]="true"\r\n                      class="p-autoComplete-ctsm"\r\n                      [disabled]="isViewMode"\r\n                    >\r\n                    </p-autoComplete>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class="row">\r\n                <div class="col-md-6">\r\n                    <div class="form-group">\r\n                        <label for="credit">Site Name</label><span class="clr-red">*</span>\r\n                  <p-dropdown\r\n                    placeholder="Select Site Name"\r\n                    name="scope"\r\n                    #scope="ngModel"\r\n                    [options]="soldCustomerSiteList"\r\n                    class="p-dropdown-custom-md-Header"\r\n                    (onChange)="changeOfSoldSiteName($event.value)"\r\n                    [(ngModel)]="billingorInvoiceForm.soldToSiteId"\r\n                    [disabled]="isViewMode"\r\n                    required\r\n                  >\r\n                  </p-dropdown>\r\n                  </div>\r\n                </div>\r\n                <div class="col-md-6">\r\n                    <div class="form-group">\r\n                        <label for="credit">Site Name</label><span class="clr-red">*</span>\r\n                  <p-dropdown\r\n                    placeholder="Select Site Name"\r\n                    name="scope1"\r\n                    #scope1="ngModel"\r\n                    [options]="shipCustomerSiteList"\r\n                    class="p-dropdown-custom-md-Header"\r\n                    (onChange)="changeOfShipSiteName($event.value)"\r\n                    [(ngModel)]="billingorInvoiceForm.shipToSiteId"\r\n                    [disabled]="isViewMode"\r\n                    required\r\n                  >\r\n                  </p-dropdown>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class="row">\r\n                <div class="col-md-6">\r\n                    <div class="form-group ">\r\n                        <label>Address 1  </label>\r\n                        <input\r\n                          type="text"\r\n                          class="form-control wo-input"\r\n                          name="soldAddress1"\r\n                          #soldAddress1="ngModel"\r\n                          [(ngModel)]="soldCustomerAddress.line1"\r\n                          disabled\r\n                        />\r\n                      </div>\r\n                </div>\r\n                <div class="col-md-6">\r\n                    <div class="form-group ">\r\n                        <label>Address 1  </label>\r\n                        <input\r\n                          type="text"\r\n                          class="form-control wo-input"\r\n                          name="shipAddress1"\r\n                          #shipAddress1="ngModel"\r\n                          [(ngModel)]="shipCustomerAddress.line1"\r\n                          disabled\r\n                        />\r\n                      </div>\r\n                </div>\r\n              </div>\r\n              <div class="row">\r\n                  <div class="col-md-6">\r\n                      <div class="form-group ">\r\n                          <label>Address 2  </label>\r\n                          <input\r\n                            type="text"\r\n                            class="form-control wo-input"\r\n                            name="soldAddress2"\r\n                            #soldAddress1="ngModel"\r\n                            [(ngModel)]="soldCustomerAddress.line2"\r\n                            disabled\r\n                          />\r\n                        </div>\r\n                  </div>\r\n                  <div class="col-md-6">\r\n                      <div class="form-group ">\r\n                          <label>Address 2  </label>\r\n                          <input\r\n                            type="text"\r\n                            class="form-control wo-input"\r\n                            name="shipAddress2"\r\n                            #shipAddress1="ngModel"\r\n                            [(ngModel)]="shipCustomerAddress.line2"\r\n                            disabled\r\n                          />\r\n                        </div>\r\n                  </div>\r\n              </div>\r\n              <div class="row">\r\n                  <div class="col-md-6">\r\n                      <div class="form-group ">\r\n                          <label>City  </label>\r\n                          <input\r\n                            type="text"\r\n                            class="form-control wo-input"\r\n                            name="soldCity"\r\n                            #soldCity="ngModel"\r\n                            [(ngModel)]="soldCustomerAddress.city"\r\n                            disabled\r\n                          />\r\n                        </div>\r\n                  </div>\r\n                  <div class="col-md-6">\r\n                      <div class="form-group ">\r\n                          <label>City  </label>\r\n                          <input\r\n                            type="text"\r\n                            class="form-control wo-input"\r\n                            name="shipCity"\r\n                            #shipCity="ngModel"\r\n                            [(ngModel)]="shipCustomerAddress.city"\r\n                            disabled\r\n                          />\r\n                        </div>\r\n                  </div>\r\n              </div>\r\n              <div class="row">\r\n                  <div class="col-md-6">\r\n                      <div class="form-group ">\r\n                          <label>StateOrProvince  </label>\r\n                          <input\r\n                            type="text"\r\n                            class="form-control wo-input"\r\n                            name="soldstateOrProvince"\r\n                            #soldstateOrProvince="ngModel"\r\n                            [(ngModel)]="soldCustomerAddress.stateOrProvince"\r\n                            disabled\r\n                          />\r\n                        </div>\r\n                  </div>\r\n                  <div class="col-md-6">\r\n                      <div class="form-group ">\r\n                          <label>StateOrProvince </label>\r\n                          <input\r\n                            type="text"\r\n                            class="form-control wo-input"\r\n                            name="stateOrProvince"\r\n                            #shipstateOrProvince="ngModel"\r\n                            [(ngModel)]="shipCustomerAddress.stateOrProvince"\r\n                            disabled\r\n                          />\r\n                        </div>\r\n                  </div>\r\n              </div>\r\n              <div class="row">\r\n                  <div class="col-md-6">\r\n                      <div class="form-group ">\r\n                          <label>Postal Code  </label>\r\n                          <input\r\n                            type="number"\r\n                            class="form-control wo-input"\r\n                            name="soldpostalCode"\r\n                            #soldpostalCode="ngModel"\r\n                            [(ngModel)]="soldCustomerAddress.postalCode"\r\n                            disabled\r\n                          />\r\n                        </div>\r\n                  </div>\r\n                  <div class="col-md-6">\r\n                      <div class="form-group ">\r\n                          <label>Postal Code </label>\r\n                          <input\r\n                            type="number"\r\n                            class="form-control wo-input"\r\n                            name="shippostalCode"\r\n                            #shippostalCode="ngModel"\r\n                            [(ngModel)]="shipCustomerAddress.postalCode"\r\n                            disabled\r\n                          />\r\n                        </div>\r\n                  </div>\r\n              </div>\r\n              <div class="row">\r\n                  <div class="col-md-6">\r\n                      <div class="form-group ">\r\n                          <label>Country  </label>\r\n                          <input\r\n                            type="text"\r\n                            class="form-control wo-input"\r\n                            name="soldcountry"\r\n                            #soldcountry="ngModel"\r\n                            [(ngModel)]="soldCustomerAddress.country"\r\n                            disabled\r\n                          />\r\n                        </div>\r\n                  </div>\r\n                  <div class="col-md-6">\r\n                      <div class="form-group ">\r\n                          <label>Country </label>\r\n                          <input\r\n                            type="text"\r\n                            class="form-control wo-input"\r\n                            name="shipcountry"\r\n                            #shipcountry="ngModel"\r\n                            [(ngModel)]="shipCustomerAddress.country"\r\n                            disabled\r\n                          />\r\n                        </div>\r\n                  </div>\r\n              </div>\r\n              <div class="row">\r\n                <div class="col-md-6">\r\n\r\n                </div>\r\n                <div class="col-md-6">\r\n                    <div class="form-group ">\r\n                        <label>Attention </label>\r\n                        <input\r\n                          type="text"\r\n                          class="form-control wo-input"\r\n                          name="shipToAttention"\r\n                          #shipToAttention="ngModel"\r\n                          [(ngModel)]="billingorInvoiceForm.shipToAttention"\r\n                          [disabled]="isViewMode"\r\n                        />\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class="col-md-3">\r\n          <div class="card">\r\n            <div class="card-body">\r\n                <h5 class="po-heading">Management Structure</h5>\r\n                <div class="col-md-12">\r\n                    <div class="form-group">\r\n                  <p-dropdown\r\n                    placeholder="Select Legal Entity"\r\n                    name="company"\r\n                    #companyId="ngModel"\r\n                    [options]="legalEntityList"\r\n                    class="p-dropdown-custom-md-2"\r\n                    (onChange)="selectedLegalEntity($event.value)"\r\n                    [(ngModel)]="managementStructure.companyId"\r\n                    [disabled]="true"\r\n                  >\r\n                  \x3c!-- [disabled]="isViewMode" --\x3e\r\n                  </p-dropdown>\r\n                  </div>\r\n                  <div class="form-group">\r\n                      <p-dropdown\r\n                        placeholder="Select "\r\n                        name="bu"\r\n                        #bu="ngModel"\r\n                        [options]="businessUnitList"\r\n                        class="p-dropdown-custom-md-2"\r\n                        (onChange)="selectedBusinessUnit($event.value)"\r\n                        [(ngModel)]="managementStructure.buId"\r\n                        [disabled]="true"\r\n                      >\r\n                      </p-dropdown>\r\n                      </div>\r\n                      <div class="form-group">\r\n                          <p-dropdown\r\n                            placeholder="Select "\r\n                            name="division"\r\n                            #division="ngModel"\r\n                            [options]="divisionList"\r\n                            class="p-dropdown-custom-md-2"\r\n                            (onChange)="selectedDivision($event.value)"\r\n                            [(ngModel)]="managementStructure.divisionId"\r\n                            [disabled]="true"\r\n                          >\r\n                          </p-dropdown>\r\n                          </div>\r\n                          <div class="form-group">\r\n                              <p-dropdown\r\n                                placeholder="Select "\r\n                                name="department"\r\n                                #department="ngModel"\r\n                                [options]="departmentList"\r\n                                class="p-dropdown-custom-md-2"\r\n                                (onChange)="selectedDepartment($event.value)"\r\n                                [(ngModel)]="managementStructure.departmentId"\r\n                                [disabled]="true"\r\n                              >\r\n                              </p-dropdown>\r\n                              </div>\r\n                </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class="row" style="margin-top: 15px;" *ngIf="billingorInvoiceForm">\r\n        <div class="col-md-7">\r\n            <div class="card">\r\n            \r\n                <div class="card-body p-10">\r\n              <div>\r\n                  <div class="col-md-12">\r\n                    <div class="col-md-7">\r\n                        <div class="form-group" style="margin-left: -8px;">\r\n                            <p-radioButton\r\n                              class="p-radiobutton-label-horizontal"\r\n                              name="HoursorClockorScan"\r\n                              label="Cost Plus"\r\n                              value="Cost Plus"\r\n                              [(ngModel)]="billingorInvoiceForm.costPlusType"\r\n                              [disabled]="isViewMode"\r\n                            ></p-radioButton>\r\n                            <p-radioButton\r\n                              class="p-radiobutton-label-horizontal col-width"\r\n                              name="HoursorClockorScan"\r\n                              value="Flat Rate"\r\n                              label="Flat Rate"\r\n                              [(ngModel)]="billingorInvoiceForm.costPlusType"\r\n                              [disabled]="isViewMode"\r\n                            ></p-radioButton>\r\n                    \r\n                           \r\n                          </div>\r\n                    </div>\r\n                    <div class="col-md-5" style="border-style: groove; border-radius: 10px; margin-top: 7px;padding: 2px 5px;">\r\n                     <h4 style="color : #295d92; float: left; margin: 0;"> Grand Total: </h4>\r\n                     <span style="color: red; float: right;">{{billingorInvoiceForm.grandTotal}}</span>\r\n                    </div>\r\n\r\n                    </div>\r\n              </div>\r\n              <h5 class="po-heading">{{billingorInvoiceForm.costPlusType}} Information </h5>\r\n\r\n              <table class="table table-bordered ">\r\n                <thead>\r\n                  <tr>\r\n                  <th></th>\r\n                  <th>Total  Cost</th>\r\n                  <th *ngIf="billingorInvoiceForm.costPlusType === \'Cost Plus\'">MarkUp</th>\r\n                  <th >Cost Plus Amount</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                <tr> \r\n                  <td>\r\n                      <div class="form-group">\r\n                          <p-checkbox\r\n                            class="p-checkbox-label-2"\r\n                            name="totalworkOrder"\r\n                            binary="false"\r\n                            label="Total Work Order"\r\n                            (onChange)="resetOtherOptions(); calculateGrandTotal();"\r\n                            [(ngModel)]="billingorInvoiceForm.totalWorkOrder"\r\n                            [disabled]="isViewMode"\r\n                          ></p-checkbox>\r\n                        </div>\r\n                    </td>\r\n                    <td class="text-right">\r\n                     {{billingorInvoiceForm.totalWorkOrderCost}}\r\n                    </td>\r\n                    <td *ngIf="billingorInvoiceForm.costPlusType === \'Cost Plus\'">\r\n                        <div class="form-group" *ngIf="billingorInvoiceForm.totalWorkOrder">\r\n                            <p-dropdown\r\n                              placeholder="Select "\r\n                           name="totalWOMarkup"\r\n                              #totalWOMarkup="ngModel"\r\n                              [options]="markUpList"\r\n                              class="p-dropdown-custom-md"\r\n                              (onChange)="calculateTotalWorkOrderCostPlus($event.value); calculateGrandTotal();"\r\n                              [(ngModel)]="billingorInvoiceForm.totalWorkOrderValue"\r\n                              [disabled]="isViewMode"\r\n                            >\r\n                            </p-dropdown>\r\n                            </div>\r\n                    </td>\r\n                    \r\n                    <td class="text-right" *ngIf="billingorInvoiceForm.costPlusType === \'Cost Plus\'" >\r\n                        {{billingorInvoiceForm.totalWorkOrderCostPlus }}\r\n                    </td>\r\n                    <td  *ngIf="billingorInvoiceForm.costPlusType !== \'Cost Plus\'" >\r\n                      <input type="number" name="totalWorkOrderCostPlus" (change)="onChangeWOCostPlus();" class="form-control wo-input" [(ngModel)]="billingorInvoiceForm.totalWorkOrderCostPlus " [disabled]="isViewMode" />\r\n                    </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td>\r\n                      <div class="form-group">\r\n                          <p-checkbox\r\n                          (onChange)="resetMaterial(); calculateGrandTotal();"\r\n                            class="p-checkbox-label-2"\r\n                            name="material"\r\n                            binary="false"\r\n                            label="Material"\r\n                            [(ngModel)]="billingorInvoiceForm.material"\r\n                            [disabled]="billingorInvoiceForm.totalWorkOrder || isViewMode"\r\n                          ></p-checkbox>\r\n                        </div>\r\n                  </td>\r\n                  <td class="text-right">\r\n                      {{billingorInvoiceForm.materialCost}}\r\n                  </td>\r\n                  <td *ngIf="billingorInvoiceForm.costPlusType === \'Cost Plus\'"  >\r\n                      <div class="form-group" *ngIf="billingorInvoiceForm.material">\r\n                          <p-dropdown\r\n                            placeholder="Select "\r\n                            name="materialValue"\r\n                            #materialValue="ngModel"\r\n                            [options]="markUpList"\r\n                            class="p-dropdown-custom-md"\r\n                            (onChange)="calculateMaterialCostPlus($event.value); calculateGrandTotal();"\r\n                            [(ngModel)]="billingorInvoiceForm.materialValue"\r\n                            [disabled]="isViewMode"\r\n                          >\r\n                          </p-dropdown>\r\n                          </div>\r\n                  </td>\r\n                  <td class="text-right" *ngIf="billingorInvoiceForm.costPlusType === \'Cost Plus\'" >\r\n                      {{billingorInvoiceForm.materialCostPlus  }}\r\n                  </td>\r\n                  <td  *ngIf="billingorInvoiceForm.costPlusType !== \'Cost Plus\' && !billingorInvoiceForm.totalWorkOrder" >\r\n                      <input type="number" name="materialCostPlus" (change)="onChangeMaterialCostPlus(); calculateGrandTotal();" class="form-control wo-input" [(ngModel)]="billingorInvoiceForm.materialCostPlus"  [disabled]="isViewMode"/>\r\n                    </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td>\r\n                      <div class="form-group">\r\n                          <p-checkbox\r\n                            class="p-checkbox-label-2"\r\n                            name="laborOverHead"\r\n                            binary="false"\r\n                            label="Labor & Over Head"\r\n                            (onChange)="resetLaborOverHead();  calculateGrandTotal();"\r\n                            [(ngModel)]="billingorInvoiceForm.laborOverHead"\r\n                            [disabled]="billingorInvoiceForm.totalWorkOrder || isViewMode"\r\n                          ></p-checkbox>\r\n                        </div>\r\n                  </td>\r\n                  <td class="text-right">\r\n                      {{billingorInvoiceForm.laborOverHeadCost}}\r\n                  </td>   \r\n\r\n                  <td *ngIf="billingorInvoiceForm.costPlusType === \'Cost Plus\'">\r\n                      <div class="form-group" *ngIf="billingorInvoiceForm.laborOverHead">\r\n                          <p-dropdown\r\n                            placeholder="Select "\r\n                            name="head"\r\n                            #head="ngModel"\r\n                            [options]="markUpList"\r\n                            class="p-dropdown-custom-md"\r\n                            (onChange)="calculateLaborOverHeadCostPlus($event.value);  calculateGrandTotal();"\r\n                            [(ngModel)]="billingorInvoiceForm.laborOverHeadValue"\r\n                            [disabled]="isViewMode"\r\n                          >\r\n                          </p-dropdown>\r\n                          </div>\r\n                  </td>\r\n                  <td class="text-right" *ngIf="billingorInvoiceForm.costPlusType === \'Cost Plus\'">\r\n                      {{billingorInvoiceForm.laborOverHeadCostPlus   }}\r\n                  </td>\r\n                  <td  *ngIf="billingorInvoiceForm.costPlusType !== \'Cost Plus\' && !billingorInvoiceForm.totalWorkOrder" >\r\n                      <input type="number" name="laborOverHeadCostPlus" (change)="onChangeLaborOHCostPlus(); calculateGrandTotal();" class="form-control wo-input" [(ngModel)]="billingorInvoiceForm.laborOverHeadCostPlus"  \r\n                      [disabled]="isViewMode"/>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                      <div class="form-group">\r\n                          <p-checkbox\r\n                            class="p-checkbox-label-2"\r\n                            (onChange)="resetMisCharges(); calculateGrandTotal();"\r\n                            name="miscCharges"\r\n                            binary="false"\r\n                            label="Misc Chargers"\r\n                            [(ngModel)]="billingorInvoiceForm.miscCharges"\r\n                            [disabled]="billingorInvoiceForm.totalWorkOrder || isViewMode"\r\n                          ></p-checkbox>\r\n                        </div>\r\n                    </td>\r\n                    <td  class="text-right">\r\n                        {{billingorInvoiceForm.miscChargesCost}}\r\n                    </td>\r\n                    <td *ngIf="billingorInvoiceForm.costPlusType === \'Cost Plus\'">\r\n                        <div class="form-group" *ngIf="billingorInvoiceForm.miscCharges">\r\n                            <p-dropdown\r\n                              placeholder="Select "\r\n                              name="misc"\r\n                              #misc="ngModel"\r\n                              [options]="markUpList"\r\n                              class="p-dropdown-custom-md"\r\n                              (onChange)="calculateMiscChargesCostPlus($event.value); calculateGrandTotal();"\r\n                              [(ngModel)]="billingorInvoiceForm.miscChargesValue"\r\n                              [disabled]="isViewMode"\r\n                            >\r\n                            </p-dropdown>\r\n                            </div>\r\n                    </td>\r\n                    <td class="text-right" *ngIf="billingorInvoiceForm.costPlusType === \'Cost Plus\'">\r\n                        {{billingorInvoiceForm.miscChargesCostPlus}}\r\n                    </td>\r\n                    <td  *ngIf="billingorInvoiceForm.costPlusType !== \'Cost Plus\' && !billingorInvoiceForm.totalWorkOrder" >\r\n                        <input type="number" name="miscChargesCostPlus" (change)="onChangeMiscChCostPlus(); calculateGrandTotal();" class="form-control wo-input" [(ngModel)]="billingorInvoiceForm.miscChargesCostPlus" \r\n                        [disabled]="isViewMode" />\r\n                      </td>\r\n\r\n                </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            </div>\r\n        </div>\r\n        <div class="col-md-5">\r\n          <div class="card">\r\n            <div class="card-body">\r\n                <div class="col-md-12">\r\n                    <div class="form-group">\r\n                        <p-checkbox\r\n                          class="p-checkbox-label-2"\r\n                          name="proForma"\r\n                          binary="false"\r\n                          label="PRO FOR MA"\r\n                          [(ngModel)]="billingorInvoiceForm.proForma"\r\n                          [disabled]="isViewMode"\r\n                        ></p-checkbox>\r\n                    </div>\r\n                    <div class="form-group">\r\n                        <p-checkbox\r\n                          class="p-checkbox-label-2"\r\n                          name="partialInvoice"\r\n                          binary="false"\r\n                          label="Partial Invoice"\r\n                          [(ngModel)]="billingorInvoiceForm.partialInvoice"\r\n                          [disabled]="isViewMode"\r\n                        ></p-checkbox>\r\n                    </div>\r\n                    <div class="form-group">\r\n                        <p-checkbox\r\n                          class="p-checkbox-label-2"\r\n                          name="costPlusRateCombo"\r\n                          binary="false"\r\n                          label="CostPlus & Flate RateCombo"\r\n                          [(ngModel)]="billingorInvoiceForm.costPlusRateCombo"\r\n                          [disabled]="isViewMode"\r\n                        ></p-checkbox>\r\n                    </div>\r\n                    <div class="row">\r\n                      <div class="col-md-5">\r\n                          <div class="form-group">\r\n                              <label for="credit" style="width: 100%;">Ship Via\r\n                                   </label>\r\n                        <p-dropdown\r\n                          placeholder="Select Site Name"\r\n                          name="shipVia"\r\n                          #shipVia="ngModel"\r\n                          [options]="shipViaList"\r\n                          class="p-dropdown-custom-md-Header"\r\n                          [(ngModel)]="billingorInvoiceForm.shipViaId"\r\n                           (onChange)="changeOfShipVia($event.value)"\r\n                           [disabled]="isViewMode"\r\n                        >\r\n                        </p-dropdown>\r\n                        </div>\r\n                        <div class="form-group ">\r\n                            <label>Ship Account</label>\r\n                            <input\r\n                            type="text"\r\n                            class="form-control wo-input"\r\n                            name="shipAccount"\r\n                            #shipAccount="ngModel"\r\n                            disable\r\n                            [(ngModel)]="billingorInvoiceForm.shipAccountInfo"\r\n                            [disabled]="isViewMode"\r\n                          />\r\n                          </div>\r\n                      </div>\r\n                      <div class="col-md-5 col-offset-1">\r\n                          <div class="form-group ">\r\n                              <label>Way Bill REF</label>\r\n                              <input\r\n                                type="text"\r\n                                class="form-control wo-input"\r\n                                name="wayBillRef"\r\n                                #wayBillRef="ngModel"\r\n                                [(ngModel)]="billingorInvoiceForm.wayBillRef"\r\n                                [disabled]="isViewMode"\r\n                              />\r\n                            </div>\r\n                            <div class="form-group ">\r\n                                <label>Tracking #</label>\r\n                                <input\r\n                                  type="text"\r\n                                  class="form-control wo-input"\r\n                                  name="tracking"\r\n                                  #tracking="ngModel"\r\n                                  [(ngModel)]="billingorInvoiceForm.tracking"\r\n                                  [disabled]="isViewMode"\r\n                                />\r\n                              </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div style="float: right;" *ngIf="!isViewMode">\r\n        <button class="btn btn-primary pull-right"  *ngIf="!isEditBilling" (click)="saveWorkOrderBilling()" [disabled]="!billinForm.valid">Save</button>\r\n        <button class="btn btn-primary pull-right"  *ngIf="isEditBilling" (click)="updateWorkOrderBilling()">Update</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n<div class="card" style="margin-top: 6px;" *ngIf="workOrderQuoteId !=0 && quotestatusofCurrentPart ==\'Approved\'">\r\n  <div class="card-body p-10" >\r\n\r\n                <p-accordion class="p-accordion-cstm">\r\n                    <p-accordionTab  header="Material List" >\r\n                        <div class="equipment-tab-content"  >\r\n                            <div class="x_panel" *ngIf="quoteMaterialList" style="overflow-x: hidden;">\r\n                                <div class="tab-content">\r\n                                    <div class="table-responsive table-overflow" id="workflow-attributes-block">\r\n                                        <table class="table table-bordered ">\r\n                                            <thead>\r\n                                                <tr style="color: #f1f1f1; background-color: #fff;">\r\n                                                    <td colspan="10" class="table-header-col1">&nbsp;</td>\r\n                                                    <td colspan="4">\r\n                            \r\n                                                        <div class="display-flex" style="width: 450px;">\r\n                                                            <div class="form-group" style="text-align: center; display: flex;margin-bottom: 0px;">\r\n                                                                <p-radioButton class="p-radiobutton-label-horizontal p-radiobutton-label-w92"\r\n                                                                               name="costPlusTypes"\r\n                                                                               label="T&M - Mark Up"\r\n                                                                               value="1"\r\n                                                                               [(ngModel)]="costPlusType"\r\n                                                                               [disabled]="isView"></p-radioButton>\r\n                                                                <div>\r\n                                                                    <select class="form-control select-markup" [(ngModel)]="overAllMarkup" [disabled]="isView || costPlusType != \'1\'" style="margin-top: 10px;">\r\n                                                                        <option value="">Select</option>\r\n                                                                        <option *ngFor="let markUp of markupList" [value]="markUp.value">{{markUp.label}}</option>\r\n                                                                    </select>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div style="margin-bottom: 10px; margin-left: 30px;margin-right: 30px;">\r\n                                                                <p-radioButton class="p-radiobutton-label-horizontal"\r\n                                                                               name="costPlusType"\r\n                                                                               value="2"\r\n                                                                               label="Actual"\r\n                                                                               [(ngModel)]="costPlusType"\r\n                                                                               [disabled]="isView"\r\n                                                                               (click)="(!isView)?tmchange():\'\'"></p-radioButton>\r\n                                                            </div>\r\n                                                            <div>\r\n                                                                <p-radioButton class="p-radiobutton-label-horizontal" name="costPlusType"\r\n                                                                               value="3" label="Flat Rate" [(ngModel)]="costPlusType" [disabled]="isView" (click)="(!isView)?tmchange():\'\'">\r\n                                                                </p-radioButton>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                    <td style="background: #fff; border: 1px solid #fff;"></td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <th>Task</th>\r\n                                                    <th>PN</th>\r\n                                                    <th>PN Description</th>\r\n                                                    <th>Provision</th>\r\n                                                    <th>Qty</th>\r\n                                                    <th>UOM</th>\r\n                                                    <th>Cond Type</th>\r\n                                                    <th>Stock Type</th>\r\n                                                    <th>Unit Cost</th>\r\n                                                    <th>Total Part Cost</th>\r\n                                                    <th>Billing Method</th>\r\n                                                    <th>Mark Up</th>\r\n                                                    <th>\r\n                                                      Billing Rate\r\n                                                    </th>\r\n                                                    <th>\r\n                                                      Billing Amount\r\n                                                    </th>\r\n                                                    <th style="min-width: 60px;" *ngIf="!isView">Actions</th>\r\n                                                  </tr>\r\n                                            </thead>\r\n                                        \r\n                                            <tbody>\r\n                                                <ng-container *ngFor="let matQuotation of quoteMaterialList; let subIndex=index" >\r\n                                                  <tr class="mpn-row" *ngIf="!matQuotation[\'isDeleted\']">\r\n                                                    <td>\r\n                                                      <select class="form-control wf-pub-id select-read-only" [(ngModel)]="matQuotation.taskId" [disabled]="isView" disabled>\r\n                                                        <option value="">Select</option>\r\n                                                        <option *ngFor="let task of taskList" [value]="task.taskId">{{task.description}}</option>\r\n                                                      </select>\r\n                                                    </td>\r\n                                                    <td><div style="min-width: 100px;">{{matQuotation.partNumber}}</div></td>\r\n                                                    <td>{{matQuotation.partDescription}}</td>\r\n                                                    <td>{{matQuotation.provision}}</td>\r\n                                                    <td class="content-to-end">{{matQuotation.quantity}}</td>\r\n                                                    <td>\r\n                                                      <select class="form-control wf-pub-id select-read-only" [(ngModel)]="matQuotation.unitOfMeasureId" disabled>\r\n                                                        <option value="">Select</option>\r\n                                                        <option *ngFor="let uom of unitOfMeasuresList" [value]="uom.unitOfMeasureId">{{uom.description}}</option>\r\n                                                      </select>\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        <select class="form-control wf-pub-id select-read-only" [(ngModel)]="matQuotation.conditionCodeId" disabled>\r\n                                                          <option value="">Select</option>\r\n                                                          <option *ngFor="let condition of conditions" [value]="condition.conditionId">{{condition.description}}</option>\r\n                                                        </select>\r\n                                                    </td>\r\n                                                    <td>{{matQuotation.stockType}}</td>\r\n                                                    <td class="content-to-end">{{matQuotation.unitCost}}</td>\r\n                                                    <td class="content-to-end">{{(matQuotation.quantity * matQuotation.unitCost).toFixed(2)}}</td>\r\n                                                    <td>\r\n                                                      <select class="form-control" [(ngModel)]="matQuotation.billingMethodId" style="width: 130px;" [disabled]="isView || costPlusType == 3">\r\n                                                        <option value="">Select</option>\r\n                                                        <option *ngFor="let bm of [{\'label\': \'T&M\', \'value\': \'1\'}, {\'label\': \'Actual\', \'value\': \'2\'}]" [value]="bm.value">{{bm.label}}</option>\r\n                                                      </select>\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        <select class="form-control wf-pub-id select-markup" (change)="markupChanged(matQuotation, \'row\')" [(ngModel)]="matQuotation.markupPercentageId" [disabled]="isView || matQuotation.billingMethodId != \'1\'">\r\n                                                          <option value="">Select</option>\r\n                                                          <option *ngFor="let markUp of markupList" [value]="markUp.value">{{markUp.label}}</option>\r\n                                                        </select>\r\n                                                    </td>\r\n                                                    <td class="content-to-end">{{ matQuotation.billingRate }}</td>\r\n                                                    <td>\r\n                                                        <input type="number" class="form-control" [(ngModel)]="matQuotation.billingAmount" [disabled]="isView || matQuotation.billingMethodId != 2" (change)="matQuotation.billingAmount = parseToInt(matQuotation.billingAmount.toString().split(\',\').join(\'\')).toFixed(2)"/>\r\n                                                    </td>\r\n                                                    <td *ngIf="!isView">\r\n                                                      <span data-target="#addNewMaterials" data-toggle="modal"><a class="btn nobg btn-edit-cstm" matTooltip="Edit" matTooltipPosition="above"><i class="fa fa-pencil"></i></a> </span>\r\n                                                      <span><a class="btn nobg btn-delete-cstm" matTooltip="Delete" matTooltipPosition="above"><i class="fa fa-trash"></i></a> </span>\r\n                                                    </td>\r\n                                                   \r\n                                                  </tr>\r\n                                                </ng-container>\r\n                                            \r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </p-accordionTab>\r\n                    <p-accordionTab header="Charges">\r\n                        <div class="equipment-tab-content"  >\r\n                            <div class="x_panel" *ngIf="quoteChargesList">\r\n                                <div class="tab-content">\r\n                                    <div class="table-responsive table-overflow" id="workflow-attributes-block">\r\n                                        <app-work-order-charges [workFlowObject]="workFlowObject" [isWorkOrder]="isWorkOrder"\r\n                                        [workOrderChargesList]="quoteChargesList" [taskList]="taskList" [isView]="isView" [isQuote]="isQuote"></app-work-order-charges>\r\n                                       \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </p-accordionTab>\r\n                    <p-accordionTab header="Labor">\r\n                      <div  *ngIf="quoteLaborList && quoteLaborList.workOrderLaborList">\r\n                        <app-work-order-labor [taskList]="taskList" [savedWorkOrderData]="savedWorkOrderData" [laborForm]="quoteLaborList"  [isQuote]="isQuote" [markupList]="markupList" [isView]="isView" [employeesOriginalData]="employeeList" [buildMethodDetails]="buildMethodDetails"\r\n                        ></app-work-order-labor>\r\n                      </div>\r\n                    </p-accordionTab>\r\n                </p-accordion>\r\n  </div>\r\n</div>\r\n\x3c!-- // for without quote -billing  --\x3e\r\n<div class="card" style="margin-top: 6px;" *ngIf="quotestatusofCurrentPart ==\'NotApproved\'">\r\n  <div class="card-body p-10">\r\n                <p-accordion class="p-accordion-cstm">\r\n                    <p-accordionTab  header="Material List" >\r\n                        <div class="equipment-tab-content"  >\r\n                            <div class="x_panel"  style="overflow-x: hidden;">\r\n                                <div class="tab-content">\r\n                                    <div class="table-responsive table-overflow" id="workflow-attributes-block">\r\n                                      <p-table class="rpo-table-cstm rro-table-cstm pub-ptable-cstm ptable-f10 " id="custome_material" [columns]="cols" #materialTble\r\n                                      [value]="quoteMaterialList" \r\n                                      (onPage)="pageIndexChange($event)">\r\n                                      <ng-template pTemplate="header" let-columns>\r\n                                          <tr>\r\n                                              \x3c!-- <th></th> --\x3e\r\n                                              <th *ngFor="let col of columns" style="width: 100px !important;">\r\n                                                  {{col.header}} \r\n                                              </th>\r\n                                               </tr>\r\n                                      </ng-template>\r\n                                      <ng-template pTemplate="body" let-rowData let-i="rowIndex" let-columns="columns">\r\n                                          <tr>\r\n                                              <td *ngFor="let col of columns">\r\n                                                    <p>{{rowData[col.field]}}</p>\r\n                                                  </td>\r\n                                          </tr>\r\n                                      </ng-template>\r\n                                      \r\n                                  </p-table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </p-accordionTab>\r\n                    <p-accordionTab header="Charges">\r\n                        <div class="equipment-tab-content"  >\r\n                            <div class="x_panel" *ngIf="quoteChargesList">\r\n                                <div class="tab-content">\r\n                                    <div class="table-responsive table-overflow" id="workflow-attributes-block">\r\n                                    <p-table class="rpo-table-cstm rro-table-cstm pub-ptable-cstm ptable-f10 " id="custome_material" [columns]="colums" #materialTble\r\n                                    [value]="workOrderChargesList">\r\n                                    <ng-template pTemplate="header" let-columns>\r\n                                        <tr>\r\n                                            <th *ngFor="let col of columns" style="width: 100px !important;">\r\n                                                {{col.header}} \r\n                                            </th>\r\n                                             </tr>\r\n                                    </ng-template>\r\n                                    <ng-template pTemplate="body" let-rowData let-i="rowIndex" let-columns="columns">\r\n                                        <tr>\r\n                                            <td *ngFor="let col of columns">\r\n                                                  <p>{{rowData[col.field]}}</p>\r\n                                                </td>\r\n                                        </tr>\r\n                                    </ng-template>\r\n                                    \r\n                                </p-table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </p-accordionTab>\r\n                    <p-accordionTab header="Labor">\r\n                      <div>\r\n                        <app-work-order-labor [taskList]="taskList" [laborForm]="labordata"\r\n                        [employeesOriginalData]="employeesOriginalData" [workOrderLaborList]="workOrderLaborList"\r\n                        [workOrderWorkFlowOriginalData]="workOrderWorkFlowOriginalData"\r\n                        [selectedPartNumber]="selectedPartNumber" [savedWorkOrderData]="savedWorkOrderData"\r\n                         [workFlowId]="workFlowId" [isView]="true" [frombilling]="true">\r\n                    </app-work-order-labor>\r\n                      </div>\r\n                    </p-accordionTab>\r\n                </p-accordion>\r\n  </div>\r\n</div>\r\n'},EyS0:function(e,r,t){"use strict";t.r(r),r.default=""},Fidx:function(e,r,t){"use strict";t.r(r),r.default='\r\n<div style="float: right; margin: 3px 0 19px 0px;">\r\n    <button type="button" class="btn btn-primary" (click)="detailView()">\r\n        {{(isOpenedAll)?\'Summary\':\'Detail View\'}}\r\n    </button>\r\n</div>\r\n<div style="margin-top: 15px;">\r\n<p-treeTable [value]="gridData" (onNodeExpand)="getShippingData($event.node)">\r\n    <ng-template pTemplate="header">\r\n        <tr>\r\n            <th style="background-color: #337ab7; color: white;">PartNumber</th>\r\n            <th style="background-color: #337ab7; color: white">Part Description</th>\r\n            <th style="background-color: #337ab7; color: white">Revised PartNo</th>\r\n            <th style="background-color: #337ab7; color: white">Charge Type</th>\r\n            <th style="background-color: #337ab7; color: white">Vendor</th>\r\n            <th style="background-color: #337ab7; color: white">Quantity</th>\r\n            <th style="background-color: #337ab7; color: white">Ref Num</th>\r\n            <th style="background-color: #337ab7; color: white">Task</th>\r\n            <th style="background-color: #337ab7; color: white">Unit Cost</th>\r\n            <th style="background-color: #337ab7; color: white">Unit Price</th>\r\n            <th style="background-color: #337ab7; color: white">Extended Cost</th>\r\n            <th style="background-color: #337ab7; color: white">Extended Unit Price</th>\r\n        </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate="body" let-rowNode let-rowData="rowData">\r\n        <tr>\r\n            <td>\r\n                <p-treeTableToggler [rowNode]="rowNode"></p-treeTableToggler>\r\n                {{rowData.partNumber}}\r\n            </td>\r\n            <td>{{rowData.partDescription}}</td>\r\n            <td>{{rowData.revisedPartNo}}</td>\r\n            <td>{{rowData.chargeType}}</td>\r\n            <td>{{rowData.vendor}}</td>\r\n            <td><div class="float-right">{{rowData.quantity}}</div></td>\r\n            <td>{{rowData.refNum}}</td>\r\n            <td>{{rowData.task}}</td>\r\n            <td><div class="float-right">{{globalizeAmount(rowData.unitCost)}}</div></td>\r\n            <td><div class="float-right">{{globalizeAmount(rowData.unitPrice)}}</div></td>\r\n            <td><div class="float-right">{{globalizeAmount(rowData.extendedCost)}}</div></td>\r\n            <td><div class="float-right">{{globalizeAmount(rowData.extendedUnitPrice)}}</div></td>\r\n        </tr>\r\n    </ng-template>\r\n</p-treeTable>\r\n</div>\r\n<div class="preloader" *ngIf="isSpinnerVisible">\r\n    <div class="loading">\r\n        <div class="lds-roller"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n    </div>\r\n</div>'},"G//C":function(e,r,t){"use strict";t.r(r),r.default='<div class="card new-card">\r\n    <div class="card-header bg-primary new-card-header">\r\n\t\t<div class="row">\r\n\t\t  <div class="col">\r\n\t\t\t<h4 class="new-card-heading">Work Order Quote List</h4>\r\n\t\t  </div>\r\n\t\t  <div>\r\n\t\t\t<button\r\n\t\t\t  type="button"\r\n\t\t\t  class="btn-sm new-btn-primary"\r\n              [routerLink]="[\'/workordersmodule/workorderspages/app-work-order-quote\']"\r\n              >\r\n\t\t\t  Add Work Order Quote\r\n\t\t\t</button>\r\n\t\t  </div>\r\n\t\t</div>\r\n      </div>\r\n      <div class="card-body new-card-body">\r\n    <p-table #dt\r\n    class="p-table-cstm"\r\n    [value]="woQuoteList"\r\n    [first]="0"\r\n    [rows]="pageSize"\r\n    [paginator]="true"\r\n    [pageLinks]="3"\r\n    [rowsPerPageOptions]="[10, 20, 50, 100]"\r\n    [columns]="selectedColumns"\r\n    selectionMode="multiple"\r\n    expandableRows="true"\r\n    rowExpandMode="single"\r\n    [lazy]="true"\r\n    (onLazyLoad)="loadData($event)"\r\n    [resizableColumns]="true"\r\n    [reorderableColumns]="true"\r\n    [totalRecords]="totalRecords"\r\n    [scrollable]="true"\r\n    [metaKeySelection]="true"\r\n    scrollHeight="450px">\r\n    <ng-template pTemplate="colgroup" let-columns>\r\n        <colgroup>\r\n            <col *ngFor="let col of columns" style="width:120px">\r\n        </colgroup>\r\n      </ng-template>\r\n    <ng-template pTemplate="header" let-columns>\r\n        <tr>\r\n\r\n            <th *ngFor="let col of columns" pResizableColumn pReorderableColumn\r\n            [pSortableColumn]="col.field" style="text-align:center;">\r\n                {{ col.header }}\r\n                <p-sortIcon [field]="col.field"></p-sortIcon>\r\n            </th>\r\n            <th style="width:80px;position:sticky" *ngIf="selectedColumns.length > 0">\r\n                Actions\r\n            </th>\r\n        </tr>\r\n        <tr>\r\n            <th style="width:120px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                <input *ngIf="col.field !== \'openDate\' \r\n                && col.field !== \'customerRequestDateType\'\r\n                && col.field !== \'promisedDateType\'\r\n                && col.field !== \'estimatedShipDateType\'\r\n                && col.field !== \'estimatedCompletionDateType\'" \r\n                style="width:100%;" pInputText type="text" (input)="dt.filter($event.target.value, col.field, \'contains\'); ">\r\n                <input type="date" *ngIf="col.field == \'openDate\'" name="openDate" style="width:100%;" (change)="dt.filter($event.target.value, col.field, \'contains\')">\r\n                <input type="date"  *ngIf="col.field == \'customerRequestDateType\'" name="customerRequestDate" style="width:100%;" (change)="dt.filter($event.target.value, col.field, \'contains\')">\r\n                <input type="date"  *ngIf="col.field == \'promisedDateType\'" name="promisedDate" style="width:100%;" (change)="dt.filter($event.target.value, col.field, \'contains\')">\r\n                <input type="date" *ngIf="col.field == \'estimatedShipDateType\'" name="estimatedShipDate" style="width:100%;" (change)="dt.filter($event.target.value, col.field, \'contains\')">\r\n                <input type="date"  *ngIf="col.field == \'estimatedCompletionDateType\'" name="estimatedCompletionDate" style="width:100%;" (change)="dt.filter($event.target.value, col.field, \'contains\')">\r\n            </th>\r\n            <th style="width:80px;position:sticky"></th>\r\n        </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate="body"\r\n                     let-rowData\r\n                     let-rowIndex="rowIndex"\r\n                     let-expanded="expanded"\r\n                     let-columns="columns">\r\n\r\n          \r\n            <tr class="ui-widget-header">\r\n                \x3c!--  <td>\r\n                   <a [pRowToggler]="rowData">\r\n                     <i\r\n                       (click)="getWorkOrderPartListByWorkOrderId(rowData)"\r\n                       [ngClass]="\r\n                         expanded\r\n                           ? \'fa fa-fw fa-chevron-circle-down\'\r\n                           : \'fa fa-fw fa-chevron-circle-right\'\r\n                       "\r\n                     ></i>\r\n                     <span> {{ rowData.workOrderNum }}</span>\r\n                   </a>\r\n\r\n                 </td> --\x3e\r\n                 \x3c!-- [ngStyle]="{\'color\': convertDate(col.field , rowData)   == \'Multiple\' ? \'green\' : \'red\'  }" --\x3e\r\n                <td *ngFor="let col of columns" style="text-overflow: ellipsis; overflow: hidden; " [matTooltip]="mouseOverData(col.field,  rowData)" matTooltipPosition="above" \r\n                [ngStyle]="{\'color\': getColorCodeForMultiple(rowData)}"\r\n                \r\n                > \r\n                {{convertDate(col.field , rowData)}}\r\n                    \r\n                </td>\r\n\r\n                <td style="width:80px" *ngIf="selectedColumns.length > 0">\r\n                    <span data-toggle="modal" data-target="#viewWorkOrder"><a class="btn nobg btn-view-cstm" (click)="view(rowData)" matTooltip="View" matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n                    <span><a class="btn nobg btn-edit-cstm" (click)="edit(rowData)" matTooltip="Edit" matTooltipPosition="above"><i class="fa fa-pencil"></i></a> </span>\r\n                </td>\r\n            </tr>\r\n            \r\n        </ng-template>\r\n  </p-table>\r\n</div>\r\n</div>\r\n<div id="viewWorkOrder" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-xl">\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal" (click)="closeView.emit(false)">\r\n                    &times;\r\n                </button>\r\n                <h4 class="modal-title">Work Order Quote View</h4>\r\n            </div>\r\n            <div *ngIf="woQuoteViewData">\r\n                    <app-work-order-quote [workorderid]="woQuoteViewData.workOrderId" isView="true"></app-work-order-quote>\r\n                \x3c!-- <app-work-order-quote isView="true" isQuoteListView="true" [quoteListViewData]="woQuoteViewData"></app-work-order-quote> --\x3e\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="closeView.emit(false)">\r\n                    Close\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>'},GbG4:function(e,r,t){"use strict";t.r(r),r.default=".dropdown-submenu .dropdown-menu {\n  top: 0;\n  left: 100%;\n  margin-top: -1px;\n}\n\nlabel {\n  text-align: left;\n  width: 140px;\n  margin-right: 0;\n  font-weight: normal;\n}\n\ninput[type=text],\ninput[type=number],\nselect,\ntextarea {\n  height: 24px !important;\n  border-radius: 5px !important;\n}\n\ntable.table-bordered td .start-btn {\n  font-size: 10.5px !important;\n  padding: 5px !important;\n}\n\n.width-label-radiobtn {\n  width: 111px !important;\n}\n\ntable.table-bordered tr td {\n  color: #333;\n  font-size: 10.5px !important;\n  letter-spacing: 0.1px;\n  font-weight: normal;\n  padding: 4px;\n}\n\n.float-right i.fa.fa-plus-circle.fa-lg {\n  float: right;\n}\n\n.margintop {\n  margin-top: 6px !important;\n}\n\n.padding-td {\n  padding: 8px 51px !important;\n}\n\nselect:disabled {\n  background-color: #e9ecef !important;\n}\n\np-radioButton label {\n  width: unset;\n}\n\n.emp-labour-cstm p-autocomplete .ui-autocomplete {\n  width: calc(100% - 17px) !important;\n  padding-right: 3px;\n  float: left;\n}\n\n.delt_btn {\n  background-color: transparent !important;\n  border: none;\n}\n\n.task-detail {\n  display: grid;\n}\n\n.task-detail p-checkbox {\n  width: 240px;\n}\n\n.task-detail p-checkbox label {\n  margin-left: 13px;\n}\n\n.task-hours-type {\n  display: grid;\n}\n\n.task-hours-type .p-radiobutton-label-horizontal label {\n  width: 80%;\n}\n\n.text-area-cstm {\n  height: 90px !important;\n}\n\n.width-unset {\n  width: unset !important;\n}\n\n.full-width {\n  width: 100%;\n}\n\n.footer {\n  background-color: #eaf2fd;\n}\n\n.ui-calendar .ui-datepicker {\n  top: 0px !important;\n}\n\n.table-header-col1 {\n  border-top: 1px solid #fff !important;\n  border-bottom: 1px solid #fff !important;\n  border-left: 1px solid #fff !important;\n}\n\n.table-header-col2 {\n  border-top: 1px solid #fff !important;\n  border-bottom: 1px solid #fff !important;\n  border-left: 1px solid #fff !important;\n  border-right: 1px solid #fff !important;\n}\n\n.table select.select-read-only {\n  background-color: #ffffff !important;\n}\n\ntable thead tr th {\n  text-align: center;\n  min-width: 0px;\n}"},GfFs:function(e,r,t){"use strict";t.r(r),r.default='<div [@fadeInOut] class="page-content">\r\n    <div class="right_col" role="main" style="min-height: 410px;">\r\n        <div class="col-md-12">\r\n            <div class="x_panel" style="">\r\n                <div class="x_content">\r\n                    <nav aria-label="breadcrumb">\r\n                        <ol class="breadcrumb">\r\n                            <li class="breadcrumb-item"><a routerLink="/">Dashboard</a></li>\r\n                            <li class="breadcrumb-item"><a routerLink="/">WO Setup</a></li>\r\n                            <li class="breadcrumb-item active" aria-current="page">Bar Code Scanned</li>\r\n                        </ol>\r\n                    </nav>\r\n                    <div class="pheading">\r\n                        <h4 class="page-heading clr-green">WO Setup - Add Labor</h4>\r\n                    </div>\r\n                    <div class="cdetails-top">\r\n                        <div class="col-sm-12">\r\n                            <label>Company</label>\r\n                            <span>Silverxis</span>\r\n                        </div>\r\n                        <div class="col-sm-12">\r\n                            <label>BU</label>\r\n                            <span>Adso</span>\r\n                        </div>\r\n                        <div class="col-sm-12">\r\n                            <label>Division</label>\r\n                            <span>Development</span>\r\n                        </div>\r\n                        <div class="col-sm-12">\r\n                            <label>Dept</label>\r\n                            <span>Java</span>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div class="clear"></div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n       \r\n    </div>\r\n</div>'},Go27:function(e,r,t){"use strict";t.r(r),r.default='<div  style="float: right; margin: 3px 0 19px 0px;">\r\n        <button type="button" class="btn btn-primary" (click)="detailView()">\r\n            {{(isOpenedAll)?\'Summary\':\'Detail View\'}}\r\n        </button>\r\n</div>\r\n<div style="margin-top: 15px;">\r\n<p-treeTable [value]="gridData" (onNodeExpand)="getMateialListData($event.node)">\r\n    <ng-template pTemplate="header">\r\n        <tr>\r\n            <th style="background-color: #337ab7; color: white;width: 180px;">PartNumber</th>\r\n            <th style="background-color: #337ab7; color: white;width: 180px;">Part Description</th>\r\n            <th style="background-color: #337ab7; color: white;width: 111px;">Revised PartNo</th>\r\n            <th style="background-color: #337ab7; color: white;width: 111px;">Task</th>\r\n            <th style="background-color: #337ab7; color: white;width: 111px;">Condition</th>\r\n            <th style="background-color: #337ab7; color: white;width: 111px;">Controller Id</th>\r\n            <th style="background-color: #337ab7; color: white;width: 111px;">Controller No</th>\r\n            <th style="background-color: #337ab7; color: white;width: 111px;">Currency</th>\r\n            <th style="background-color: #337ab7; color: white;width: 111px;">Employee</th>\r\n            <th style="background-color: #337ab7; color: white;width: 111px;">Extended Cost</th>\r\n            <th style="background-color: #337ab7; color: white;width: 111px;">Item Type</th>\r\n            <th style="background-color: #337ab7; color: white;width: 111px;">Location</th>\r\n            <th style="background-color: #337ab7; color: white;width: 111px;">PO</th>\r\n            <th style="background-color: #337ab7; color: white;width: 111px;">Qty Issued</th>\r\n            <th style="background-color: #337ab7; color: white;width: 111px;">Quantity Req</th>\r\n            <th style="background-color: #337ab7; color: white;width: 111px;">Quantity Resrved</th>\r\n            <th style="background-color: #337ab7; color: white;width: 111px;">Quantity Turn In</th>\r\n            <th style="background-color: #337ab7; color: white;width: 111px;">Receiver</th>\r\n            <th style="background-color: #337ab7; color: white;width: 111px;">RO</th>\r\n            <th style="background-color: #337ab7; color: white;width: 111px;">SN</th>\r\n            <th style="background-color: #337ab7; color: white;width: 111px;">Shelf</th>\r\n            <th style="background-color: #337ab7; color: white;width: 111px;">Site</th>\r\n            <th style="background-color: #337ab7; color: white;width: 111px;">Stock Line No</th>\r\n            <th style="background-color: #337ab7; color: white;width: 111px;">Stock Type</th>\r\n            <th style="background-color: #337ab7; color: white;width: 111px;">Sub WO</th>\r\n            <th style="background-color: #337ab7; color: white;width: 111px;">Time Life</th>\r\n            <th style="background-color: #337ab7; color: white;width: 111px;">Unit Cost</th>\r\n            <th style="background-color: #337ab7; color: white;width: 111px;">Warehouse</th>\r\n        </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate="body" let-rowNode let-rowData="rowData">\r\n        <tr>\r\n            <td style="width: 111px;">\r\n                <p-treeTableToggler [rowNode]="rowNode"></p-treeTableToggler>\r\n                {{rowData.partNumber}}\r\n            </td>\r\n            <td style="width: 111px;">{{rowData.partDescription}}</td>\r\n            <td style="width: 111px;">{{rowData.revisedPN}}</td>\r\n            <td style="width: 111px;">{{rowData.task}}</td>\r\n            <td style="width: 111px;">{{rowData.condition}}</td>\r\n            <td style="width: 111px;">{{rowData.controllerId}}</td>\r\n            <td style="width: 111px;">{{rowData.controllerNo}}</td>\r\n            <td style="width: 111px;">{{(rowData.currency)?rowData.currency.symbol:rowData.currency}}</td>\r\n            <td style="width: 111px;">{{rowData.employee}}</td>\r\n            <td style="width: 111px;">{{rowData.extendedCost}}</td>\r\n            <td style="width: 111px;">{{rowData.itemType}}</td>\r\n            <td style="width: 111px;">{{rowData.location}}</td>\r\n            <td style="width: 111px;">{{rowData.po}}</td>\r\n            <td style="width: 111px;">{{rowData.qtyssued}}</td>\r\n            <td style="width: 111px;">{{rowData.quantityReq}}</td>\r\n            <td style="width: 111px;">{{rowData.quantityResrved}}</td>\r\n            <td style="width: 111px;">{{rowData.quantityTurnIn}}</td>\r\n            <td style="width: 111px;">{{rowData.receiver}}</td>\r\n            <td style="width: 111px;">{{rowData.ro}}</td>\r\n            <td style="width: 111px;">{{rowData.serialNo}}</td>\r\n            <td style="width: 111px;">{{rowData.shelf}}</td>\r\n            <td style="width: 111px;">{{rowData.site}}</td>\r\n            <td style="width: 111px;">{{rowData.stockLineNo}}</td>\r\n            <td style="width: 111px;">{{rowData.stockType}}</td>\r\n            <td style="width: 111px;">{{rowData.subWO}}</td>\r\n            <td style="width: 111px;">{{rowData.timeLife}}</td>\r\n            <td style="width: 111px;">{{rowData.unitCost}}</td>\r\n            <td style="width: 111px;">{{rowData.warehouse}}</td>\r\n        </tr>\r\n    </ng-template>\r\n</p-treeTable>\r\n</div>\r\n<div class="preloader" *ngIf="isSpinnerVisible">\r\n    <div class="loading">\r\n        <div class="lds-roller"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n    </div>\r\n</div>\r\n'},Grwb:function(e,r,t){"use strict";t.r(r),r.default=".table-overflow {\n  overflow: auto !important;\n}\n\n.table > thead > tr > th {\n  font-size: 10px !important;\n  padding: 5px !important;\n}\n\n.dropbtn {\n  background-color: #3498db;\n  color: white;\n  padding: 16px;\n  font-size: 16px;\n  border: none;\n  cursor: pointer;\n}\n\n/* Dropdown button on hover & focus */\n\n.dropbtn:hover,\n.dropbtn:focus {\n  background-color: #2980b9;\n}\n\n/* The container <div> - needed to position the dropdown content */\n\n.dropdown {\n  position: relative;\n  display: inline-block;\n}\n\n/* Dropdown Content (Hidden by Default) */\n\n.dropdown-content {\n  display: none;\n  position: absolute;\n  background-color: #f1f1f1;\n  min-width: 160px;\n  box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\n  z-index: 1;\n}\n\n/* Links inside the dropdown */\n\n.dropdown-content a {\n  color: black;\n  padding: 12px 16px;\n  text-decoration: none;\n  display: block;\n}\n\n/* Change color of dropdown links on hover */\n\n.dropdown-content a:hover {\n  background-color: #ddd;\n}\n\n/* Show the dropdown menu (use JS to add this class to the .dropdown-content container when the user clicks on the dropdown button) */\n\n.show {\n  display: block;\n}\n\n.vertical-menu-wolist {\n  width: 130px;\n}\n\n.vertical-menu-wolist a {\n  background-color: #eee;\n  display: block !important;\n  text-decoration: none;\n}\n\n.h-300 {\n  height: 300px;\n}\n\n.status-radio label {\n  text-align: left;\n  width: 140px;\n  margin-right: 0;\n  font-weight: normal;\n}"},Hw2q:function(e,r,t){"use strict";t.r(r),r.default="label {\r\n  text-align: left;\r\n  width: 140px;\r\n  margin-right: 0;\r\n  font-weight: normal;\r\n}\r\ninput[type='text'],\r\ninput[type='number'],\r\nselect,\r\ntextarea {\r\n  height: 24px !important;\r\n  border-radius: 5px !important;\r\n}\r\n.grey-card {\r\n  background-color: #e7e7e7;\r\n}\r\n"},J1L2:function(e,r,t){"use strict";t.r(r),r.default='    <div class="card" style="padding: 10px;">\r\n        <div class="col-md-12">\r\n           <h4 class="po-head-sm"> \r\n              Communication - Memo \r\n              <a href="#" data-toggle="modal" data-target="#addNewMemo" (click)="addMemo()"\r\n               *ngIf="!isView">\r\n                <i class="fa fa-plus-circle fa-lg"></i> </a>\r\n            </h4>\r\n        </div>\r\n    </div>\r\n      <div>\r\n        <p-table #dt\r\n        class="rpo-table-cstm rro-table-cstm ptable-f10"\r\n        [value]="data"\r\n        [metaKeySelection]="true"\r\n        [first]="0"\r\n        (onPage)="pageIndexChange($event)"\r\n        [rows]="pageSize"\r\n        [paginator]="true"\r\n        [pageLinks]="3"\r\n        [rowsPerPageOptions]="[10, 20, 50, 100]"\r\n        [columns]="selectedColumns"\r\n        selectionMode="multiple"\r\n        [resizableColumns]="true"\r\n        [reorderableColumns]="true"\r\n        [totalRecords]="totalRecords"\r\n        [scrollable]="true" scrollHeight="450px">\r\n\r\n            <ng-template pTemplate="caption">\r\n                <div style="text-align: right; min-height: 30px;">\r\n                    <p-multiSelect [options]="headers" [(ngModel)]="selectedColumns"\r\n                    [ngModelOptions]="{ standalone: true }" optionLabel="header" \r\n                    selectedItemsLabel="{0} columns selected"\r\n                    [style]="{ minWidth: \'200px\' }" defaultLabel="Choose Columns" style="float:left"></p-multiSelect>\r\n                    <div class="inner-addon right-addon w200 inline-block g-filter-search-cstm">\r\n                        <i class="fa fa-search"></i>\r\n                        <input type="text" pInputText size="50" class="form-control ui-autocomplete-input"\r\n                            (input)="dt.filterGlobal($event.target.value, \'contains\')" placeholder=" Filter"\r\n                            style="height: 28px !important;" />\r\n                    </div>\r\n                    <button type="button" class="btn btn-primary" matTooltip="Download Data" matTooltipPosition="above"\r\n                    pButton icon="fa-download" iconPos="left" label="Export Data" (click)="dt.exportCSV()"\r\n                    style="padding:5px 10px !important;"></button>\r\n                    <button type="button" class="btn btn-primary" matTooltip="Download Selected Data"\r\n                    matTooltipPosition="above" pButton icon="fa-download" iconPos="left" label="Export Selected Data"\r\n                    (click)="dt.exportCSV({ selectionOnly: true })" style="padding:5px 10px !important;"></button>\r\n\r\n                    \x3c!-- <div class="excel-upload excel-upload-cstm">\r\n                    <button type="button" class="btn btn-primary" matTooltip="Download Sample File"\r\n                        matTooltipPosition="above" (click)="sampleExcelDownload()" style="padding: 5px 10px !important;">\r\n                        Sample File Download\r\n                    </button>\r\n\r\n                    <input type="file" name="upload[]" id="upload" (change)="customExcelUpload($event)"\r\n                        class="uploaddoc upload-file" accept=".xlsx, .xls, .csv" />\r\n                    <label for="upload">\r\n                        <span matTooltip="Upload Data (Excel)" matTooltipPosition="above">\r\n                        <i class="fa fa-upload"></i>\r\n                        </span>\r\n                    </label>\r\n                    </div> --\x3e\r\n                </div>\r\n            </ng-template>\r\n            <ng-template pTemplate="colgroup" let-columns>\r\n                <colgroup>\r\n                    <col *ngFor="let col of columns" style="width:130px">\r\n                </colgroup>\r\n            </ng-template>\r\n            <ng-template pTemplate="header" let-columns>\r\n                <tr>\r\n\r\n                    <th style="width:auto"\r\n                        *ngFor="let col of columns"\r\n                        pResizableColumn\r\n                        pReorderableColumn\r\n                        [pSortableColumn]="col.field">\r\n                        {{ col.header }}\r\n                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                    </th>\r\n                    <th style="width:50px;position:sticky"\r\n                        *ngIf="selectedColumns.length > 0 && !isView">\r\n                        Actions\r\n                    </th>\r\n                </tr>\r\n                <tr>\r\n                    <th style="width:auto" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                        <input style="width:100%;" pInputText type="text" (input)="\r\n                            dt.filter($event.target.value, col.field, \'contains\')\r\n                        " />\r\n                    </th>\r\n                    <th style="width: 50px;" *ngIf="!isView"></th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                    <tr [pSelectableRowDblClick]="rowData" [pSelectableRow]="rowData">\r\n                        <ng-container *ngFor="let col of columns" >\r\n                                <td  style="width:auto"\r\n                                *ngIf="col.field == \'SERIAL_NO\'"\r\n                                class="ui-resizable-column"\r\n                                pReorderableRowHandle>\r\n                                <p class="m-0 p-0 text-right">{{rowData[col.field]}}</p>\r\n                                <span> </span>\r\n                                </td>\r\n                                <td style="width:auto"\r\n                                *ngIf="col.field !== \'SERIAL_NO\'"\r\n                                class="ui-resizable-column"\r\n                                pReorderableRowHandle>\r\n                                    <p class="p_textEditor" [innerHTML]=rowData[col.field]></p>\r\n                                </td>\r\n                        </ng-container>\r\n                        <td style="width:50px;position:sticky" class="ui-resizable-column" *ngIf="!isView">\r\n                            \x3c!-- <button class="btn-edit ptable-wo-btns buton_back_bordernon" mat-icon-button data-target="#addNewMemo" data-toggle="modal"\r\n                            (click)="edit(rowData, i)" matTooltip="Edit">\r\n                                <mat-icon>edit</mat-icon>\r\n                            </button> --\x3e\r\n                            \x3c!-- <button class="btn btn-danger nobg" (click)="deleteMemo(rowData)">\r\n                                <i class="fa fa-trash" style="font-size: 14px;"></i>\r\n                            </button> --\x3e\r\n                            <span data-toggle="modal" data-target="#addNewMemo"><a class="btn nobg btn-edit-cstm" (click)="edit(rowData, rowIndex)" matTooltip="Edit" matTooltipPosition="above" data-dismiss="modal"><i class="fa fa-pencil"></i></a> </span>\r\n                            <span><a class="btn nobg btn-delete-cstm" (click)="deleteMemoConfirmation(rowData)" matTooltip="Delete" matTooltipPosition="above"><i class="fa fa-trash"></i></a> </span>\r\n                        </td>\r\n                    </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate="emptymessage" let-columns *ngIf="data.length == 0">\r\n                <tr>\r\n                  <td colspan="4" style="color: red; font-weight: bold; text-align: center">\r\n                    No records found\r\n                  </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate="summary" id="footer">\r\n                <label id="footer">Total:</label>\r\n                <input style="width: 5%;" [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText type="text" />\r\n                &nbsp;&nbsp;\r\n                <label id="footer">Pages Count:</label>    \r\n                <input style="width: 5%;" [ngModel]="getPageCount(dt._totalRecords, pageSize)" [disabled]="true" pInputText type="text" />\r\n              </ng-template>\r\n        </p-table>\r\n</div>\r\n\r\n<div id="addNewMemo" class="modal fade" role="dialog" data-backdrop="static">\r\n    <div class="modal-dialog">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">{{ isEdit ? \'Edit\' : \'Add\'  }} Memo </h4>\r\n            \r\n                <div class="col-md-12 shadow-box-cstm">\r\n                    <div class="col-md-6">\r\n                      <p class="fs12">\r\n                        <label class="control-label labels-font-header" style="width: auto;">Customer Name:\r\n                        </label>\r\n                        <span class="span-header-red" style="text-transform: capitalize" *ngIf="isSubWorkOrder">\r\n                            {{subWorkOrderDetails.customerName}}\r\n                        </span>\r\n                        <span class="span-header-red" style="text-transform: capitalize" *ngIf="!isSubWorkOrder">\r\n                            {{savedWorkOrderData.customerId.customerName}}\r\n                        </span>\r\n                      </p>\r\n                    </div>\r\n                    <div class="col-md-6">\r\n                      <p class="fs12">\r\n                        <label class="control-label labels-font-header" style="width: auto;">Customer Code:\r\n                        </label>\r\n                        <span class="span-header-red" style="text-transform: capitalize" *ngIf="isSubWorkOrder">\r\n                            {{subWorkOrderDetails.customerCode}}\r\n                        </span>\r\n                        <span class="span-header-red" style="text-transform: capitalize" *ngIf="!isSubWorkOrder">\r\n                            {{savedWorkOrderData.customerId.customerCode}}\r\n                        </span>\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n            \r\n            </div>\r\n            <div class="modal-body">\r\n                <table class="table table-bordered table-fixed workflow-table-material">\r\n                    <thead>\r\n                        <th style="color: #fff;">Memo</th>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr class="material-tr"\r\n                        *ngFor="let material of addList; let i = index" id="row_{{i}}">\r\n                            <td>\r\n                                <p-editor [(ngModel)]="material.description" [style]="{\'height\':\'320px\'}" name="description" required></p-editor>\r\n                                \x3c!-- <textarea [(ngModel)] = "material.description"></textarea> --\x3e\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <div style="float:right">\r\n                    <button class="btn btn-primary btn-primary" (click)="saveMemo()"\r\n                        style="padding: 6px 12px !important;margin-top: 10px;">\r\n                        Save\r\n                    </button>\r\n                    <button type="button" class="btn btn-danger" data-dismiss="modal" style="padding: 6px 12px !important;margin-top: 10px;">Close</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div id="deleteRowConfirmation" class="modal fade" role="dialog" data-backdrop="static">\r\n    <div class="modal-dialog modal-sm">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <h4 class="modal-title">Are You Sure Want to Delete the record?</h4>\r\n                <button type="button" class="close" aria-label="Close" data-dismiss="modal">\r\n                    <span aria-hidden="true">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-primary" data-dismiss="modal" (click)="deleteMemo(deletingRow)">Yes</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">No</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n<div class="preloader" *ngIf="isSpinnerVisible">\r\n    <div class="loading">\r\n        <div class="lds-roller"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n    </div>\r\n</div>'},JUvD:function(e,r,t){"use strict";t.r(r),r.default='<div class="card">\r\n    <div class="card-body">\r\n        <div class="col-md-12">\r\n        <div class="col-md-6">\r\n            <div class="form-row">\r\n            <div class="col-md-6">\r\n                <div class="form-group ">\r\n                <label>Quote Number <span class="clr-red">*</span></label>\r\n                <input class="form-control" type="text" [(ngModel)]="quoteForm.quoteNumber" name="quotenumber" readonly/>\r\n                </div>\r\n                <div class="form-group ">\r\n                <label>Open Date <span class="clr-red">*</span> </label>\r\n                <p-calendar [showIcon]="true" (onSelect)="calculateExpiryDate()" [(ngModel)]="quoteForm.openDate" name="openDate" [disabled]="isView"></p-calendar>\r\n                </div>\r\n                <div class="form-group ">\r\n                <label>Quote Due Date <span class="clr-red">*</span></label>\r\n                <p-calendar [showIcon]="true"  [(ngModel)]="quoteDueDate" name="QuoteDueDate" aria-readonly [disabled]="isView"></p-calendar>\r\n                </div>\r\n                <div class="form-group ">\r\n                <label> Valid For Days <span class="clr-red">*</span></label>\r\n                <input class="form-control" (change)="calculateExpiryDate()" type="number" [(ngModel)]="validFor" name="ValidForDays" [disabled]="isView"/>\r\n                </div>\r\n                <div class="form-group ">\r\n                <label> Expiration Date <span class="clr-red">*</span></label>\r\n                <p-calendar [showIcon]="true" [(ngModel)]="expirationDate" name="ExpDate" [disabled]="true"></p-calendar>\r\n                </div>\r\n    \r\n                <div class="form-group">\r\n                <label> Quote Status <span class="clr-red">*</span></label>\r\n                <select [(ngModel)]="quoteForm.expirationDateStatus" name="ExpDateStatus" [disabled]="isView">\r\n                    <option value=1>Open</option>\r\n                    <option value=2>Closed</option>\r\n                    <option value=3>Cancelled</option>\r\n                    <option value=4>Delayed</option>\r\n                </select>\r\n                </div>\r\n                <div class="form-group ">\r\n                <label>WO Num </label>\r\n                <input class="form-control" type="text" [(ngModel)]="workOrderNumber" name="WoNumber" readonly/>\r\n                </div>\r\n            </div>\r\n            <div class="col-md-6">\r\n                <div class="form-group">\r\n                <label for="customerName">Customer Name\r\n                </label>\r\n                <input class="form-control" type="text" [(ngModel)]="customerName" name="customerName" readonly/>\r\n                </div>\r\n                <div class="form-group ">\r\n                <label for="customerCode">Customer Code\r\n                </label>\r\n                <input class="form-control" type="text" [(ngModel)]="customerCode" name="customerCode" readonly/>\r\n                </div>\r\n                <div class="form-group ">\r\n                <label for="customerContact">Customer Contact\r\n                </label>\r\n                <input class="form-control" type="text" [(ngModel)]="customerContact" name="customerContact" readonly/>\r\n                </div>\r\n                <div class="form-group ">\r\n                <label for="customerEmail">Customer email\r\n                </label>\r\n                <input class="form-control" type="email" [(ngModel)]="customerEmail" name="customerEmail" readonly/>\r\n                </div>\r\n                <div class="form-group ">\r\n                <label for="customerPhone">Customer phone\r\n                </label>\r\n                <input class="form-control" type="number" [(ngModel)]="customerPhone" name="customerPhone" readonly/>\r\n                </div>\r\n                <div class="form-group ">\r\n                <label for="customerRef">Customer Ref\r\n                </label>\r\n                <input class="form-control" type="text" [(ngModel)]="customerRef" name="customerRef" readonly/>\r\n                </div>\r\n                <div class="form-group ">\r\n                <label for="accountsReceivableBalance">AR Balance\r\n                </label>\r\n                <input class="form-control" type="number" [(ngModel)]="accountsReceivableBalance" name="accountsReceivableBalance" [disabled]="isView"/>\r\n                </div>\r\n                \r\n            </div>\r\n            </div>\r\n        </div>\r\n    \r\n        <div class="col-md-6">\r\n            <div class="form-row">\r\n            <div class="col-md-6">\r\n    \r\n                <div class="form-group">\r\n                <label for="credit">Credit Terms &amp; Limit <span class="clr-red">*</span>\r\n                </label>\r\n                <div class="col-md-12">\r\n                    <div class="col-md-4">\r\n                    <input type="text" class="form-control" [(ngModel)]="creditLimit" name="creditLimit" readonly/>\r\n                    </div>\r\n                    <div class="col-md-6">\r\n                    <input type="text" class="form-control" [(ngModel)]="creditTerms" name="creditTerms" readonly/>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n                <div class="form-group ">\r\n                <label for="salesPerson">Sales Person\r\n                </label>\r\n                <input class="form-control" type="text" [(ngModel)]="salesPerson" name="salesPerson" readonly/>\r\n                </div>\r\n                <div class="form-group ">\r\n                <label for="csr">CSR\r\n                </label>\r\n                <input class="form-control" type="text" [(ngModel)]="csr" name="csr" readonly/>\r\n                </div>\r\n                <div class="form-group ">\r\n                <label for="Employee">Employee\r\n                </label>\r\n                <input class="form-control" type="text" [(ngModel)]="employeeName" name="Employee" readonly/>\r\n                </div>\r\n                <div class="form-group ">\r\n                <label for="Currency">Currency\r\n                    <span class="clr-red">*</span>\r\n                </label>\r\n                <select [(ngModel)]="currency" name="Currency" [disabled]="isView" *ngIf="!isQuoteListView">\r\n                    <option value="">Select Currency</option>\r\n                    <option *ngFor="let cur of currencyList" [value]="cur.value">{{cur.label}}</option>\r\n                </select>\r\n                <input class="form-control" type="text" [(ngModel)]="currency" name="Currency" *ngIf="isQuoteListView" [disabled]="isView"/>\r\n                </div>\r\n                <div class="form-group ">\r\n                <label> DSO <span class="clr-red">*</span></label>\r\n                <input class="form-control" type="text" [(ngModel)]="dso" name="DSO" [disabled]="isView"/>\r\n                </div>\r\n            </div>\r\n            <div class="col-md-6">\r\n            </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        <div>\r\n        <div class="col-md-4">\r\n            <label for="warnings">Warnings\r\n            </label>\r\n            <textarea class="form-control" [(ngModel)]="warnings" name="warnings" [disabled]="isView"></textarea>\r\n        </div>\r\n        <div class="col-md-4">\r\n            <label for="memo">Memo\r\n            </label>\r\n            <textarea class="form-control" [(ngModel)]="memo" name="memo" disabled></textarea>\r\n        </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class="col-md-3" *ngIf="savedWorkOrderData && !savedWorkOrderData.isSinglePN">\r\n        <div class="form-group ">\r\n            <label class="fs12">MPN\r\n            </label>\r\n            <select (change)="partNumberSelected()" class="mpn-select" style="width: 100px;" [(ngModel)]="selectedPartNumber">\r\n            <option value="">Select</option>\r\n            <option *ngFor="let mpn of mpnPartNumbersList" [value]="mpn.label">{{mpn.label}}</option>\r\n            </select>\r\n        </div>\r\n        <div class="form-group ">\r\n            <label class="fs12">Part Description:\r\n            </label>\r\n            <label>{{selectedPartDescription}}</label>\r\n        </div>\r\n        <div class="form-group ">\r\n            <label class="fs12">Stock Line Number:\r\n            </label>\r\n            <label>{{selectedStockLineNumber}}</label>\r\n        </div>\r\n    </div>\r\n\r\n    <div class="card col-md-12" style="background: #f1f1f1; margin-top: 10px;" *ngIf="selectedPartNumber != \'\'">\r\n        <div class="form-group ">\r\n            <button type="button" class="btn" [ngClass]="gridActiveTab === \'materialList\'?\'btn-primary\':\'btn-light-cstm\'" (click)="gridTabChange(\'materialList\');">Material List</button>\r\n            <button type="button" class="btn" [ngClass]="gridActiveTab === \'labor\'?\'btn-primary\':\'btn-light-cstm\'" (click)="gridTabChange(\'labor\');">Labor</button>\r\n            <button type="button" class="btn" [ngClass]="gridActiveTab === \'charges\'?\'btn-primary\':\'btn-light-cstm\'" (click)="gridTabChange(\'charges\');">Charges</button>\r\n            <button type="button" class="btn" [ngClass]="gridActiveTab === \'exclusions\'?\'btn-primary\':\'btn-light-cstm\'" (click)="gridTabChange(\'exclusions\');">Exclusions</button>\r\n            <button type="button" class="btn" [ngClass]="gridActiveTab === \'freight\'?\'btn-primary\':\'btn-light-cstm\'" (click)="gridTabChange(\'freight\');">Freight</button>\r\n        </div>\r\n    </div>\r\n\r\n    <div class="table-responsive" *ngIf="gridActiveTab === \'exclusions\'">\r\n        <app-work-order-exclusions [workFlowObject]="workFlowObject" \r\n        [isWorkOrder]="isWorkOrder"\r\n            [workOrderExclusionsList]="workOrderExclusionsList" \r\n        (saveExclusionsListForWO)="saveWorkOrderExclusionsList($event)"\r\n        (updateExclusionsListForWO)="updateWorkOrderExclusionsList($event)"\r\n        [markupList]="markupList"\r\n        (refreshData)="getExclusionListByWorkOrderId()"\r\n        isQuote="true"\r\n        isView="true"\r\n        [taskList]="taskList"\r\n        view="true"\r\n        ></app-work-order-exclusions> \r\n    \r\n    </div>\r\n    <div class="wf-label-cstm" *ngIf="gridActiveTab === \'freight\'">\r\n        <app-work-order-freight [freightForm]="freight" \r\n        isQuote="true"\r\n        [workOrderFreightList]="workOrderFreightList" \r\n        [savedWorkOrderData]="savedWorkOrderData"\r\n        (saveFreightListForWO)="saveWorkOrderFreightsList($event)"\r\n        (updateFreightListForWo)="updateWorkOrderFreightsList($event)"\r\n        (refreshData)="getFreightListByWorkOrderId()"\r\n        [taskList]="taskList"\r\n        [markupList]="markupList"\r\n        ></app-work-order-freight>\r\n    </div>\r\n    \r\n    <div class="table-responsive" *ngIf="gridActiveTab === \'labor\'">\r\n        <app-work-order-labor [taskList]="taskList" [laborForm]="labor" [workOrderLaborList]="workOrderLaborList" [workOrderWorkFlowOriginalData]="workOrderWorkFlowOriginalData" [savedWorkOrderData]="savedWorkOrderData" \r\n        (saveworkOrderLabor)="saveworkOrderLabor($event)" isQuote="true" [markupList]="markupList" isView="true" isEdit="false"\r\n        view="true"\r\n        ></app-work-order-labor>\r\n    \r\n    </div>\r\n    <div class="table-responsive" *ngIf="gridActiveTab === \'charges\'">\r\n        <app-work-order-charges [workFlowObject]="workFlowObject" \r\n        isWorkOrder="false"\r\n            [workOrderChargesList]="workOrderChargesList" \r\n        (saveChargesListForWO)="saveWorkOrderChargesList($event)"\r\n        (updateChargesListForWO)="updateWorkOrderChargesList($event)"\r\n        (createQuote)="createChargeQuote($event)"\r\n        (refreshData)="getChargesListByWorkOrderId()" \r\n        isQuote="true"\r\n        [markupList]="markupList"\r\n        isView="true"\r\n        [taskList]="taskList"\r\n        view="true"\r\n        ></app-work-order-charges>\r\n    </div>\r\n\r\n    <div *ngIf="gridActiveTab === \'materialList\'">\r\n            <table class="table table-bordered table-striped table-sorting mpn-list-table table-disabled" >\r\n              <thead>\r\n                <tr style="color: #f1f1f1;">\r\n                    <td colspan="11">&nbsp;</td>\r\n                    <td colspan="6">\r\n      \r\n                        <div class="form-group" style="text-align: center; display: flex;">\r\n                          <p-radioButton\r\n                            class="p-radiobutton-label-horizontal p-radio-custom"\r\n                            name="costPlusType"\r\n                            label="T&M - Mark Up"\r\n                            value="1"\r\n                            [(ngModel)]="costPlusType"\r\n                            [disabled]="isView"\r\n                            (click)="tmchange()"\r\n                          ></p-radioButton>\r\n                          <div>\r\n                            <select class="form-control" (change)="markupChanged({}, \'all\')" [(ngModel)]="overAllMarkup" [disabled]="isView || costPlusType != \'1\'" style="margin-top: 10px;">\r\n                              <option value="">Select</option>\r\n                              <option *ngFor="let markUp of markupList" [value]="markUp.value">{{markUp.label}}</option>\r\n                            </select>\r\n                          </div>\r\n                        </div>\r\n                        <div>\r\n                          <p-radioButton\r\n                            class="p-radiobutton-label-horizontal col-width p-radio-custom"\r\n                            name="costPlusType"\r\n                            value="2"\r\n                            label="Actual"\r\n                            [(ngModel)]="costPlusType"\r\n                            [disabled]="isView"\r\n                            (click)="tmchange()"\r\n                          ></p-radioButton>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Task</th>\r\n                  <th>MC PN</th>\r\n                  <th>MC Description</th>\r\n                  <th>QTE/WO/WF/SL/M</th>\r\n                  <th>REF</th>\r\n                  <th>Qty</th>\r\n                  <th>UOM</th>\r\n                  <th>Cond Type</th>\r\n                  <th>OEM/PMA/DER</th>\r\n                  <th>Unit Cost</th>\r\n                  <th>Total Part Cost</th>\r\n                  <th>Billing Method</th>\r\n                  <th>Mark Up</th>\r\n                  <th>\r\n                    Billing Rate\r\n                  </th>\r\n                  <th>\r\n                    Billing Amount\r\n                  </th>\r\n                  <th *ngIf="!isView"></th>\r\n                  <th *ngIf="!isView"></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <ng-container *ngFor="let matQuotation of materialListQuotation; let in=index;">\r\n                  <tr class="mpn-row" *ngIf="!matQuotation[\'isDeleted\']">\r\n                    <td>\r\n                      <select class="form-control wf-pub-id select-read-only" [(ngModel)]="matQuotation.taskId" [disabled]="isView" disabled>\r\n                        <option value="">Select</option>\r\n                        <option *ngFor="let task of taskList" [value]="task.taskId">{{task.description}}</option>\r\n                      </select>\r\n                    </td>\r\n                    <td>{{matQuotation.partNumber}}</td>\r\n                    <td>{{matQuotation.partDescription}}</td>\r\n                    <td>{{matQuotation.partDescription}}</td>\r\n                    <td>{{matQuotation.partDescription}}</td>\r\n                    <td>{{matQuotation.quantity}}</td>\r\n                    <td>{{matQuotation.unitOfMeasureId}}</td>\r\n                    <td>{{matQuotation.conditionCodeId}}</td>\r\n                    <td>{{matQuotation.isDeferred}}</td>\r\n                    <td class="content-to-end">{{matQuotation.unitCost}}</td>\r\n                    <td class="content-to-end">{{(matQuotation.quantity * matQuotation.unitCost).toFixed(2)}}</td>\r\n                    <td>\r\n                      <select class="form-control" [(ngModel)]="matQuotation.billingMethodId" style="width: 130px;">\r\n                        <option value="">Select</option>\r\n                        <option *ngFor="let bm of [{\'label\': \'T&M\', \'value\': \'1\'}, {\'label\': \'Actual\', \'value\': \'2\'}]" [value]="bm.value">{{bm.label}}</option>\r\n                      </select>\r\n                    </td>\r\n                    <td>\r\n                        <select class="form-control wf-pub-id" (change)="markupChanged(matQuotation, \'row\')" [(ngModel)]="matQuotation.markupPercentageId" [disabled]="isView || matQuotation.billingMethodId != \'1\'">\r\n                          <option value="">Select</option>\r\n                          <option *ngFor="let markUp of markupList" [value]="markUp.value">{{markUp.label}}</option>\r\n                        </select>\r\n                    </td>\r\n                    <td>\r\n                        <input type="number" [(ngModel)]="matQuotation.billingRate" (change)="matQuotation.billingAmount = (matQuotation.billingRate*matQuotation.quantity).toFixed(2)" [disabled]="isView || matQuotation.billingMethodId != 2"/>\r\n                    </td>\r\n                    <td class="content-to-end">{{ matQuotation.billingAmount }}</td>\r\n                    <td *ngIf="!isView">\r\n                        <button\r\n                          class="btn-edit ptable-wo-btns"\r\n                          mat-icon-button\r\n                          data-target="#addNewMaterials"\r\n                          data-toggle="modal"\r\n                          (click)="editMaterialList(matQuotation)"\r\n                          matTooltip="Edit"\r\n                        >\r\n                          <mat-icon>edit</mat-icon>\r\n                        </button>\r\n                    </td>\r\n                    <td *ngIf="!isView">\r\n                        <button\r\n                          class="btn-delete ptable-wo-btns"\r\n                          mat-icon-button\r\n                          matTooltip="Delete"\r\n                          (click)="deleteMaterialList(in)"\r\n                        >\r\n                          <mat-icon color="warn">delete</mat-icon>\r\n                        </button>\r\n                    </td>\r\n                  </tr>\r\n                </ng-container>\r\n              </tbody>\r\n              <tfoot>\r\n                <tr>\r\n                  <td>\r\n                    Total\r\n                  </td>\r\n                  <td>&nbsp;</td>\r\n                  <td>&nbsp;</td>\r\n                  <td>&nbsp;</td>\r\n                  <td>&nbsp;</td>\r\n                  <td>{{getTotalQuantity()}}</td>\r\n                  <td>&nbsp;</td>\r\n                  <td>&nbsp;</td>\r\n                  <td>&nbsp;</td>\r\n                  <td>&nbsp;</td>\r\n                  <td class="content-to-end">{{ getTotalUnitCost() }}</td>\r\n                  <td>&nbsp;</td>\r\n                  <td>&nbsp;</td>\r\n                  <td>&nbsp;</td>\r\n                  <td class="content-to-end">{{totalMaterialBillingAmount()}}</td>\r\n                  <td *ngIf="!isView"></td>\r\n                  <td *ngIf="!isView"></td>\r\n                </tr>\r\n              </tfoot>\r\n            </table>\r\n        </div>\r\n</div>'},Juwu:function(e,r,t){"use strict";t.r(r),r.default=""},L3Oz:function(e,r,t){"use strict";t.r(r),r.default='.grey-card {\n  background-color: #e7e7e7;\n}\n\n.wo-multiple-pn-details {\n  background: #fff;\n  padding: 8px;\n  border: 5px solid #e7e7e7;\n}\n\n.nav-pills-cstm {\n  margin-top: 10px;\n  font-size: 11px;\n}\n\n.nav-pills-cstm li {\n  float: left;\n}\n\n.nav-pills-cstm li a {\n  background-color: #4298ffb0;\n  color: white;\n  margin-right: 4px;\n}\n\nli.nav-item {\n  margin-right: 1px;\n  border-radius: 4px;\n}\n\n.nav-pills .nav-link,\n.nav-pills .show > .nav-link {\n  color: black;\n  background-color: #ddd;\n}\n\n.nav-pills > li > a.active,\n.nav-pills > li > a.active:focus,\n.nav-pills > li > a.active:hover {\n  color: #fff;\n  background-color: #337ab7 !important;\n}\n\n.dropdown-menu.show > a {\n  background-color: white !important;\n  color: black !important;\n}\n\n.hidedata {\n  display: none;\n}\n\n.hidedataOthers {\n  display: none;\n}\n\n.dropdown-submenu {\n  position: relative;\n}\n\n.dropdown-submenu .dropdown-menu {\n  top: 0;\n  left: 100%;\n  margin-top: -1px;\n}\n\n.labels-ctsm-align label {\n  font-weight: bold !important;\n}\n\nlabel {\n  text-align: left;\n  width: auto;\n  margin-right: 0;\n  font-weight: normal;\n}\n\ninput[type=text],\ninput[type=number],\nselect,\ntextarea {\n  height: 24px !important;\n  border-radius: 5px !important;\n}\n\n.ui-widget {\n  padding: 0px !important;\n}\n\n.nav-pills li a {\n  padding: 5px 4px !important;\n}\n\n@media (min-width: 768px) {\n  .col-md-6 .col-md-6 {\n    max-width: 44%;\n    margin-right: 15px;\n  }\n\n  .col-md-3 {\n    max-width: 22%;\n    margin-right: 15px;\n  }\n}\n\n.isDisabled {\n  pointer-events: none;\n}\n\n.ui-chkbox-box {\n  margin-right: 10px;\n  background-color: red !important;\n}\n\n.c-wf-bcrumb {\n  background-color: transparent;\n}\n\n.c-wf-bcrumb li {\n  font-family: "Roboto";\n  font-size: medium;\n  font-weight: 900;\n  color: #295d92;\n}\n\n.c-wf-bcrumb .breadcrumb-item.active {\n  color: #6c757d !important;\n}\n\n.wf-popup-form label {\n  width: 100px;\n  text-align: right;\n  margin-top: 1px;\n}\n\n.wfl-table-popup-cstm {\n  margin-top: 4px;\n}\n\n.wfl-table-popup-cstm tr th {\n  padding: 8px 4px !important;\n}\n\n.wfl-table-popup-cstm tr td {\n  padding: 5px;\n}\n\n.po-head-wfl {\n  font-weight: bold;\n  font-size: 13px !important;\n  color: #295d92 !important;\n  margin-bottom: 0;\n}'},LdGP:function(e,r,t){"use strict";t.r(r),r.default='<div [@fadeInOut] class="page-content">\r\n    <div class="right_col" role="main">\r\n        <div class="col-md-12">\r\n            <div class="x_panel" style="">\r\n                <div class="x_content">\r\n                    <nav aria-label="breadcrumb">\r\n                        <ol class="breadcrumb">\r\n                            <li class="breadcrumb-item"><a routerLink="/">Dashboard</a></li>\r\n                            <li class="breadcrumb-item active" aria-current="page">WO Reserve</li>\r\n                        </ol>\r\n                    </nav>\r\n                    <div class="pheading">\r\n                        <h4 class="page-heading clr-green">WO Reserve</h4>\r\n                    </div>\r\n                    <div class="cdetails-top">\r\n                        <div class="col-sm-12">\r\n                            <label>Company</label>\r\n                            <span>Silverxis</span>\r\n                        </div>\r\n                        <div class="col-sm-12">\r\n                            <label>BU</label>\r\n                            <span>Adso</span>\r\n                        </div>\r\n                        <div class="col-sm-12">\r\n                            <label>Division</label>\r\n                            <span>Development</span>\r\n                        </div>\r\n                        <div class="col-sm-12">\r\n                            <label>Dept</label>\r\n                            <span>Java</span>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div class="clear"></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class="col-md-12 col-sm-12 col-xs-12 po-ro-setup">\r\n            <div class="x_panel">\r\n                <div class="tab-content">\r\n                    <div class="table-responsive default-bg clear ro-grid-table">\r\n\r\n                        <table class="table table-bordered table-striped">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th><input type="checkbox" class="form-control wauto" id="checkall" /></th>\r\n                                    <th>PN</th>\r\n                                    <th>Description</th>\r\n                                    <th>Qty Required</th>\r\n                                    <th>Qty Reserved</th>\r\n                                    <th>Qty Turn In</th>\r\n                                    <th>Qty Issued</th>\r\n                                    <th>Cond</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td><input type="checkbox" class="form-control wauto check-single" /></td>\r\n                                    <td><input type="text" class="form-control w200" placeholder="PN12345" /></td>\r\n                                    <td><input type="text" class="form-control w200" placeholder="Part Number" /></td>\r\n                                    <td><input type="number" class="form-control w50" value="5" /></td>\r\n                                    <td><input type="number" class="form-control w50" value="4" /></td>\r\n                                    <td><input type="number" class="form-control w50" value="" /></td>\r\n                                    <td><input type="number" class="form-control w50" value="4" /></td>\r\n                                    <td>New</td>\r\n                                    <td>\r\n                                        <span data-toggle="tooltip" class="status" title="Active" data-placement="right"><input type="checkbox" checked data-toggle="toggle" data-width="30" id="toggle-one" data-on="<i class=\'fa fa-check\'></i>" data-off="<i class=\'fa fa-times\'></i>" data-onstyle="success" data-offstyle="danger"></span>\r\n                                        <a data-toggle="tooltip" title="Edit" class="btn btn-primary boxed-float-btn nobg"><i class="fa fa-edit"></i></a>\r\n                                        <span data-toggle="modal" data-target="#">\r\n                                            <a class="btn btn-success nobg" data-toggle="tooltip" title="Document History"><i class="fa fa-history"></i></a>\r\n                                        </span>\r\n                                        <a data-toggle="tooltip" title="Delete" class="btn btn-success boxed-float-btn nobg"><i class="fa fa-trash"></i></a>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        <br />\r\n                        <a routerLink="/app-work-order-complete-material-list" class="btn btn-info">Submit</a>\r\n                    </div>\r\n                </div>\r\n                <div class="clear"></div>\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>'},MCDi:function(e,r,t){"use strict";t.r(r),r.default='<div class="card" style="padding: 10px;">\r\n    <div class="col-md-12">\r\n        <h4 class="po-head-sm">\r\n            Communication - Email\r\n            <a href="#" data-toggle="modal" data-target="#addNewMemo" (click)="addMemo()" *ngIf="!isViewFromWO">\r\n                <i class="fa fa-plus-circle fa-lg"></i></a>\r\n        </h4>\r\n    </div>\r\n</div>\r\n<div>\r\n    <p-table #dt class="rpo-table-cstm rro-table-cstm ptable-f10" [value]="data" [first]="0" [rows]="pageSize"\r\n        [paginator]="true" [pageLinks]="3" [rowsPerPageOptions]="[10, 20, 50, 100]" [columns]="selectedColumns"\r\n        selectionMode="multiple" [metaKeySelection]="true" [lazy]="false" [resizableColumns]="true"\r\n        [reorderableColumns]="true" [totalRecords]="totalRecords" [scrollable]="true" scrollHeight="450px">\r\n        \x3c!--(onLazyLoad)="loadData($event)"--\x3e\r\n        <ng-template pTemplate="caption">\r\n            <div style="text-align: right; min-height: 30px;">\r\n                <p-multiSelect [options]="headers" [(ngModel)]="selectedColumns" [ngModelOptions]="{ standalone: true }"\r\n                    optionLabel="header" selectedItemsLabel="{0} columns selected" [style]="{ minWidth: \'200px\' }"\r\n                    defaultLabel="Choose Columns" style="float:left"></p-multiSelect>\r\n                <div class="inner-addon right-addon w200 inline-block g-filter-search-cstm">\r\n                    <i class="fa fa-search"></i>\r\n                    <input type="text" pInputText size="50" class="form-control ui-autocomplete-input"\r\n                        (input)="dt.filterGlobal($event.target.value, \'contains\')" placeholder=" Filter"\r\n                        style="height: 28px !important;" />\r\n                </div>\r\n                <button type="button" class="btn btn-primary" matTooltip="Download Data" matTooltipPosition="above"\r\n                    pButton icon="fa-download" iconPos="left" label="Export Data" (click)="dt.exportCSV()"\r\n                    style="padding:5px 10px !important;"></button>\r\n                <button type="button" class="btn btn-primary" matTooltip="Download Selected Data"\r\n                    matTooltipPosition="above" pButton icon="fa-download" iconPos="left" label="Export Selected Data"\r\n                    (click)="dt.exportCSV({ selectionOnly: true })" style="padding:5px 10px !important;"></button>\r\n\r\n                \x3c!-- <div class="excel-upload excel-upload-cstm">\r\n                <button type="button" class="btn btn-primary" matTooltip="Download Sample File"\r\n                    matTooltipPosition="above" (click)="sampleExcelDownload()" style="padding: 5px 10px !important;">\r\n                    Sample File Download\r\n                </button>\r\n\r\n                <input type="file" name="upload[]" id="upload" (change)="customExcelUpload($event)"\r\n                    class="uploaddoc upload-file" accept=".xlsx, .xls, .csv" />\r\n                <label for="upload">\r\n                    <span matTooltip="Upload Data (Excel)" matTooltipPosition="above">\r\n                    <i class="fa fa-upload"></i>\r\n                    </span>\r\n                </label>\r\n                </div> --\x3e\r\n            </div>\r\n        </ng-template>\r\n        <ng-template pTemplate="colgroup" let-columns>\r\n            <colgroup>\r\n                <col *ngFor="let col of columns" style="width:130px">\r\n            </colgroup>\r\n        </ng-template>\r\n        <ng-template pTemplate="header" let-columns>\r\n            <tr>\r\n                <th style="width:auto" *ngFor="let col of columns" pResizableColumn pReorderableColumn\r\n                    [pSortableColumn]="col.field">\r\n                    {{ col.header }}\r\n                    <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                </th>\r\n                <th style="width:50px;position:sticky" *ngIf="selectedColumns.length > 0 && !isViewFromWO">\r\n                    Actions\r\n                </th>\r\n            </tr>\r\n            <tr>\r\n                <th style="width:auto" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                    <input style="width:100%;" pInputText type="text" (input)="\r\n                            dt.filter($event.target.value, col.field, \'contains\')\r\n                        " />\r\n                </th>\r\n                <th style="width: 50px;" *ngIf="!isViewFromWO"></th>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate="body" let-rowData let-columns="columns">\r\n            <tr [pSelectableRowDblClick]="rowData" [pSelectableRow]="rowData">\r\n                <td style="width:auto" *ngFor="let col of columns" class="ui-resizable-column" pReorderableRowHandle>\r\n                    {{rowData[col.field]}}\r\n                </td>\r\n                <td style="width:50px;position:sticky" class="ui-resizable-column" *ngIf="!isViewFromWO">\r\n                    \x3c!-- <button class="btn-edit ptable-wo-btns" mat-icon-button data-target="#addNewMemo" data-toggle="modal"\r\n                            (click)="editEmail(rowData)" matTooltip="Edit">\r\n                                <mat-icon>edit</mat-icon>\r\n                            </button> --\x3e\r\n                    <span data-toggle="modal" data-target="#viewEmail"><a class="btn nobg btn-view-cstm"\r\n                            (click)="emailView(rowData)" matTooltip="View" matTooltipPosition="above"><i\r\n                                class="fa fa-eye"></i></a> </span>\r\n                    <span data-toggle="modal" data-target="#deleteRowConfirmation"><a class="btn nobg btn-delete-cstm"\r\n                            (click)="showDeleteConfirmation(rowData)" matTooltip="Delete" matTooltipPosition="above"><i\r\n                                class="fa fa-trash"></i></a> </span>\r\n                    \x3c!-- <button class="btn btn-danger nobg" > (click)="data.splice(i, 1)"\r\n                                <a href="#" data-toggle="modal" data-target="#viewEmail" (click)="emailView(rowData)">\r\n                            <i _ngcontent-c313="" class="fa fa-eye view_icon_adjust"></i></a>\r\n                        </button> --\x3e\r\n                    \x3c!-- <button class="btn btn-danger nobg" (click)="addList.splice(i, 1)">\r\n                                <i class="fa fa-trash"></i>\r\n                            </button> --\x3e\r\n                </td>\r\n            </tr>\r\n        </ng-template>\r\n        \x3c!-- <ng-template pTemplate="summary" id="footer">\r\n                <label id="footer" class="footer">No\'of records:</label>\r\n                <input style="width: 5%;"\r\n                        [(ngModel)]="totalRecords"\r\n                        [disabled]="true"\r\n                        pInputText\r\n                        type="text" />\r\n                &nbsp;&nbsp;\r\n                <label id="footer" class="footer1">Pages Count:</label>\r\n                <input style="width: 5%;"\r\n                        [(ngModel)]="totalPages"\r\n                        [disabled]="true"\r\n                        pInputText\r\n                        type="text" />\r\n            </ng-template> --\x3e\r\n        <ng-template pTemplate="emptymessage" let-columns *ngIf="data.length == 0">\r\n            <tr>\r\n                <td colspan="5" style="color: red; font-weight: bold; text-align: center">\r\n                    No records found\r\n                </td>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate="summary" id="footer">\r\n            <label id="footer">Total:</label>\r\n            <input style="width: 5%;" [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText type="text" />\r\n            &nbsp;&nbsp;\r\n            <label id="footer">Pages Count:</label>\r\n            <input style="width: 5%;" [ngModel]="getPageCount(dt._totalRecords, pageSize)" [disabled]="true" pInputText\r\n                type="text" />\r\n        </ng-template>\r\n    </p-table>\r\n</div>\r\n\r\n\r\n<div id="addNewMemo" class="modal fade" role="dialog" data-backdrop="static">\r\n\r\n    <div class="modal-dialog" style="margin-top:0%;">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Add Email</h4>\r\n\r\n\r\n                <div class="col-md-12 shadow-box-cstm">\r\n                    <div class="col-md-6">\r\n                        <p class="fs12">\r\n                            <label class="control-label labels-font-header" style="width: auto;">Customer Name:\r\n                            </label>\r\n                            <span class="span-header-red" style="text-transform: capitalize">\r\n                                {{customerDetails.customerName}}\r\n                            </span>\r\n                        </p>\r\n                    </div>\r\n                    <div class="col-md-6">\r\n                        <p class="fs12">\r\n                            <label class="control-label labels-font-header" style="width: auto;">Customer Code:\r\n                            </label>\r\n                            <span class="span-header-red" style="text-transform: capitalize">\r\n                                {{customerDetails.customerCode}}\r\n                            </span>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <form #attachDocForm="ngForm" class="form-horizontal" ngNativeValidate>\r\n                <div class="modal-body">\r\n                    <div class="form-row">\r\n                        <div class="col-md-12">\r\n                            <div class="col-md-6">\r\n                                <div class="form-group col-md-12">\r\n                                    <label>Email Type <span class="clr-red">*</span></label>\r\n                                    <select [(ngModel)]="emailType" class="form-control" name="emailType" required>\r\n                                        <option value="">Select</option>\r\n                                        <option *ngFor="let emailTy of emailTypes" [value]="emailTy.value">\r\n                                            {{emailTy.label}}</option>\r\n                                    </select>\r\n                                </div>\r\n                                <div class="form-group col-md-12">\r\n                                    <label class="col-md-12">Customer Contact <span class="clr-red">*</span></label>\r\n                                    <p-autoComplete field="contactName" [(ngModel)]="customerContact" required\r\n                                        name="cusContact" #cusContact="ngModel" errorMessage="Records not found"\r\n                                        [forceSelection]="true" [dropdown]="true" [suggestions]="cusContactList"\r\n                                        (completeMethod)="filterCustomerContact($event)" [size]="30" [minLength]="1"\r\n                                        (onSelect)="contactSelected($event)" class="p-autoComplete-ctsm">\r\n                                    </p-autoComplete>\r\n                                </div>\r\n                                <div class="form-group col-md-12">\r\n                                    <label>BCC</label>\r\n                                    <input class="form-control" type="email" name="bcc" [(ngModel)]="bcc"\r\n                                        multiple="true">\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                            <div class="col-md-6">\r\n\r\n                                <div class="form-group col-md-12">\r\n                                    <label class="col-md-12">Contacted By <span class="clr-red">*</span></label>\r\n                                    \x3c!-- <select [(ngModel)]="contactBy" class="form-control" name="createdBy" required>\r\n                                    <option value="">Select</option>\r\n                                    <option *ngFor="let employee of employees" [value]="employee.employeeId">{{employee.firstName}}</option>\r\n                                </select> --\x3e\r\n                                    <p-autoComplete field="name" [(ngModel)]="contactBy" required name="employees"\r\n                                        #employees="ngModel" errorMessage="Records not found" [forceSelection]="true"\r\n                                        [dropdown]="true" [suggestions]="employeeList"\r\n                                        (completeMethod)="filterEmployee($event)" [size]="30" [minLength]="1"\r\n                                        [dropdown]="true" class="p-autoComplete-ctsm">\r\n                                    </p-autoComplete>\r\n                                </div>\r\n                                <div class="form-group col-md-12">\r\n                                    <label>Email To <span class="clr-red">*</span></label>\r\n                                    <input class="form-control" type="email" name="email" [(ngModel)]="toEmail" required\r\n                                        disabled>\r\n                                </div>\r\n                                <div class="form-group col-md-12" style="margin-top:-7px">\r\n                                    <label>CC</label>\r\n                                    <input class="form-control" type="email" name="cc" [(ngModel)]="cc" multiple="true">\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class="col-md-12 ">\r\n                            <div class="form-group">\r\n                                <label class="col-md-12">Email Subject <span class="clr-red">*</span></label>\r\n                                <input class="form-control" type="text" [(ngModel)]="subject" name="subject" rows="1"\r\n                                    required>\r\n                            </div>\r\n\r\n                            <div class="col-md-12">\r\n                                <div class="form-group">\r\n                                    <label>Email Body</label>\r\n                                    <p-editor class="p-editor-cstm" [(ngModel)]="emailBody" style="overflow-y: auto;;"\r\n                                        [style]="{\'height\':\'150px\'}" name="emailBody" required></p-editor>\r\n                                    \x3c!-- <textarea class="form-control" rows="50" [(ngModel)]="emailBody" name="emailBody" required></textarea> --\x3e\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div class="col-md-12">\r\n                                <div class="form-group">\r\n                                    <label style="float: none;width: auto;">Attachments:</label>\r\n                                    <p-fileUpload #fileUploadInput name="fileupload[]" multiple="multiple"\r\n                                        [showCancelButton]="false" [showUploadButton]="false" customUpload="true"\r\n                                        (onSelect)="fileUpload($event)" (onRemove)="removeFile($event)"\r\n                                        class="form-control col-md-12 fileupload"></p-fileUpload>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class="modal-footer" style="padding-top:0px; padding-bottom:0px;">\r\n                        <button type="submit" class="btn btn-primary btn-primary" (click)="send(attachDocForm.valid)"\r\n                            style="padding: 6px 12px !important;margin-top: 10px;"\r\n                            [disabled]="!attachDocForm.valid || checkValidEmails()">\r\n                            Send\r\n                        </button>\r\n                        <button type="button" class="btn btn-danger" data-dismiss="modal"\r\n                            style="padding: 6px 12px !important;margin-top: 10px;">Close</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n<div class="preloader" *ngIf="isSpinnerVisible">\r\n    <div class="loading">\r\n        <div class="lds-roller">\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div id="deleteRowConfirmation" class="modal fade" role="dialog" data-backdrop="static">\r\n    <div class="modal-dialog modal-sm">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <h4 class="modal-title">Are You Sure Want to Delete the record?</h4>\r\n                <button type="button" class="close" aria-label="Close" data-dismiss="modal">\r\n                    <span aria-hidden="true">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-primary" data-dismiss="modal"\r\n                    (click)="delete(deletingRecord)">Yes</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">No</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n<div id="viewEmail" class="modal fade" role="dialog" data-backdrop="static">\r\n\r\n    <div class="modal-dialog modal-sm">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content" *ngIf="isView==true">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title"> Email Details</h4>\r\n                <div class="col-md-12 shadow-box-cstm">\r\n                    <div class="col-md-6">\r\n                        <p class="fs12">\r\n                            <label class="control-label labels-font-header" style="width: auto;">Customer Name:\r\n                            </label>\r\n                            <span class="span-header-red" style="text-transform: capitalize">\r\n                                {{customerDetails.customerName}}\r\n                            </span>\r\n                        </p>\r\n                    </div>\r\n                    <div class="col-md-6">\r\n                        <p class="fs12">\r\n                            <label class="control-label labels-font-header" style="width: auto;">Customer Code:\r\n                            </label>\r\n                            <span class="span-header-red" style="text-transform: capitalize">\r\n                                {{customerDetails.customerCode}}\r\n                            </span>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class="modal-body">\r\n                <div class="col-sm-12">\r\n                    <p>\r\n                        <span class="label"><strong> Email Type: </strong></span><span class="value">{{\r\n                            emailViewData.emailType\r\n                          }}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label"><strong> CC: </strong></span><span class="value">{{\r\n                                emailViewData.cc\r\n                            }}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label"><strong> BCC: </strong></span><span class="value">{{\r\n                                emailViewData.bcc\r\n                            }}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label"><strong>Subject: </strong></span><span class="value">{{\r\n                                emailViewData.subject\r\n                            }}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label"><strong> Contacted By: </strong></span><span class="value">{{\r\n                                emailViewData.contactBy\r\n                            }}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label"><strong> Contact Date: </strong></span><span class="value">{{\r\n                                emailViewData.contactDate\r\n                            }}</span>\r\n                    </p>\r\n                    \x3c!-- <hr> --\x3e\r\n                    <p class="email-content">\r\n                        <span class="label" style="float: left;"><strong> Email Content: </strong></span>\r\n                        <span class="value" [innerHTML]="emailViewData.emailBody"></span>\r\n                    </p>\r\n                    <div>\r\n                        <label class="label"\r\n                            style="float: left;width: 30%; padding: 0;display: inline-block;">Attachments:</label>\r\n                        <ul style="list-style: none;">\r\n                            <li *ngFor="let attachment of emailViewData.attachmentDetails">\r\n                                {{attachment.fileName}} - <a class="filelink"\r\n                                    (click)="downloadFileUpload(attachment.link)">\r\n                                    {{ attachment.link }}</a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <div class="modal-footer" style="padding: 0px;">\r\n                        <button type="button" class="btn btn-danger" data-dismiss="modal"\r\n                            style="padding: 6px 12px !important;margin-top: 10px;">Close</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n    <ng-template #emailQuotePopup let-c="close" let-d="dismiss">\r\n        <div class="modal-header">\r\n            <button type="button" class="close" data-dismiss="modal" (click)="closeModal()">&times;</button>\r\n            <h4 class="modal-title">Confirmation</h4>\r\n        </div>\r\n        <div class="modal-body">\r\n            <h6 class="text-center">\r\n                Are you sure you want to send this Quote to Customer?\r\n            </h6>\r\n            <a class="filelink btn btn-link" (click)="downloadFileUpload(pdfPath)" target="_blank" download>Preview\r\n                Quote</a>\r\n            \x3c!-- <a href="{{pdfPath}}" class="btn btn-link" target="_blank" >Preview Quote</a> --\x3e\r\n        </div>\r\n        <div class="modal-footer">\r\n\r\n            <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="closeModal()">No</button>\r\n            <button type="button" class="btn btn-primary" data-dismiss="modal"\r\n                (click)="triggerMailSalesQuote()">Yes</button>\r\n        </div>\r\n        <div class="preloader" *ngIf="isSpinnerVisible">\r\n            <div class="loading">\r\n                <div class="lds-roller">\r\n                    <div></div>\r\n                    <div></div>\r\n                    <div></div>\r\n                    <div></div>\r\n                    <div></div>\r\n                    <div></div>\r\n                    <div></div>\r\n                    <div></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </ng-template>'},MESU:function(e,r,t){"use strict";t.r(r),r.default='<div class="card">\r\n  <div class="card-body">\r\n    <p-table #rolist class="rpo-table-cstm rro-table-cstm ptable-f10" [columns]="roListColumns" [value]="workOrderRoList" [paginator]="true" [rows]="pageSize" [resizableColumns]="true" [reorderableColumns]="true" [pageLinks]="3" [rowsPerPageOptions]="[10, 20, 50, 100]" [scrollable]="true" scrollHeight="450px">\r\n      <ng-template pTemplate="colgroup" let-columns>\r\n        <colgroup>\r\n            <col *ngFor="let col of columns" style="width:102px">\r\n        </colgroup>\r\n      </ng-template>\r\n      <ng-template pTemplate="header" let-columns>\r\n        <tr>\r\n          <th style="width:auto"\r\n              *ngFor="let col of columns"\r\n              pResizableColumn\r\n              pReorderableColumn\r\n              [pSortableColumn]="col.field">\r\n              {{ col.header }}\r\n              <p-sortIcon [field]="col.field"></p-sortIcon>\r\n          </th>\r\n          <th style="width:80px;position:sticky" *ngIf="!isView">\r\n            Action\r\n          </th>\r\n        </tr>\r\n        <tr>\r\n          <th *ngFor="let col of columns" [ngSwitch]="col.field">\r\n            <input  pInputText type="text" (input)="rolist.filter($event.target.value, col.field, \'contains\')">\r\n          </th>\r\n          <th></th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate="body" let-rowData let-columns="columns">\r\n        <tr>\r\n          <ng-container *ngFor="let col of columns" >            \r\n            <td style="width:auto"\r\n            *ngIf="col.field != \'serialNumber\' && col.field != \'quantityOrdered\' && col.field != \'unitCost\' && col.field != \'extendedCost\'"\r\n            class="ui-resizable-column"\r\n            pReorderableRowHandle>\r\n            {{\r\n              col.field == \'openDate\'\r\n                ? (rowData[col.field] | date: \'MM/dd/yyyy\')\r\n                : rowData[col.field] && col.field == \'needByDate\'\r\n                ? (rowData[col.field] | date: \'MM/dd/yyyy\')\r\n                : rowData[col.field]\r\n            }}\r\n            </td> \r\n            <td  style="width:auto"\r\n            *ngIf="col.field == \'serialNumber\' || col.field == \'quantityOrdered\' || col.field == \'unitCost\' || col.field == \'extendedCost\'"\r\n            class="ui-resizable-column"\r\n            pReorderableRowHandle>\r\n            <p class="m-0 p-0 text-right">\r\n              {{rowData[col.field]}}\r\n            </p>\r\n            </td>\r\n          </ng-container>\r\n          \x3c!-- <td *ngFor="let col of columns">\r\n            {{\r\n              col.field == \'openDate\'\r\n                ? (rowData[col.field] | date: \'MM/dd/yyyy\')\r\n                : rowData[col.field] && col.field == \'needByDate\'\r\n                ? (rowData[col.field] | date: \'MM/dd/yyyy\')\r\n                : rowData[col.field]\r\n            }}\r\n          </td> --\x3e\r\n          <td style="width:80px;position:sticky" *ngIf="!isView">\r\n            <span><a class="btn nobg btn-edit-cstm" (click)="edit(rowData)" matTooltip="Edit" matTooltipPosition="above">\r\n              \x3c!-- <i class="fa fa-pencil"></i> --\x3e\r\n              <i class="fa fa-plus"\r\n                    style="color: #259e08;"></i>\r\n            </a></span>\r\n            \x3c!-- <button class="btn-edit ptable-wo-btns" mat-icon-button (click)="edit(rowData)" matTooltip="Edit">\r\n              <mat-icon>edit</mat-icon>\r\n            </button> --\x3e\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate="emptymessage" let-columns *ngIf="workOrderRoList.length == 0">\r\n        <tr>\r\n          <td colspan="15" style="color: red; font-weight: bold; text-align: center">\r\n            No records found\r\n          </td>\r\n        </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate="summary" id="footer">\r\n        <label id="footer">Total:</label>\r\n        <input style="width: 5%;" [(ngModel)]="rolist._totalRecords" [disabled]="true" pInputText type="text" />\r\n        &nbsp;&nbsp;\r\n        <label id="footer">Pages Count:</label>    \r\n        <input style="width: 5%;" [ngModel]="getPageCount(rolist._totalRecords, pageSize)" [disabled]="true" pInputText type="text" />\r\n      </ng-template>\r\n    </p-table>\r\n  </div>\r\n</div>\r\n<div class="preloader" *ngIf="isSpinnerVisible">\r\n    <div class="loading">\r\n        <div class="lds-roller"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n    </div>\r\n</div>'},MNvC:function(e,r,t){"use strict";t.d(r,"a",(function(){return n}));class n{constructor(e,r,t,n,a,s,i,o,l,d,c,p,u,h,m,b,g,v){this.addressId=r,this.line1=t,this.line2=n,this.country=i,this.postalCode=s,this.recordModifiedDate=l,this.stateOrProvince=c,this.city=d,this.masterCompanyId=p,this.createdBy=u,this.createdDate=h,this.updatedDate=m,this.updatedBy=b,this.masterCompany=e,this.isActive=g,this.memo=v}}},MQJV:function(e,r,t){"use strict";t.r(r),r.default='input[type=text],\ninput[type=number],\nselect,\ntextarea {\n  height: 24px !important;\n  border-radius: 5px !important;\n}\n\nselect:disabled {\n  background-color: #e9ecef !important;\n}\n\n.select-read-only {\n  border: none;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  text-indent: 1px;\n  text-overflow: "";\n  box-shadow: none !important;\n}\n\n.rro-table-cstm th {\n  width: unset !important;\n}\n\n.footer td {\n  background-color: #eaf2fd;\n}\n\n.p-radiobutton-label-horizontal .ui-radiobutton-label {\n  width: unset !important;\n  margin-right: 10px;\n}'},NNg4:function(e,r,t){"use strict";t.r(r),r.default='\x3c!-- \r\n<div class="form-row">\r\n    <div class="col-md-3">\r\n        <div >\r\n          <label>WO Num</label>\r\n          <input  class="form-control"  type="text" id="cmaddress1"  name="cmaddress1" required />\r\n        </div>\r\n        </div>\r\n        <div class="col-md-3">\r\n            <div >\r\n              <label>PN </label>\r\n              <input class="form-control" type="text" id="cmaddress1" name="cmaddress1" required/>\r\n            </div>\r\n            <div >\r\n                <label>Revised PN</label>\r\n                <input class="form-control"  type="text" id="cmaddress1" name="cmaddress1" required  />\r\n              </div>\r\n            </div>\r\n            <div class="col-md-3">\r\n                <div >\r\n                  <label>Customer Name </label>\r\n                  <input class="form-control"  type="text" id="cmaddress1" name="cmaddress1" required />\r\n                </div>\r\n                </div>\r\n</div> --\x3e\r\n<div>\r\n    <button type="button" class="btn btn-primary" (click)="ExpandAllCustomerDetailsModelEdit()">\r\n        Open All\r\n    </button>\r\n    <button type="button" class="btn btn-secondary" (click)="CloseAllCustomerDetailsModelEdit()">\r\n        Close All\r\n    </button> \r\n    <button *ngIf="showViewTemplate==true" type="button" data-target="#addNewCharges" data-toggle="modal" class="btn btn-primary view_bt" (click)="tearDownView()">\r\n        View\r\n    </button>  \r\n</div>\r\n<form name="form"  (ngSubmit)="createTearDownData(f)" #f="ngForm" >\r\n<div class="panel-group mt-2 tear_down_cls work_order_teardown" id="accordion" >\r\n    <div class="panel panel-default" *ngIf="checkForTeardownAvalabilityFromWO(\'Removal Reasons\') && saveTearDownData">\r\n        <div class="panel-heading">\r\n            <h4 class="panel-title">\r\n                <div></div>\r\n                <input type="checkbox" name="isRemovalReasons"   class="set_cds" (change)="checkValue($event,saveTearDownData.workOrderRemovalReasons,1)"\r\n                [(ngModel)]="saveTearDownData.isRemovalReasons" [disabled]="isView">\r\n                \x3c!-- <p-checkbox class="set_cds" name=" Removal Reasons" value="saveTearDownData.isRemovalReasons" label=" Removal Reasons" [(ngModel)]="saveTearDownData.isRemovalReasons" inputId="ny"></p-checkbox> --\x3e\r\n                <a data-toggle="collapse" class="ac_cs" href="#stepadd1"> Removal Reasons</a>\r\n            </h4>\r\n        </div>\r\n        <div id="stepadd1" class="panel-collapse collapse in show">\r\n            <div class="panel-body">\r\n                <div class="form-row">\r\n                    <div class="col-md-3">\r\n                            <div >\r\n                                \x3c!-- {{saveTearDownData.isRemovalReasons}} --\x3e\r\n                                <label> Reason <span class="clr-red" *ngIf="saveTearDownData.isRemovalReasons">*</span></label>\r\n                                <p-dropdown  name="company1"\r\n                                #wocompanyId="ngModel"  required\r\n                                [options]="RemovalReasonsList" placeholder="Select Reason"\r\n                                class="p-dropdown-custom-md-2"\r\n                                (onChange)="selectedReason($event.value,1)" #removalReason="ngModel"\r\n                                [(ngModel)]="saveTearDownData.workOrderRemovalReasons.reasonId" [disabled]="!saveTearDownData.isRemovalReasons">\r\n                               </p-dropdown>\r\n                            </div>\r\n                            <div *ngIf="f.submitted && saveTearDownData.isRemovalReasons && saveTearDownData.workOrderRemovalReasons.reasonId ==0" >\r\n                                <div  class="red_bomb">Reason is required</div>\r\n                            </div>\r\n                    </div>  \r\n                    <div class="col-md-9">\r\n                        <div >\r\n                            \x3c!-- {{saveTearDownData.workOrderRemovalReasons.reasonId !=0}} ,{{!saveTearDownData.isRemovalReasons}} --\x3e\r\n                            <label>Memo <span class="clr-red" *ngIf="saveTearDownData.isRemovalReasons">*</span></label>\r\n                            \x3c!-- <textarea class="form-control text-area-cstm" required name="removal_Memo"  #removalMemo="ngModel" [disabled]="saveTearDownData.workOrderRemovalReasons.reasonId ==0 ||  !saveTearDownData.isRemovalReasons" [(ngModel)]="saveTearDownData.workOrderRemovalReasons.memo"></textarea> --\x3e\r\n                            <p-editor  [style]="{\'height\':\'100px\'}" name="textAreaInfo1" required [readonly]="saveTearDownData.workOrderRemovalReasons.reasonId ==0 ||  !saveTearDownData.isRemovalReasons" [(ngModel)]="saveTearDownData.workOrderRemovalReasons.memo"></p-editor>\r\n                            \x3c!-- <p-editor [(ngModel)]="saveTearDownData.workOrderRemovalReasons.memo" [style]="{\'height\':\'320px\'}"></p-editor> --\x3e\r\n                        </div>\r\n                        <div *ngIf="f.submitted && saveTearDownData.isRemovalReasons && saveTearDownData.workOrderRemovalReasons.memo ==\'\'" >\r\n                            <div  class="red_bomb">Memo is required</div>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="panel panel-default" *ngIf="checkForTeardownAvalabilityFromWO(\'PMA/DER & Bulletins\')">\r\n        <div class="panel-heading">\r\n            <h4 class="panel-title">\r\n                <input type="checkbox" name="contract2"  class="set_cds" (change)="checkValue($event,saveTearDownData.workOrderPmaDerBulletins,2)"\r\n                [(ngModel)]="saveTearDownData.isPmaDerBulletins" [disabled]="isView">\r\n                \x3c!-- <p-checkbox class="set_cds" name="PMA/DER & Bulletins" value="saveTearDownData.isPmaDerBulletins" label="PMA/DER & Bulletins" [(ngModel)]="saveTearDownData.isPmaDerBulletins" inputId="ny1"></p-checkbox> --\x3e\r\n                <a class="collapsed ac_cs" data-toggle="collapse"  href="#stepadd2">PMA/DER & Bulletins</a>\r\n            </h4>\r\n        </div>\r\n        <div id="stepadd2" class="panel-collapse  collapse">\r\n            <div class="panel-body m-lr-7">\r\n<div class="form-row">\r\n    <div class="col-md-3">\r\n        <div >\r\n            \x3c!-- {{saveTearDownData.isPmaDerBulletins}} --\x3e\r\n          <label>Airworthiness Directives  <span class="clr-red" *ngIf="saveTearDownData.isPmaDerBulletins">*</span></label>\r\n          <input class="form-control" name="Airworthine"  #Airworthiness="ngModel" [(ngModel)]="saveTearDownData.workOrderPmaDerBulletins.airworthinessDirecetives" [disabled]="!saveTearDownData.isPmaDerBulletins" type="text" id="AirworthinessDirecetives" name="AirworthinessDirecetives" required/>\r\n        </div>\r\n        <div *ngIf="f.submitted  && Airworthiness.errors && saveTearDownData.isPmaDerBulletins">\r\n            <div *ngIf="Airworthiness.errors.required" class="red_bomb">Airworthiness Directives  is required</div>\r\n        </div>\r\n        </div>\r\n        <div class="col-md-3">\r\n            <div >\r\n              <label>Mandatory Service Bulletins  <span class="clr-red" *ngIf="saveTearDownData.isPmaDerBulletins">*</span></label>\r\n              <input class="form-control"  name="MandatoryS"  #MandatoryServ="ngModel" [(ngModel)]="saveTearDownData.workOrderPmaDerBulletins.mandatoryService" [disabled]="!saveTearDownData.isPmaDerBulletins" type="text" id="MandatoryService" name="MandatoryService" required/>\r\n            </div>\r\n            <div *ngIf="(f.submitted) && MandatoryServ.errors && saveTearDownData.isPmaDerBulletins" >\r\n                <div *ngIf="MandatoryServ.errors.required" class="red_bomb">Mandatory Service Bulletins is required</div>\r\n            </div>\r\n            </div>\r\n            <div class="col-md-3">\r\n                <div >\r\n                  <label>Requested Service Bulletins <span class="clr-red" *ngIf="saveTearDownData.isPmaDerBulletins">*</span></label>\r\n                  <input class="form-control"  name="Requesteds"  #reqServic="ngModel" [(ngModel)]="saveTearDownData.workOrderPmaDerBulletins.requestedService" [disabled]="!saveTearDownData.isPmaDerBulletins"  type="text" id="RequestedService" name="RequestedService" required/>\r\n                </div>\r\n                <div *ngIf="(f.submitted) && reqServic.errors && saveTearDownData.isPmaDerBulletins" >\r\n                    <div *ngIf="reqServic.errors.required" class="red_bomb">Requested Service Bulletins is required</div>\r\n                </div>\r\n                </div>\r\n                <div class="col-md-3">\r\n                    <div >\r\n                      <label>Service Letters <span class="clr-red" *ngIf="saveTearDownData.isPmaDerBulletins">*</span></label >\r\n                      <input class="form-control"  name="Servicel"  #ServiceLetters="ngModel" [(ngModel)]="saveTearDownData.workOrderPmaDerBulletins.serviceLetters" [disabled]="!saveTearDownData.isPmaDerBulletins"  type="text" id="ServiceLetters" name="ServiceLetters" required/>\r\n                    </div>\r\n                    <div *ngIf="(f.submitted) && ServiceLetters.errors && saveTearDownData.isPmaDerBulletins" >\r\n                        <div *ngIf="ServiceLetters.errors.required" class="red_bomb">Service Letters is required</div>\r\n                    </div>\r\n                    </div>\r\n                    <div class="col-md-3">\r\n                        <div >\r\n                          <label>Pma Parts <span class="clr-red" *ngIf="saveTearDownData.isPmaDerBulletins">*</span> </label>\r\n                          <input class="form-control"  name="Pma"  #PmaPart="ngModel" [(ngModel)]="saveTearDownData.workOrderPmaDerBulletins.pmaParts"  [disabled]="!saveTearDownData.isPmaDerBulletins" type="text" id="PMAParts" name="PMAParts" required/>\r\n                        </div>\r\n                        <div *ngIf="(f.submitted) && PmaPart.errors && saveTearDownData.isPmaDerBulletins" >\r\n                            <div *ngIf="PmaPart.errors.required" class="red_bomb">Pma Parts is required</div>\r\n                        </div>\r\n                        </div>\r\n                        <div class="col-md-3">\r\n                            <div >\r\n                              <label>Der Repairs <span class="clr-red" *ngIf="saveTearDownData.isPmaDerBulletins">*</span></label>\r\n                              <input class="form-control"   name="Der"  #DerRepair="ngModel" [(ngModel)]="saveTearDownData.workOrderPmaDerBulletins.derRepairs"  [disabled]="!saveTearDownData.isPmaDerBulletins" type="text"  id="DERRepairs4" name="DERRepairs6" required/>\r\n                            </div>\r\n                            <div *ngIf="(f.submitted) && DerRepair.errors && saveTearDownData.isPmaDerBulletins " >\r\n                                <div *ngIf="DerRepair.errors.required" class="red_bomb">Der Repairs is required</div>\r\n                            </div>\r\n                            </div>\r\n</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class="panel panel-default" *ngIf="checkForTeardownAvalabilityFromWO(\'Preliinary Review\')">\r\n        <div class="panel-heading">\r\n            <h4 class="panel-title">\r\n                <input type="checkbox" name="contract44"  class="set_cds" (change)="checkValue($event,saveTearDownData.workOrderPreliinaryReview,3)"\r\n                [(ngModel)]="saveTearDownData.isPreliinaryReview" [disabled]="isView">\r\n                \x3c!-- <p-checkbox class="set_cds" name="Preliinary Review" value="saveTearDownData.isPreliinaryReview" label="Preliinary Review" [(ngModel)]="saveTearDownData.isPreliinaryReview" inputId="ny2"></p-checkbox> --\x3e\r\n               \r\n                <a class="collapsed ac_cs" data-toggle="collapse" href="#stepadd3"> Preliinary Review</a>\r\n            </h4>\r\n        </div>\r\n        <div id="stepadd3" class="panel-collapse  collapse">\r\n            <div class="panel-body aircraft-panel">\r\n                <div class="form-row">\r\n                    <div class="col-md-3">\r\n              \r\n                        <div>\r\n                            <label> Reason <span class="clr-red" *ngIf="saveTearDownData.isPreliinaryReview">*</span></label>\r\n                            <p-dropdown  name="company2"   placeholder="Select Reason" required\r\n                            [options]="prelinnaryReview" class="p-dropdown-custom-md-2" [disabled]="!saveTearDownData.isPreliinaryReview"\r\n                            (onChange)="selectedReason($event.value,2)" #prelinaryReason="ngModel" [(ngModel)]="saveTearDownData.workOrderPreliinaryReview.reasonId">\r\n                </p-dropdown>\r\n                        </div>\r\n                        <div *ngIf="f.submitted &&  saveTearDownData.isRemovalReasons && saveTearDownData.workOrderRemovalReasons.reasonId ==0" >\r\n                            <div  class="red_bomb">Reason is required</div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-md-9">\r\n                        <div >\r\n                            <label> Memo  <span class="clr-red" *ngIf="saveTearDownData.isPreliinaryReview">*</span></label>\r\n                            \x3c!-- <textarea required class="form-control text-area-cstm" name="prellrevMemo"  #prelinaryRev="ngModel" [disabled]="saveTearDownData.workOrderPreliinaryReview.reasonId ==0 || !saveTearDownData.isPreliinaryReview" [(ngModel)]="saveTearDownData.workOrderPreliinaryReview.memo"></textarea> --\x3e\r\n                            <p-editor  [style]="{\'height\':\'100px\'}" name="textAreaInfo2" required [readonly]="saveTearDownData.workOrderPreliinaryReview.reasonId ==0 || !saveTearDownData.isPreliinaryReview" [(ngModel)]="saveTearDownData.workOrderPreliinaryReview.memo"></p-editor>\r\n                        </div>\r\n                        <div *ngIf="f.submitted  && saveTearDownData.isPreliinaryReview && saveTearDownData.workOrderPreliinaryReview.memo==\'\'" >\r\n                            <div  class="red_bomb">Memo is required</div>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="form-row">\r\n                        <div class="col-md-3">\r\n                        </div>\r\n                        <div class="col-md-3">\r\n                            <div > \r\n                                <label for="dataentered">Inspector   <span class="clr-red" *ngIf="saveTearDownData.isPreliinaryReview">*</span></label>\r\n                                <p-autoComplete required class="p-autoComplete-ctsm" field="name" name="Inspector1" [dropdown]="true" [disabled]="saveTearDownData.workOrderPreliinaryReview.reasonId ==0 || !saveTearDownData.isPreliinaryReview"\r\n                                    errorMessage="Records not found" [forceSelection]="true" [suggestions]="inspectionList" emptyMessage="No Records Found"\r\n                                    (completeMethod)="filterTWInspections($event)" (onSelect)="onSelectedTechnician($event);" [size]="30" [minLength]="1"\r\n                                    [(ngModel)]="saveTearDownData.workOrderPreliinaryReview.inspectorId"  #prellRevInsp="ngModel" >\r\n                                </p-autoComplete>\r\n                                </div>\r\n                                <div *ngIf="f.submitted && saveTearDownData.isPreliinaryReview && saveTearDownData.workOrderPreliinaryReview.inspectorId ==0" >\r\n                                <div  class="red_bomb">Inspector is required</div>\r\n                            </div>\r\n                            <div >\r\n                                <label>Date  <span class="clr-red" *ngIf="saveTearDownData.isPreliinaryReview">*</span></label>\r\n                                <p-calendar class="p-calendar-cstm" required [showIcon]="true"\r\n                                [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100" name="InspectorDate" [disabled]="saveTearDownData.workOrderPreliinaryReview.reasonId ==0 || !saveTearDownData.isPreliinaryReview"\r\n                                    [(ngModel)]="saveTearDownData.workOrderPreliinaryReview.inspectorDate"></p-calendar>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class="panel panel-default" *ngIf="checkForTeardownAvalabilityFromWO(\'Pre-Assessment Results\')">\r\n        <div class="panel-heading">\r\n            <h4 class="panel-title">\r\n                <input type="checkbox" name="contract54"  class="set_cds" (change)="checkValue($event,saveTearDownData.workOrderPreAssmentResults,4)"\r\n                [(ngModel)]="saveTearDownData.isPreAssmentResults" [disabled]="isView">\r\n                \x3c!-- <p-checkbox class="set_cds" name="Pre-Assessment Results" value="saveTearDownData.isPreAssmentResults" label="Pre-Assessment Results" [(ngModel)]="saveTearDownData.isPreAssmentResults" inputId="ny3"></p-checkbox> --\x3e\r\n               \r\n                <a class="collapsed ac_cs" data-toggle="collapse" href="#stepadd4">Pre-Assessment Results</a>\r\n            </h4>\r\n        </div>\r\n        <div id="stepadd4" class="panel-collapse collapse">\r\n            <div class="panel-body">\r\n                <div class="form-row">\r\n                    <div class="col-md-3">\r\n                        <div >\r\n                            <label>Reason  <span class="clr-red" *ngIf="saveTearDownData.isPreAssmentResults">*</span></label>\r\n                            <p-dropdown  name="company3"   placeholder="Select Reason" required\r\n                            [options]="tearDownReasonList" class="p-dropdown-custom-md-2" [disabled]="!saveTearDownData.isPreAssmentResults"\r\n                            (onChange)="selectedReason($event.value,3)" #pressResutReason="ngModel"  [(ngModel)]="saveTearDownData.workOrderPreAssmentResults.reasonId">\r\n                </p-dropdown>\r\n                        </div>\r\n                        <div *ngIf="f.submitted  &&  saveTearDownData.isRemovalReasons && saveTearDownData.workOrderRemovalReasons.reasonId ==0" >\r\n                            <div  class="red_bomb">Reason is required</div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-md-9">\r\n                        <div >\r\n                            <label>Memo  <span class="clr-red" *ngIf="saveTearDownData.isPreAssmentResults">*</span></label>\r\n                            \x3c!-- <textarea required class="form-control text-area-cstm" name="pressResut_Memo"  #pressResutMemo="ngModel" [disabled]="saveTearDownData.workOrderPreAssmentResults.reasonId ==0 || !saveTearDownData.isPreAssmentResults" [(ngModel)]="saveTearDownData.workOrderPreAssmentResults.memo"></textarea> --\x3e\r\n                            <p-editor  [style]="{\'height\':\'100px\'}" name="textAreaInfo3" required [readonly]="saveTearDownData.workOrderPreAssmentResults.reasonId ==0 || !saveTearDownData.isPreAssmentResults" [(ngModel)]="saveTearDownData.workOrderPreAssmentResults.memo"></p-editor>\r\n                        </div>\r\n                        <div *ngIf="f.submitted  && saveTearDownData.isDiscovery && saveTearDownData.workOrderDiscovery.memo ==\'\'" >\r\n                            <div  class="red_bomb">Memo is required</div>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                    <div class="form-row">\r\n                        <div class="col-md-3">\r\n                              <div >\r\n                                <label for="dataentered">Technican  <span class="clr-red" *ngIf="saveTearDownData.isPreAssmentResults">*</span></label>\r\n                                <p-autoComplete required class="p-autoComplete-ctsm" field="name" name="Technican3" [dropdown]="true"  [disabled]="saveTearDownData.workOrderPreAssmentResults.reasonId ==0 || !saveTearDownData.isPreAssmentResults"\r\n                                  errorMessage="Records not found" [forceSelection]="true" [suggestions]="technicianList" emptyMessage="No Records Found"\r\n                                  (completeMethod)="filterTWTechnician($event)" (onSelect)="onSelectedTechnician($event);" [size]="30" [minLength]="1"\r\n                                  [(ngModel)]="saveTearDownData.workOrderPreAssmentResults.technicianId"  #pressResultTech="ngModel">\r\n                                </p-autoComplete>\r\n                              </div>\r\n                              <div *ngIf="f.submitted   && saveTearDownData.isPreAssmentResults && saveTearDownData.workOrderDiscovery.technicianId ==0" >\r\n                                <div  class="red_bomb">Technican is required</div>\r\n                            </div>\r\n                              <div>\r\n                                <label> Date  <span class="clr-red" *ngIf="saveTearDownData.isPreAssmentResults">*</span></label>\r\n                                <p-calendar class="p-calendar-cstm" [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100" [showIcon]="true" required name="TechnicianDate"  [disabled]="saveTearDownData.workOrderPreAssmentResults.reasonId ==0 || !saveTearDownData.isPreAssmentResults"\r\n                                [(ngModel)]="saveTearDownData.workOrderPreAssmentResults.technicianDate"></p-calendar>\r\n                            </div>\r\n                            </div>\r\n                            <div class="col-md-3">\r\n                                <div >\r\n                                    <label for="dataentered">Inspector  <span class="clr-red" *ngIf="saveTearDownData.isPreAssmentResults">*</span></label>\r\n                                    <p-autoComplete class="p-autoComplete-ctsm" field="name" name="Inspector2" [dropdown]="true"  [disabled]="saveTearDownData.workOrderPreAssmentResults.reasonId ==0 || !saveTearDownData.isPreAssmentResults"\r\n                                      errorMessage="Records not found" [forceSelection]="true" [suggestions]="inspectionList" emptyMessage="No Records Found"\r\n                                      (completeMethod)="filterTWInspections($event)" (onSelect)="onSelectedTechnician($event);" [size]="30" [minLength]="1" required\r\n                                      [(ngModel)]="saveTearDownData.workOrderPreAssmentResults.inspectorId"  #pressResultsInsp="ngModel">\r\n                                    </p-autoComplete>\r\n                                  </div>\r\n                                  <div *ngIf="f.submitted  && saveTearDownData.isPreAssmentResults && saveTearDownData.workOrderPreAssmentResults.inspectorId ==0" >\r\n                                    <div  class="red_bomb">Inspector is required</div>\r\n                                </div>\r\n                                <div>\r\n                                    <label>Date  <span class="clr-red" *ngIf="saveTearDownData.isPreAssmentResults">*</span></label>\r\n                                    <p-calendar class="p-calendar-cstm" required [showIcon]="true" name="startDate"\r\n                                    [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100" [disabled]="saveTearDownData.workOrderPreAssmentResults.reasonId ==0 || !saveTearDownData.isPreAssmentResults"\r\n                                    [(ngModel)]="saveTearDownData.workOrderPreAssmentResults.inspectorDate"></p-calendar>\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="panel panel-default" *ngIf="checkForTeardownAvalabilityFromWO(\'Teardown Discovery\')">\r\n        <div class="panel-heading">\r\n            <h4 class="panel-title">\r\n                <input type="checkbox" name="contract74"  class="set_cds" (change)="checkValue($event,saveTearDownData.workOrderDiscovery,5)"\r\n                [(ngModel)]="saveTearDownData.isDiscovery" [disabled]="isView">\r\n                \x3c!-- <p-checkbox class="set_cds" name="Teardown Discovery" value="saveTearDownData.isDiscovery" label="Teardown Discovery" [(ngModel)]="saveTearDownData.isDiscovery" inputId="ny4"></p-checkbox> --\x3e\r\n               \r\n                <a class="collapsed ac_cs" data-toggle="collapse" href="#stepadd5">Teardown Discovery</a>\r\n            </h4>\r\n        </div>\r\n        <div id="stepadd5" class="panel-collapse collapse">\r\n            <div class="panel-body">\r\n                <div class="form-row">\r\n                    <div class="col-md-3">\r\n                        <div >\r\n                            <label> Reason  <span class="clr-red" *ngIf="saveTearDownData.isDiscovery">*</span></label>\r\n                            <p-dropdown  name="company4" [disabled]="!saveTearDownData.isDiscovery"\r\n                              placeholder="Select Reason"\r\n                            [options]="tearDownDescovery" required\r\n                            class="p-dropdown-custom-md-2"\r\n                            (onChange)="selectedReason($event.value,4)" #tddescoverReason="ngModel"\r\n                            [(ngModel)]="saveTearDownData.workOrderDiscovery.reasonId">\r\n                </p-dropdown>\r\n                        </div>\r\n                        <div *ngIf="f.submitted  && saveTearDownData.isDiscovery && saveTearDownData.workOrderDiscovery.reasonId ==0" >\r\n                            <div  class="red_bomb">Reason is required</div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-md-9">\r\n                    <div >\r\n                        <label> Memo  <span class="clr-red" *ngIf="saveTearDownData.isDiscovery">*</span></label>\r\n                        \x3c!-- <textarea required class="form-control text-area-cstm" name="tearDesMemos"  #tddescoverMemo="ngModel" [disabled]="saveTearDownData.workOrderDiscovery.reasonId ==0 || !saveTearDownData.isDiscovery" [(ngModel)]="saveTearDownData.workOrderDiscovery.memo"></textarea> --\x3e\r\n                        <p-editor  [style]="{\'height\':\'100px\'}" name="textAreaInfo4" required [readonly]="saveTearDownData.workOrderDiscovery.reasonId ==0 || !saveTearDownData.isDiscovery" [(ngModel)]="saveTearDownData.workOrderDiscovery.memo"></p-editor>\r\n                    </div>\r\n                    <div *ngIf="f.submitted  && saveTearDownData.isDiscovery && saveTearDownData.workOrderDiscovery.memo==\'\'" >\r\n                        <div  class="red_bomb">Memo is required</div>\r\n                    </div>\r\n                    </div>\r\n                    </div>\r\n                    <div class="form-row">\r\n                        <div class="col-md-3">\r\n                              <div >\r\n                                <label for="dataentered">Technican  <span class="clr-red" *ngIf="saveTearDownData.isDiscovery">*</span></label>\r\n                                <p-autoComplete required class="p-autoComplete-ctsm" field="name" name="Technican8" [dropdown]="true" [disabled]="saveTearDownData.workOrderDiscovery.reasonId ==0 || !saveTearDownData.isDiscovery"\r\n                                  errorMessage="Records not found" [forceSelection]="true" [suggestions]="technicianList" emptyMessage="No Records Found"\r\n                                  (completeMethod)="filterTWTechnician($event)" (onSelect)="onSelectedTechnician($event);" [size]="30" [minLength]="1"\r\n                                  [(ngModel)]="saveTearDownData.workOrderDiscovery.technicianId"  #tddescoverTech="ngModel" >\r\n                                </p-autoComplete>\r\n                              </div>\r\n                              <div *ngIf="f.submitted && saveTearDownData.isDiscovery && saveTearDownData.workOrderDiscovery.technicianId ==0" >\r\n                                <div  class="red_bomb">Technican is required</div>\r\n                            </div>\r\n                              <div>\r\n                                <label> Date  <span class="clr-red" *ngIf="saveTearDownData.isDiscovery">*</span></label>\r\n                                <p-calendar class="p-calendar-cstm" required [showIcon]="true" name="startDate"\r\n                                [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100" [disabled]="saveTearDownData.workOrderDiscovery.reasonId ==0 || !saveTearDownData.isDiscovery"\r\n                                [(ngModel)]="saveTearDownData.workOrderDiscovery.technicianDate"></p-calendar>\r\n                            </div>\r\n                            </div>\r\n                            <div class="col-md-3">\r\n                                <div >\r\n                                    <label for="dataentered">Inspector  <span class="clr-red" *ngIf="saveTearDownData.isDiscovery">*</span></label>\r\n                                    <p-autoComplete required class="p-autoComplete-ctsm" field="name" name="Inspector6" [dropdown]="true" [disabled]="saveTearDownData.workOrderDiscovery.reasonId ==0 || !saveTearDownData.isDiscovery"\r\n                                      errorMessage="Records not found" [forceSelection]="true" [suggestions]="inspectionList" emptyMessage="No Records Found"\r\n                                      (completeMethod)="filterTWInspections($event)" (onSelect)="onSelectedTechnician($event);" [size]="30" [minLength]="1"\r\n                                      [(ngModel)]="saveTearDownData.workOrderDiscovery.inspectorId"  #tddescoverInsp="ngModel">\r\n                                    </p-autoComplete>\r\n                                  </div>\r\n                                  <div *ngIf="f.submitted  && saveTearDownData.isDiscovery && saveTearDownData.workOrderDiscovery.inspectorId ==0" >\r\n                                    <div class="red_bomb">Inspector is required</div>\r\n                                </div>\r\n                                <div>\r\n                                    <label>Date  <span class="clr-red" *ngIf="saveTearDownData.isDiscovery">*</span></label>\r\n                                    <p-calendar class="p-calendar-cstm" required [showIcon]="true"\r\n                                    [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100" name="startDate" \r\n                                    [disabled]="saveTearDownData.workOrderDiscovery.reasonId ==0 || !saveTearDownData.isDiscovery"\r\n                                    [(ngModel)]="saveTearDownData.workOrderDiscovery.inspectorDate"></p-calendar>\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="panel panel-default" *ngIf="checkForTeardownAvalabilityFromWO(\'Pre Assembly Inspection\')">\r\n        <div class="panel-heading">\r\n            <h4 class="panel-title">\r\n                <input type="checkbox" name="contract85"  class="set_cds" (change)="checkValue($event,saveTearDownData.workOrderPreAssemblyInspection,6)"\r\n                [(ngModel)]="saveTearDownData.isPreAssemblyInspection" [disabled]="isView">\r\n                \x3c!-- <p-checkbox class="set_cds" name="Pre Assembly Inspection" value="saveTearDownData.isPreAssemblyInspection" label="Pre Assembly Inspection" [(ngModel)]="saveTearDownData.isPreAssemblyInspection" inputId="ny5"></p-checkbox> --\x3e\r\n               \r\n                <a class="collapsed ac_cs" data-toggle="collapse" href="#stepadd6">Pre Assembly Inspection</a>\r\n            </h4>\r\n        </div>\r\n        <div id="stepadd6" class="panel-collapse  collapse">\r\n            <div class="panel-body m-lr-7">\r\n                <div class="form-row">\r\n                    <div class="col-md-3">\r\n                        <div >\r\n                            <label>Reason  <span class="clr-red" *ngIf="saveTearDownData.isPreAssemblyInspection">*</span></label>\r\n                            <p-dropdown  required  name="company5"  placeholder="Select Reason"\r\n                            #preassemReasons="ngModel"   [disabled]="!saveTearDownData.isPreAssemblyInspection"\r\n                            [options]="preAssemblyInspection" class="p-dropdown-custom-md-2"\r\n                            (onChange)="selectedReason($event.value,5)"  [(ngModel)]="saveTearDownData.workOrderPreAssemblyInspection.reasonId">\r\n                </p-dropdown>\r\n                        </div>\r\n                        <div *ngIf="f.submitted  && saveTearDownData.isRemovalReasons && saveTearDownData.workOrderRemovalReasons.reasonId ==0" >\r\n                            <div  class="red_bomb">Reason is required</div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-md-9">\r\n                        <div >\r\n                            <label>Memo  <span class="clr-red" *ngIf="saveTearDownData.isPreAssemblyInspection">*</span></label>\r\n                            \x3c!-- <textarea required name="preassemInsp"  #preassemMemo="ngModel" [disabled]="saveTearDownData.workOrderPreAssemblyInspection.reasonId ==0 || !saveTearDownData.isPreAssemblyInspection" [(ngModel)]="saveTearDownData.workOrderPreAssemblyInspection.memo" class="form-control text-area-cstm"></textarea> --\x3e\r\n                            <p-editor  [style]="{\'height\':\'100px\'}" name="textAreaInfo5" required [readonly]="saveTearDownData.workOrderPreAssemblyInspection.reasonId ==0 || !saveTearDownData.isPreAssemblyInspection" [(ngModel)]="saveTearDownData.workOrderPreAssemblyInspection.memo"></p-editor>\r\n                        </div>\r\n                       <div *ngIf="f.submitted  && saveTearDownData.isPreAssemblyInspection && saveTearDownData.workOrderPreAssemblyInspection.memo==\'\'" >\r\n                        <div  class="red_bomb">Memo is required</div>\r\n                    </div>\r\n                    </div>\r\n                    </div>\r\n                    <div class="form-row">\r\n                        <div class="col-md-3">\r\n                              <div >\r\n                                <label for="dataentered">Technican  <span class="clr-red" *ngIf="saveTearDownData.isPreAssemblyInspection">*</span></label>\r\n                                <p-autoComplete required class="p-autoComplete-ctsm" field="name" name="Technican7" [dropdown]="true" [disabled]="saveTearDownData.workOrderPreAssemblyInspection.reasonId ==0 || !saveTearDownData.isPreAssemblyInspection"\r\n                                  errorMessage="Records not found" [forceSelection]="true" [suggestions]="technicianList" emptyMessage="No Records Found"\r\n                                  (completeMethod)="filterTWTechnician($event)" (onSelect)="onSelectedTechnician($event);" [size]="30" [minLength]="1"\r\n                                  [(ngModel)]="saveTearDownData.workOrderPreAssemblyInspection.technicianId"  #preassITech="ngModel">\r\n                                </p-autoComplete>\r\n                              </div>\r\n                              <div *ngIf="f.submitted  && preassITech.errors && saveTearDownData.isPreAssemblyInspection && saveTearDownData.workOrderPreAssemblyInspection.technicianId ==0" >\r\n                                <div  class="red_bomb">Technican is required</div>\r\n                            </div>\r\n                              <div>\r\n                                <label> Date  <span class="clr-red" *ngIf="saveTearDownData.isPreAssemblyInspection">*</span></label>\r\n                                <p-calendar required class="p-calendar-cstm" [showIcon]="true" name="startDate"\r\n                                [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100" [disabled]="saveTearDownData.workOrderPreAssemblyInspection.reasonId ==0 || !saveTearDownData.isPreAssemblyInspection"\r\n                                [(ngModel)]="saveTearDownData.workOrderPreAssemblyInspection.technicianDate"></p-calendar>\r\n                            </div>\r\n                            </div>\r\n                            <div class="col-md-3">\r\n                                <div >\r\n                                    <label for="dataentered">Inspector  <span class="clr-red" *ngIf="saveTearDownData.isPreAssemblyInspection">*</span></label>\r\n                                    <p-autoComplete required class="p-autoComplete-ctsm" field="name" name="Inspector7" [dropdown]="true" [disabled]="saveTearDownData.workOrderPreAssemblyInspection.reasonId ==0 || !saveTearDownData.isPreAssemblyInspection"\r\n                                      errorMessage="Records not found" [forceSelection]="true" [suggestions]="inspectionList" emptyMessage="No Records Found"\r\n                                      (completeMethod)="filterTWInspections($event)" (onSelect)="onSelectedTechnician($event);" [size]="30" [minLength]="1"\r\n                                      [(ngModel)]="saveTearDownData.workOrderPreAssemblyInspection.inspectorId"  #pressInsp="ngModel">\r\n                                    </p-autoComplete>\r\n                                  </div>\r\n                                  <div *ngIf="f.submitted   && saveTearDownData.isPreAssemblyInspection && saveTearDownData.workOrderPreAssemblyInspection.inspectorId ==0" >\r\n                                    <div  class="red_bomb">Inspector is required</div>\r\n                                </div>\r\n                                <div>\r\n                                    <label>Date  <span class="clr-red" *ngIf="saveTearDownData.isPreAssemblyInspection">*</span></label>\r\n                                    <p-calendar required class="p-calendar-cstm" [showIcon]="true"\r\n                                    [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100" name="startDate" [disabled]="saveTearDownData.workOrderPreAssemblyInspection.reasonId ==0 || !saveTearDownData.isPreAssemblyInspection"\r\n                                    [(ngModel)]="saveTearDownData.workOrderPreAssemblyInspection.inspectorDate"></p-calendar>\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="panel panel-default" *ngIf="checkForTeardownAvalabilityFromWO(\'Worked Performed\')">\r\n        <div class="panel-heading">\r\n            <h4 class="panel-title">\r\n                <input type="checkbox" name="contract35"  class="set_cds" (change)="checkValue($event,saveTearDownData.workOrderWorkPerformed,7)"\r\n                [(ngModel)]="saveTearDownData.isWorkPerformed" [disabled]="isView">\r\n                \x3c!-- <p-checkbox class="set_cds" name="Worked Performed" value="saveTearDownData.isWorkPerformed" label="Worked Performed" [(ngModel)]="saveTearDownData.isWorkPerformed" inputId="ny14"></p-checkbox> --\x3e\r\n               \r\n                <a class="collapsed ac_cs" data-toggle="collapse" href="#stepadd7">Worked Performed</a>\r\n            </h4>\r\n        </div>\r\n        <div id="stepadd7" class="panel-collapse  collapse">\r\n            <div class="panel-body m-lr-7">\r\n                <div class="form-row">\r\n                    <div class="col-md-3">\r\n                        <div >\r\n                            <label> Reason   <span class="clr-red" *ngIf="saveTearDownData.isWorkPerformed">*</span></label>\r\n                            <p-dropdown  required name="company6"  placeholder="Select Reason"\r\n                            #wpReasons="ngModel"  [disabled]="!saveTearDownData.isWorkPerformed"\r\n                            [options]="workPerformed"\r\n                            class="p-dropdown-custom-md-2"\r\n                            (onChange)="selectedReason($event.value,6)"\r\n                            [(ngModel)]="saveTearDownData.workOrderWorkPerformed.reasonId">\r\n                </p-dropdown>\r\n                        </div>\r\n                        <div *ngIf="f.submitted  && saveTearDownData.isRemovalReasons && saveTearDownData.workOrderRemovalReasons.reasonId ==0" >\r\n                            <div  class="red_bomb">Reason is required</div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-md-9">\r\n                        <div >\r\n                            <label> Memo  <span class="clr-red" *ngIf="saveTearDownData.isWorkPerformed">*</span></label>\r\n                            \x3c!-- <textarea required name="removal_Memo"  #wpMemo="ngModel"[disabled]="saveTearDownData.workOrderWorkPerformed.reasonId ==0 || !saveTearDownData.isWorkPerformed" [(ngModel)]="saveTearDownData.workOrderWorkPerformed.memo" class="form-control text-area-cstm"></textarea> --\x3e\r\n                            <p-editor  [style]="{\'height\':\'100px\'}" name="textAreaInfo6" required [readonly]="saveTearDownData.workOrderWorkPerformed.reasonId ==0 || !saveTearDownData.isWorkPerformed" [(ngModel)]="saveTearDownData.workOrderWorkPerformed.memo"></p-editor>\r\n                        </div>\r\n                        <div *ngIf="f.submitted && saveTearDownData.isWorkPerformed && saveTearDownData.workOrderWorkPerformed.memo ==\'\'" >\r\n                            <div  class="red_bomb">Memo is required</div>\r\n                        </div>\r\n                  </div>\r\n                    </div>\r\n                    <div class="form-row">\r\n                        <div class="col-md-3">\r\n                              <div >\r\n                                <label for="dataentered">Technican  <span class="clr-red" *ngIf="saveTearDownData.isWorkPerformed">*</span></label>\r\n                                <p-autoComplete required class="p-autoComplete-ctsm" field="name" name="Technican6" [dropdown]="true" [disabled]="saveTearDownData.workOrderWorkPerformed.reasonId ==0 || !saveTearDownData.isWorkPerformed"\r\n                                  errorMessage="Records not found" [forceSelection]="true" [suggestions]="technicianList" emptyMessage="No Records Found"\r\n                                  (completeMethod)="filterTWTechnician($event)" (onSelect)="onSelectedTechnician($event);" [size]="30" [minLength]="1"\r\n                                  [(ngModel)]="saveTearDownData.workOrderWorkPerformed.technicianId"   #workPerfomedInsp="ngModel" >\r\n                                </p-autoComplete>\r\n                              </div>\r\n                              <div *ngIf="f.submitted && saveTearDownData.isWorkPerformed && saveTearDownData.workOrderWorkPerformed.technicianId ==0" >\r\n                                <div  class="red_bomb">Technican is required</div>\r\n                            </div>\r\n                              <div>\r\n                                <label> Date  <span class="clr-red" *ngIf="saveTearDownData.isWorkPerformed">*</span></label>\r\n                                <p-calendar required class="p-calendar-cstm" [showIcon]="true" name="startDate"\r\n                                [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100" [disabled]="saveTearDownData.workOrderWorkPerformed.reasonId ==0 || !saveTearDownData.isWorkPerformed"\r\n                                [(ngModel)]="saveTearDownData.workOrderWorkPerformed.technicianDate"></p-calendar>\r\n                            </div>\r\n                            </div>\r\n                            <div class="col-md-3">\r\n                                <div >\r\n                                    <label for="dataentered">Inspector  <span class="clr-red" *ngIf="saveTearDownData.isWorkPerformed">*</span></label>\r\n                                    \x3c!-- <p-autoComplete class="p-autoComplete-ctsm" field="name" name="Inspector8" [dropdown]="true"\r\n                                      errorMessage="Records not found" [forceSelection]="true" [suggestions]="inspectionList"\r\n                                      (completeMethod)="filterTWInspections($event)" (onSelect)="onSelectedTechnician($event);" [size]="30" [minLength]="1"\r\n                                      [(ngModel)]="saveTearDownData.workOrderWorkPerformed.inspectorId" >\r\n                                    </p-autoComplete> --\x3e\r\n                                    <p-autoComplete required class="p-autoComplete-ctsm" field="name" name="Inspector12" [dropdown]="true" [disabled]="saveTearDownData.workOrderWorkPerformed.reasonId ==0 || !saveTearDownData.isWorkPerformed"\r\n                                    errorMessage="Records not found" [forceSelection]="true" [suggestions]="inspectionList" emptyMessage="No Records Found"\r\n                                    (completeMethod)="filterTWInspections($event)" (onSelect)="onSelectedTechnician($event);" [size]="30" [minLength]="1"\r\n                                    [(ngModel)]="saveTearDownData.workOrderWorkPerformed.inspectorId"   #workPerformedInsp="ngModel">\r\n                                  </p-autoComplete>\r\n\r\n\r\n                                  </div>\r\n                                  <div *ngIf="f.submitted && saveTearDownData.isWorkPerformed && saveTearDownData.workOrderWorkPerformed.inspectorId ==0" >\r\n                                    <div  class="red_bomb">Inspector is required</div>\r\n                                </div>\r\n                                <div>\r\n                                    <label>Date  <span class="clr-red" *ngIf="saveTearDownData.isWorkPerformed">*</span></label>\r\n                                    <p-calendar required class="p-calendar-cstm" [showIcon]="true"\r\n                                    [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100" name="startDate" [disabled]="saveTearDownData.workOrderWorkPerformed.reasonId ==0 || !saveTearDownData.isWorkPerformed"\r\n                                    [(ngModel)]="saveTearDownData.workOrderWorkPerformed.inspectorDate"></p-calendar>\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="panel panel-default" *ngIf="checkForTeardownAvalabilityFromWO(\'Test Data Used\')">\r\n        <div class="panel-heading">\r\n            <h4 class="panel-title">\r\n                <input type="checkbox" name="contract854"  class="set_cds" (change)="checkValue($event,saveTearDownData.workOrderTestDataUsed,8)"\r\n                [(ngModel)]="saveTearDownData.isTestDataUsed" [disabled]="isView">\r\n                \x3c!-- <p-checkbox class="set_cds" name="Test Data Used" value="saveTearDownData.isTestDataUsed" label="Test Data Used" [(ngModel)]="saveTearDownData.isTestDataUsed" inputId="ny8"></p-checkbox> --\x3e\r\n               \r\n                <a class="collapsed ac_cs" data-toggle="collapse" href="#stepadd8">Test Data Used</a>\r\n            </h4>\r\n        </div>\r\n        <div id="stepadd8" class="panel-collapse collapse">\r\n            <div class="panel-body">\r\n                <div class="form-row">\r\n                    <div class="col-md-3">\r\n                        <div >\r\n                            <label>Reason  <span class="clr-red" *ngIf="saveTearDownData.isTestDataUsed">*</span></label>\r\n                            <p-dropdown  required name="company7"  placeholder="Select Reason"\r\n                            #testDataUsedReasons="ngModel"  [disabled]=" !saveTearDownData.isTestDataUsed"\r\n                            [options]="testDataUsed"\r\n                            class="p-dropdown-custom-md-2"\r\n                            (onChange)="selectedReason($event.value,7)"\r\n                            [(ngModel)]="saveTearDownData.workOrderTestDataUsed.reasonId">\r\n                </p-dropdown>\r\n                        </div>\r\n                        <div *ngIf="f.submitted  && saveTearDownData.isRemovalReasons && saveTearDownData.workOrderRemovalReasons.reasonId ==0" >\r\n                            <div  class="red_bomb">Reason is required</div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-md-9">\r\n                        <div >\r\n                            <label>Memo <span class="clr-red" *ngIf="saveTearDownData.isTestDataUsed">*</span></label>\r\n                            \x3c!-- <textarea  required class="form-control text-area-cstm" name="testData"  #testDataUsed="ngModel" [disabled]="saveTearDownData.workOrderTestDataUsed.reasonId ==0 || !saveTearDownData.isTestDataUsed"  [(ngModel)]="saveTearDownData.workOrderTestDataUsed.memo"></textarea> --\x3e\r\n                            <p-editor  [style]="{\'height\':\'100px\'}" name="textAreaInfo7" required [readonly]="saveTearDownData.workOrderTestDataUsed.reasonId ==0 || !saveTearDownData.isTestDataUsed"  [(ngModel)]="saveTearDownData.workOrderTestDataUsed.memo"></p-editor>\r\n                        </div>\r\n                       <div *ngIf="f.submitted  && saveTearDownData.isTestDataUsed && saveTearDownData.workOrderTestDataUsed.memo ==\'\'" >\r\n                        <div  class="red_bomb">Memo is required</div>\r\n                    </div>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="panel panel-default" *ngIf="checkForTeardownAvalabilityFromWO(\'Bulletins And Modifications\')">\r\n        <div class="panel-heading">\r\n            <h4 class="panel-title">\r\n                <input type="checkbox" name="contract345"  class="set_cds" (change)="checkValue($event,saveTearDownData.workOrderBulletinsModification,9)"\r\n                [(ngModel)]="saveTearDownData.isBulletinsModification" [disabled]="isView">\r\n                \x3c!-- <p-checkbox class="set_cds" name="Bulletins And Modifications" value="saveTearDownData.isBulletinsModification" label="Bulletins And Modifications" [(ngModel)]="saveTearDownData.isBulletinsModification" inputId="ny9"></p-checkbox> --\x3e\r\n               \r\n                <a class="collapsed ac_cs" data-toggle="collapse" href="#stepadd9">Bulletins And Modifications</a>\r\n            </h4>\r\n        </div>\r\n        <div id="stepadd9" class="panel-collapse  collapse">\r\n            <div class="panel-body">\r\n                <div class="form-row">\r\n                    <div class="col-md-3">\r\n                        <div >\r\n                            <label> Reason <span class="clr-red" *ngIf="saveTearDownData.isBulletinsModification">*</span></label>\r\n                            <p-dropdown required  name="company8"  placeholder="Select Reason"\r\n                            #bulletModifyReason="ngModel"  [disabled]="!saveTearDownData.isBulletinsModification"\r\n                            [options]="bullitensAndModifications"\r\n                            class="p-dropdown-custom-md-2"\r\n                            (onChange)="selectedReason($event.value,8)"\r\n                            [(ngModel)]="saveTearDownData.workOrderBulletinsModification.reasonId">\r\n                </p-dropdown>\r\n                        </div>\r\n                        <div *ngIf="f.submitted  && saveTearDownData.isBulletinsModification && saveTearDownData.workOrderBulletinsModification.reasonId ==0" >\r\n                            <div  class="red_bomb">Reason is required</div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-md-9">\r\n                        <div >\r\n                            <label> Memo  <span class="clr-red" *ngIf="saveTearDownData.isBulletinsModification">*</span></label>\r\n                            \x3c!-- <textarea  required class="form-control text-area-cstm" name="bulletMod"  #bulletModify="ngModel" [disabled]="saveTearDownData.workOrderBulletinsModification.reasonId ==0 || !saveTearDownData.isBulletinsModification" [(ngModel)]="saveTearDownData.workOrderBulletinsModification.memo"></textarea> --\x3e\r\n                            <p-editor  [style]="{\'height\':\'100px\'}" name="textAreaInfo8" required [readonly]="saveTearDownData.workOrderBulletinsModification.reasonId ==0 || !saveTearDownData.isBulletinsModification" [(ngModel)]="saveTearDownData.workOrderBulletinsModification.memo"></p-editor>\r\n                        </div>\r\n                        <div *ngIf="f.submitted  && saveTearDownData.isBulletinsModification && saveTearDownData.workOrderBulletinsModification.reasonId ==0" >\r\n                            <div  class="red_bomb">Memo is required</div>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="panel panel-default" *ngIf="checkForTeardownAvalabilityFromWO(\'Final Test\')">\r\n        <div class="panel-heading">\r\n            <h4 class="panel-title ">\r\n                <input type="checkbox" name="contract553"  class="set_cds" (change)="checkValue($event,saveTearDownData.workOrderFinalTest,10)"\r\n                [(ngModel)]="saveTearDownData.isFinalTest" [disabled]="isView">\r\n                \x3c!-- <p-checkbox class="set_cds" name="Final Test" value="saveTearDownData.isFinalTest" label="Final Test" [(ngModel)]="saveTearDownData.isFinalTest" inputId="ny10"></p-checkbox> --\x3e\r\n                <a class="collapsed ac_cs" data-toggle="collapse" href="#stepadd10">Final Test</a>\r\n            </h4>\r\n        </div>\r\n        <div id="stepadd10" class="panel-collapse  collapse">\r\n            <div class="panel-body m-lr-7">\r\n                <div class="form-row">\r\n                    <div class="col-md-3">\r\n                        <div >\r\n                            <label>Reason  <span class="clr-red" *ngIf="saveTearDownData.isFinalTest">*</span></label>\r\n                            <p-dropdown required name="company9" [disabled]="!saveTearDownData.isFinalTest"\r\n                            #finaltestReason="ngModel"   placeholder="Select Reason"\r\n                            [options]="finalTest" class="p-dropdown-custom-md-2"\r\n                            (onChange)="selectedReason($event.value,9)" [(ngModel)]="saveTearDownData.workOrderFinalTest.reasonId">\r\n                </p-dropdown>\r\n                        </div>\r\n                        <div *ngIf="f.submitted  && saveTearDownData.isFinalTest && saveTearDownData.workOrderFinalTest.reasonId ==0" >\r\n                            <div  class="red_bomb">Reason is required</div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-md-9">\r\n                        <div >\r\n                            <label>Memo  <span class="clr-red" *ngIf="saveTearDownData.isFinalTest">*</span></label>\r\n                            \x3c!-- <textarea required class="form-control text-area-cstm" name="finaltestmemo1" [disabled]="saveTearDownData.workOrderFinalTest.reasonId ==0 || !saveTearDownData.isFinalTest" [(ngModel)]="saveTearDownData.workOrderFinalTest.memo" [required]="saveTearDownData.isFinalTest"  #finaltestMemo="ngModel"></textarea> --\x3e\r\n                            <p-editor  [style]="{\'height\':\'100px\'}" name="textAreaInfo9" required [readonly]="saveTearDownData.workOrderFinalTest.reasonId ==0 || !saveTearDownData.isFinalTest" [(ngModel)]="saveTearDownData.workOrderFinalTest.memo"></p-editor>\r\n                        </div>\r\n                        <div *ngIf="f.submitted  && saveTearDownData.isFinalTest && saveTearDownData.workOrderFinalTest.memo==\'\'" >\r\n                            <div  class="red_bomb">Memo is required</div>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="form-row">\r\n                        <div class="col-md-3">\r\n                              <div >\r\n                                <label for="dataentered">Technican  <span class="clr-red" *ngIf="saveTearDownData.isFinalTest">*</span></label>\r\n                                <p-autoComplete class="p-autoComplete-ctsm" field="name" name="Technican1" [dropdown]="true" [disabled]="saveTearDownData.workOrderFinalTest.reasonId ==0 || !saveTearDownData.isFinalTest"\r\n                                  errorMessage="Records not found" [forceSelection]="true" [suggestions]="technicianList" emptyMessage="No Records Found"\r\n                                  (completeMethod)="filterTWTechnician($event)" (onSelect)="onSelectedTechnician($event);" [size]="30" [minLength]="1"\r\n                                  [(ngModel)]="saveTearDownData.workOrderFinalTest.technicianId" required  #finaltestTech="ngModel" >\r\n                                </p-autoComplete> \r\n                              </div>\r\n                              <div *ngIf="f.submitted  && saveTearDownData.isFinalTest && saveTearDownData.workOrderFinalTest.technicianId ==0" >\r\n                                <div  class="red_bomb">Technican is required</div>\r\n                            </div>\r\n                              <div>\r\n                                <label> Date  <span class="clr-red" *ngIf="saveTearDownData.isFinalTest">*</span></label>\r\n                                <p-calendar required class="p-calendar-cstm" [showIcon]="true" name="startDate"\r\n                                [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100" [disabled]="saveTearDownData.workOrderFinalTest.reasonId ==0 || !saveTearDownData.isFinalTest"\r\n                                [(ngModel)]="saveTearDownData.workOrderFinalTest.technicianDate"></p-calendar>\r\n                                \r\n                            </div>\r\n                            </div>\r\n                            <div class="col-md-3">\r\n                                <div >\r\n                                    <label for="dataentered">Inspector  <span class="clr-red" *ngIf="saveTearDownData.isFinalTest">*</span></label>\r\n                                    <p-autoComplete class="p-autoComplete-ctsm" field="name" name="Inspector9" [dropdown]="true" [disabled]="saveTearDownData.workOrderFinalTest.reasonId ==0 || !saveTearDownData.isFinalTest"\r\n                                      errorMessage="Records not found" [forceSelection]="true" [suggestions]="inspectionList" emptyMessage="No Records Found"\r\n                                      (completeMethod)="filterTWInspections($event)" (onSelect)="onSelectedTechnician($event);" [size]="30" [minLength]="1"\r\n                                      [(ngModel)]="saveTearDownData.workOrderFinalTest.inspectorId"  required  #finaltestInsp="ngModel" >\r\n                                    </p-autoComplete>\r\n                                  </div>\r\n                                  <div *ngIf="f.submitted  && saveTearDownData.isFinalTest  && saveTearDownData.workOrderFinalTest.inspectorId ==0"  >\r\n                                    <div  class="red_bomb">Inspector is required</div>\r\n                                </div>\r\n                                <div>\r\n                                    <label>Date  <span class="clr-red" *ngIf="saveTearDownData.isFinalTest">*</span></label>\r\n                                    <p-calendar required class="p-calendar-cstm" [showIcon]="true" [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100" name="startDate" [disabled]="saveTearDownData.workOrderFinalTest.reasonId ==0 || !saveTearDownData.isFinalTest"\r\n                                    [(ngModel)]="saveTearDownData.workOrderFinalTest.inspectorDate"></p-calendar>\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="panel panel-default" *ngIf="checkForTeardownAvalabilityFromWO(\'Final Inspection\')">\r\n        <div class="panel-heading">\r\n            <h4 class="panel-title ">\r\n                <input type="checkbox" name="contract866"  class="set_cds" (change)="checkValue($event,saveTearDownData.workOrderFinalInspection,11)"\r\n                [(ngModel)]="saveTearDownData.isFinalInspection" [disabled]="isView">\r\n                \x3c!-- <p-checkbox class="set_cds" name="Final Inspection" value="saveTearDownData.isFinalInspection" label="Final Inspection" [(ngModel)]="saveTearDownData.isFinalInspection" inputId="ny11"></p-checkbox> --\x3e\r\n               \r\n                <a class="collapsed ac_cs" data-toggle="collapse" href="#stepadd11">Final Inspection</a>\r\n            </h4>\r\n        </div>\r\n        <div id="stepadd11" class="panel-collapse  collapse">\r\n            <div class="panel-body m-lr-7">\r\n                <div class="form-row">\r\n                    <div class="col-md-3">\r\n                        <div >\r\n                            <label> Reason  <span class="clr-red" *ngIf="saveTearDownData.isFinalInspection">*</span></label>\r\n                            <p-dropdown  required name="company10"  placeholder="Select Reason"\r\n                            #finalInspReason="ngModel"  [disabled]="!saveTearDownData.isFinalInspection"\r\n                            [options]="finalInspection"\r\n                            class="p-dropdown-custom-md-2"\r\n                            (onChange)="selectedReason($event.value,10)"\r\n                            [(ngModel)]="saveTearDownData.workOrderFinalInspection.reasonId">\r\n                </p-dropdown>\r\n                        </div>\r\n                        <div *ngIf="f.submitted  && saveTearDownData.isFinalInspection && saveTearDownData.workOrderFinalInspection.reasonId ==0" >\r\n                            <div  class="red_bomb">Reason is required</div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-md-9">\r\n                        <div >\r\n                            <label> Memo  <span class="clr-red" *ngIf="saveTearDownData.isFinalInspection">*</span></label>\r\n                            \x3c!-- <textarea required name="finalInsp_Memo"  #finalInspMemo="ngModel" class="form-control text-area-cstm" [disabled]="saveTearDownData.workOrderFinalInspection.reasonId ==0 || !saveTearDownData.isFinalInspection" [(ngModel)]="saveTearDownData.workOrderFinalInspection.memo"></textarea> --\x3e\r\n                            <p-editor  [style]="{\'height\':\'100px\'}" name="textAreaInfo10" required [readonly]="saveTearDownData.workOrderFinalInspection.reasonId ==0 || !saveTearDownData.isFinalInspection" [(ngModel)]="saveTearDownData.workOrderFinalInspection.memo"></p-editor>\r\n                        </div>\r\n                       <div *ngIf="f.submitted  && saveTearDownData.isFinalInspection  && saveTearDownData.workOrderFinalInspection.memo ==\'\'"  >\r\n                        <div class="red_bomb">Memo is required</div>\r\n                    </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="form-row">\r\n                        <div class="col-md-3">\r\n                            </div>\r\n                            <div class="col-md-3">\r\n                                <div >\r\n                                    <label for="dataentered">Inspector  <span class="clr-red" *ngIf="saveTearDownData.isFinalInspection">*</span></label>\r\n                                    <p-autoComplete class="p-autoComplete-ctsm" field="name" name="Inspector10" [dropdown]="true" [disabled]="saveTearDownData.workOrderFinalInspection.reasonId ==0 || !saveTearDownData.isFinalInspection"\r\n                                      errorMessage="Records not found" [forceSelection]="true" [suggestions]="inspectionList" emptyMessage="No Records Found"\r\n                                      (completeMethod)="filterTWInspections($event)" (onSelect)="onSelectedTechnician($event);" [size]="30" [minLength]="1"\r\n                                      [(ngModel)]="saveTearDownData.workOrderFinalInspection.inspectorId" required  #finalInsptor="ngModel" >\r\n                                    </p-autoComplete>\r\n                                  </div>\r\n                                  <div *ngIf="f.submitted && saveTearDownData.isFinalInspection && saveTearDownData.workOrderFinalInspection.inspectorId ==0" >\r\n                                    <div  class="red_bomb">Inspector is required</div>\r\n                                </div>\r\n                                <div>\r\n                                    <label>Date  <span class="clr-red" *ngIf="saveTearDownData.isFinalInspection">*</span></label>\r\n                                    <p-calendar required class="p-calendar-cstm" [showIcon]="true" name="startDate" [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100" \r\n                                    [disabled]="saveTearDownData.workOrderFinalInspection.reasonId ==0 || !saveTearDownData.isFinalInspection"\r\n                                    [(ngModel)]="saveTearDownData.workOrderFinalInspection.inspectorDate"></p-calendar>\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="panel panel-default" *ngIf="checkForTeardownAvalabilityFromWO(\'Additional Comments\')">\r\n        <div class="panel-heading">\r\n            <h4 class="panel-title">\r\n                <input type="checkbox" name="contract234"  class="set_cds" (change)="checkValue($event,saveTearDownData.workOrderAdditionalComments,12)"\r\n                [(ngModel)]="saveTearDownData.isAdditionalComments" [disabled]="isView">\r\n                \x3c!-- <p-checkbox class="set_cds" name="Additional Comments" value="saveTearDownData.isAdditionalComments" label="Additional Comments" [(ngModel)]="saveTearDownData.isAdditionalComments" inputId="ny12"></p-checkbox> --\x3e\r\n               \r\n                <a class="collapsed ac_cs" data-toggle="collapse" href="#stepadd12">Additional Comments</a>\r\n            </h4>\r\n        </div>\r\n        <div id="stepadd12" class="panel-collapse  collapse">\r\n            <div class="panel-body m-lr-7">\r\n                <div class="form-row">\r\n                    <div class="col-md-3">\r\n                        <div >\r\n                            <label>Reason  <span class="clr-red" *ngIf="saveTearDownData.isAdditionalComments">*</span></label>\r\n                            <p-dropdown  required name="company"  placeholder="Select Reason"\r\n                            #addcReason="ngModel"  [disabled]="!saveTearDownData.isAdditionalComments"\r\n                            [options]="additionalComments"\r\n                            class="p-dropdown-custom-md-2" [required]="saveTearDownData.isAdditionalComments"\r\n                            (onChange)="selectedReason($event.value,11)"\r\n                            [(ngModel)]="saveTearDownData.workOrderAdditionalComments.reasonId">\r\n                          </p-dropdown>\r\n                        </div> \r\n                         <div *ngIf="f.submitted  && saveTearDownData.isAdditionalComments && saveTearDownData.workOrderAdditionalComments.reasonId ==0" >\r\n                            <div  class="red_bomb">Reason is required</div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-md-9">\r\n                        <div >\r\n                            <label>Memo <span class="clr-red" *ngIf="saveTearDownData.isAdditionalComments">*</span></label>\r\n                            \x3c!-- <textarea [required]="saveTearDownData.isAdditionalComments" class="form-control text-area-cstm" name="addcMemo_Memo"  #addcMemo="ngModel" [disabled]="saveTearDownData.workOrderAdditionalComments.reasonId==0  || !saveTearDownData.isAdditionalComments"  [(ngModel)]="saveTearDownData.workOrderAdditionalComments.memo"></textarea> --\x3e\r\n                            <p-editor  [style]="{\'height\':\'100px\'}" name="textAreaInfo11" required [readonly]="saveTearDownData.workOrderAdditionalComments.reasonId==0  || !saveTearDownData.isAdditionalComments"  [(ngModel)]="saveTearDownData.workOrderAdditionalComments.memo"></p-editor>\r\n                        </div>\r\n                        <div *ngIf="f.submitted  && saveTearDownData.isAdditionalComments && saveTearDownData.workOrderAdditionalComments.memo==\'\' " >\r\n                            <div  class="red_bomb">Memo is required</div>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n</div>\r\n<div *ngIf="!isView">\r\n    <button type="submit "  class="btn btn-primary pull-right"  style="margin-top: 20px;">Submit</button>\r\n</div>\r\n</form>\r\n\x3c!-- teardown view --\x3e\r\n<div id="addNewCharges" class="modal fade" role="dialog" data-backdrop="static" *ngIf="isView">\r\n    <div class="modal-dialog modal-xl">\r\n      \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n            <button type="button" class="close" data-dismiss="modal">\r\n                &times;\r\n            </button>\r\n            <h4 class="modal-title">Tear Down View</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <app-teardown-overview  *ngIf="isView"  [isSubWorkOrder]="isSubWorkOrder" [subWOPartNoId]="subWOPartNoId" [workFlowWorkOrderId1]="workFlowWorkOrderId"></app-teardown-overview>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class="preloader" *ngIf="isSpinnerVisible">\r\n    <div class="loading">\r\n        <div class="lds-roller">\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    </div>\r\n</div>'},NwK8:function(e,r,t){"use strict";t.r(r),r.default=""},OiEd:function(e,r,t){"use strict";t.r(r),r.default='<div class="card">\r\n  <div class="card-body">\r\n    <div class="form-row">\r\n      <div class="col-md-12">\r\n        <div class="col-md-8">\r\n          <div class="col-md-4">\r\n            <h4 class="po-head ">Ship To</h4>\r\n            <div class="form-group">\r\n              <label for="woID"\r\n                >Site Name <i class="fa fa-plus-circle fa-lg"></i>\r\n              </label>\r\n              <p-dropdown\r\n                [options]="siteDropdownMenu"\r\n                [(ngModel)]="addressesForm.shipTo.siteName"\r\n                class="p-dropdown-custom-2"\r\n              ></p-dropdown>\r\n              <button\r\n                class="btn btn-primary"\r\n                data-toggle="modal"\r\n                data-target="#editAddress"\r\n                style="margin-left: 3px !important;"\r\n              >\r\n                <i class="fa fa-pencil"></i>\r\n              </button>\r\n            </div>\r\n            <div class="form-group">\r\n              <label for="city">Address </label>\r\n              <input\r\n                type="text"\r\n                class="form-control"\r\n                [(ngModel)]="addressesForm.shipTo.address"\r\n              />\r\n            </div>\r\n            <div class="form-group">\r\n              <label for="city"\r\n                >City\r\n                <span class="clr-red">*</span>\r\n              </label>\r\n              <input\r\n                type="text"\r\n                class="form-control"\r\n                [(ngModel)]="addressesForm.shipTo.city"\r\n              />\r\n            </div>\r\n            <div class="form-group">\r\n              <label for="city">\r\n                Primary State/Province\r\n                <span class="clr-red">*</span>\r\n              </label>\r\n              <input\r\n                type="text"\r\n                class="form-control"\r\n                [(ngModel)]="addressesForm.shipTo.stateorProvince"\r\n              />\r\n            </div>\r\n            <div class="form-group">\r\n              <label for="city">\r\n                Country\r\n                <span class="clr-red">*</span>\r\n              </label>\r\n              <input\r\n                type="text"\r\n                class="form-control"\r\n                [(ngModel)]="addressesForm.shipTo.country"\r\n              />\r\n            </div>\r\n            <div class="form-group">\r\n              <label for="city">\r\n                Contact Name\r\n                <span class="clr-red">*</span>\r\n              </label>\r\n              <input\r\n                type="text"\r\n                class="form-control"\r\n                [(ngModel)]="addressesForm.shipTo.contactName"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div class="col-md-4 col-offset-3">\r\n            <h4 class="po-head ">Bill To</h4>\r\n            <div class="form-group">\r\n              <label for="woID"\r\n                >Site Name <i class="fa fa-plus-circle fa-lg"></i>\r\n              </label>\r\n              <p-dropdown\r\n                [options]="siteDropdownMenu"\r\n                [(ngModel)]="addressesForm.billTo.siteName"\r\n                class="p-dropdown-custom-2"\r\n              ></p-dropdown>\r\n              <button\r\n                class="btn btn-primary"\r\n                data-toggle="modal"\r\n                data-target="#editAddress"\r\n                style="margin-left: 3px !important;"\r\n              >\r\n                <i class="fa fa-pencil"></i>\r\n              </button>\r\n            </div>\r\n            <div class="form-group">\r\n              <label for="city">Address </label>\r\n              <input\r\n                type="text"\r\n                class="form-control"\r\n                [(ngModel)]="addressesForm.billTo.address"\r\n              />\r\n            </div>\r\n            <div class="form-group">\r\n              <label for="city"\r\n                >City\r\n                <span class="clr-red">*</span>\r\n              </label>\r\n              <input\r\n                type="text"\r\n                class="form-control"\r\n                [(ngModel)]="addressesForm.billTo.city"\r\n              />\r\n            </div>\r\n            <div class="form-group">\r\n              <label for="city">\r\n                Primary State/Province\r\n                <span class="clr-red">*</span>\r\n              </label>\r\n              <input\r\n                type="text"\r\n                class="form-control"\r\n                [(ngModel)]="addressesForm.billTo.stateorProvince"\r\n              />\r\n            </div>\r\n            <div class="form-group">\r\n              <label for="city">\r\n                Country\r\n                <span class="clr-red">*</span>\r\n              </label>\r\n              <input\r\n                type="text"\r\n                class="form-control"\r\n                [(ngModel)]="addressesForm.billTo.country"\r\n              />\r\n            </div>\r\n            <div class="form-group">\r\n              <label for="city">\r\n                Contact Name\r\n                <span class="clr-red">*</span>\r\n              </label>\r\n              <input\r\n                type="text"\r\n                class="form-control"\r\n                [(ngModel)]="addressesForm.billTo.contactName"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class="modal fade " id="editAddress" tabindex="-1" role="dialog" aria-hidden="true"  data-backdrop="static">\r\n  <div class="modal-dialog modal-sm">\r\n    <div class="modal-content">\r\n      <div class="modal-header">\r\n        <button type="button" class="close" data-dismiss="modal">\xd7</button>\r\n        <h4 class="modal-title">Edit Ship To Details</h4>\r\n      </div>\r\n      <div class="modal-body">\r\n        <form method="post" id="" name="">\r\n          <p>\r\n            <span class="col-sm-5"><b>Site Name: </b></span>\r\n            <span class="col-sm-7 right-addon inner-addon w200"\r\n              ><i class="fa fa-search"></i>\r\n              <input\r\n                type="text"\r\n                class="form-control locations  ui-autocomplete-input"\r\n                id=""\r\n                name=""\r\n                value="Newyork Location"\r\n                autocomplete="off"\r\n              />\r\n            </span>\r\n          </p>\r\n          <p>\r\n            <span class="col-sm-5"><b>Address 1: </b></span>\r\n            <span class="col-sm-7 inner-addon w200">\r\n              <input\r\n                type="text"\r\n                class="actionattribute form-control  ui-autocomplete-input"\r\n                id=""\r\n                name=""\r\n                value="438 Cherry Hill Road"\r\n                autocomplete="off"\r\n              />\r\n            </span>\r\n          </p>\r\n          <p>\r\n            <span class="col-sm-5"><b>Address 2: </b></span>\r\n            <span class="col-sm-7 inner-addon w200">\r\n              <input\r\n                type="text"\r\n                class="actionattribute form-control  ui-autocomplete-input"\r\n                id=""\r\n                name=""\r\n                value="8996 X Eisenhower PkwyAnn Arbor"\r\n                autocomplete="off"\r\n              />\r\n            </span>\r\n          </p>\r\n          <p>\r\n            <span class="col-sm-5"><b>Address 3: </b></span>\r\n            <span class="col-sm-7 inner-addon w200">\r\n              <input\r\n                type="text"\r\n                class="actionattribute form-control  ui-autocomplete-input"\r\n                id=""\r\n                name=""\r\n                value="4692 Woodward Ave. Ste 680"\r\n                autocomplete="off"\r\n              />\r\n            </span>\r\n          </p>\r\n          <p>\r\n            <span class="col-sm-5"><b>City: </b></span>\r\n            <span class="col-sm-7 inner-addon w200">\r\n              <input\r\n                type="text"\r\n                class="actionattribute form-control  ui-autocomplete-input"\r\n                id=""\r\n                name=""\r\n                value="Bloomfield Hills"\r\n                autocomplete="off"\r\n              />\r\n            </span>\r\n          </p>\r\n          <p>\r\n            <span class="col-sm-5"><b>State: </b></span>\r\n            <span class="col-sm-7 inner-addon w200">\r\n              <input\r\n                type="text"\r\n                class="actionattribute form-control  ui-autocomplete-input"\r\n                id=""\r\n                name=""\r\n                value="MI"\r\n                autocomplete="off"\r\n              />\r\n            </span>\r\n          </p>\r\n          <p>\r\n            <span class="col-sm-5"><b>Postal: </b></span>\r\n            <span class="col-sm-7 inner-addon w200">\r\n              <input\r\n                type="text"\r\n                class="actionattribute form-control  ui-autocomplete-input"\r\n                id=""\r\n                name=""\r\n                value="48302"\r\n                autocomplete="off"\r\n              />\r\n            </span>\r\n          </p>\r\n          <p>\r\n            <span class="col-sm-5"><b>Country: </b></span>\r\n            <span class="col-sm-7 inner-addon w200">\r\n              <input\r\n                type="text"\r\n                class="actionattribute form-control  ui-autocomplete-input"\r\n                id=""\r\n                name=""\r\n                value="USA"\r\n                autocomplete="off"\r\n              />\r\n            </span>\r\n          </p>\r\n\r\n          <p>\r\n            <span class="col-sm-12">\r\n              <button type="button" id="" name="" class="btn btn-success add">\r\n                <i data-dismiss="modal">Save in customer Details</i>\r\n              </button>\r\n              <button type="button" id="" name="" class="btn btn-success add">\r\n                <i data-dismiss="modal">Save to this WO</i>\r\n              </button>\r\n            </span>\r\n          </p>\r\n        </form>\r\n      </div>\r\n      <div class="modal-footer">\r\n        <button type="button" class="btn btn-danger" data-dismiss="modal">\r\n          Close\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n'},OjnR:function(e,r,t){"use strict";t.r(r),r.default=""},OmvT:function(e,r,t){"use strict";function n(e){switch(e){case"Customer":return 1;case"Vendor":return 2;case"LegalEntity":return 3}}t.d(r,"a",(function(){return n}))},PKib:function(e,r,t){"use strict";t.r(r),r.default="label {\n  text-align: left;\n  width: auto;\n  margin-right: 0;\n  font-weight: normal;\n}\n\n.panel-body {\n  background: #ffffff;\n  padding: 20px;\n}\n\n.panel-title {\n  margin-bottom: 0px;\n}\n\n.adjust_dwn {\n  margin-top: 16px;\n  margin-left: 22%;\n}\n\n.mr_right {\n  margin-left: 20px;\n  position: relative;\n  top: 1px;\n}\n\n.p-calendar-cstm {\n  width: 181px !important;\n}\n\n.panel-title {\n  font-size: 14px;\n  position: relative;\n}\n\ntextarea {\n  border-radius: 3px;\n}\n\n.text-area-cstm {\n  height: 70px !important;\n}\n\n.p-dropdown-custom-md-2 .ui-dropdown {\n  width: 100% !important;\n}\n\n.align_fc {\n  display: inline-flex;\n  width: 100%;\n}\n\n.set_cds {\n  position: absolute;\n  top: 7.3px;\n  left: 9px;\n  zoom: 1.4;\n}\n\n.ac_cs {\n  padding-left: 40px !important;\n}\n\n.view_bt {\n  margin-left: 30px;\n  background-color: #75b0f7 !important;\n}\n\n.view_bt:hover {\n  background-color: #337ab7 !important;\n}\n\n.red_bomb {\n  color: red;\n  font-size: 10px;\n  margin-top: 5px;\n}\n\n@media (min-width: 768px) {\n  .col-md-3 {\n    max-width: 22%;\n    margin-right: 15px;\n  }\n}"},PMZK:function(e,r,t){"use strict";t.r(r),r.default='.select-read-only {\n  border: none;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  text-indent: 1px;\n  text-overflow: "";\n  box-shadow: none !important;\n}\n\nselect-read-only {\n  background-color: white !important;\n}\n\nselect:disabled {\n  background-color: white !important;\n}\n\ninput[type=number], input[type=text], input[type=email], select {\n  height: 24px !important;\n  border-radius: 5px !important;\n}'},PjNb:function(e,r,t){"use strict";t.r(r),r.default="textarea {\n  border-radius: 3px;\n}\n\n.text-area-cstm {\n  height: 70px !important;\n}\n\n.panel-body {\n  background: #ffffff;\n  padding: 20px;\n}\n\n.panel-title {\n  margin-bottom: 0px;\n}\n\n.panel-title {\n  font-size: 14px;\n  position: relative;\n}\n\n.set_cds {\n  position: absolute;\n  top: 12px;\n  left: 12px;\n}\n\n.ac_cs {\n  padding-left: 40px !important;\n}"},QIOK:function(e,r,t){"use strict";t.r(r),r.default='<div>\r\n    <div class="inline-block display-flex">\r\n        <h3 class="po-head lead">Purchase Order Report</h3>\r\n      \r\n\r\n    </div>\r\n    <p-table #dt\r\n             class="rpo-table-cstm rro-table-cstm"\r\n             [value]="purchaseOrderReportList"\r\n             [first]="0"\r\n             [rows]="pageSize"\r\n             [paginator]="true"\r\n             [pageLinks]="3"\r\n             [rowsPerPageOptions]="[10, 20, 50, 100]"\r\n             [columns]="headers"\r\n             selectionMode="multiple"\r\n             expandableRows="true"\r\n             rowExpandMode="single"\r\n             [lazy]="true"\r\n             (onLazyLoad)="loadData($event)"\r\n             [resizableColumns]="true"\r\n             [reorderableColumns]="true"\r\n             [totalRecords]="totalRecords"\r\n             [scrollable]="true"\r\n             [metaKeySelection]="true"\r\n             scrollHeight="450px">\r\n        <ng-template pTemplate="caption">\r\n            <div style="text-align: right;margin-left:-6px !important;min-height: 30px;">\r\n\r\n                <h5 style="text-align:left">Management Structure Search</h5>\r\n                <div class="inline-block display-flex">\r\n              \r\n                   <div class="card" style="width:90%">\r\n                    \r\n                    <div class="inline-block display-flex" style="margin-top:10px">\r\n                     \r\n                    <div class="form-group col-sm-2" style="margin-left:10px">\r\n                        <select class="form-control" name="company" [(ngModel)]="managementStructure.companyId" \r\n                        (change)="selectedLegalEntity(managementStructure.companyId);" #companyName="ngModel" required>\r\n                            <option value="0">Select Legal Entity</option>\r\n                            <option *ngFor="let name of legalEntityList" [ngValue]="name.value">{{name.label}}</option>\r\n                        </select>\r\n                        <div *ngIf="companyName.invalid && (companyName.dirty || companyName.touched)" class="alert alert-danger alert-danger-cstm">\r\n                                <div *ngIf="companyName.errors.required">\r\n                                    <small> Legal Entity Name is required </small>\r\n                                </div>\r\n                        </div>        \r\n                    </div>\r\n                    <div class="form-group  col-sm-2" style="margin-left:10px">\r\n                        <select class="form-control" [(ngModel)]="managementStructure.buId" name="buId" (change)="selectedBusinessUnit(managementStructure.buId)">\r\n                            <option value="0">-- Select --</option>\r\n                            <option *ngFor="let name of businessUnitList" [ngValue]="name.value">{{name.label}}</option>\r\n                        </select>\r\n                    </div>\r\n                    <div class="form-group  col-sm-2" style="margin-left:10px">\r\n                        <select class="form-control " [(ngModel)]="managementStructure.divisionId" name="divisionId" (change)="selectedDivision(managementStructure.divisionId)">\r\n                            <option value="0">-- Select --</option>\r\n                            <option *ngFor="let name of divisionList" [ngValue]="name.value">{{name.label}}</option>\r\n                        </select>\r\n                    </div>\r\n                    <div class="form-group  col-sm-2" style="margin-left:10px">\r\n                        <select class="form-control " [(ngModel)]="managementStructure.departmentId" name="departmentId" (change)="selectedDepartment(managementStructure.departmentId)">\r\n                            <option value="0">-- Select --</option>\r\n                            <option *ngFor="let name of departmentList" [ngValue]="name.value">{{name.label}}</option>\r\n                        </select>\r\n                    </div>\r\n                    <button type="button" pButton icon="fa fa-search"\r\n                    class="btn btn-primary" \r\n                     style="padding: 4px 12px !important;height:25px"></button>\r\n                    </div>\r\n                  \r\n                  \r\n            </div>\r\n            <div style="text-align: right;">\r\n                    \r\n              \r\n    \r\n                   <button type="button"\r\n                           class="btn btn-primary"\r\n\r\n                           pButton\r\n                           icon="fa-download"\r\n                           iconPos="left"\r\n                           label="Download" matTooltip="Download" matTooltipPosition="above"\r\n                           (click)="downloadStockLineReport()"></button>\r\n                          \r\n    </div>\r\n            </div>\r\n           \r\n   \r\n          \r\n          \r\n        </div>\r\n        </ng-template>\r\n        <ng-template pTemplate="colgroup" let-columns>\r\n            <colgroup>\r\n                <col *ngFor="let col of columns" style="width:130px">\r\n            </colgroup>\r\n        </ng-template>\r\n        <ng-template pTemplate="header" let-columns>\r\n            <tr>\r\n\r\n                <th *ngFor="let col of columns" pResizableColumn pReorderableColumn\r\n                    [pSortableColumn]="col.field" style="text-align:center;">\r\n                    {{ col.header }}\r\n                    <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                </th>\r\n            </tr>\r\n            <tr>\r\n                <th style="width:120px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                    \x3c!-- <input type="text" style="width:100%;" pInputText   (keyup)="filterData($event)"> --\x3e\r\n                    <input style="width:100%;" pInputText type="text" (input)="dt.filter($event.target.value, col.field, \'contains\'); ">\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate="body"\r\n                     let-rowData\r\n                     let-rowIndex="rowIndex"\r\n                     let-expanded="expanded"\r\n                     let-columns="columns">\r\n            <tr class="ui-widget-header">\r\n                <td *ngFor="let col of columns" style="text-overflow: ellipsis; overflow: hidden;">\r\n                    {{rowData[col.field]}}\r\n                </td>\r\n\r\n\r\n\r\n\r\n            </tr>\r\n\r\n        </ng-template>\r\n        <ng-template pTemplate="summary" id="footer">\r\n            <label id="footer" class="footer">Total:</label>\r\n            <input style="width: 5%;"\r\n                   [(ngModel)]="totalRecords"\r\n                   [disabled]="true"\r\n                   pInputText\r\n                   type="text" />\r\n            &nbsp;&nbsp;\r\n            <label id="footer" class="footer1">Pages Count:</label>\r\n            <input style="width: 5%;"\r\n                   [(ngModel)]="totalPages"\r\n                   [disabled]="true"\r\n                   pInputText\r\n                   type="text" />\r\n        </ng-template>\r\n    </p-table>\r\n</div>\r\n'},QIWc:function(e,r,t){"use strict";t.r(r),r.default=".p_textEditor {\n  margin: 0;\n  padding: 0;\n}\n\n.btn-edit {\n  position: relative;\n  top: 4px;\n}"},QmDO:function(e,r,t){"use strict";t.r(r),r.default=""},R6H9:function(e,r,t){"use strict";t.r(r),r.default=".table-overflow {\n  overflow: auto !important;\n}\n\n.table > thead > tr > th {\n  font-size: 10px !important;\n  padding: 5px !important;\n}\n\n.dtHorizontalExampleWrapper {\n  max-width: 150px;\n  margin: 0 auto;\n}\n\n.grn_clr {\n  color: green;\n}\n\ntable {\n  display: block;\n  overflow: scroll;\n  overflow: auto;\n}\n\n.ptable-wo-btns {\n  background-color: transparent !important;\n  border: none !important;\n}\n\ntable.dataTable thead .sorting:after,\ntable.dataTable thead .sorting:before,\ntable.dataTable thead .sorting_asc:after,\ntable.dataTable thead .sorting_asc:before,\ntable.dataTable thead .sorting_asc_disabled:after,\ntable.dataTable thead .sorting_asc_disabled:before,\ntable.dataTable thead .sorting_desc:after,\ntable.dataTable thead .sorting_desc:before,\ntable.dataTable thead .sorting_desc_disabled:after,\ntable.dataTable thead .sorting_desc_disabled:before {\n  bottom: 0.5em;\n}\n\ninput[type=number]::-webkit-inner-spin-button,\ninput[type=number]::-webkit-outer-spin-button {\n  margin: 0;\n}\n\n:host ::ng-deep button {\n  margin-right: 0.25em;\n}\n\n:host ::ng-deep .custom-toast .ui-toast-message {\n  color: #ffffff;\n  background: #fc466b;\n  background: linear-gradient(to right, #3f5efb, #fc466b);\n}\n\n:host ::ng-deep .custom-toast .ui-toast-close-icon {\n  color: #ffffff;\n}\n\n.add-charges {\n  background-color: #295d92;\n}\n\n.clr-red {\n  color: red;\n}\n\n.text-align {\n  width: 93%;\n  margin-left: 6px;\n}\n\n.dropdown-select {\n  background: none;\n  background-color: none !important;\n}\n\n.dropdown-select select:disabled {\n  background-color: none !important;\n}\n\n.workflow-table-material {\n  height: 250px;\n}\n\n.workflow-table-material .material-tr td {\n  padding: 4px;\n}\n\n.workflow-table-material tr th:first-child {\n  padding: 0 10px !important;\n}\n\n.fixed-column-table {\n  max-width: 100%;\n  max-height: 500px;\n  overflow: scroll;\n  position: relative;\n  padding: 0;\n}\n\n.fixed-column-table table {\n  position: relative;\n  border-collapse: collapse;\n}\n\n.fixed-column-table thead th {\n  position: -webkit-sticky;\n  position: sticky;\n  top: -1px;\n  background: #0d57b0;\n}\n\n.column-r1-fixed thead th:last-child {\n  right: 0;\n  z-index: 1;\n  text-align: center;\n  margin: auto;\n  padding-left: 15px !important;\n  padding-right: 15px !important;\n}\n\n.column-r1-fixed tbody td:last-child,\n.column-r1-fixed tfoot td:last-child {\n  position: -webkit-sticky;\n  position: sticky;\n  right: 0;\n  background: #fff;\n  border-right: 1px solid #ccc;\n  padding-left: 5px;\n  text-align: center;\n}\n\n.btn-spaces > button {\n  margin-right: 13px !important;\n}\n\n.materiallist-action .btn {\n  font-size: 13px !important;\n}\n\n.width-50 {\n  width: 50px;\n}\n\n.rro-table-cstm th {\n  width: 110px !important;\n  padding: 5px 5px !important;\n}\n\n.ex-gray {\n  background: #b7b7b7;\n}"},RX9Y:function(e,r,t){"use strict";t.r(r),r.default='<div [@fadeInOut] class="page-content">\r\n    <div class="right_col" role="main">\r\n        <div class="x_panel" style="">\r\n            <div class="x_content">\r\n                <nav aria-label="breadcrumb">\r\n                    <ol class="breadcrumb">\r\n                        <li class="breadcrumb-item"><a routerLink="/">Dashboard</a></li>\r\n                        <li class="breadcrumb-item active" aria-current="page">Equipment checkin checkout</li>\r\n                    </ol>\r\n                </nav>\r\n                <div class="pheading">\r\n                    <h4 class="page-heading clr-green">Equipment checkin checkout</h4>\r\n                </div>\r\n                <div class="cdetails-top">\r\n                    <div class="col-sm-12">\r\n                        <label>Company</label>\r\n                        <span>Silverxis</span>\r\n                    </div>\r\n                    <div class="col-sm-12">\r\n                        <label>BU</label>\r\n                        <span>Adso</span>\r\n                    </div>\r\n                    <div class="col-sm-12">\r\n                        <label>Division</label>\r\n                        <span>Development</span>\r\n                    </div>\r\n                    <div class="col-sm-12">\r\n                        <label>Dept</label>\r\n                        <span>Java</span>\r\n                    </div>\r\n\r\n                </div>\r\n                <div class="clear"></div><br>\r\n                <form action="#" method="post" id="" name="" class="form-horizontal add-custustomer">\r\n                    <div class="employee-setup">\r\n                        <div class="col-md-12 col-sm-12 col-12 employer-block">\r\n                            <div class="col-sm-2 text-center">\r\n                                <div class="form-group col-sm-12"><label class="control-label">CHECK OUT <input type="radio" id="" name="check-in-out" /></label></div>\r\n                                <div class="form-group col-sm-12"><label class="control-label">CHECK IN <input type="radio" id="" name="check-in-out" /></label></div>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <div class="form-group col-sm-12">\r\n                                    <label class="control-label col-sm-4">Search Equipment Description </label>\r\n                                    <div class="col-sm-7">\r\n                                        <div class="inner-addon right-addon inline-block">\r\n                                            <i class="fa fa-search"></i>\r\n                                            <input type="text" class="form-control" id="" name="" />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="form-group col-sm-12">\r\n                                    <label class="control-label col-sm-4">Equipment ID Number</label>\r\n                                    <div class="col-sm-7">\r\n                                        <div class="inner-addon right-addon inline-block">\r\n                                            <i class="fa fa-search"></i>\r\n                                            <input type="text" class="form-control" id="" name="" />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-sm-3">\r\n                                <div class="form-group col-sm-12">\r\n                                    <label class="control-label col-sm-4">Checked Out By</label>\r\n                                    <div class="col-sm-7">\r\n                                        <div class="inner-addon right-addon inline-block">\r\n                                            <i class="fa fa-search"></i>\r\n                                            <input type="text" class="form-control" id="" name="" />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="form-group col-sm-12">\r\n                                    <label class="control-label col-sm-4">Checked In By</label>\r\n                                    <div class="col-sm-7">\r\n                                        <div class="inner-addon right-addon inline-block">\r\n                                            <i class="fa fa-search"></i>\r\n                                            <input type="text" class="form-control" id="" name="" />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="form-group col-sm-12">\r\n                                    <label class="control-label col-sm-4">Date</label>\r\n                                    <div class="col-sm-7">\r\n                                        <input type="text" class="form-control datepicker" id="" name="" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="clear"></div>\r\n                            <hr class="hr-dark" />\r\n\r\n                            <div class="col-2">\r\n                                <ul class="nav nav-pills tabs-left" role="tablist">\r\n                                    <li><a href="#step1" data-toggle="tab" aria-expanded="true" class="active">General Information</a></li>\r\n                                    <li><a href="#step2" data-toggle="tab" aria-expanded="false">Calibrated Tools</a></li>\r\n                                    <li><a href="#step3" data-toggle="tab">Certification</a></li>\r\n                                    <li><a href="#step4" data-toggle="tab">Inspection</a></li>\r\n                                    <li><a href="#step5" data-toggle="tab">Verified Tools</a></li>\r\n                                </ul>\r\n                            </div>\r\n                            <div class="col-10">\r\n                                <div class="tab-content form-bg" id="employee-block">\r\n                                    <div class="tab-pane step-data active" id="step1">\r\n                                        <div class="col-sm-4">\r\n                                            <div class="form-group col-sm-12">\r\n                                                <label class="control-label col-sm-4">Equipment Number</label>\r\n                                                <div class="col-sm-7">13</div>\r\n                                            </div>\r\n                                            <div class="form-group col-sm-12">\r\n                                                <label class="control-label col-sm-4">Equipment Description</label>\r\n                                                <div class="col-sm-7">Description</div>\r\n                                            </div>\r\n                                            <div class="form-group col-sm-12">\r\n                                                <label class="control-label col-sm-4">Equipment Type</label>\r\n                                                <div class="col-sm-7">Measurement</div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class="col-sm-4">\r\n                                            <div class="form-group col-sm-12">\r\n                                                <label class="control-label col-sm-4">Serial Number</label>\r\n                                                <div class="col-sm-7">13</div>\r\n                                            </div>\r\n                                            <div class="form-group col-sm-12">\r\n                                                <label class="control-label col-sm-4">Date place in Service</label>\r\n                                                <div class="col-sm-7">03/27/2018</div>\r\n                                            </div>\r\n                                            <div class="form-group col-sm-12">\r\n                                                <label class="control-label col-sm-4">Location</label>\r\n                                                <div class="col-sm-7">Hyderabad</div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class="col-sm-4">\r\n                                            <div class="form-group col-sm-12">\r\n                                                <label class="control-label col-sm-4">Last Checked-In by</label>\r\n                                                <div class="col-sm-7">Shabbir</div>\r\n                                            </div>\r\n                                            <div class="form-group col-sm-12">\r\n                                                <label class="control-label col-sm-4">Date Last checked-In</label>\r\n                                                <div class="col-sm-7">03/27/2018</div>\r\n                                            </div>\r\n                                            <div class="form-group col-sm-12">\r\n                                                <label class="control-label col-sm-4">Last Check in Notes</label>\r\n                                                <div class="col-sm-7">Notes</div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class="clear"></div>\r\n                                    </div>\r\n                                    <div class="tab-pane step-data" id="step2">\r\n                                        <div class="col-sm-4">\r\n                                            <div class="form-group col-sm-12">\r\n                                                <label class="control-label col-sm-4">Calibration Required</label>\r\n                                                <div class="col-sm-7">Yes</div>\r\n                                            </div>\r\n                                            <div class="form-group col-sm-12">\r\n                                                <label class="control-label col-sm-4">Date last Calibrated</label>\r\n                                                <div class="col-sm-7">03/27/2018</div>\r\n                                            </div>\r\n                                            <div class="form-group col-sm-12">\r\n                                                <label class="control-label col-sm-4">Number of Days to Next Calibration</label>\r\n                                                <div class="col-sm-7">90</div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class="col-sm-4">\r\n                                            <div class="form-group col-sm-12">\r\n                                                <label class="control-label col-sm-4">Next Calibration Due Date </label>\r\n                                                <div class="col-sm-7">03/27/2018</div>\r\n                                            </div>\r\n                                            <div class="form-group col-sm-12">\r\n                                                <label class="control-label col-sm-4">Todays Date</label>\r\n                                                <div class="col-sm-7">03/27/2018</div>\r\n                                            </div>\r\n                                            <div class="form-group col-sm-12">\r\n                                                <label class="control-label col-sm-4">Days to Next Calibration</label>\r\n                                                <div class="col-sm-7">-113</div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class="col-sm-4">\r\n                                            <div class="form-group col-sm-12">\r\n                                                <label class="control-label col-sm-4">Calibrated By</label>\r\n                                                <div class="col-sm-7">Shabbir</div>\r\n                                            </div>\r\n                                            <div class="form-group col-sm-12">\r\n                                                <label class="control-label col-sm-4">Calibration Results</label>\r\n                                                <div class="col-sm-7">03/27/2018</div>\r\n                                            </div>\r\n                                            <div class="form-group col-sm-12">\r\n                                                <label class="control-label col-sm-4">Check Out Ready?</label>\r\n                                                <div class="col-sm-7">Yes</div>\r\n                                            </div>\r\n                                            <div class="form-group col-sm-12">\r\n                                                <label class="control-label col-sm-4">Calibration Notes</label>\r\n                                                <div class="col-sm-7">Calibration Notes</div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class="clear"></div>\r\n                                    </div>\r\n                                    <div class="tab-pane step-data" id="step3">\r\n                                        <div class="col-sm-4">\r\n                                            <div class="form-group col-sm-12">\r\n                                                <label class="control-label col-sm-4">Date last Certified</label>\r\n                                                <div class="col-sm-7">9/1/2017</div>\r\n                                            </div>\r\n                                            <div class="form-group col-sm-12">\r\n                                                <label class="control-label col-sm-4">Number of Days to Next Certification</label>\r\n                                                <div class="col-sm-7">90</div>\r\n                                            </div>\r\n                                            <div class="form-group col-sm-12">\r\n                                                <label class="control-label col-sm-4">Next Certification Due Date </label>\r\n                                                <div class="col-sm-7">11/30/2017</div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class="col-sm-4">\r\n                                            <div class="form-group col-sm-12">\r\n                                                <label class="control-label col-sm-4">Todays Date</label>\r\n                                                <div class="col-sm-7">3/27/2018</div>\r\n                                            </div>\r\n                                            <div class="form-group col-sm-12">\r\n                                                <label class="control-label col-sm-4">Days to Next Certification</label>\r\n                                                <div class="col-sm-7">-117</div>\r\n                                            </div>\r\n                                            <div class="form-group col-sm-12">\r\n                                                <label class="control-label col-sm-4">Certified By</label>\r\n                                                <div class="col-sm-7">Shabbir</div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class="col-sm-4">\r\n                                            <div class="form-group col-sm-12">\r\n                                                <label class="control-label col-sm-4">Certification Results</label>\r\n                                                <div class="col-sm-7">Certification Results</div>\r\n                                            </div>\r\n                                            <div class="form-group col-sm-12">\r\n                                                <label class="control-label col-sm-4">Check Out Ready?</label>\r\n                                                <div class="col-sm-7">Yes</div>\r\n                                            </div>\r\n                                            <div class="form-group col-sm-12">\r\n                                                <label class="control-label col-sm-4">Certification Notes</label>\r\n                                                <div class="col-sm-7">Notes</div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class="clear"></div>\r\n                                    </div>\r\n                                    <div class="tab-pane step-data" id="step4">\r\n                                        <div class="col-sm-4">\r\n                                            <div class="form-group col-sm-12">\r\n                                                <label class="control-label col-sm-4">Inspection Required</label>\r\n                                                <div class="col-sm-7">Yes</div>\r\n                                            </div>\r\n                                            <div class="form-group col-sm-12">\r\n                                                <label class="control-label col-sm-4">Date last Inspected</label>\r\n                                                <div class="col-sm-7">9/5/2017</div>\r\n                                            </div>\r\n                                            <div class="form-group col-sm-12">\r\n                                                <label class="control-label col-sm-4">Number of Days to Next Inspection</label>\r\n                                                <div class="col-sm-7">90</div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class="col-sm-4">\r\n                                            <div class="form-group col-sm-12">\r\n                                                <label class="control-label col-sm-4">Next Inspection Due Date </label>\r\n                                                <div class="col-sm-7">12/4/2017</div>\r\n                                            </div>\r\n                                            <div class="form-group col-sm-12">\r\n                                                <label class="control-label col-sm-4">Todays Date</label>\r\n                                                <div class="col-sm-7">3/27/2018</div>\r\n                                            </div>\r\n                                            <div class="form-group col-sm-12">\r\n                                                <label class="control-label col-sm-4">Days to Next Inspection</label>\r\n                                                <div class="col-sm-7">-113</div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class="col-sm-4">\r\n                                            <div class="form-group col-sm-12">\r\n                                                <label class="control-label col-sm-4">Inspected By</label>\r\n                                                <div class="col-sm-7">Shabbir</div>\r\n                                            </div>\r\n                                            <div class="form-group col-sm-12">\r\n                                                <label class="control-label col-sm-4">Inspection Results</label>\r\n                                                <div class="col-sm-7">Inspection Results</div>\r\n                                            </div>\r\n                                            <div class="form-group col-sm-12">\r\n                                                <label class="control-label col-sm-4">Check Out Ready?</label>\r\n                                                <div class="col-sm-7">Yes</div>\r\n                                            </div>\r\n                                            <div class="form-group col-sm-12">\r\n                                                <label class="control-label col-sm-4">Inspection Notes</label>\r\n                                                <div class="col-sm-7">Inspection Notes</div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class="clear"></div>\r\n                                    </div>\r\n                                    <div class="tab-pane step-data" id="step5">\r\n                                        <div class="col-sm-4">\r\n                                            <div class="form-group col-sm-12">\r\n                                                <label class="control-label col-sm-4">Verification Required</label>\r\n                                                <div class="col-sm-7">Yes</div>\r\n                                            </div>\r\n                                            <div class="form-group col-sm-12">\r\n                                                <label class="control-label col-sm-4">Date last verified</label>\r\n                                                <div class="col-sm-7">9/5/2017</div>\r\n                                            </div>\r\n                                            <div class="form-group col-sm-12">\r\n                                                <label class="control-label col-sm-4">Number of Days to Next Verification</label>\r\n                                                <div class="col-sm-7">90</div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class="col-sm-4">\r\n                                            <div class="form-group col-sm-12">\r\n                                                <label class="control-label col-sm-4">Next Verification Due Date </label>\r\n                                                <div class="col-sm-7">12/4/2017</div>\r\n                                            </div>\r\n                                            <div class="form-group col-sm-12">\r\n                                                <label class="control-label col-sm-4">Todays Date</label>\r\n                                                <div class="col-sm-7">3/27/2018</div>\r\n                                            </div>\r\n                                            <div class="form-group col-sm-12">\r\n                                                <label class="control-label col-sm-4">Days to Next Verification</label>\r\n                                                <div class="col-sm-7">-113</div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class="col-sm-4">\r\n                                            <div class="form-group col-sm-12">\r\n                                                <label class="control-label col-sm-4">Verified By</label>\r\n                                                <div class="col-sm-7">Shabbir</div>\r\n                                            </div>\r\n                                            <div class="form-group col-sm-12">\r\n                                                <label class="control-label col-sm-4">Verification Results</label>\r\n                                                <div class="col-sm-7">Verification Results</div>\r\n                                            </div>\r\n                                            <div class="form-group col-sm-12">\r\n                                                <label class="control-label col-sm-4">Check Out Ready?</label>\r\n                                                <div class="col-sm-7">Yes</div>\r\n                                            </div>\r\n                                            <div class="form-group col-sm-12">\r\n                                                <label class="control-label col-sm-4">Verification Notes</label>\r\n                                                <div class="col-sm-7">Verification Notes</div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class="clear"></div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div class="clear"></div>\r\n                        <hr class="hr-light-grey" />\r\n                        <button type="button" class="btn btn-success pull-right">Submit</button>\r\n                    </div>\r\n                    <div class="clear"></div>\r\n                </form>\r\n                <br /><br />\r\n                <div class="pull-right"> &copy; 2018 <a routerLink="/">PAS</a> </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="modal fade hide-model" id="addJobTitle" role="dialog" data-backdrop="static">\r\n        <div class="modal-dialog modal-sm">\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                    <h4 class="modal-title"> Add Job Title</h4>\r\n                </div>\r\n                <div class="modal-body">\r\n                    <form method="post" id="" name="">\r\n                        <p>\r\n                            <span class="col-sm-4"><b>Job Title: </b></span>\r\n                            <span class="col-sm-5 inner-addon right-addon inline-block">\r\n                                <i class="fa fa-search"></i>\r\n                                <input type="text" class="actionattribute form-control ui-autocomplete-input" id="actionattribute" name="" placeholder="Job Title Name" autocomplete="off">\r\n                            </span>\r\n                            <span class="col-sm-1"><button type="button" id="" name="" class="btn btn-success add" data-toggle="modal" data-target="#success-popup"><i data-dismiss="modal">Save</i></button></span>\r\n                        </p>\r\n                    </form>\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    \x3c!--Add Job Title Modal End--\x3e\r\n    \x3c!-- Add Employee Expertise Modal --\x3e\r\n    <div class="modal fade hide-model" id="addEmpExprt" role="dialog" data-backdrop="static">\r\n        <div class="modal-dialog modal-sm">\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                    <h4 class="modal-title"> Add Employee Expertise</h4>\r\n                </div>\r\n                <div class="modal-body">\r\n                    <form method="post" id="" name="">\r\n                        <p>\r\n                            <span class="col-sm-4"><b>Emp Expertise: </b></span>\r\n                            <span class="col-sm-5 inner-addon right-addon w200 inline-block">\r\n                                <i class="fa fa-search"></i>\r\n                                <input type="text" class="actionattribute form-control ui-autocomplete-input" id="actionattribute" name="" placeholder="Employee Expertise" autocomplete="off">\r\n                            </span>\r\n                            <span class="col-sm-1"><button type="button" id="" name="" class="btn btn-success add" data-toggle="modal" data-target="#success-popup"><i data-dismiss="modal">Save</i></button></span>\r\n                        </p>\r\n                    </form>\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    \x3c!--Add Employee Expertise Modal End--\x3e\r\n    \x3c!---Successs Message Modal --\x3e\r\n    <div class="modal fade success-msg" id="success-popup" role="dialog" data-backdrop="static">\r\n        <div class="modal-dialog modal-sm">\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">\xd7</span></button>\r\n                    <h4> <i class="fa fa-check"></i>&nbsp; You Added Successfully !</h4>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>'},"SJ9+":function(e,r,t){"use strict";t.r(r),r.default='<div [@fadeInOut] class="page-content">\r\n    <div class="right_col" role="main">\r\n        <div class="x_panel">\r\n            <div class="x_content">\r\n                <nav aria-label="breadcrumb">\r\n                    <ol class="breadcrumb">\r\n                        <li class="breadcrumb-item"><a routerLink="/">Dashboard</a></li>\r\n                        <li class="breadcrumb-item"><a routerLink="/">WO Setup</a></li>\r\n                        <li class="breadcrumb-item active" aria-current="page">Memo</li>\r\n                    </ol>\r\n                </nav>\r\n                <h4 class="page-heading clr-green">WO Setup - Memo</h4>\r\n                <div class="col-sm-12 form-bg">\r\n                    \x3c!--calssification Body Start--\x3e\r\n                    <div class="form-group add-inputs">\r\n                        \x3c!--Add claffication Start --\x3e\r\n\r\n                        <form id="" name="" method="post">\r\n                            <div class="form-group col-sm-3">\r\n                                <label class="control-label col-sm-4">Memo ID</label>\r\n                                <div class="col-sm-7 cust-name">\r\n                                    <div class="inner-addon right-addon w200 inline-block">\r\n                                        <i class="fa fa-search"></i>\r\n                                        <input type="text" class="form-control ui-autocomplete-input" id="cmname" name="" placeholder="Memo ID">\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-sm-4">\r\n                                <label class="control-label col-sm-4">Memo</label>\r\n                                <div class="col-sm-7 cust-name">\r\n                                    <div class="inner-addon right-addon w200 inline-block">\r\n                                        <i class="fa fa-search"></i>\r\n                                        <input type="text" class="form-control " id="" name="" placeholder="Memo" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-sm-2">\r\n                                <button type="button" id="" name="" data-toggle="tooltip" data-original-title="Filter" class="btn btn-warning"><i class="fa fa-search"></i></button>\r\n                                <button type="button" id="" name="" data-toggle="tooltip" data-original-title="Add" class="btn btn-success"><i class="fa fa-plus"></i></button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\x3c!--Add claffication End --\x3e\r\n                    \x3c!--Uplad Doc--\x3e\r\n                    <form id="" name="" class="mtop10">\r\n                        <div class="upload pull-right">\r\n                            <input type="file" name="upload[]" multiple="" id="upload" class="uploaddoc upload-file" data-multiple-caption="{count} files selected" accept="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet">\r\n                            <label for="upload">\r\n                                <span data-toggle="tooltip" title="Excel Upload (table rows)"><i class="fa fa-file-excel-o"></i></span>\r\n                            </label>\r\n                        </div>\r\n                    </form>\r\n                    \x3c!--End--\x3e\r\n                    <div class="table-responsive">\r\n                        <table class="table table-bordered table-striped">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>MID</th>\r\n                                    <th>Memo ID</th>\r\n                                    <th>Memo</th>\r\n                                    <th>&nbsp;</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>1</td>\r\n                                    <td>Customs</td>\r\n                                    <td>Perform custom exam - Perfrom measurement and record weight in Kg and lbs</td>\r\n                                    <td>\r\n                                        <span data-toggle="tooltip" class="status" title="Active" data-placement="right"><input type="checkbox" checked data-toggle="toggle" data-width="30" id="toggle-one" data-on="<i class=\'fa fa-check\'></i>" data-off="<i class=\'fa fa-times\'></i>" data-onstyle="success" data-offstyle="danger"></span>\r\n                                        <span data-toggle="modal" data-target="#Ecurrency"> <a data-toggle="tooltip" title="" class="btn btn-primary nobg" data-original-title="Edit"><i class="fa fa-edit"></i></a> </span>\r\n                                        <span data-toggle="modal" data-target="#Hcurrency"> <a data-toggle="tooltip" title="" class="btn btn-success nobg" data-original-title="History"><i class="fa fa-history"></i></a> </span>\r\n                                        <span data-toggle="modal" data-target="#Dcurrency"> <a class="btn btn-danger nobg" data-toggle="tooltip" title="" data-original-title="Delete"><i class="fa fa-trash"></i></a> </span>\r\n                                    </td>\r\n                                </tr>\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <br>\r\n                    <div class="padding5">\r\n                        <ul class="pagination">\r\n                            <li class="arrows disabled"><a > <i class="fa fa-angle-left"></i> </a></li>\r\n                            <li class="active"><a >1</a></li>\r\n                            <li><a >2</a></li>\r\n                            <li><a >3</a></li>\r\n                            <li class="arrows"><a > <i class="fa fa-angle-right"></i> </a></li>\r\n                        </ul>\r\n                        <div class="pull-right"> &copy; 2018 <a routerLink="/">PAS</a> </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class="modal fade" id="Dcurrency" role="dialog" data-backdrop="static">\r\n        <div class="modal-dialog">\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <button type="button" class="close" data-dismiss="modal" id="" name="">\xd7</button>\r\n                    <h4 class="modal-title">Are You Sure Want to Delete \'Memo\' ?</h4>\r\n                </div>\r\n                <div class="modal-body">\r\n                    <button type="button" class="btn btn-success" data-dismiss="modal">Yes</button>\r\n                    <button type="button" class="btn btn-danger" data-dismiss="modal">No</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    \x3c!--Delete  Modal End--\x3e\r\n    \x3c!-- Edit Modal --\x3e\r\n    <div class="modal fade" id="Ecurrency" role="dialog" data-backdrop="static">\r\n        <div class="modal-dialog">\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                    <h4 class="modal-title"> Edit \'Customs\' Memo ID</h4>\r\n                </div>\r\n                <div class="modal-body">\r\n                    <p>\r\n                        <span class="col-sm-3"><b>MID: </b></span> <span class="col-sm-6">\r\n                            1\r\n                        </span>\r\n                    </p>\r\n                    <hr>\r\n                    <p>\r\n                        <span class="col-sm-3"><b>Memo ID: </b></span> <span class="col-sm-6">\r\n                            <input type="text" name="" value="Customs" class="form-control">\r\n                        </span>\r\n                    </p>\r\n                    <hr>\r\n                    <p>\r\n                        <span class="col-sm-3"><b>Memo: </b></span> <span class="col-sm-6">\r\n                            <input type="text" name="" value="Perform custom exam - Perfrom measurement and record weight in Kg and lbs" class="form-control">\r\n                        </span>\r\n                    </p>\r\n                    <hr>\r\n                    <p><span class="col-sm-3"><b>Last update by: </b></span> <span class="col-sm-9">Meghanadh D</span></p>\r\n                    <hr>\r\n                    <p><span class="col-sm-3"><b>Last Updated Time: </b></span> <span class="col-sm-9">02-03-2018 21:15:45</span></p><hr>\r\n                    <p><span class="col-sm-3"><b>Created by: </b></span> <span class="col-sm-9">Shabbir</span></p>\r\n                    <hr>\r\n                    <p><span class="col-sm-3"><b>Created Time: </b></span> <span class="col-sm-9">02-01-2018 09:20:30</span></p>\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button type="button" class="btn btn-success" data-dismiss="modal">Update Memo</button>\r\n                    <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    \x3c!--Edit Modal End--\x3e\r\n    \x3c!-- Histroy Modal --\x3e\r\n    <div class="modal fade" id="Hcurrency" role="dialog" data-backdrop="static">\r\n        <div class="modal-dialog modal-xl">\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                    <h4 class="modal-title"> History of Memo</h4>\r\n                </div>\r\n                <div class="modal-body">\r\n                    <div class="table-responsive">\r\n                        <table class="table table-bordered">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>MID</th>\r\n                                    <th>Memo ID</th>\r\n                                    <th>Memo</th>\r\n                                    <th>Last Updated By</th>\r\n                                    <th>Last Updated Time</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>1</td>\r\n                                    <td>Customs</td>\r\n                                    <td>Perform custom exam - Perfrom measurement and record weight in Kg and lbs</td>\r\n                                    <td>Meghanadh D</td>\r\n                                    <td>02-03-2018 14:15:45</td>\r\n\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>1</td>\r\n                                    <td>Customs</td>\r\n                                    <td>Perform custom exam</td>\r\n                                    <td>Roger A</td>\r\n                                    <td>01-23-2018 15:23:21</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>'},Skjs:function(e,r,t){"use strict";t.r(r),r.default=".table-overflow {\n  overflow: auto !important;\n}\n\n.table > thead > tr > th {\n  font-size: 10px !important;\n  padding: 5px !important;\n}\n\n.tear_win th {\n  min-width: 105px;\n  text-align: center;\n}\n\n.cold_s td {\n  padding: 7px 5px;\n}\n\n.mon_cis p {\n  margin-bottom: 7px !important;\n}\n\n.dropbtn {\n  background-color: #3498db;\n  color: white;\n  padding: 16px;\n  font-size: 16px;\n  border: none;\n  cursor: pointer;\n}\n\n/* Dropdown button on hover & focus */\n\n.dropbtn:hover,\n.dropbtn:focus {\n  background-color: #2980b9;\n}\n\n/* The container <div> - needed to position the dropdown content */\n\n.dropdown {\n  position: relative;\n  display: inline-block;\n}\n\n/* Dropdown Content (Hidden by Default) */\n\n.dropdown-content {\n  display: none;\n  position: absolute;\n  background-color: #f1f1f1;\n  min-width: 160px;\n  box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\n  z-index: 1;\n}\n\n/* Links inside the dropdown */\n\n.dropdown-content a {\n  color: black;\n  padding: 12px 16px;\n  text-decoration: none;\n  display: block;\n}\n\n/* Change color of dropdown links on hover */\n\n.dropdown-content a:hover {\n  background-color: #ddd;\n}\n\n/* Show the dropdown menu (use JS to add this class to the .dropdown-content container when the user clicks on the dropdown button) */\n\n.show {\n  display: block;\n}\n\n.vertical-menu-wolist {\n  width: 130px;\n}\n\n.vertical-menu-wolist a {\n  background-color: #eee;\n  display: block !important;\n  text-decoration: none;\n}\n\n.h-300 {\n  height: 300px;\n}\n\n.ui-tabview .ui-tabview-panel {\n  overflow: scroll !important;\n}\n\n.status-radio label {\n  text-align: left;\n  width: 140px;\n  margin-right: 0;\n  font-weight: normal;\n}"},T6jA:function(e,r,t){"use strict";t.r(r),r.default=".coustomTable tr th {\n  font-weight: 600 !important;\n  font-size: 10.5px !important;\n  color: #fff !important;\n  background-color: #4298ff;\n  border: 1px solid #3a7fd2;\n  letter-spacing: 0.3px;\n  line-height: 25px;\n  text-align: center;\n}\n\n.coustomTable tr td {\n  padding: 5px 2px !important;\n  white-space: nowrap;\n  color: #222;\n  background: inherit;\n  border: 1px solid #c8c8c8;\n  font-size: 11px !important;\n}\n\n.workflow-table-material {\n  padding-bottom: 50%;\n}\n\n.fileupload {\n  overflow: scroll;\n}\n\ninput[type=number], input[type=text], input[type=email], select {\n  height: 24px !important;\n  border-radius: 5px !important;\n}\n\n.modal-body p {\n  overflow: auto !important;\n}\n\n.form-horizontal b {\n  top: auto !important;\n}\n\n.email-content {\n  max-height: 300px;\n  overflow: scroll;\n}\n\n.email-content span p {\n  overflow: scroll;\n}"},TXuG:function(e,r,t){"use strict";t.r(r),r.default=".nav-pills-cstm {\n  margin-top: 10px;\n  font-size: 11px;\n  padding: 0px 7px;\n}\n\n.nav-pills-cstm li {\n  float: left;\n}\n\n.nav-pills-cstm li a {\n  background-color: #4298ffb0;\n  color: white;\n  margin-right: 2px;\n  margin-bottom: 10px;\n  margin-left: 1px;\n  margin-top: 10px;\n  border-radius: 4px;\n}\n\n.nav-pills-cstm li a:hover {\n  background-color: #337ab7 !important;\n}\n\n.nav-pills-cstm li a {\n  font-size: 12px !important;\n}\n\nli.nav-item {\n  margin-right: 1px;\n  border-radius: 4px;\n}\n\n.nav-pills .nav-link,\n.nav-pills .show > .nav-link {\n  color: black;\n  background-color: #ddd;\n}\n\n.nav-pills > li > a.active,\n.nav-pills > li > a.active:focus,\n.nav-pills > li > a.active:hover {\n  color: #fff;\n  background-color: #337ab7 !important;\n}"},TrUR:function(e,r,t){"use strict";t.r(r),r.default='<div class="card">\r\n  <div class="card-body">\r\n    <div>\r\n      <p-table #rolist\r\n        class="rpo-table-cstm rro-table-cstm ptable-f10"\r\n        [columns]="roListColumns"\r\n        [value]="workOrderROPartsList" [paginator]="true" [rows]="pageSize" [resizableColumns]="true" [reorderableColumns]="true" [pageLinks]="3" [rowsPerPageOptions]="[10, 20, 50, 100]" [scrollable]="true" scrollHeight="450px">\r\n        <ng-template pTemplate="colgroup" let-columns>\r\n          <colgroup>\r\n              <col *ngFor="let col of columns" style="width:120px">\r\n          </colgroup>\r\n        </ng-template>\r\n        <ng-template pTemplate="header" let-columns>\r\n          <tr>\r\n            <th style="width:auto"\r\n              *ngFor="let col of columns"\r\n              pResizableColumn\r\n              pReorderableColumn\r\n              [pSortableColumn]="col.field">\r\n              {{ col.header }}\r\n              <p-sortIcon [field]="col.field"></p-sortIcon>\r\n            </th>\r\n            <th style="width:80px;position:sticky" *ngIf="!isView">\r\n              Action\r\n            </th> \r\n          </tr>\r\n          <tr>\r\n            <th *ngFor="let col of columns" [ngSwitch]="col.field">\r\n              <input  pInputText type="text" (input)="rolist.filter($event.target.value, col.field, \'contains\')">\r\n            </th> \r\n            <th></th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate="body" let-rowData let-columns="columns">\r\n          <tr>\r\n            <ng-container *ngFor="let col of columns">            \r\n              <td style="width:auto"\r\n              *ngIf="col.field != \'qtytorepair\' && col.field != \'qtyreserved\'"\r\n              class="ui-resizable-column"\r\n              pReorderableRowHandle>{{ rowData[col.field] }}</td>\r\n              <td  style="width:auto"\r\n              *ngIf="col.field == \'qtytorepair\' || col.field == \'qtyreserved\'"\r\n              class="ui-resizable-column"\r\n              pReorderableRowHandle>\r\n              <p class="m-0 p-0 text-right">\r\n                {{rowData[col.field]}}\r\n              </p>\r\n              </td>\r\n            </ng-container>\r\n            <td style="width:80px;position:sticky" *ngIf="!isView">\r\n              <span><a class="btn nobg btn-plusro-cstm" (click)="createNewRoWorkOrder(rowData)"\r\n                matTooltip="Create RO" matTooltipPosition="above"><i class="fa fa-plus"\r\n                    style="color: #259e08;"></i></a> </span>\r\n              <a\r\n                matTooltip="Add to an  Existing RO" matTooltipPosition="above" data-toggle="modal"\r\n                data-target="#reserveRo"\r\n                class="btn nobg btn-plusro-cstm"\r\n              >\r\n                <span><i class="fa fa-plus" style="color: red;"></i></span\r\n              ></a>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate="emptymessage" let-columns *ngIf="workOrderROPartsList.length == 0">\r\n          <tr>\r\n            <td colspan="10" style="color: red; font-weight: bold; text-align: center">\r\n              No records found\r\n            </td>\r\n          </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate="summary" id="footer">\r\n          <label id="footer">Total:</label>\r\n          <input style="width: 5%;" [(ngModel)]="rolist._totalRecords" [disabled]="true" pInputText type="text" />\r\n          &nbsp;&nbsp;\r\n          <label id="footer">Pages Count:</label>    \r\n          <input style="width: 5%;" [ngModel]="getPageCount(rolist._totalRecords, pageSize)" [disabled]="true" pInputText type="text" />\r\n        </ng-template>\r\n      </p-table>\r\n\r\n\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n<div id="reserveRo" class="modal fade" role="dialog" data-backdrop="static">\r\n  <div class="modal-dialog modal-xlg">\r\n      \x3c!-- Modal content--\x3e\r\n      <div class="modal-content">\r\n          <div class="modal-header">\r\n              <button type="button" class="close" data-dismiss="modal" (click)="closeModel()">&times;</button>\r\n              <h4 class="modal-title">Add to an  Existing RO</h4>\r\n         \r\n          </div>\r\n              <div class="modal-body" *ngIf="mpnId">\r\n                <app-work-order-ro-list [mpnId]="mpnId" [isView]="isView" [isSubWorkOrder]="isSubWorkOrder" [subWOPartNoId]="subWOPartNoId"></app-work-order-ro-list>\r\n                </div> \r\n                <div class="modal-footer">\r\n                  \x3c!-- <button class="btn btn-primary btn-primary" data-dismiss="modal" (click)="saveRIPart()"\r\n                      [disabled]="!savebutonDisabled "\r\n                      style="padding: 6px 12px !important;">Save </button> --\x3e\r\n                  <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="closeModel()" style="height: 30px;">Close</button>\r\n              </div>\r\n      </div>\r\n  </div>\r\n</div>\r\n<div class="preloader" *ngIf="isSpinnerVisible">\r\n    <div class="loading">\r\n        <div class="lds-roller"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n    </div>\r\n</div>'},U5B4:function(e,r,t){"use strict";t.r(r),r.default='<div class="card new-card" style="padding: 10px;">\r\n  <div class="card-header bg-primary new-card-header" >\r\n    <div class="row">\r\n      <div class="col">\r\n        <h4 class="new-card-heading">  Documents List</h4>\r\n      </div>\r\n      <div>\r\n      <a class="plusicon-cstm" href="#" data-toggle="modal"\r\n       data-target="#documentDetails"\r\n         *ngIf="!isView">\r\n         <button type="button" class="btn-sm new-btn-primary"\r\n        (click)="addDocumentDetails()"\r\n        matTooltip="Create Documents"  matTooltipPosition="above">\r\n      Add Documents</button>\r\n      </a>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class="clear"></div>\r\n<hr />        \r\n<div class="card-body new-card-body">\r\n  <p-table #documents \r\n  class="rpo-table-cstm lastcol-fix ptable-f10" \r\n  [value]="documentsDestructuredData" \r\n  [loading]="loader" [rows]="pageSize" \r\n  [paginator]="true" \r\n  [pageLinks]="3" [first]="0" \r\n  [rowsPerPageOptions]="[10, 20,  50, 100]" \r\n  [columns]="selectedColumns"\r\n   selectionMode="multiple" \r\n   [resizableColumns]="true" \r\n   [reorderableColumns]="true" \r\n   [scrollable]="true" \r\n   [metaKeySelection]="true"\r\n    (onPage)="pageIndexChange($event)" scrollHeight="450px">\r\n\r\n    <ng-template pTemplate="caption">\r\n      <div style="text-align: right;min-height: 30px;">\r\n        <p-multiSelect [options]="documentsColumns" [(ngModel)]="selectedColumns"\r\n          [ngModelOptions]="{ standalone: true }" optionLabel="header" selectedItemsLabel="{0} columns selected"\r\n          [style]="{ minWidth: \'200px\' }" defaultLabel="Choose Columns" style="float:left"></p-multiSelect>\r\n        <div class="inner-addon right-addon w200 inline-block g-filter-search-cstm">\r\n          <i class="fa fa-search"></i>\r\n          <input type="text" pInputText size="50" class="form-control ui-autocomplete-input" (input)="\r\n                        documents.filterGlobal($event.target.value, \'contains\')\r\n                      " placeholder=" Filter" style="height: 28px !important;" />\r\n        </div>\r\n        <button type="button" class="btn btn-primary" pButton icon="fa-download" matTooltip="Download  Data"\r\n          matTooltipPosition="above" iconPos="left" label="Export  Data" (click)="documents.exportCSV()"\r\n          style="padding: 5px 10px !important;"></button>\r\n        <button type="button" class="btn btn-primary" pButton icon="fa-download" matTooltip="Download Selected Data"\r\n          matTooltipPosition="above" iconPos="left" label="Export Selected Data"\r\n          (click)="documents.exportCSV({ selectionOnly: true })" style="padding: 5px 10px !important;"></button>\r\n      </div>\r\n    </ng-template>\r\n\r\n    <ng-template pTemplate="colgroup" let-columns>\r\n      <colgroup>\r\n          <col *ngFor="let col of columns" style="width:auto">\r\n      </colgroup>\r\n    </ng-template>\r\n\r\n    <ng-template pTemplate="header" let-columns>\r\n      <tr>\r\n        <ng-container *ngFor="let col of columns">\r\n          <th *ngIf="col.field !== \'fileName\'" pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n            {{ col.header }}\r\n            <p-sortIcon [field]="col.field"></p-sortIcon>\r\n          </th>\r\n          <th *ngIf="col.field == \'fileName\'">\r\n            File Name\r\n          </th>\r\n        </ng-container>\r\n        <th *ngIf="!isView">Actions</th>\r\n      </tr>\r\n      <tr>\r\n        <th style="width:auto" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n          <input style="width:100%;" pInputText type="text" (input)="\r\n                        documents.filter(\r\n                          $event.target.value,\r\n                          col.field,\r\n                          \'contains\'\r\n                        )\r\n                      " />\r\n        </th>\r\n        <th *ngIf="!isView"></th>\r\n      </tr>\r\n    </ng-template>\r\n\r\n    <ng-template pTemplate="body" let-rowData let-columns="columns">\r\n      <tr \r\n          [pSelectableRow]="rowData" \r\n          [pSelectableRowDblClick]="rowData" \r\n          (dblclick)="docviewdblclick(rowData)"\r\n      >\r\n        <ng-container *ngFor="let col of columns">\r\n          <td \r\n              *ngIf="col.field != \'fileName\' && col.field !=\'memo\'"\r\n              class="ui-resizable-column" \r\n              pReorderableRowHandle\r\n           >\r\n            {{\r\n                        col.field == \'fileCreatedDate\'\r\n                          ? (rowData[col.field] | date: \'MM/dd/yyyy\')\r\n                          : rowData[col.field] && col.field == \'fileUpdatedDate\'\r\n                          ? (rowData[col.field] | date: \'MM/dd/yyyy\')\r\n                          : rowData[col.field]\r\n            }}\r\n          </td>\r\n          <td *ngIf="col.field == \'fileName\'">\r\n            <a class="filelink" (click)="downloadFileUpload(rowData)">\r\n              {{ rowData[col.field] }}</a>\r\n          </td>\r\n          <td *ngIf="col.field == \'memo\'"><p class="p_textEditor" [innerHTML]=rowData[col.field]></p></td>\r\n          \r\n        </ng-container>\r\n\r\n        <td class="text-center" *ngIf="!isView">\r\n          <span data-toggle="modal" data-target="#documentDetails"><a class="btn nobg btn-edit-cstm" (click)="editWODocument(rowData)" matTooltip="Edit"><i class="fa fa-pencil"></i></a> </span>\r\n          <span><a class="btn nobg btn-delete-cstm" (click)="openWoDelete(deleteContent, rowData)" matTooltip="Delete"><i class="fa fa-trash"></i></a> </span>\r\n\r\n          \x3c!-- <button class="btn-edit" mat-icon-button (click)="editWODocument(rowData)" matTooltip="Edit"\r\n            data-toggle="modal" data-target="#documentDetails">\r\n            <mat-icon>edit</mat-icon>\r\n          </button> --\x3e\r\n\r\n          \x3c!-- <button \r\n            class="btn-delete" \r\n            mat-icon-button \r\n            matTooltip="Delete" matTooltipPosition="above"\r\n            (click)="openWoDelete(deleteContent, rowData)">\r\n            <mat-icon color="warn">delete</mat-icon>\r\n          </button> --\x3e\r\n        </td>\r\n        \r\n      </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate="emptymessage" let-columns *ngIf="documentsDestructuredData.length == 0">\r\n      <tr>\r\n\r\n        <td [attr.colspan]="10" style="color: red; font-weight: bold; text-align: center">\r\n          No records found\r\n        </td>\r\n      </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate="summary" id="footer">\r\n      <label id="footer" class="footer">Total:</label>\r\n      <input style="width: 5%;" [(ngModel)]="documents._totalRecords" name="no\'of records" [disabled]="true" pInputText\r\n        type="text" />\r\n\r\n      &nbsp;&nbsp;\r\n      <label id="footer" class="footer1">Pages Count:</label>\r\n\r\n      <input style="width: 5%;" [ngModel]="getPageCount(documents._totalRecords, pageSize)" name="page count"\r\n        [disabled]="true" pInputText type="text" />\r\n    </ng-template>\r\n  </p-table>\r\n</div>\r\n</div>\r\n\x3c!-- </div>\r\n      </div>\r\n    </div>\r\n  </div> --\x3e\r\n\r\n\r\n\r\n\r\n<div class="modal fade" id="documentDetails" role="dialog" data-backdrop="static">\r\n  <div class="modal-dialog modal-sm">\r\n    <div class="modal-content">\r\n      <div class="modal-header">\r\n        <button type="button" class="close" (click)="closeMyModel(\'#documentDetails\')">\r\n          &times;\r\n        </button>\r\n        <h4 class="modal-title">Add Document Details</h4>\r\n      </div>\r\n      <form #documentDetails="ngForm" class="form-horizontal">\r\n        <div class="modal-body">\r\n          <div class="form-row">\r\n            <div class="col-md-6">\r\n              <div class="form-group">\r\n                <label>Name <span class="clr-red">*</span></label>\r\n                <input class="form-control" type="text" name="name" [(ngModel)]="documentForm.name"\r\n                  (ngModelChange)="enableSave()" required />\r\n              </div>\r\n              <div class="form-group">\r\n                <label>Description </label>\r\n                <textarea class="form-control" name="description" [(ngModel)]="documentForm.description"\r\n                  (ngModelChange)="enableSave()" ></textarea>\r\n              </div>\r\n              <div class="form-group">\r\n                  <label style="width:100%;">Type <span class="clr-red">*</span></label>\r\n                  <p-dropdown placeholder="Select" name="typeId" #cmm="ngModel"\r\n                              [options]="documentTypeList" class="p-dropdown-wo-doc"\r\n                              [(ngModel)]="documentForm.typeId" (ngModelChange)="enableSave()" required>\r\n                  </p-dropdown>\r\n              </div>                   \r\n            </div> \r\n\r\n            <div class="col-md-12">\r\n              <div class="form-group">\r\n                <label>Memo </label>\r\n                \x3c!-- <textarea class="form-control" name="memo" [(ngModel)]="documentForm.memo"\r\n                  (ngModelChange)="enableSave()"></textarea> --\x3e\r\n                  <p-editor [style]="{\'height\':\'100px\'}" name="textAreaInfo11" (ngModelChange)="enableSave()" [(ngModel)]="documentForm.memo"></p-editor>\r\n              </div>\r\n              <div class="form-group" *ngIf="!isEditButton">\r\n                <label style="float: none;width: auto;">Attachments <span class="clr-red">*</span></label>\r\n                <p-fileUpload #fileUploadInput name="fileupload[]" multiple="multiple" [showCancelButton]="false"\r\n                  [showUploadButton]="false" customUpload="true" (ngModelChange)="enableSave()"\r\n                  (onSelect)="fileUpload($event)" (onRemove)="removeFile($event)"></p-fileUpload>\r\n              </div>\r\n              <div class="table-responsive table-overflow"\r\n              *ngIf="isEditButton">\r\n             <h4 class="panel-title" style="padding-left: 5px;">\r\n                 Attachment Details:\r\n             </h4>\r\n\r\n             <table class="table-responsive ptable-cus-pma">\r\n                 <tr>\r\n                     <th>File Name</th>\r\n                     <th>Download</th>\r\n                 </tr>\r\n                 <tr>\r\n                     <td>{{sourceViewforDocumentList.fileName}}</td>\r\n                     <td style="text-align: center;">\r\n                         <a *ngIf="sourceViewforDocumentList.attachmentDetailId > 0" (click)="downloadFileUpload(sourceViewforDocumentList)"\r\n                            matTooltip="Download" matTooltipPosition="above"\r\n                            class="btn nobg btn-cstm">\r\n                             <span><i class="fa fa-download"></i></span>\r\n                         </a>\r\n                         <a *ngIf="sourceViewforDocumentList.attachmentDetailId==0"\r\n                            [href]="sourceViewforDocumentList.link"\r\n                            download="{{sourceViewforDocumentList.fileName}}"\r\n                            matTooltip="Download" matTooltipPosition="above"\r\n                            class="filelink">\r\n                             <span><i class="fa fa-download"></i></span>\r\n\r\n                         </a>\r\n\r\n                     </td>\r\n\r\n                 </tr>\r\n             </table>\r\n           </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class="modal-footer">\r\n          <button type="button" *ngIf="!isEditButton" class="btn btn-primary pull-right submit-btn"\r\n            style="text-align:center" (click)="saveDocumentInformation()"\r\n            [disabled]="!documentDetails.valid || disableSave">\r\n            Save\r\n          </button>\r\n          <button type="button" *ngIf="isEditButton" class="btn btn-primary pull-right submit-btn"\r\n            style="text-align:center" (click)="saveDocumentInformation()"\r\n            [disabled]="!documentDetails.valid || disableSave">\r\n            Update\r\n          </button>\r\n          <button type="button" class="btn btn-danger" (click)="\r\n            closeMyModel(\'#documentDetails\')\r\n            ">\r\n            Close\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #deleteContent\r\n             let-c="close"\r\n             let-d="dismiss"\r\n             data-backdrop="static">\r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Delete?</h4>\r\n        <button type="button"\r\n                class="close"\r\n                aria-label="Close"\r\n                (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n    </div>\r\n\r\n    <div class="modal-body">\r\n        \x3c!-- <strong>\r\n            Document Name:\r\n            <span class="new-label">{{ selectedRowForDelete.name }}</span>\r\n        </strong> --\x3e\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="button"\r\n                class="btn btn-primary"\r\n                (click)="deleteItemAndCloseModel()">\r\n            Yes\r\n        </button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">\r\n            No\r\n        </button>\r\n    </div>\r\n</ng-template>'},Usf9:function(e,r,t){"use strict";t.r(r),r.default='<div style="float: right; margin: 3px 0 19px 0px;">\r\n    <button type="button" class="btn btn-primary" (click)="detailView()">\r\n        {{(isOpenedAll)?\'Summary\':\'Detail View\'}}\r\n    </button>\r\n</div>\r\n<div style="margin-top: 15px;">\r\n<p-treeTable [value]="gridData" (onNodeExpand)="getShippingData($event.node)">\r\n    <ng-template pTemplate="header">\r\n        <tr>\r\n            <th style="background-color: #337ab7; color: white;">PartNumber</th>\r\n            <th style="background-color: #337ab7; color: white">Part Description</th>\r\n            <th style="background-color: #337ab7; color: white">Revised PartNo</th>\r\n            <th style="background-color: #337ab7; color: white">Ship Via</th>\r\n            <th style="background-color: #337ab7; color: white">Task</th>\r\n            <th style="background-color: #337ab7; color: white">UOM</th>\r\n            <th style="background-color: #337ab7; color: white">Dimention</th>\r\n            <th style="background-color: #337ab7; color: white">Weight</th>\r\n            <th style="background-color: #337ab7; color: white">Dimensions UOM</th>\r\n            <th style="background-color: #337ab7; color: white">Currency</th>\r\n            <th style="background-color: #337ab7; color: white">Amount</th>\r\n        </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate="body" let-rowNode let-rowData="rowData">\r\n        <tr>\r\n            <td>\r\n                <p-treeTableToggler [rowNode]="rowNode"></p-treeTableToggler>\r\n                {{rowData.partNumber}}\r\n            </td>\r\n            <td>{{rowData.partDescription}}</td>\r\n            <td>{{rowData.revisedPartNo}}</td>\r\n            <td>{{rowData.shipVia}}</td>\r\n            <td>{{rowData.task}}</td>\r\n            <td>{{rowData.uom}}</td>\r\n            <td>{{(rowData.partNumber)?rowData.length+\'L - \'+rowData.width+"W - "+rowData.height+"H":""}}</td>\r\n            <td>{{rowData.weight}}</td>\r\n            <td>{{rowData.dimensionsUOM}}</td>\r\n            <td>{{rowData.currency}}</td>\r\n            <td>\r\n                <div style="float: right;">{{globalizeAmount(rowData.amount)}}</div>\r\n            </td>\r\n        </tr>\r\n    </ng-template>\r\n</p-treeTable>\r\n</div>\r\n<div class="preloader" *ngIf="isSpinnerVisible">\r\n    <div class="loading">\r\n        <div class="lds-roller"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n    </div>\r\n</div>'},V5LW:function(e,r,t){"use strict";t.r(r),r.default='<div style="float: right;margin: -41px 0 19px 0px;">\r\n    <button type="button" class="btn btn-primary" (click)="detailView()">\r\n        {{(isOpenedAll)?\'Summary\':\'Detail View\'}}\r\n    </button>\r\n</div>\r\n<div style="margin-top: 71px;">\r\n<p-treeTable [value]="gridData" (onNodeExpand)="getShippingData($event)">\r\n    <ng-template pTemplate="header">\r\n        <tr>\r\n            <th style="background-color: #337ab7; color: white;" *ngFor="let f of fields">{{f.header}}</th>\r\n        </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate="body" let-rowNode let-rowData="rowData">\r\n        <tr>\r\n            <td>\r\n                <p-treeTableToggler [rowNode]="rowNode"></p-treeTableToggler>\r\n                {{rowData.partNumber}}\r\n            </td>\r\n            <ng-container *ngFor="let f of fields">\r\n                <td *ngIf="f.header != \'Part Number\' && f.field != \'memo\' && f.field != \'emailBody\' && f.field != \'notes\'">\r\n                    {{(f.field == \'contactDate\')?getDate(rowData[f.field]):(f.field == \'amount\')?globalizeAmount(rowData[f.field]):rowData[f.field]}}\r\n                </td>\r\n                <td *ngIf="f.header != \'Part Number\' && (f.field == \'memo\' || f.field == \'emailBody\' || f.field == \'notes\')">\r\n                    <p class="p_textEditor" [innerHTML]=rowData[f.field]></p>\r\n                </td>\r\n            </ng-container>\r\n        </tr>\r\n    </ng-template>\r\n</p-treeTable>\r\n</div>\r\n<div class="preloader" *ngIf="isSpinnerVisible">\r\n    <div class="loading">\r\n        <div class="lds-roller"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n    </div>\r\n</div>'},VlzZ:function(e,r,t){"use strict";t.r(r),r.default='\r\n    <div *ngIf="selectedDisplayType != \'\'" style="color: red; font-size: 20px;">\r\n        {{(selectedDisplayType == \'use historical wos\')?\'Work order details \':\'Workorder quote Details of \'+quoteForm.quoteNumber}}\r\n    </div>\r\n    <nav aria-label="breadcrumb">\r\n        <ol class="breadcrumb">\r\n            <li class="breadcrumb-item" aria-current="page">Work Order</li>\r\n            <li class="breadcrumb-item active" aria-current="page" *ngIf="!isView">Create Work Order Quote</li>\r\n        </ol>\r\n    </nav>\r\n\r\n    <div class="card new-card">\r\n        <div class="card-header bg-primary">\r\n            <div class="row">\r\n              <div class="col">\r\n                <h4 class="new-card-heading">\r\n                  {{ isEdit ? \'Edit\' : \'Create\' }} Work Order Quote</h4>\r\n              </div>\r\n              <div>\r\n                <button\r\n                  type="button"\r\n                  class="btn-sm new-btn-primary"\r\n              [routerLink]="[\'/workordersmodule/workorderspages/app-work-order-quote-list\']" >\r\n                  Work Order Quote List\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n    <div class="card-body new-card-body">\r\n        <div class="form-row">\r\n            <div class="col-md-3"> \r\n                <div class="form-group ">\r\n                    <label>Quote Number <span class="clr-red">*</span></label>\r\n                    <input class="form-control" type="text" required [(ngModel)]="quoteForm.quoteNumber" name="quotenumber" readonly />\r\n                </div>\r\n                <div class="form-group ">\r\n                    <label>Version Number <span class="clr-red">*</span></label>\r\n                    <input class="form-control" type="text" required [(ngModel)]="quoteForm.versionNo" name="quotenumber" readonly />\r\n                </div>\r\n                <div class="form-group ">\r\n                    <label>Open Date <span class="clr-red">*</span> </label>\r\n                    <p-calendar [showIcon]="true" (onSelect)="calculateExpiryDate()" \r\n                    [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100" required [(ngModel)]="quoteForm.openDate" name="openDate" [disabled]="isView"></p-calendar>\r\n                </div>\r\n                <div class="form-group ">\r\n                    <label> Valid For Days <span class="clr-red">*</span></label>\r\n                    <input class="form-control" (change)="calculateExpiryDate()" required type="number" [(ngModel)]="validFor" name="ValidForDays" [disabled]="isView" />\r\n                </div>\r\n                <div class="form-group ">\r\n                    <label> Expiration Date <span class="clr-red">*</span></label>\r\n                    <p-calendar [showIcon]="true" [(ngModel)]="expirationDate" \r\n                    [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100" required name="ExpDate" [disabled]="true"></p-calendar>\r\n                </div>\r\n                <div class="form-group ">\r\n                    <label>Quote Due Date <span class="clr-red">*</span></label>\r\n                    <p-calendar [showIcon]="true" [(ngModel)]="quoteDueDate" \r\n                    [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100" required name="QuoteDueDate" aria-readonly [disabled]="isView"></p-calendar>\r\n                </div>\r\n\r\n\r\n            </div>\r\n            <div class="col-md-3">\r\n                <div class="form-group ">\r\n                    <label>Sent Date  </label>\r\n                    <p-calendar [showIcon]="true" [(ngModel)]="sentDate" name="SentDate" [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100" [disabled]="isView"></p-calendar>\r\n                </div>\r\n                <div class="form-group ">\r\n                    <label>Approved Date </label>\r\n                    <p-calendar [showIcon]="true" [(ngModel)]="approvedDate" name="ApprovedDate"\r\n                    [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100"\r\n                                [disabled]="isView"></p-calendar>\r\n                </div>\r\n\r\n                <div class="form-group">\r\n                    <label> Quote Status <span class="clr-red">*</span></label>\r\n                    <select [(ngModel)]="quoteForm.expirationDateStatus" required name="ExpDateStatus" [disabled]="isView">\r\n                        <option *ngFor="let status of quoteStatusList" [value]="status.value">{{status.label}}</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div class="form-group ">\r\n                    <label for="Currency">\r\n                        Currency\r\n                        <span class="clr-red">*</span>\r\n                    </label>\r\n                    <select [(ngModel)]="currency" name="Currency" required [disabled]="isView" *ngIf="!isQuoteListView">\r\n                        <option value="">Select Currency</option>\r\n                        <option *ngFor="let cur of currencyList" [value]="cur.value">{{cur.label}}</option>\r\n                    </select>\r\n                    <input class="form-control" type="text" [(ngModel)]="currency" name="Currency" *ngIf="isQuoteListView" [disabled]="isView" />\r\n                </div>\r\n\r\n                <div class="form-group ">\r\n                    <label for="accountsReceivableBalance">\r\n                        AR Balance\r\n                    </label>\r\n                    <input class="form-control" type="number" [(ngModel)]="accountsReceivableBalance" name="accountsReceivableBalance" [disabled]="isView" />\r\n                </div>\r\n\r\n\r\n                <div class="form-group ">\r\n                    <label> DSO </label>\r\n                    <input class="form-control" type="text" [(ngModel)]="dso" name="DSO" [disabled]="isView" />\r\n                </div>\r\n            </div>\r\n            <div class="col-md-3">\r\n\r\n                <div class="form-group">\r\n                    <label>WO Num </label>\r\n                    <input class="form-control" type="text" [(ngModel)]="workOrderNumber" name="WoNumber" readonly />\r\n                </div>\r\n                <div class="form-group">\r\n                    <label for="customerName">\r\n                        Customer Name\r\n                    </label>\r\n                    <input class="form-control" type="text" [(ngModel)]="customerName" name="customerName" readonly />\r\n                </div>\r\n                <div class="form-group ">\r\n                    <label for="customerCode">\r\n                        Customer Code\r\n                    </label>\r\n                    <input class="form-control" type="text" [(ngModel)]="customerCode" name="customerCode" readonly />\r\n                </div>\r\n                <div class="form-group ">\r\n                    <label for="customerContact">\r\n                        Customer Contact\r\n                    </label>\r\n                    <input class="form-control" type="text" [(ngModel)]="customerContact" name="customerContact" readonly />\r\n                </div>\r\n                <div class="form-group ">\r\n                    <label for="customerEmail">\r\n                        Customer email\r\n                    </label>\r\n                    <input class="form-control" type="email" [(ngModel)]="customerEmail" name="customerEmail" readonly />\r\n                </div>\r\n                <div class="form-group ">\r\n                    <label for="customerPhone">\r\n                        Customer phone\r\n                    </label>\r\n                    <input class="form-control" type="number" [(ngModel)]="customerPhone" name="customerPhone" readonly />\r\n                </div>\r\n\r\n\r\n            </div>\r\n            <div class="col-md-3">\r\n\r\n                <div class="form-group ">\r\n                    <label for="customerRef">\r\n                        Customer Ref\r\n                    </label>\r\n                    <input class="form-control" type="text" [(ngModel)]="customerRef" name="customerRef" readonly />\r\n                </div>\r\n                <div class="form-group">\r\n                    <label for="credit">\r\n                        Credit Limit &amp; Terms <span class="clr-red">*</span>\r\n                    </label>\r\n                    <div class="col-md-12">\r\n                        <div class="col-md-6">\r\n                            <input type="text" class="form-control text-align-right" required [(ngModel)]="creditLimit" name="creditLimit" readonly />\r\n                        </div>\r\n                        <div class="col-md-6">\r\n                            <input type="text" class="form-control" required [(ngModel)]="creditTerms" name="creditTerms" readonly />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="form-group ">\r\n                    <label for="salesPerson">\r\n                        Sales Person\r\n                    </label>\r\n                    <input class="form-control" type="text" [(ngModel)]="salesPerson" name="salesPerson" readonly />\r\n                </div>\r\n                <div class="form-group ">\r\n                    <label for="csr">\r\n                        CSR\r\n                    </label>\r\n                    <input class="form-control" type="text" [(ngModel)]="csr" name="csr" readonly />\r\n                </div>\r\n                <div class="form-group ">\r\n                    <label for="Employee">\r\n                        Employee\r\n                    </label>\r\n                    <p-autoComplete field="label"\r\n                                    [(ngModel)]="quoteForm.employeeId"\r\n                                    name="employees" #employees="ngModel"\r\n                                    errorMessage="Records not found" [forceSelection]="true"\r\n                                    [dropdown]="true" [suggestions]="employeeList"\r\n                                    (completeMethod)="filterEmployee($event)"\r\n                                    [size]="30" [minLength]="1" [dropdown]="true"\r\n                                    class="p-autoComplete-ctsm" [disabled]="isView">\r\n                    </p-autoComplete>\r\n                    \x3c!-- <input class="form-control" type="text" [(ngModel)]="employeeName" name="Employee"/> --\x3e\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div>\r\n            <div class="form-row">\r\n                <div class="col-md-6 col-md-6-cstm">\r\n\r\n                    <label for="warnings">\r\n                        Warnings\r\n                    </label>\r\n                    <textarea class="form-control text-area-cstm" rows="4" cols="50" [(ngModel)]="warnings" name="warnings" [disabled]="isView"></textarea>\r\n                </div>\r\n                <div class="col-md-6 col-md-6-cstm">\r\n\r\n                    <label for="memo">\r\n                        Memo\r\n                    </label>\r\n                    <textarea class="form-control text-area-cstm" rows="4" cols="50" [(ngModel)]="memo" name="memo" [disabled]="isView"></textarea>\r\n                </div>\r\n                <div class="clear"></div>\r\n                <hr>\r\n            </div>\r\n        </div>\r\n        <div class="form-row pull-right m-t-10" *ngIf="enableEditBtn && selectedDisplayType == \'\'">\r\n            <button class="btn btn-primary" (click)="createQuote()" *ngIf="!isView || (isWoTab && !isListView)">\r\n                Edit Quote\r\n            </button>\r\n            <button class="btn btn-primary" (click)="onClickBackToWO()">\r\n                Back To Work Order\r\n            </button>\r\n        </div>\r\n        <div class="col-md-12" *ngIf="!isView && !isQuoteListView">\r\n            <button class="btn btn-primary pull-right" (click)="saveType = \'\';saveQuoteDetails()" [disabled]="checkValidQuote()">{{quotationHeader && quotationHeader.workOrderQuoteId?\'Update\':\'Save\'}}</button>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n<br>\r\n\r\n<div class="card" *ngIf="quoteForm.quoteNumber && quoteForm.quoteNumber != \'\' && !isQuoteListView">\r\n    <div class="card-body">\r\n\r\n        <div class="card col-md-12 list_caps" id="approvalTabs">\r\n            <div class="form-group " style="margin:0px;">\r\n                <button type="button" class="btn" [ngClass]="approvalGridActiveTab === \'mpns\'?\'btn-primary\':\'btn-light-cstm\'" (click)="approvalGridActiveTabChange(\'mpns\');">MPNs</button>\r\n                <button type="button" class="btn" [ngClass]="approvalGridActiveTab === \'internalApprovers\'?\'btn-primary\':\'btn-light-cstm\'" (click)="approvalGridActiveTabChange(\'internalApprovers\');">Internal Approvers</button>\r\n                <button type="button" class="btn" [ngClass]="approvalGridActiveTab === \'approvalProcess\'?\'btn-primary\':\'btn-light-cstm\'" (click)="approvalGridActiveTabChange(\'approvalProcess\');selectall = false;">Approval Process</button>\r\n                \x3c!--<button type="button" class="btn" [ngClass]="approvalGridActiveTab === \'setForInternalApproval\'?\'btn-primary\':\'btn-light-cstm\'" (click)="approvalGridActiveTabChange(\'setForInternalApproval\');selectall = false;">Sent for Internal Approval</button>\r\n                <button type="button" class="btn" [ngClass]="approvalGridActiveTab === \'submittedInternalApproval\'?\'btn-primary\':\'btn-light-cstm\'" (click)="approvalGridActiveTabChange(\'submittedInternalApproval\');selectall = false;">Submitted Internal Approval</button>\r\n                <button type="button" class="btn" [ngClass]="approvalGridActiveTab === \'sentForCustomerApproval\'?\'btn-primary\':\'btn-light-cstm\'" (click)="approvalGridActiveTabChange(\'sentForCustomerApproval\');selectall = false;">Sent for Customer Approval</button>\r\n                <button type="button" class="btn" [ngClass]="approvalGridActiveTab === \'submittedCustomerApproval\'?\'btn-primary\':\'btn-light-cstm\'" (click)="approvalGridActiveTabChange(\'submittedCustomerApproval\');selectall = false;">Submitted Customer Approval</button>--\x3e\r\n                <button type="button" class="btn" [ngClass]="approvalGridActiveTab === \'workOrderQuoteAnalysis\'?\'btn-primary\':\'btn-light-cstm\'" (click)="approvalGridActiveTabChange(\'workOrderQuoteAnalysis\');">Work Order Quote Analysis</button>\r\n            </div>\r\n            <div class="table-responsive" *ngIf="approvalGridActiveTab === \'mpns\'">\r\n                <div class="table-responsive" style="margin-top: 10px;" *ngIf="!isQuoteListView">\r\n                    <table class="table table-bordered table-striped table-fixed table-sorting mpn-list-table"\r\n                           id="mpn-list-table">\r\n                        <thead>\r\n                            <tr class="pad_workflo">\r\n                                <th rowspan="2">MPN</th>\r\n                                <th rowspan="2">MPN Description</th>\r\n                                <th rowspan="2">Revised MPN</th>\r\n                                <th rowspan="2">Item Group</th>\r\n                                <th rowspan="2">QTY</th>\r\n                                <th rowspan="2">Work Scope </th>\r\n                                <th rowspan="2">Customer Ref</th>\r\n                                <th colspan="4" rowspan="2">Management Structure</th>\r\n                                <th rowspan="2">NTE</th>\r\n                                <th rowspan="2">Condition </th>\r\n                                <th rowspan="2">Contract</th>\r\n                                <th rowspan="2">Stock Line Num</th>\r\n                                <th rowspan="2">Serial Number</th>\r\n                                \x3c!-- <th rowspan="2">Qty *</th> --\x3e\r\n                                <th rowspan="2">CMM/Pub Ref</th>\r\n                                <th rowspan="2">Workflow ID </th>\r\n                                <th rowspan="2">WO Stage</th>\r\n                                <th rowspan="2">WO Status</th>\r\n                                <th rowspan="2">Priority</th>\r\n                                <th rowspan="2">Customer received Date</th>\r\n                                <th rowspan="2">Customer Request Date</th>\r\n                                <th rowspan="2">Promised Date</th>\r\n                                <th rowspan="2">Estimated Ship Date</th>\r\n                                <th rowspan="2">Estimated Completion Date</th>\r\n                                <th rowspan="2">DER</th>\r\n                                <th rowspan="2">PMA</th>\r\n                                \x3c!-- <th rowspan="2">Qty *</th> --\x3e\r\n                                <th rowspan="2">First Name</th>\r\n                                <th rowspan="2">Tech Station</th>\r\n                                \x3c!-- <th rowspan="2">Tear Down Report</th> --\x3e\r\n                                <th rowspan="2">TAT Days Current</th>\r\n                                \x3c!-- <th rowspan="2">Qty *</th> --\x3e\r\n                                <th rowspan="2">TAT Days Standard</th>\r\n                                \x3c!-- <th rowspan="2">Work Scope</th> --\x3e\r\n                                \x3c!--<th rowspan="2"></th>\r\n                                <th rowspan="2"></th>--\x3e\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr class="mpn-row" style="display: table-row;"\r\n                                *ngFor="let workOrderPart of workOrderPartsDetail; let i=index;">\r\n                                <td>\r\n                                    <label>{{workOrderPart.partNumber}}</label>\r\n                                    \x3c!-- <input [value]="workOrderPart[\'partNumber\']" readonly/> --\x3e\r\n                                </td>\r\n                                <td>\r\n                                    <label>{{workOrderPart[\'partDescription\']}}</label>\r\n                                    \x3c!-- <input [value]="workOrderPart[\'partDescription\']" readonly/> --\x3e\r\n                                </td>\r\n                                <td>\r\n                                    <label>{{workOrderPart[\'revisedPartNo\']}}</label>\r\n                                    \x3c!-- <input [value]="workOrderPart[\'revisedPartNo\']" readonly/> --\x3e\r\n                                </td>\r\n                                <td>\r\n                                    <label>{{workOrderPart[\'itemGroup\']}}</label>\r\n                                </td>\r\n                                <td>\r\n                                    <label class="text-right">{{workOrderPart[\'quantity\'] }}</label>\r\n                                </td>\r\n                                <td>\r\n                                    <label>    {{workOrderPart[\'workScope\'] }}  </label>\r\n                                </td>\r\n                                <td>\r\n                                    <label>   {{workOrderPart[\'refNo\']}}  </label>\r\n                                </td>\r\n                                <td style="min-width: 80px;">\r\n                                    <label> {{workOrderPart[\'levelCode1\'] }}  </label>\r\n                                </td>\r\n                                <td style="min-width: 80px;">\r\n                                    <label>\r\n\r\n                                        {{workOrderPart[\'levelCode2\'] }}\r\n                                    </label>\r\n                                </td>\r\n                                <td style="min-width: 80px;">\r\n                                    <label>\r\n\r\n                                        {{workOrderPart[\'levelCode3\'] }}\r\n                                    </label>\r\n                                </td>\r\n                                <td style="min-width: 80px;">\r\n                                    <label>\r\n\r\n                                        {{workOrderPart[\'levelCode4\'] }}\r\n                                    </label>\r\n                                </td>\r\n                                <td>\r\n                                    <label class="text-right">{{workOrderPart[\'nte\']}}</label>\r\n                                    \x3c!-- <input [value]="workOrderPart[\'nte\']" readonly/> --\x3e\r\n                                </td>\r\n                                <td>\r\n                                    <label>{{workOrderPart[\'condition\']}}</label>\r\n                                    \x3c!-- <input [value]="workOrderPart[\'condition\']" readonly/> --\x3e\r\n                                </td>\r\n                                <td>\r\n                                    \x3c!-- {{ p.isDER }} --\x3e\r\n                                    <span *ngIf="workOrderPart[\'contract\'] == true">Yes</span>\r\n                                </td>\r\n                                <td>\r\n                                    <label>{{workOrderPart[\'stockLine\']}}</label>\r\n                                    \x3c!-- <input [value]="workOrderPart[\'stockLine\']" readonly/> --\x3e\r\n                                </td>\r\n                                <td>\r\n                                    <label>{{workOrderPart[\'serialNumber\']}}</label>\r\n                                    \x3c!-- <input [value]="workOrderPart[\'serialNumber\']" readonly/> --\x3e\r\n                                </td>\r\n                                <td>\r\n                                    <label>    {{workOrderPart[\'publicationId\'] }}</label>\r\n                                </td>\r\n                                <td>\r\n                                    <label>   {{workOrderPart[\'workFlowNo\'] }}</label>\r\n                                </td>\r\n                                <td>\r\n                                    <label>{{workOrderPart[\'workOrderStage\']}}</label>\r\n                                    \x3c!-- <input [value]="workOrderPart[\'workOrderStage\']" readonly/> --\x3e\r\n                                </td>\r\n                                <td>\r\n                                    <label>{{workOrderPart[\'workOrderStatus\']}}</label>\r\n                                    \x3c!-- <input [value]="workOrderPart[\'workOrderStatus\']" readonly/> --\x3e\r\n                                </td>\r\n                                <td>\r\n                                    <label>{{workOrderPart[\'priority\']}}</label>\r\n                                    \x3c!-- <input [value]="workOrderPart[\'priority\']" readonly/> --\x3e\r\n                                </td>\r\n                                <td>\r\n                                    <label>{{workOrderPart[\'receivedDate\'] | date: \'MM/dd/yyyy\'}}</label>\r\n                                    \x3c!-- <input [value]="workOrderPart[\'customerRequestDate\']" readonly/> --\x3e\r\n                                </td>\r\n                                <td>\r\n                                    <label>{{workOrderPart[\'customerRequestDate\'] | date: \'MM/dd/yyyy\'}}</label>\r\n                                    \x3c!-- <input [value]="workOrderPart[\'customerRequestDate\']" readonly/> --\x3e\r\n                                </td>\r\n                                <td>\r\n                                    <label>{{workOrderPart[\'promisedDate\']  | date: \'MM/dd/yyyy\'}}</label>\r\n                                    \x3c!-- <input [value]="workOrderPart[\'promisedDate\']" readonly/> --\x3e\r\n                                </td>\r\n                                <td>\r\n                                    <label>{{workOrderPart[\'estimatedShipDate\']  | date: \'MM/dd/yyyy\'}}</label>\r\n                                    \x3c!-- <input [value]="workOrderPart[\'estimatedShipDate\']" readonly/> --\x3e\r\n                                </td>\r\n                                <td>\r\n                                    <label>{{workOrderPart[\'estimatedCompletionDate\']  | date: \'MM/dd/yyyy\'}}</label>\r\n                                    \x3c!-- <input [value]="workOrderPart[\'estimatedCompletionDate\']" readonly/> --\x3e\r\n                                </td>\r\n                                <td>\r\n                                    <label *ngIf="workOrderPart[\'isDER\']==true">Yes</label>\r\n                                    \x3c!-- <input [value]="workOrderPart[\'isDER\']" readonly/> --\x3e\r\n                                </td>\r\n                                <td>\r\n                                    <label *ngIf="workOrderPart[\'isPMA\']==true">Yes</label>\r\n                                    \x3c!-- <input [value]="workOrderPart[\'isPMA\']" readonly/> --\x3e\r\n                                </td>\r\n                                <td>\r\n                                    <label>{{workOrderPart[\'technician\']}}</label>\r\n                                    \x3c!-- <input [value]="workOrderPart[\'firstName\']" readonly/> --\x3e\r\n                                </td>\r\n                                <td>\r\n                                    <label>{{workOrderPart[\'techStation\']}}</label>\r\n                                    \x3c!-- <input [value]="workOrderPart[\'techStation\']" readonly/> --\x3e\r\n                                </td>\r\n                                \x3c!-- <td>\r\n                                  <label>{{workOrderPart[\'tearDownReport\']}}</label>\r\n                                </td> --\x3e\r\n                                <td>\r\n                                    <label class="text-right">{{workOrderPart[\'tatDaysCurrent\']}}</label>\r\n                                    \x3c!-- <input [value]="workOrderPart[\'tatDaysCurrent\']" readonly/> --\x3e\r\n                                </td>\r\n                                <td>\r\n                                    <label class="text-right">{{workOrderPart[\'tatDaysStandard\']}}</label>\r\n                                    \x3c!-- <input [value]="workOrderPart[\'tatDaysStandard\']" readonly/> --\x3e\r\n                                </td>\r\n                                \x3c!-- <td> --\x3e\r\n                                \x3c!-- <label>{{workOrderPart[\'workScope\']}}</label> --\x3e\r\n                                \x3c!-- <input [value]="workOrderPart[\'workScope\']" readonly/> --\x3e\r\n                                \x3c!-- </td> --\x3e\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n\r\n            <div class="table-responsive" *ngIf="approvalGridActiveTab === \'internalApprovers\'">\r\n                <div class="table-responsive" style="margin-top: 10px;" *ngIf="!isQuoteListView">\r\n                    <table class="table table-bordered table-striped table-fixed table-sorting mpn-list-table"\r\n                           id="mpn-list-table">\r\n                        <thead>\r\n                            <tr class="pad_workflo">\r\n                                <th>Approver Name</th>\r\n                                <th>Approver Code</th>\r\n                                <th>Approver Email</th>\r\n                                <th>Total PO Cost</th>\r\n                                <th>Min Amount</th>\r\n                                <th>Max Amount</th>\r\n                                <th>Message</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr class="mpn-row" style="display: table-row;"\r\n                                *ngFor="let approver of internalApproversList; let i=index;" [ngClass]="(approver.isExceeded)?\'approver-limit-exceeded\':\'\'">\r\n                                <td>\r\n                                    <label>{{approver.approverName}}</label>\r\n                                </td>\r\n                                <td>\r\n                                    <label>{{approver.approverCode}}</label>\r\n                                </td>\r\n                                <td>\r\n                                    <label>{{approver.approverEmail}}</label>\r\n                                </td>\r\n                                <td>\r\n                                    <label>{{approver.totalCost}}</label>\r\n                                </td>\r\n                                <td>\r\n                                    <label>{{approver.lowerValue}}</label>\r\n                                </td>\r\n                                <td>\r\n                                    <label>{{approver.upperValue}}</label>\r\n                                </td>\r\n                                <td>\r\n                                    <label>{{approver.message}}</label>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n\r\n            <div class="table-responsive" *ngIf="approvalGridActiveTab === \'approvalProcess\'">\r\n                <div class="table-responsive" style="margin-top: 10px;" *ngIf="!isQuoteListView">\r\n                    <table class="table table-bordered table-striped table-fixed table-sorting mpn-list-table"\r\n                           id="mpn-list-table">\r\n                        <thead>\r\n                            <tr class="pad_workflo">\r\n                                <th>\r\n                                    <input type="checkbox" (click)="selectAllApproval(\'internal\', selectall)" [(ngModel)]="selectall" [disabled]="isView || isCurrentUserApprovalLimitExceeded"/> Select All\r\n                                </th>\r\n                                <th *ngFor="let header of woQuoteListHeader">{{header.header}}</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr class="mpn-row" style="display: table-row;"\r\n                                *ngFor="let approver of woQuoteApprovalList; let i=index;">\r\n                                <td>\r\n                                    <input type="checkbox" [(ngModel)]="approver.isSelected" *ngIf="approver[\'approvalActionId\'] != 5" [disabled]="isView || isCurrentUserApprovalLimitExceeded"/>\r\n                                </td>\r\n                                <ng-container *ngFor="let field of woQuoteListHeader">\r\n                                    <td *ngIf="field.field != \'internalSentDate\'\r\n                                      && field.field != \'internalApprovedDate\'\r\n                                      && field.field != \'customerSentDate\'\r\n                                      && field.field != \'customerApprovedDate\'\r\n                                      && field.field != \'customerApprovedBy\'\r\n                                      && field.field != \'internalStatusId\'\r\n                                      && field.field != \'customerStatusId\'\r\n                                      && field.field != \'internalMemo\'\r\n                                      && field.field != \'customerMemo\'">\r\n\r\n                                        <label [ngClass]="fields.includes(field.field)?\'text-align-right\':\'\'">{{approver[field.field]}}</label>\r\n                                    </td>\r\n                                    <td *ngIf="field.field == \'internalSentDate\'">\r\n                                        <p-calendar [showIcon]="true" class="calender-cstm"\r\n                                                    name="openDate" #openDate="ngModel" required\r\n                                                    [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100"\r\n                                                    [(ngModel)]="approver[field.field]"\r\n                                                    [disabled]="!approver.isSelected || approver[\'approvalActionId\'] != 1"\r\n                                                    [minDate]="getInternalSentMinDate(quoteForm.openDate)" [maxDate]="getInternalSentMaxDate(sentDate)" appendTo="body">\r\n                                        </p-calendar>\r\n                                    </td>\r\n                                    <td *ngIf="field.field == \'internalStatusId\'">\r\n                                        <label *ngIf="field.field != \'internalStatusId\'" [ngClass]="fields.includes(field.field)?\'text-align-right\':\'\'">{{approver[field.field]}}</label>\r\n                                        <select *ngIf="field.field == \'internalStatusId\'"\r\n                                                [(ngModel)]="approver[\'internalStatusId\']"\r\n                                                style="width:120px;"\r\n                                                [disabled]="!approver.isSelected || approver[\'approvalActionId\'] != 2">\r\n                                            <option value="">Select</option>\r\n                                            <option value="1">Pending</option>\r\n                                            <option value="2">Approved</option>\r\n                                            <option value="3">Rejected</option>\r\n                                            <option value="4">Sent For Approval</option>\r\n                                        </select>\r\n                                    </td>\r\n                                    <td *ngIf="field.field == \'internalMemo\'" class="col-sm-12" style="width: 200px;">\r\n                                        <div class="col-sm-11">\r\n                                        \x3c!-- <input type="text" [(ngModel)]="approver[\'internalMemo\']" class="calender-cstm" style="width:200px;"\r\n                                               [disabled]="!approver.isSelected || approver[\'approvalActionId\'] != 2"\r\n                                               [readonly]="!approver.isSelected || approver[\'approvalActionId\'] != 2"/> --\x3e\r\n                                               <p class="m-0 p-0 p_textEditor" [innerHTML]="approver[\'internalMemo\']"></p>\r\n                                               </div>\r\n\r\n                                               <div class="col-sm-1" style="margin-top: 4px;" *ngIf="approver[\'approvalActionId\'] == 2">\r\n                                               <i class="fa fa-info-circle fa-lg" data-toggle="modal" \r\n                                               data-target="#memo-popup"\r\n                                                 matTooltipPosition="above" matTooltip="Add Memo"\r\n                                                 (click)="selectedApprovalIndex = i;memoType = \'internalMemo\';"></i>\r\n                                                 </div>\r\n                                        \x3c!--<div class="form-group memo-popup-cstm" style="margin-top: 12px;">\r\n                                            <div [innerHTML]="approver.internalMemo" class="text_editor_box"></div>\r\n                                            <i class="fa fa-info-circle fa-lg" data-toggle="modal"\r\n                                               data-target="#textarea-popupintmemo"\r\n                                               matTooltip="memo"\r\n                                               matTooltipPosition="above"\r\n                                               (click)="onAddTextAreaInfo(approver,i)"></i>\r\n                                        </div>--\x3e\r\n\r\n\r\n\r\n                                    </td>\r\n                                    <td *ngIf="field.field == \'internalApprovedDate\'">\r\n                                        <p-calendar [showIcon]="true" class="calender-cstm"\r\n                                                    name="openDate" #openDate="ngModel" required\r\n                                                    [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100"\r\n                                                    [(ngModel)]="approver[field.field]"\r\n                                                    [disabled]="!approver.isSelected || approver[\'approvalActionId\'] != 2"\r\n                                                    [minDate]="approver.internalSentDate" [maxDate]="getInternalApprovedMaxDate()"  appendTo="body">\r\n                                        </p-calendar>\r\n                                    </td>\r\n\r\n                                    <td *ngIf="field.field == \'customerSentDate\'">\r\n                                        <p-calendar [showIcon]="true" class="calender-cstm"\r\n                                                    name="openDate" #openDate="ngModel" required\r\n                                                    [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100"\r\n                                                    [(ngModel)]="approver[field.field]"\r\n                                                    [disabled]="!approver.isSelected || approver[\'approvalActionId\'] != 3"\r\n                                                    [maxDate]="getInternalApprovedMaxDate()" [minDate]="getCustomerSentMinDate(approver[\'internalApprovedDate\'])"  appendTo="body">\r\n                                        </p-calendar>\r\n                                    </td>\r\n                                    <td *ngIf="field.field == \'customerStatusId\'">\r\n                                        <label *ngIf="field.field != \'customerStatusId\'" [ngClass]="fields.includes(field.field)?\'text-align-right\':\'\'">{{approver[field.field]}}</label>\r\n                                        <select *ngIf="field.field == \'customerStatusId\'"\r\n                                                [(ngModel)]="approver[\'customerStatusId\']"\r\n                                                style="width:120px;"\r\n                                                [disabled]="!approver.isSelected || approver[\'approvalActionId\'] != 4">\r\n                                            <option value="">Select</option>\r\n                                            <option value="1">Pending</option>\r\n                                            <option value="2">Approved</option>\r\n                                            <option value="3">Rejected</option>\r\n                                            <option value="4">Sent For Approval</option>\r\n                                        </select>\r\n                                    </td>\r\n                                    <td *ngIf="field.field == \'customerMemo\'" class="col-sm-12" style="width: 200px;">\r\n                                        <div class="col-sm-11">\r\n                                        \x3c!-- <input type="text" [(ngModel)]="approver[\'customerMemo\']" class="calender-cstm" style="width:200px;"\r\n                                               [disabled]="!approver.isSelected || approver[\'approvalActionId\'] != 4" /> --\x3e\r\n                                            <p class="m-0 p-0 p_textEditor" [innerHTML]="approver[\'customerMemo\']"></p>\r\n                                            </div>\r\n                                               <div class="col-sm-1" style="margin-top: 4px;" *ngIf="approver[\'approvalActionId\'] == 4">\r\n                                                <i class="fa fa-info-circle fa-lg" data-toggle="modal" \r\n                                                data-target="#memo-popup"\r\n                                                  matTooltipPosition="above" matTooltip="Add Memo"\r\n                                                  (click)="memoType = \'customerMemo\';selectedApprovalIndex = i;"></i>\r\n                                                  </div>\r\n                                            </td>\r\n                                    <td *ngIf="field.field == \'customerApprovedDate\'">\r\n                                        <p-calendar [showIcon]="true" class="calender-cstm"\r\n                                                    name="openDate" #openDate="ngModel" required\r\n                                                    [(ngModel)]="approver[field.field]"\r\n                                                    [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100"\r\n                                                    [disabled]="!approver.isSelected || approver[\'approvalActionId\'] != 4"\r\n                                                    [minDate]="approver[\'customerSentDate\']" [maxDate]="getInternalApprovedMaxDate()"  appendTo="body">\r\n                                        </p-calendar>\r\n                                    </td>\r\n                                    <td *ngIf="field.field == \'customerApprovedBy\'">\r\n                                        <label *ngIf="field.field != \'customerApprovedBy\'" [ngClass]="fields.includes(field.field)?\'text-align-right\':\'\'">{{approver[field.field]}}</label>\r\n                                        <select *ngIf="field.field == \'customerApprovedBy\'"\r\n                                                [(ngModel)]="approver[\'customerApprovedById\']"\r\n                                                style="width:150px;"\r\n                                                [disabled]="!approver.isSelected || approver[\'approvalActionId\'] != 4">\r\n                                            <option value="">Select</option>\r\n                                            <option *ngFor="let cus of customerContactList" [value]="cus.contactId">{{cus.name}}</option>\r\n                                        </select>\r\n                                    </td>\r\n                                </ng-container>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <button *ngIf="!isView" class="btn btn-primary pull-right" (click)="saveApprovalProcess()" style="margin-top: 10px; margin-bottom: 10px;">Submit</button>\r\n            </div>\r\n\r\n            \r\n\r\n\r\n            <div class="table-responsive" *ngIf="approvalGridActiveTab === \'workOrderQuoteAnalysis\'">\r\n                <div class="table-responsive" style="margin-top: 10px;" *ngIf="!isQuoteListView">\r\n                    <table class="table table-bordered table-striped table-fixed table-sorting mpn-list-table"\r\n                           id="mpn-list-table">\r\n                        <thead>\r\n                            <tr class="pad_workflo">\r\n                                <th *ngFor="let header of woQuoteAnalysisHeader">{{header.header}}</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr class="mpn-row" style="display: table-row;"\r\n                                *ngFor="let approver of woQuoteAnalysisList; let i=index;">\r\n                                <ng-container *ngFor="let field of woQuoteAnalysisHeader">\r\n                                    <td >\r\n                                        <label [ngClass]="(field.field == \'revenue\' || field.field == \'materialCost\' || field.field == \'totalLaborCost\' || field.field == \'laborCost\' || field.field == \'overHeadCost\' || field.field == \'otherCost\' || field.field == \'directCost\' || field.field == \'materialRevenuePercentage\' || field.field == \'laborRevenuePercentage\' || field.field == \'overHeadCostRevenuePercentage\' || field.field == \'directCostRevenuePercentage\' || field.field == \'marginPercentage\' || field.field == \'margin\')?\'text-align-right\':\'\'">{{(field.field == \'revenue\' || field.field == \'materialCost\' || field.field == \'totalLaborCost\' || field.field == \'laborCost\' || field.field == \'overHeadCost\' || field.field == \'otherCost\' || field.field == \'directCost\' || field.field == \'materialRevenuePercentage\' || field.field == \'laborRevenuePercentage\' || field.field == \'overHeadCostRevenuePercentage\' || field.field == \'directCostRevenuePercentage\' || field.field == \'marginPercentage\' || field.field == \'margin\')?formateCurrency(approver[field.field]):approver[field.field]}}</label>\r\n                                    </td>\r\n                                </ng-container>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div >\r\n\r\n            <div class="col-md-12">\r\n                <div class="col-md-3" *ngIf="!savedWorkOrderData.isSinglePN">\r\n                    \x3c!-- <div class="form-group "> --\x3e\r\n                        <label class="fs12">\r\n                            MPN\r\n                        </label>\r\n                        \x3c!-- (change)="partNumberSelected()" --\x3e\r\n                        \x3c!-- <select (onChange)="partNumberSelected($event.value)" class="mpn-select" style="width: 100px;" [(ngModel)]="selectedPartNumber">\r\n                          <option value="">Select</option>\r\n                          <option *ngFor="let mpn of mpnPartNumbersList" [value]="mpn.label">{{mpn.label}}</option>\r\n                        </select> --\x3e\r\n                        <p-dropdown [options]="mpnPartNumbersList" name="partNumber"\r\n                                    #partNumber="ngModel" placeholder="Select Part Number" (onChange)="partNumberSelected($event.value)"\r\n                                    class="p-dropdown-custom-md"\r\n                                    [(ngModel)]="selectedPartNumber">\r\n                        </p-dropdown>\r\n                    \x3c!-- </div> --\x3e\r\n                </div>\r\n                <div class="col-md-3" *ngIf="savedWorkOrderData.isSinglePN">\r\n                    <label class="fs12">\r\n                        Part Number:\r\n                    </label>\r\n                    <label>{{selectedquotePn}}</label>\r\n                </div>\r\n                <div class="col-md-3">\r\n                    <label class="fs12">\r\n                        Part Description:\r\n                    </label>\r\n                    <label>{{selectedPartDescription}}</label>\r\n                </div>\r\n                <div class="col-md-3">\r\n                    <label class="fs12">\r\n                        Stock Line Number:\r\n                    </label>\r\n                    <label>{{selectedStockLineNumber}}</label>\r\n                </div>\r\n            </div>\r\n                <div class="form-group " *ngIf="selectedPartNumber != \'\'">\r\n                    <button type="button" data-target="#showHistoricalWorkOrder" data-toggle="modal" class="btn-primary" (click)="getDisplayData(\'use historical wos\')">Display Historical WOs</button>\r\n                    <button type="button" data-target="#showHistoricalWorkOrder" data-toggle="modal" class="btn-primary" (click)="getDisplayData(\'historical WO quotes\')">Display Historical WO Quotes</button>\r\n                </div>\r\n            \r\n        </div>\r\n\r\n        \x3c!-- <div class="col-md-12" *ngIf="selectedPartNumber != \'\'">\r\n          <div class="form-group ">\r\n            <label class="fs12">Build Method:\r\n            </label>\r\n            <button type="button" [ngClass]="selectedBuildMethod === \'use work order\'?\'btn-primary\':\'btn-light-cstm\'" (click)="buildMethodSelected(\'use work order\')">Use Work Order</button>\r\n            <button type="button" [ngClass]="selectedBuildMethod === \'use work flow\'?\'btn-primary\':\'btn-light-cstm\'" (click)="buildMethodSelected(\'use work flow\')">Use Work Flow</button>\r\n            <button type="button" [ngClass]="selectedBuildMethod === \'use historical wos\'?\'btn-primary\':\'btn-light-cstm\'" (click)="buildMethodSelected(\'use historical wos\')">Use Historical WOs</button>\r\n            <button type="button" [ngClass]="selectedBuildMethod === \'build from scratch\'?\'btn-primary\':\'btn-light-cstm\'" (click)="buildMethodSelected(\'build from scratch\')">Build From Scratch</button>\r\n          </div>\r\n\r\n        </div> --\x3e\r\n\r\n    </div>\r\n    \x3c!-- <div *ngIf="selectedBuildMethod == \'build from scratch\'">\r\n      <div class="col-sm-1">\r\n          <strong> <label> Task </label></strong>\r\n      </div>\r\n      <div class="col-sm-2">\r\n          <div class="inner-addon inline-block display-flex">\r\n              <select class="form-control custom-select"\r\n                      [(ngModel)]="currenttaskId">\r\n                  <option value="0">Select</option>\r\n                  <option *ngFor="let action of this.taskList"\r\n                          value={{action.taskId}}>\r\n                      {{action.description}}\r\n                  </option>\r\n              </select>\r\n            </div>\r\n      </div>\r\n    </div> --\x3e\r\n    <div class="card col-md-12 list_caps" *ngIf="selectedPartNumber != \'\'" id="quote-grid-tabs">\r\n        <div class="form-group " style="margin:0px;">\r\n            <button type="button" class="btn" [ngClass]="gridActiveTab === \'materialList\'?\'btn-primary\':\'btn-light-cstm\'" (click)="gridTabChange(\'materialList\');">Material List</button>\r\n            <button type="button" class="btn" [ngClass]="gridActiveTab === \'labor\'?\'btn-primary\':\'btn-light-cstm\'" (click)="gridTabChange(\'labor\');">Labor</button>\r\n            <button type="button" class="btn" [ngClass]="gridActiveTab === \'charges\'?\'btn-primary\':\'btn-light-cstm\'" (click)="gridTabChange(\'charges\');">Charges</button>\r\n            <button type="button" class="btn" [ngClass]="gridActiveTab === \'freight\'?\'btn-primary\':\'btn-light-cstm\'" (click)="gridTabChange(\'freight\');">Freight</button>\r\n            \x3c!-- <button type="button" class="btn" [ngClass]="gridActiveTab === \'exclusions\'?\'btn-primary\':\'btn-light-cstm\'" (click)="gridTabChange(\'exclusions\');">Exclusions</button> --\x3e\r\n        </div>\r\n    </div>\r\n    <div class="table-responsive" *ngIf="gridActiveTab === \'materialList\'">\r\n        <div *ngIf="!isView && !isViewForApprovedPart ">\r\n            <button data-target="#addNewMaterials" data-toggle="modal" class="btn btn-primary" style="margin-left: 10px;">Add Part No</button>\r\n        </div>\r\n        <div style="margin-top: 0px;">\r\n            <table class="table table-bordered table-sorting mpn-list-table matlist-table">\r\n                \x3c!--table-striped table-disabled--\x3e\r\n                <thead>\r\n                    <tr style="color: #f1f1f1; background-color: #fff;">\r\n                        <td colspan="10" class="table-header-col1">&nbsp;</td>\r\n                        <td colspan="4">\r\n\r\n                            <div class="display-flex" style="width: 450px;">\r\n                                <div class="form-group" style="text-align: center; display: flex;margin-bottom: 0px;">\r\n                                    <p-radioButton class="p-radiobutton-label-horizontal p-radiobutton-label-w92"\r\n                                                   name="costPlusType"\r\n                                                   label="T&M - Mark Up"\r\n                                                   value="1"\r\n                                                   [(ngModel)]="costPlusType"\r\n                                                   [disabled]="isView || isViewForApprovedPart"\r\n                                                   (click)="(!isView)?tmchange():\'\'"></p-radioButton>\r\n                                    <div>\r\n                                        <select class="form-control select-markup" (change)="markupChanged({}, \'all\')" [(ngModel)]="overAllMarkup" [disabled]="isView || costPlusType != 1 || isViewForApprovedPart" style="margin-top: 10px;">\r\n                                            <option value="">Select</option>\r\n                                            <option *ngFor="let markUp of markupList" [value]="markUp.value">{{markUp.label}}</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                                <div style="margin-bottom: 10px; margin-left: 30px;margin-right: 30px;">\r\n                                    <p-radioButton class="p-radiobutton-label-horizontal"\r\n                                                   name="costPlusType"\r\n                                                   value="2"\r\n                                                   label="Actual"\r\n                                                   [(ngModel)]="costPlusType"\r\n                                                   [disabled]="isView || isViewForApprovedPart"\r\n                                                   (click)="(!isView)?tmchange():\'\'"></p-radioButton>\r\n                                </div>\r\n                                <div>\r\n                                    <p-radioButton class="p-radiobutton-label-horizontal" name="costPlusType"\r\n                                                   value="3" label="Flat Rate" [(ngModel)]="costPlusType" [disabled]="isView || isViewForApprovedPart" (click)="(!isView)?tmchange():\'\'">\r\n                                    </p-radioButton>\r\n                                </div>\r\n                            </div>\r\n                        </td>\r\n                        <td style="background: #fff; border: 1px solid #fff;"></td>\r\n                        \x3c!-- <td colspan="3">\r\n                          <div>\r\n                            <p-radioButton\r\n                              class="p-radiobutton-label-horizontal col-width p-radio-custom"\r\n                              name="costPlusType"\r\n                              value="Fixed Mat Price"\r\n                              label="Fixed Mat Price"\r\n                              [(ngModel)]="costPlusType"\r\n                              [disabled]="isView"\r\n                            ></p-radioButton>\r\n                          </div>\r\n                        </td> --\x3e\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Task</th>\r\n                        <th>PN</th> \x3c!--MC PN--\x3e\r\n                        <th>PN Description</th> \x3c!--MC Description--\x3e\r\n                        \x3c!-- <th>QTE/WO/WF/SL/M</th> --\x3e\r\n                        \x3c!-- <th>REF</th> --\x3e\r\n                        <th>Provision</th>\r\n                        <th>Qty</th>\r\n                        <th>UOM</th>\r\n                        <th>Cond Type</th>\r\n                        <th>Stock Type</th>\r\n                        <th>Unit Cost</th>\r\n                        <th>Total Part Cost</th>\r\n                        <th>Billing Method</th>\r\n                        <th>Mark Up</th>\r\n                        <th>\r\n                            Billing Rate\r\n                        </th>\r\n                        <th>\r\n                            Billing Amount\r\n                        </th>\r\n                        <th style="min-width: 60px;" *ngIf="!isView && !isViewForApprovedPart">Actions</th>\r\n                        \x3c!-- <th *ngIf="!isView"></th> --\x3e\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <ng-container *ngFor="let mData of materialListQuotation; let mainIndex=index;">\r\n                        <ng-container *ngFor="let matQuotation of mData; let subIndex=index">\r\n                            <tr class="mpn-row" *ngIf="!matQuotation[\'isDeleted\']">\r\n                                <td>\r\n                                    <select class="form-control wf-pub-id select-read-only" [(ngModel)]="matQuotation.taskId" [disabled]="isView || isViewForApprovedPart" disabled>\r\n                                        <option value="">Select</option>\r\n                                        <option *ngFor="let task of taskList" [value]="task.taskId">{{task.description}}</option>\r\n                                    </select>\r\n                                </td>\r\n                                <td><div style="min-width: 100px;">{{matQuotation.partNumber}}</div></td>\r\n                                <td>{{matQuotation.partDescription}}</td>\r\n                                \x3c!-- <td>{{matQuotation.partDescription}}</td>\r\n                                <td>{{matQuotation.partDescription}}</td> --\x3e\r\n                                <td>{{matQuotation.provision}}</td>\r\n                                <td class="content-to-end">{{matQuotation.quantity}}</td>\r\n                                <td>\r\n                                    <select class="form-control wf-pub-id select-read-only" [(ngModel)]="matQuotation.unitOfMeasureId" disabled>\r\n                                        <option value="">Select</option>\r\n                                        <option *ngFor="let uom of unitOfMeasuresList" [value]="uom.unitOfMeasureId">{{uom.description}}</option>\r\n                                    </select>\r\n                                </td>\r\n                                <td>\r\n                                    <select class="form-control wf-pub-id select-read-only" [(ngModel)]="matQuotation.conditionCodeId" disabled>\r\n                                        <option value="">Select</option>\r\n                                        <option *ngFor="let condition of conditions" [value]="condition.conditionId">{{condition.description}}</option>\r\n                                    </select>\r\n                                </td>\r\n                                <td>{{matQuotation.stockType}}</td>\r\n                                <td class="content-to-end">{{formateCurrency(matQuotation.unitCost)}}</td>\r\n                                <td class="content-to-end">{{formateCurrency((matQuotation.quantity * matQuotation.unitCost).toFixed(2))}}</td>\r\n                                <td>\r\n                                    <select class="form-control" [(ngModel)]="matQuotation.billingMethodId" style="width: 130px;" [disabled]="isView || costPlusType == 3 || isViewForApprovedPart">\r\n                                        <option value="">Select</option>\r\n                                        <option *ngFor="let bm of [{\'label\': \'T&M\', \'value\': \'1\'}, {\'label\': \'Actual\', \'value\': \'2\'}]" [value]="bm.value">{{bm.label}}</option>\r\n                                    </select>\r\n                                </td>\r\n                                <td>\r\n                                    <select class="form-control wf-pub-id select-markup" (change)="markupChanged(matQuotation, \'row\')" [(ngModel)]="matQuotation.markupPercentageId" [disabled]="isView || matQuotation.billingMethodId != \'1\' || isViewForApprovedPart">\r\n                                        <option value="">Select</option>\r\n                                        <option *ngFor="let markUp of markupList" [value]="markUp.value">{{markUp.label}}</option>\r\n                                    </select>\r\n                                </td>\r\n                                <td class="content-to-end">{{ formateCurrency(matQuotation.billingRate) }}</td>\r\n                                <td>\r\n                                    <input type="text" pInputText pKeyFilter="money" class="form-control text-right" value="{{formateCurrency(matQuotation.billingAmount)}}" [(ngModel)]="matQuotation.billingAmount" [disabled]="isView || matQuotation.billingMethodId != 2 || isViewForApprovedPart" (change)="matQuotation.billingAmount = formateCurrency(parseToInt(matQuotation.billingAmount.toString().split(\',\').join(\'\')))" />\r\n                                </td>\r\n                                <td *ngIf="!isView">\r\n                                    <span data-target="#addNewMaterials" data-toggle="modal"><a class="btn nobg btn-edit-cstm" (click)="editMaterialList(matQuotation)" matTooltip="Edit" matTooltipPosition="above"><i class="fa fa-pencil"></i></a> </span>\r\n                                    <span><a data-toggle="modal" data-target="#deleteRowConfirmation" class="btn nobg btn-delete-cstm" (click)="deleteMemoConfirmation(mainIndex, subIndex)" matTooltip="Delete" matTooltipPosition="above"><i class="fa fa-trash"></i></a> </span>\r\n                                </td>\r\n                                \x3c!-- <td *ngIf="!isView">\r\n                                    <button\r\n                                      class="btn-edit ptable-wo-btns"\r\n                                      mat-icon-button\r\n                                      data-target="#addNewMaterials"\r\n                                      data-toggle="modal"\r\n                                      (click)="editMaterialList(matQuotation)"\r\n                                      matTooltip="Edit"\r\n                                    >\r\n                                      <mat-icon>edit</mat-icon>\r\n                                    </button>\r\n                                </td>\r\n                                <td *ngIf="!isView">\r\n                                    <button\r\n                                      class="btn-delete ptable-wo-btns"\r\n                                      mat-icon-button\r\n                                      matTooltip="Delete"\r\n                                      (click)="deleteMaterialList(mainIndex, subIndex)"\r\n                                    >\r\n                                      <mat-icon color="warn">delete</mat-icon>\r\n                                    </button>\r\n                                </td> --\x3e\r\n                            </tr>\r\n                        </ng-container>\r\n                        <tr class="task-total">\r\n                            <td style="padding: 4px;">\r\n                                Total ({{mData[0].taskName}})\r\n                            </td>\r\n                            <td>&nbsp;</td>\r\n                            <td>&nbsp;</td>\r\n                            \x3c!-- <td>&nbsp;</td>\r\n                            <td>&nbsp;</td> --\x3e\r\n                            <td>&nbsp;</td>\r\n                            <td class="content-to-end">{{getTotalTaskQuantity(mData)}}</td>\r\n                            <td>&nbsp;</td>\r\n                            <td>&nbsp;</td>\r\n                            <td>&nbsp;</td>\r\n                            <td>&nbsp;</td>\r\n                            <td class="content-to-end">{{ formateCurrency(getTotalTaskUnitCost(mData)) }}</td>\r\n                            <td>&nbsp;</td>\r\n                            <td>&nbsp;</td>\r\n                            <td>&nbsp;</td>\r\n                            <td class="content-to-end">{{ formateCurrency(totalTaskMaterialBillingAmount(mData))}}</td>\r\n                            <td *ngIf="!isView && !isViewForApprovedPart"></td>\r\n                            \x3c!-- <td *ngIf="!isView"></td> --\x3e\r\n                        </tr>\r\n                    </ng-container>\r\n                </tbody>\r\n                <tfoot>\r\n                    <tr class="footer">\r\n                        <td style="padding: 4px;">\r\n                            <b>Total</b>\r\n                        </td>\r\n                        <td>&nbsp;</td>\r\n                        <td>&nbsp;</td>\r\n                        \x3c!-- <td>&nbsp;</td>\r\n                        <td>&nbsp;</td> --\x3e\r\n                        <td>&nbsp;</td>\r\n                        <td class="content-to-end"><b>{{getTotalQuantity()}}</b></td>\r\n                        <td>&nbsp;</td>\r\n                        <td>&nbsp;</td>\r\n                        <td>&nbsp;</td>\r\n                        <td>&nbsp;</td>\r\n                        <td class="content-to-end"><b>{{ formateCurrency(getTotalUnitCost()) }}</b></td>\r\n                        <td>&nbsp;</td>\r\n                        <td>&nbsp;</td>\r\n                        <td>&nbsp;</td>\r\n                        <ng-container *ngIf="costPlusType != 3">\r\n                            <td class="content-to-end"><b>{{ formateCurrency(totalMaterialBillingAmount()) }}</b></td>\r\n                        </ng-container>\r\n                        <ng-container *ngIf="costPlusType == 3">\r\n                            <td>\r\n                                <input type="number" class="form-control font-weight-bold" [(ngModel)]="materialFlatBillingAmount" (change)="materialFlatBillingAmount = parseToInt(materialFlatBillingAmount.toString().split(\',\').join(\'\')).toFixed(2)" [disabled]="isView" />\r\n                            </td>\r\n                        </ng-container>\r\n                        <td *ngIf="!isView && !isViewForApprovedPart"></td>\r\n                        \x3c!-- <td *ngIf="!isView"></td> --\x3e\r\n                    </tr>\r\n                </tfoot>\r\n            </table>\r\n        </div>\r\n\r\n    </div>\r\n    <div>\r\n        <ng-container *ngIf="gridActiveTab === \'materialList\'">\r\n            <button class="btn btn-primary pull-right" (click)="createMaterialQuote()" *ngIf="!isView && !isViewForApprovedPart " style="margin-top: 10px; margin-bottom: 10px;">Save Material List</button>\r\n        </ng-container>\r\n    </div>\r\n\r\n    <div class="table-responsive" *ngIf="gridActiveTab === \'exclusions\'">\r\n        <div *ngIf="!isView && !isViewForApprovedPart">\r\n            <button data-target="#addNewExclusions"\r\n                    data-toggle="modal"\r\n                    (click)="createNew(\'add\')"\r\n                    class="btn btn-primary"\r\n                    style="margin-left: 6px  ;">\r\n                Add Exclusions\r\n            </button>\r\n        </div>\r\n        <app-work-order-exclusions [workFlowObject]="workFlowObject"\r\n                                   [isWorkOrder]="isWorkOrder"\r\n                                   [workOrderExclusionsList]="workOrderExclusionsList"\r\n                                   (saveExclusionsListForWO)="saveWorkOrderExclusionsList($event)"\r\n                                   (updateExclusionsListForWO)="updateWorkOrderExclusionsList($event)"\r\n                                   [markupList]="markupList"\r\n                                   (refreshData)="getExclusionListByWorkOrderId()"\r\n                                   [isQuote]="isQuote"\r\n                                   [isView]="isView || isViewForApprovedPart"\r\n                                   [taskList]="taskList"\r\n                                   [addNewExclusion]="fromquote"></app-work-order-exclusions>\r\n\r\n    </div>\r\n    <div class="wf-label-cstm" *ngIf="gridActiveTab === \'freight\'">\r\n        <app-work-order-freight [freightForm]="freight"\r\n                                [isQuote]="isQuote"\r\n                                [workOrderFreightList]="workOrderFreightList"\r\n                                [savedWorkOrderData]="savedWorkOrderData"\r\n                                (saveFreightListForWO)="saveWorkOrderFreightsList($event)"\r\n                                (updateFreightListForWo)="updateWorkOrderFreightsList($event)"\r\n                                (refreshData)="getFreightListByWorkOrderId()"\r\n                                [taskList]="taskList"\r\n                                [markupList]="markupList"\r\n                                [isView]="isView || isViewForApprovedPart"\r\n                                [buildMethodDetails]="buildMethodDetails"></app-work-order-freight>\r\n    </div>\r\n\r\n    <div class="table-responsive" *ngIf="gridActiveTab === \'labor\'">\r\n        <app-work-order-labor [taskList]="taskList" [laborForm]="labor" [workOrderLaborList]="workOrderLaborList" [workOrderWorkFlowOriginalData]="workOrderWorkFlowOriginalData" [savedWorkOrderData]="savedWorkOrderData"\r\n                              (saveworkOrderLabor)="saveworkOrderLabor($event)" [isQuote]="isQuote" [markupList]="markupList" [isView]="isView || isViewForApprovedPart" [isEdit]="isEdit" [employeesOriginalData]="employeeList" [buildMethodDetails]="buildMethodDetails"\r\n                              [selectedPartNumber]="selectedPartNumber"></app-work-order-labor>\r\n\r\n    </div>\r\n\r\n    <div class="table-responsive" *ngIf="gridActiveTab === \'charges\' && workOrderChargesList">\r\n        <div *ngIf="!isView">\r\n            <button data-target="#addNewCharges"\r\n                    data-toggle="modal"\r\n                    (click)="createNew(\'add\')"\r\n                    class="btn-primary"\r\n                    style="margin-left: 6px; margin-bottom: -8px;">\r\n                Add Charges\r\n            </button>\r\n        </div>\r\n        <app-work-order-charges [workFlowObject]="workFlowObject"\r\n                                isWorkOrder="false"\r\n                                [workOrderChargesList]="workOrderChargesList"\r\n                                (saveChargesListForWO)="saveWorkOrderChargesList($event)"\r\n                                (updateChargesListForWO)="updateWorkOrderChargesList($event)"\r\n                                (createQuote)="createChargeQuote($event)"\r\n                                (refreshData)="getChargesListByWorkOrderId()"\r\n                                [isQuote]="isQuote"\r\n                                [markupList]="markupList"\r\n                                [isView]="isView || isViewForApprovedPart"\r\n                                [taskList]="taskList"\r\n                                [fromquote]="fromquote"\r\n                                [buildMethodDetails]="buildMethodDetails"></app-work-order-charges>\r\n    </div>\r\n\r\n\r\n    <div class="modal fade " id="viewcustomerDetailsinQuote" role="dialog" data-backdrop="static">\r\n        <div class="modal-dialog modal-xl">\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <button type="button" class="close" data-dismiss="modal" id="" name="">\xd7</button>\r\n                    <h4 class="modal-title">Details of Customer "Shabbir Ahmad"</h4>\r\n                </div>\r\n                <div class="modal-body viewform">\r\n                    <div id="adminsearchlocationajax" class="table-responsive default-bg clear">\r\n                        <a href="#" class="btn btn-primary openall">open all</a> <a href="#" class="btn btn-warning closeall">close all</a>\r\n                        <hr>\r\n                        <div class="panel-group" id="accordion">\r\n                            <div class="panel panel-default">\r\n                                <div class="panel-heading">\r\n                                    <h4 class="panel-title"> <a data-toggle="collapse" href="#step1" aria-expanded="true" aria-controls="receive">General Information</a> </h4>\r\n                                </div>\r\n                                <div id="step1" class="panel-collapse collapse in">\r\n                                    <div class="panel-body">\r\n                                        <div class="col-sm-6">\r\n                                            <p><span class="label"><b>User Name: </b></span><span class="value">sha123</span></p>\r\n                                            <p><span class="label"><b>Customer Name: </b></span><span class="value">Shabbir Ahmad</span></p>\r\n                                            <p><span class="label"><b>Customer Code: </b></span><span class="value">Cust546</span></p>\r\n                                            <p><span class="label"><b>Internal/External: </b></span><span class="value">Internal</span></p>\r\n                                            <p><span class="label"><b>d/b/a: </b></span><span class="value">d/b/a</span></p>\r\n                                            <p><span class="label"><b>Parent: </b></span><span class="value">Silverxis</span></p>\r\n                                            <p><span class="label"><b>Address 1: </b></span><span class="value">10656 S De Anza Blvd, Suite 859</span></p>\r\n                                            <p><span class="label"><b>Address 2: </b></span><span class="value">23658 Paseo Padre Pkwy, Suite 528</span></p>\r\n                                            <p><span class="label"><b>Address 3: </b></span><span class="value">85698 Decoto Road, Suite 459</span></p>\r\n                                            <p><span class="label"><b>City: </b></span><span class="value">Cupertino</span></p>\r\n                                            <p><span class="label"><b>State/Province: </b></span><span class="value">CA</span></p>\r\n                                            <p><span class="label"><b>Postal: </b></span><span class="value">95014</span></p>\r\n                                            <p><span class="label"><b>Country: </b></span><span class="value">USA</span></p>\r\n                                            <p><span class="label"><b>Email: </b></span><span class="value">mshabbir5007@gmail.com</span></p>\r\n                                        </div>\r\n                                        <div class="col-sm-6">\r\n                                            <p><span class="label"><b>Core Due In: </b></span><span class="value">52 Days</span></p>\r\n                                            <p><span class="label"><b>Classification: </b></span><span class="value">Commercial</span></p>\r\n                                            <p><span class="label"><b>Contract Ref: </b></span><span class="value">Shabbir</span></p>\r\n                                            <p><span class="label"><b>PBH Customer: </b></span><span class="value">PBH Customer Memo (If not checked this field is hidden)</span></p>\r\n                                            <p><span class="label"><b>Restrict PMA: </b></span><span class="value">Restrict PMA Memo (If not checked this field is hidden)</span></p>\r\n                                            <p><span class="label"><b>Integration: </b></span><span class="value">ILS</span></p>\r\n                                            <p><span class="label"><b>URL to Customer site: </b></span><span class="value">https://www.google.co.in/</span></p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="panel panel-default">\r\n                                <div class="panel-heading">\r\n                                    <h4 class="panel-title"> <a class="collapsed" data-toggle="collapse" href="#step2">Contact</a> </h4>\r\n                                </div>\r\n                                <div id="step2" class="panel-collapse collapse">\r\n                                    <div class="panel-body">\r\n                                        <div class="table-responsive">\r\n                                            <table class="table table-bordered">\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th>UID</th>\r\n                                                        <th>Name</th>\r\n                                                        <th>Title</th>\r\n                                                        <th>Work Phone</th>\r\n                                                        <th>Email</th>\r\n                                                        <th>Mobile Phone</th>\r\n                                                        <th>Alt. Mobile Phone</th>\r\n                                                        <th>Website</th>\r\n                                                        <th>Fax</th>\r\n                                                        <th>Memo</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    <tr>\r\n                                                        <td>1</td>\r\n                                                        <td>Donald Budhu </td>\r\n                                                        <td>Aerospace Vendor</td>\r\n                                                        <td>653-258-8960</td>\r\n                                                        <td>donaldbudhu@gmail.com</td>\r\n                                                        <td>589-678-5412</td>\r\n                                                        <td>985-687-4523</td>\r\n                                                        <td>pas.com</td>\r\n                                                        <td>589-678</td>\r\n                                                        <td>This Testing UI</td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="panel panel-default">\r\n                                <div class="panel-heading">\r\n                                    <h4 class="panel-title"> <a class="collapsed" data-toggle="collapse" href="#step3">Aircraft Information</a> </h4>\r\n                                </div>\r\n                                <div id="step3" class="panel-collapse collapse">\r\n                                    <div class="panel-body">\r\n                                        <div class="table-responsive">\r\n                                            <h6>Dash Numbers</h6>\r\n                                            <table class="table table-bordered">\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th>ID</th>\r\n                                                        <th>Aircraft</th>\r\n                                                        <th>Model</th>\r\n                                                        <th>Dash Numbers</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    <tr>\r\n                                                        <td>1</td>\r\n                                                        <td>Airbus</td>\r\n                                                        <td>A767</td>\r\n                                                        <td>333</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td>2</td>\r\n                                                        <td>Airbus</td>\r\n                                                        <td>A767</td>\r\n                                                        <td>444</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td>3</td>\r\n                                                        <td>Airbus</td>\r\n                                                        <td>A767</td>\r\n                                                        <td>555</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td>4</td>\r\n                                                        <td>Airbus</td>\r\n                                                        <td>A767</td>\r\n                                                        <td>666</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td>5</td>\r\n                                                        <td>Airbus</td>\r\n                                                        <td>A768</td>\r\n                                                        <td>333</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td>6</td>\r\n                                                        <td>Airbus</td>\r\n                                                        <td>A768</td>\r\n                                                        <td>777</td>\r\n                                                    </tr>\r\n\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                        <div class="table-responsive">\r\n                                            <h6>ATA Chapters</h6>\r\n                                            <table class="table table-bordered">\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th>ID</th>\r\n                                                        <th>ATA Chapter</th>\r\n                                                        <th>ATA Sub-Chapter</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    <tr>\r\n                                                        <td>1</td>\r\n                                                        <td>MAINTENANCE POLICY</td>\r\n                                                        <td>Sub SUPPORT</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td>2</td>\r\n                                                        <td>SUPPORT</td>\r\n                                                        <td>Sub SUPPORT</td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="panel panel-default">\r\n                                <div class="panel-heading">\r\n                                    <h4 class="panel-title"> <a class="collapsed" data-toggle="collapse" href="#step4">Financial Information</a> </h4>\r\n                                </div>\r\n                                <div id="step4" class="panel-collapse collapse">\r\n                                    <div class="panel-body">\r\n                                        <div class="col-sm-6">\r\n                                            <p><span class="label"><b>MarkUp %: </b></span><span class="value">10 %</span></p>\r\n                                            <p><span class="label"><b>Credit Limit:: </b></span><span class="value">10</span></p>\r\n                                            <p><span class="label"><b>Credit Terms: </b></span><span class="value">Net 30</span></p>\r\n                                           \x3c!-- <p><span class="label"><b>Allow Netting of AP/AR: </b></span><span class="value">Yes</span></p>--\x3e\r\n                                            <p><span class="label"><b>Taxable Exempt: </b></span><span class="value">Yes</span></p>\r\n                                            <p><span class="label"><b>Tax Rate - State/Prov: </b></span><span class="value">8%</span></p>\r\n                                            <p><span class="label"><b>Tax Rate - Other: </b></span><span class="value">25</span></p>\r\n                                        </div>\r\n                                        <div class="col-sm-6">\r\n                                            <p><span class="label"><b>EDI: </b></span><span class="value">EDI</span></p>\r\n                                            <p><span class="label"><b>Deferred PO: </b></span><span class="value">Yes</span></p>\r\n                                            <p><span class="label"><b>Deferred RO: </b></span><span class="value">No</span></p>\r\n                                            <p><span class="label"><b>Currency: </b></span><span class="value">US Dollar</span></p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="panel panel-default">\r\n                                <div class="panel-heading">\r\n                                    <h4 class="panel-title"> <a class="collapsed" data-toggle="collapse" href="#step5">Billing Information</a> </h4>\r\n                                </div>\r\n                                <div id="step5" class="panel-collapse collapse">\r\n                                    <div class="panel-body">\r\n                                        <div class="table-responsive">\r\n                                            <table class="table table-bordered">\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th>UID</th>\r\n                                                        <th>Address 1</th>\r\n                                                        <th>Address 2</th>\r\n                                                        <th>Address 3</th>\r\n                                                        <th>City</th>\r\n                                                        <th>State/Prov</th>\r\n                                                        <th>Postal Code</th>\r\n                                                        <th>Country</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    <tr>\r\n                                                        <td>1</td>\r\n                                                        <td>10656 S De Anza Blvd, Suite 859 </td>\r\n                                                        <td>23658 Paseo Padre Pkwy, Suite 528 </td>\r\n                                                        <td>85698 Decoto Road, Suite 459</td>\r\n                                                        <td>Cupertino</td>\r\n                                                        <td>CA</td>\r\n                                                        <td>95014</td>\r\n                                                        <td>USA</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td>2</td>\r\n                                                        <td>438 Cherry Hill Road </td>\r\n                                                        <td>8996 X Eisenhower PkwyAnn Arbor</td>\r\n                                                        <td>4692 Woodward Ave. Ste 680</td>\r\n                                                        <td>Bloomfield Hills</td>\r\n                                                        <td>MI</td>\r\n                                                        <td>48302</td>\r\n                                                        <td>Canada</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td>3</td>\r\n                                                        <td>852 Research Blvd Suite C#105</td>\r\n                                                        <td>12678 W Hebron Pkwy Suite C#1089</td>\r\n                                                        <td>8596 Fry Rd Suite C5-300</td>\r\n                                                        <td>Austin</td>\r\n                                                        <td>TX</td>\r\n                                                        <td>78759</td>\r\n                                                        <td>UK</td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="panel panel-default">\r\n                                <div class="panel-heading">\r\n                                    <h4 class="panel-title"> <a class="collapsed" data-toggle="collapse" href="#step6">Shipping Information</a> </h4>\r\n                                </div>\r\n                                <div id="step6" class="panel-collapse collapse">\r\n                                    <div class="panel-body">\r\n                                        <div class="table-responsive">\r\n                                            <table class="table table-bordered">\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th>UID</th>\r\n                                                        <th>Site Name</th>\r\n                                                        <th>Address 1</th>\r\n                                                        <th>Address 2</th>\r\n                                                        <th>Address 3</th>\r\n                                                        <th>City</th>\r\n                                                        <th>State/Prov</th>\r\n                                                        <th>PostalCode</th>\r\n                                                        <th>Country</th>\r\n                                                        <th>Ship Via</th>\r\n                                                        <th>Shipping ID</th>\r\n                                                        <th>Shipping URL</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    <tr>\r\n                                                        <td>1</td>\r\n                                                        <td>AOX</td>\r\n                                                        <td>10656 S De Anza Blvd, Suite 859 </td>\r\n                                                        <td>23658 Paseo Padre Pkwy, Suite 528 </td>\r\n                                                        <td>85698 Decoto Road, Suite 459</td>\r\n                                                        <td>Cupertino</td>\r\n                                                        <td>CA</td>\r\n                                                        <td>95014</td>\r\n                                                        <td>USA</td>\r\n                                                        <td>Fed Ex</td>\r\n                                                        <td>UHJ9990</td>\r\n                                                        <td>www.fedex.com/ship</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td>2</td>\r\n                                                        <td>AOX</td>\r\n                                                        <td>438 Cherry Hill Road </td>\r\n                                                        <td>8996 X Eisenhower PkwyAnn Arbor</td>\r\n                                                        <td>4692 Woodward Ave. Ste 680</td>\r\n                                                        <td>Bloomfield Hills</td>\r\n                                                        <td>MI</td>\r\n                                                        <td>48302</td>\r\n                                                        <td>Canada</td>\r\n                                                        <td>Fed Ex</td>\r\n                                                        <td>UHJ478001</td>\r\n                                                        <td>www.fedex.com/ship</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td>3</td>\r\n                                                        <td>AOX</td>\r\n                                                        <td>852 Research Blvd Suite C#105</td>\r\n                                                        <td>12678 W Hebron Pkwy Suite C#1089</td>\r\n                                                        <td>8596 Fry Rd Suite C5-300</td>\r\n                                                        <td>Austin</td>\r\n                                                        <td>TX</td>\r\n                                                        <td>78759</td>\r\n                                                        <td>UK</td>\r\n                                                        <td>Fed Ex</td>\r\n                                                        <td>UHJ58756</td>\r\n                                                        <td>www.fedex.com/ship</td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="panel panel-default">\r\n                                <div class="panel-heading">\r\n                                    <h4 class="panel-title"> <a class="collapsed" data-toggle="collapse" href="#step7">Sales Person/Agent Information</a> </h4>\r\n                                </div>\r\n                                <div id="step7" class="panel-collapse collapse">\r\n                                    <div class="panel-body">\r\n                                        <div class="col-sm-10">\r\n                                            <p><span class="label"><b>Primary Sales Person Name: </b></span><span class="value">Shabbir Ahmad</span></p>\r\n                                            <p><span class="label"><b>Secondary Sales Person Name: </b></span><span class="value">Donald</span></p>\r\n                                            <p><span class="label"><b>CSR Name: </b></span><span class="value">Roger</span></p>\r\n                                            <p><span class="label"><b>Agent Name: </b></span><span class="value">Prasad</span></p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="panel panel-default">\r\n                                <div class="panel-heading">\r\n                                    <h4 class="panel-title"> <a class="collapsed" data-toggle="collapse" href="#step8">International Shipping Info</a> </h4>\r\n                                </div>\r\n                                <div id="step8" class="panel-collapse collapse">\r\n                                    <div class="panel-body">\r\n                                        <div class="col-sm-10">\r\n                                            <p><span class="label"><b>Export License Required: </b></span><span class="value">125468254</span></p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button type="button" class="btn btn-info" data-dismiss="modal" id="" name="">Close</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class="modal fade" id="memo-popup" role="dialog"\r\n    data-backdrop="static">\r\n     <div class="modal-dialog modal-sm">\r\n       <div class="modal-content">\r\n         <div class="modal-header">\r\n           <button type="button" class="close" \r\n           data-dismiss="modal">&times;</button>\r\n           <h4 class="modal-title">Edit Memo</h4>\r\n         </div>\r\n         <div class="modal-body">\r\n           <table class="table table-bordered table-fixed workflow-table-material">\r\n             <thead>\r\n               <th style="color: #fff;">Memo</th>\r\n             </thead>\r\n             <tbody>\r\n               <tr>\r\n                 <td>\r\n                   <p-editor [(ngModel)]="memoPopupContent" [style]="{\'height\':\'320px\'}"\r\n                    name="memoPopupContent" required></p-editor>\r\n                 </td>\r\n               </tr>\r\n             </tbody>\r\n           </table>\r\n           <div style="float:right">\r\n             <button type="button" class="btn btn-primary" \r\n             style="padding: 6px 12px !important;margin-top: 10px;" data-dismiss="modal" (click)="saveApprovalMemo(memoPopupContent)">\r\n               Save\r\n             </button>\r\n             <button type="button" class="btn btn-danger" style="padding: 6px 12px !important;margin-top: 10px;" data-dismiss="modal">\r\n               Close\r\n             </button>\r\n           </div>\r\n         </div>\r\n    </div>\r\n     </div>\r\n   </div>\r\n\r\n\r\n    <div id="addNewMaterials" class="modal fade" role="dialog" data-backdrop="static">\r\n        <div class="modal-dialog modal-xl">\r\n\r\n            \x3c!-- Modal content--\x3e\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <button type="button" class="close" data-dismiss="modal" (click)="editMatData = [];">&times;</button>\r\n                    <h4 class="modal-title">{{(editMatData.length>0)?\'Edit\':\'Add\'}} Material</h4>\r\n                </div>\r\n                <div class="modal-body">\r\n                    <grd-material [isEdit]="editMatData.length>0"\r\n                                  [editData]="editMatData"\r\n                                  [isWorkOrder]="isWorkOrder"\r\n                                  [workFlow]="workFlowObject"\r\n                                  [markupList]="markupList"\r\n                                  [isQuote]="isQuote"\r\n                                  [taskList]="taskList"\r\n                                  (saveMaterialListForWO)="saveMaterialListForWO($event)"\r\n                                  [mpnPartNumbersList]="mpnPartNumbersList"\r\n                                  [unitOfMeasuresList]="unitOfMeasuresList"\r\n                                  [percentageListFromSource]="markupList"\r\n                                  [conditionsListFromSource]="conditions"\r\n                                  [isView]="isView || isViewForApprovedPart"></grd-material>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n\r\n    <div id="addNewCharges" class="modal fade" role="dialog" data-backdrop="static">\r\n        <div class="modal-dialog modal-xl">\r\n            \x3c!-- Modal content--\x3e\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <button type="button" class="close" data-dismiss="modal">\r\n                        &times;\r\n                    </button>\r\n                    <h4 class="modal-title">Charges</h4>\r\n                </div>\r\n                <div class="modal-body">\r\n                    <grd-charges *ngIf="!isEdit"\r\n                                 [workFlow]="workFlowObject"\r\n                                 [isWorkOrder]="isWorkOrder"\r\n                                 [isQuote]="isQuote"\r\n                                 [markupList]="markupList"\r\n                                 (saveChargesListForWO)="saveWorkOrderChargesList($event)"></grd-charges>\r\n\r\n                    <grd-charges *ngIf="isEdit && editData"\r\n                                 [isEdit]="isEdit"\r\n                                 [editData]="editData"\r\n                                 [workFlow]="workFlowObject"\r\n                                 [isWorkOrder]="isWorkOrder"\r\n                                 [markupList]="markupList"\r\n                                 [isQuote]="isQuote"\r\n                                 (updateChargesListForWO)="updateWorkOrderChargesList($event)"></grd-charges>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div id="addNewExclusions"\r\n         class="modal fade"\r\n         role="dialog"\r\n         data-backdrop="static">\r\n        <div class="modal-dialog modal-xl">\r\n            \x3c!-- Modal content--\x3e\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <button type="button" class="close" data-dismiss="modal">\r\n                        &times;\r\n                    </button>\r\n                    <h4 class="modal-title">Exclusions</h4>\r\n                </div>\r\n                <div class="modal-body">\r\n                    <grd-exclusions *ngIf="!isEdit"\r\n                                    [isQuote]="isQuote"\r\n                                    [workFlow]="workFlowObject"\r\n                                    [isWorkOrder]="isWorkOrder"\r\n                                    [markupList]="markupList"\r\n                                    [taskList]="taskList"\r\n                                    (saveExclusionsListForWO)="saveExclusionsList($event)">\r\n                    </grd-exclusions>\r\n\r\n                    <grd-exclusions *ngIf="isEdit && editData"\r\n                                    [isQuote]="isQuote"\r\n                                    [isEdit]="isEdit"\r\n                                    [editData]="editData"\r\n                                    [workFlow]="workFlowObject"\r\n                                    [isWorkOrder]="isWorkOrder"\r\n                                    [markupList]="markupList"\r\n                                    [taskList]="taskList"\r\n                                    (updateExclusionsListForWO)="updateExclusionsList($event)">\r\n                    </grd-exclusions>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div id="addNewFreight"\r\n         class="modal fade"\r\n         role="dialog"\r\n         data-backdrop="static">\r\n        <div class="modal-dialog modal-xl">\r\n            \x3c!-- Modal content--\x3e\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <button type="button" class="close" data-dismiss="modal">\r\n                        &times;\r\n                    </button>\r\n                    <h4 class="modal-title">Freight</h4>\r\n                </div>\r\n                <div class="modal-body">\r\n                    <grd-exclusions *ngIf="!isEdit"\r\n                                    [isQuote]="isQuote"\r\n                                    [workFlow]="workFlowObject"\r\n                                    [isWorkOrder]="isWorkOrder"\r\n                                    [markupList]="markupList"\r\n                                    [taskList]="taskList"\r\n                                    (saveExclusionsListForWO)="saveExclusionsList($event)">\r\n                    </grd-exclusions>\r\n\r\n                    <grd-exclusions *ngIf="isEdit && editData"\r\n                                    [isQuote]="isQuote"\r\n                                    [isEdit]="isEdit"\r\n                                    [editData]="editData"\r\n                                    [workFlow]="workFlowObject"\r\n                                    [isWorkOrder]="isWorkOrder"\r\n                                    [markupList]="markupList"\r\n                                    [taskList]="taskList"\r\n                                    (updateExclusionsListForWO)="updateExclusionsList($event)">\r\n                    </grd-exclusions>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div id="showHistoricalWorkOrder"\r\n         class="modal fade"\r\n         role="dialog"\r\n         data-backdrop="static">\r\n        <div class="modal-dialog modal-xl">\r\n            \x3c!-- Modal content--\x3e\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <button type="button" class="close" (click)="hideModal(\'showHistoricalWorkOrder\')">\r\n                        &times;\r\n                    </button>\r\n                </div>\r\n                <div class="modal-body table-responsive">\r\n                    <div class="form-group" style="color: red; font-size: 20px;">\r\n                        {{(displayType == \'use historical wos\')?\'List of Historical Workorders for MPN \'+this.selectedPartNumber[\'partNumber\']:\'List of Historical Workorder Quotes for MPN \'+this.selectedPartNumber[\'partNumber\']}}\r\n                    </div>\r\n                    <div class="form-group" style="text-align: center; display: flex;" *ngIf="savedWorkOrderData && savedWorkOrderData.workOrderTypeId == 1">\r\n                        <p-radioButton class="p-radiobutton-label-horizontal"\r\n                                       name="type"\r\n                                       value=1\r\n                                       [label]="quotationHeader.customerName"\r\n                                       [(ngModel)]="type"\r\n                                       (click)="typeChange()"></p-radioButton>\r\n                        <p-radioButton class="p-radiobutton-label-horizontal"\r\n                                       name="type"\r\n                                       label="All"\r\n                                       value=0\r\n                                       [(ngModel)]="type"\r\n                                       (click)="typeChange()"></p-radioButton>\r\n                    </div>\r\n                    \x3c!-- <table class="table table-bordered table-striped table-sorting mpn-list-table table-disabled" *ngIf="displayType == \'use historical wos\'">\r\n                      <thead>\r\n                        <tr>\r\n                          <th>WO Num</th>\r\n                          <th>Cust Name</th>\r\n                          <th>Cust Code</th>\r\n                          <th>WO Type</th>\r\n                          <th>Open Date</th>\r\n                          <th>Promise Date</th>\r\n                          <th>Est. Comp Date</th>\r\n                          <th>Est. Ship Date</th>\r\n                          <th>WO Status</th>\r\n                          <th class="events1"></th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        <tr class="mpn-row" *ngFor="let buildl of buildHistoricalList">\r\n                          <td>{{buildl.workOrderNum}}</td>\r\n                          <td>{{buildl.customerName}}</td>\r\n                          <td>{{buildl.customerCode}}</td>\r\n                          <td>{{buildl.woType}}</td>\r\n                          <td>{{buildl.openDate}}</td>\r\n                          <td>{{buildl.promisedDate}}</td>\r\n                          <td>{{buildl.estimatedCompletionDate}}</td>\r\n                          <td>{{buildl.estimatedShipDate}}</td>\r\n                          <td>Closed</td>\r\n                          <td><span data-toggle="modal" data-target="#historicalWorkOrderView"><a class="btn nobg btn-view-cstm" (click)="selectedHistoricalWorkOrder = buildl.workOrderId" matTooltip="View"><i class="fa fa-eye"></i></a> </span></td>\r\n                        </tr>\r\n                      </tbody>\r\n                    </table> --\x3e\r\n                    \x3c!-- <table class="table table-bordered table-striped table-sorting mpn-list-table table-disabled" *ngIf="displayType == \'historical WO quotes\'">\r\n                      <thead>\r\n                        <tr>\r\n                          <th>Quote Num</th>\r\n                          <th>WO Num</th>\r\n                          <th>Cust Name</th>\r\n                          <th>Cust Code</th>\r\n                          <th>WO Type</th>\r\n                          <th>Open Date</th>\r\n                          <th>Promise Date</th>\r\n                          <th>Est. Comp Date</th>\r\n                          <th>Est. Ship Date</th>\r\n                          <th>Quote Status</th>\r\n                          <th class="events1"></th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        <tr class="mpn-row" *ngFor="let buildl of buildHistoricalList">\r\n                          <td>{{buildl.quoteNumber}}</td>\r\n                          <td>{{buildl.workOrderNum}}</td>\r\n                          <td>{{buildl.customerName}}</td>\r\n                          <td>{{buildl.customerCode}}</td>\r\n                          <td>{{buildl.woType}}</td>\r\n                          <td>{{buildl.openDate}}</td>\r\n                          <td>{{buildl.promisedDate}}</td>\r\n                          <td>{{buildl.estimatedCompletionDate}}</td>\r\n                          <td>{{buildl.estimatedShipDate}}</td>\r\n                          <td>{{buildl.quoteStatus}}</td>\r\n                          <td><span data-toggle="modal" data-target="#historicalWorkOrderView"><a class="btn nobg btn-view-cstm" (click)="selectedHistoricalWorkOrder = buildl.workOrderId" matTooltip="View"><i class="fa fa-eye"></i></a> </span></td>\r\n                        </tr>\r\n                      </tbody>\r\n                    </table> --\x3e\r\n\r\n                    <p-table class="rpo-table-cstm rro-table-cstm pub-ptable-cstm"\r\n                             [columns]="cols"\r\n                             [value]="buildHistoricalList"\r\n                             [paginator]="true"\r\n                             [rows]="10"\r\n                             *ngIf="displayType == \'use historical wos\'">\r\n                        <ng-template pTemplate="header" let-columns>\r\n                            <tr>\r\n                                <th>WO Num</th>\r\n                                <th>Cust Name</th>\r\n                                <th>Cust Code</th>\r\n                                <th>WO Type</th>\r\n                                <th>Open Date</th>\r\n                                <th>Promise Date</th>\r\n                                <th>Est. Comp Date</th>\r\n                                <th>Est. Ship Date</th>\r\n                                <th>WO Status</th>\r\n                                <th class="events1"></th>\r\n                            </tr>\r\n                        </ng-template>\r\n                        <ng-template pTemplate="body" let-rowData let-columns="columns">\r\n                            <tr class="mpn-row">\r\n                                <td>{{rowData.workOrderNum}}</td>\r\n                                <td>{{rowData.customerName}}</td>\r\n                                <td>{{rowData.customerCode}}</td>\r\n                                <td>{{rowData.woType}}</td>\r\n                                <td>{{rowData.openDate  | date: \'MM/dd/yyyy\'}}</td>\r\n                                <td>{{rowData.promisedDate  | date: \'MM/dd/yyyy\'}}</td>\r\n                                <td>{{rowData.estCompletionDate  | date: \'MM/dd/yyyy\'}}</td>\r\n                                <td>{{rowData.estShipDate  | date: \'MM/dd/yyyy\'}}</td>\r\n                                <td>Closed</td>\r\n                                <td><span data-toggle="modal" data-target="#historicalWorkOrderView"><a class="btn nobg btn-view-cstm" (click)="selectedHistoricalWorkOrder = rowData.workOrderId; selectedHistoricalCustomerId = rowData.customerId" matTooltip="View"><i class="fa fa-eye"></i></a> </span></td>\r\n                            </tr>\r\n                        </ng-template>\r\n                    </p-table>\r\n\r\n                    <p-table class="rpo-table-cstm rro-table-cstm pub-ptable-cstm"\r\n                             [columns]="cols"\r\n                             [value]="buildHistoricalList"\r\n                             [paginator]="true"\r\n                             [rows]="10"\r\n                             *ngIf="displayType == \'historical WO quotes\'">\r\n                        <ng-template pTemplate="header" let-columns>\r\n                            <tr>\r\n                                <th>Quote Num</th>\r\n                                <th>WO Num</th>\r\n                                <th>Cust Name</th>\r\n                                <th>Cust Code</th>\r\n                                <th>WO Type</th>\r\n                                <th>Open Date</th>\r\n                                <th>Promise Date</th>\r\n                                <th>Est. Comp Date</th>\r\n                                <th>Est. Ship Date</th>\r\n                                <th>Quote Status</th>\r\n                                <th class="events1"></th>\r\n                            </tr>\r\n                        </ng-template>\r\n                        <ng-template pTemplate="body" let-rowData let-columns="columns">\r\n                            <tr class="mpn-row">\r\n                                <td>{{rowData.quoteNumber}}</td>\r\n                                <td>{{rowData.workOrderNum}}</td>\r\n                                <td>{{rowData.customerName}}</td>\r\n                                <td>{{rowData.customerCode}}</td>\r\n                                <td>{{rowData.woType}}</td>\r\n                                <td>{{rowData.openDate  | date: \'MM/dd/yyyy\'}}</td>\r\n                                <td>{{rowData.promisedDate  | date: \'MM/dd/yyyy\'}}</td>\r\n                                <td>{{rowData.estCompletionDate  | date: \'MM/dd/yyyy\'}}</td>\r\n                                <td>{{rowData.estShipDate  | date: \'MM/dd/yyyy\'}}</td>\r\n                                <td>{{rowData.quoteStatus}}</td>\r\n                                <td><span data-toggle="modal" data-target="#historicalWorkOrderView"><a class="btn nobg btn-view-cstm" (click)="selectedHistoricalWorkOrder = rowData.workOrderId; selectedHistoricalCustomerId = rowData.customerId" matTooltip="View"><i class="fa fa-eye"></i></a> </span></td>\r\n                            </tr>\r\n                        </ng-template>\r\n                    </p-table>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div id="quoteVer"\r\n         class="modal fade"\r\n         role="dialog"\r\n         data-backdrop="static">\r\n        <div class="modal-dialog modal-sm" style="text-align: center;">\r\n            \x3c!-- Modal content--\x3e\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <h4 class="modal-title">Do you want to increase the Quote Version?</h4>\r\n                    <button type="button" class="close" data-dismiss="modal" (click)="saveType = \'\'">\r\n                        &times;\r\n                    </button>\r\n                </div>\r\n                <div class="modal-body table-responsive">\r\n                    <button class="btn btn-primary btn-primary" data-dismiss="modal" (click)="increaseVerConfirmation(true)"\r\n                            style="padding: 6px 12px !important;">\r\n                        YES\r\n                    </button>\r\n                    <button class="btn btn-primary btn-primary" data-dismiss="modal"\r\n                            style="padding: 6px 12px !important;" (click)="increaseVerConfirmation(false)">\r\n                        NO\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div id="quoteVersion"\r\n         class="modal fade"\r\n         role="dialog"\r\n         data-backdrop="static">\r\n         <div class="modal-dialog">\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <h4 class="modal-title">Email details</h4>\r\n                    <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                    <p id="clockdiv" class="clockdiv"></p>\r\n                </div>\r\n                <form #attachDocForm="ngForm" \r\n        class="form-horizontal" ngNativeValidate>\r\n                    <div class="modal-body">\r\n                        <div class="form-row">\r\n                        <div class="col-md-12">\r\n                            <div class="col-md-6">\r\n                                <div class="form-group col-md-12">\r\n                                    <label>Email Type <span class="clr-red">*</span></label>\r\n                                    <select [(ngModel)]="emailType" class="form-control" name="emailType" required>\r\n                                        <option value="">Select</option>\r\n                                        <option *ngFor="let emailTy of emailTypes" [value]="emailTy.value">{{emailTy.label}}</option>\r\n                                    </select>\r\n                                </div>\r\n                                <div class="form-group col-md-12">\r\n                                    <label class="col-md-12">Customer Contact <span class="clr-red">*</span></label>\r\n                                    <p-autoComplete field="name"\r\n                                    [(ngModel)]="emailCustomerContact" required\r\n                                    name="cusContact" #cusContact="ngModel"\r\n                                    errorMessage="Records not found" [forceSelection]="true"\r\n                                    [dropdown]="true" [suggestions]="cusContactList"\r\n                                    (completeMethod)="filterCustomerContact($event)"\r\n                                    [size]="30" [minLength]="1"                                 \r\n                                    (onSelect)="contactSelected($event)" \r\n                                    class="p-autoComplete-ctsm">\r\n                                    </p-autoComplete>\r\n                                </div>\r\n                                <div class="form-group col-md-12">\r\n                                    <label>BCC</label>\r\n                                    <input class="form-control" type="email" name="bcc"\r\n                                        [(ngModel)]="bcc" multiple="true">\r\n                                </div>\r\n                                \r\n                                \r\n                            </div>\r\n                            <div class="col-md-6">\r\n                                \r\n                                <div class="form-group col-md-12">\r\n                                    <label class="col-md-12">Contacted By <span class="clr-red">*</span></label>\r\n                                    <p-autoComplete field="label"\r\n                                    [(ngModel)]="emailContactBy" required\r\n                                    name="employees" #employees="ngModel"\r\n                                    errorMessage="Records not found" [forceSelection]="true"\r\n                                    [dropdown]="true" [suggestions]="employeeList"\r\n                                    (completeMethod)="filterEmployee($event)" (onSelect)="selectedCustomer()"\r\n                                    [size]="30" [minLength]="1" [dropdown]="true"\r\n                                    class="p-autoComplete-ctsm"> \r\n                                </p-autoComplete>\r\n                                </div>\r\n                                <div class="form-group col-md-12">\r\n                                    <label>Email To <span class="clr-red">*</span></label>\r\n                                    <input class="form-control" type="email" name="email" [(ngModel)]="toEmail" required disabled>\r\n                                </div>\r\n                                <div class="form-group col-md-12" style="margin-top:-7px">\r\n                                    <label>CC</label>\r\n                                        <input class="form-control" type="email" name="cc"\r\n                                        [(ngModel)]="cc" multiple="true">\r\n                                </div>\r\n                                \r\n                            </div>\r\n                        </div>\r\n                            \r\n                            <div class="col-md-12 ">\r\n                                <div class="form-group">\r\n                                    <label class="col-md-12">Email Subject <span class="clr-red">*</span></label>\r\n                                    <input class="form-control" type="text" [(ngModel)]="subject" name="subject" rows="1" required>\r\n                                </div>\r\n                    \r\n                                <div class="col-md-12">\r\n                                    <div class="form-group">\r\n                                        <label>Email Body <span class="clr-red">*</span></label>\r\n                                        <p-editor class="p-editor-cstm" [(ngModel)]="emailBody" style="overflow-y: auto;;"\r\n                                            [style]="{\'height\':\'150px\'}" name="emailBody" required></p-editor>\r\n                                    </div>\r\n                                \r\n                                </div>\r\n                                <div class="col-md-12">\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div class="modal-footer" style="padding-top:0px; padding-bottom:0px;">\r\n                            <button type="submit" class="btn btn-primary btn-primary" (click)="saveApprovalData()"\r\n                                style="padding: 6px 12px !important;margin-top: 10px;" [disabled]="!attachDocForm.valid || checkValidEmails()">\r\n                                Send\r\n                            </button>\r\n                            <button type="button" class="btn btn-danger" data-dismiss="modal" style="padding: 6px 12px !important;margin-top: 10px;">Close</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n\r\n    <div id="deleteRowConfirmation" class="modal fade" role="dialog" data-backdrop="static">\r\n        <div class="modal-dialog modal-sm">\r\n    \r\n            \x3c!-- Modal content--\x3e\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <h4 class="modal-title">Are You Sure Want to Delete the record?</h4>\r\n                    <button type="button" class="close" aria-label="Close" data-dismiss="modal">\r\n                        <span aria-hidden="true">&times;</span>\r\n                    </button>\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button type="button" class="btn btn-primary" data-dismiss="modal" (click)="deleteMaterialList(mainIndex, subIndex)">Yes</button>\r\n                    <button type="button" class="btn btn-danger" data-dismiss="modal">No</button>\r\n                </div>\r\n            </div>\r\n    \r\n        </div>\r\n    </div>\r\n\r\n    <div id="historicalWorkOrderView"\r\n         class="modal fade"\r\n         role="dialog"\r\n         data-backdrop="static">\r\n        <div class="modal-dialog modal-xl">\r\n            \x3c!-- Modal content--\x3e\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <button type="button" class="close" (click)="hideModal(\'historicalWorkOrderView\')">\r\n                        &times;\r\n                    </button>\r\n                </div>\r\n                <div class="modal-body table-responsive" *ngIf="!ispop && (!isView || isListView)">\r\n                    \x3c!-- <grd-quote-view [workorderid]="selectedHistoricalWorkOrder" isView="true"></grd-quote-view> --\x3e\r\n                    <app-work-order-quote [workorderid]="selectedHistoricalWorkOrder" isView="true" (enableBackToWO)="noBack($event)" [customerId]="customerId" enableEditBtn="false" [selectedDisplayType]="displayType"></app-work-order-quote>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    \x3c!-- <div id="versionNoModel" class="modal fade" role="dialog" data-backdrop="static">\r\n        <div class="modal-dialog modal-xsm">\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <h4 class="modal-title">Do you want to increase the Quote Version?</h4>\r\n                    <p id="clockdiv" class="clockdiv"></p>\r\n                </div>\r\n                <div class="modal-footer" style="padding:10px;">\r\n                    <button class="btn btn-primary btn-primary" data-dismiss="modal" (click)="increaseVerConfirmation()"\r\n                            style="padding: 6px 12px !important;">\r\n                        YES\r\n                    </button>\r\n                    <button class="btn btn-primary btn-primary" data-dismiss="modal"\r\n                            style="padding: 6px 12px !important;" (click)="saveQuoteAPI()">\r\n                        NO\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div> --\x3e\r\n\r\n</div>\r\n<div id="warnRestrictMesg" class="modal fade" role="dialog" data-backdrop="static">\r\n    <div class="modal-dialog modal-xsm">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Message</h4>\r\n                <p id="clockdiv" class="clockdiv"></p>\r\n            </div>\r\n            <div class="pad_msf">\r\n                <p *ngIf="warningID != 0" class="mar_o">\r\n                    <strong>Warning Message</strong>\r\n                    :{{warningMessage}}\r\n                </p>\r\n                \x3c!-- <p *ngIf="warningMessage != undefined">Not able to create customer work because cuatomer having restrcitions</p> --\x3e\r\n                <p *ngIf="restrictID != 0 " class="mar_o">\r\n                    <strong>Restrcition Message</strong>\r\n                    :{{restrictMessage}}\r\n                </p>\r\n\r\n                <p *ngIf=" restrictID != 0 " class="mar_o">\r\n                    Not able to  Edit Work Order Quote details because customer\r\n                    having restrictions\r\n                </p>\r\n\r\n            </div>\r\n            <div class="modal-footer" style="padding:10px;">\r\n                <button class="btn btn-primary btn-primary" data-dismiss="modal" (click)="WarnRescticModel()"\r\n                        style="padding: 6px 12px !important;">\r\n                    Ok\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class="preloader" *ngIf="isSpinnerVisible">\r\n    <div class="loading">\r\n        <div class="lds-roller"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n \r\n'},Wqbo:function(e,r,t){"use strict";t.r(r),r.default='<div [@fadeInOut] class="page-content">\r\n    <div class="right_col" role="main">\r\n        <div class="x_panel">\r\n            <div class="x_content">\r\n                <nav aria-label="breadcrumb">\r\n                    <ol class="breadcrumb">\r\n                        <li class="breadcrumb-item"><a routerLink="/">Dashboard</a></li>\r\n                    </ol>\r\n                </nav>\r\n                <div class="col-sm-12 form-bg">\r\n                    <div class="form-group add-inputs">\r\n                        <h3 class="text-center"> Content not given for Shipping page.</h3>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>'},X58S:function(e,r,t){"use strict";t.r(r),r.default='input[type=text],\ninput[type=number],\nselect,\ntextarea {\n  height: 24px !important;\n  border-radius: 5px !important;\n}\n\n.select-read-only {\n  border: none;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  text-indent: 1px;\n  text-overflow: "";\n  box-shadow: none !important;\n}\n\n.rro-table-cstm th {\n  width: unset !important;\n}\n\nbody .ui-radiobutton .ui-radiobutton-box {\n  border: 3px solid #ffffff;\n}\n\n.footer td {\n  background-color: #eaf2fd;\n}\n\nselect.select-read-only {\n  background-color: #ffffff !important;\n}'},XNBr:function(e,r,t){"use strict";t.r(r),r.default='<div [@fadeInOut] class="page-content">\r\n    <div class="right_col" role="main">\r\n        <div class="col-md-12">\r\n            <div class="x_panel" style="">\r\n                <div class="x_content">\r\n                    <nav aria-label="breadcrumb">\r\n                        <ol class="breadcrumb">\r\n                            <li class="breadcrumb-item"><a routerLink="/">Dashboard</a></li>\r\n                            <li class="breadcrumb-item"><a routerLink="/">WO Setup</a></li>\r\n                            <li class="breadcrumb-item active" aria-current="page">Add Labor</li>\r\n                        </ol>\r\n                    </nav>\r\n                    <div class="pheading">\r\n                        <h4 class="page-heading clr-green">WO Setup - Add Labor</h4>\r\n                    </div>\r\n                    <div class="cdetails-top">\r\n                        <div class="col-sm-12">\r\n                            <label>Company</label>\r\n                            <span>Silverxis</span>\r\n                        </div>\r\n                        <div class="col-sm-12">\r\n                            <label>BU</label>\r\n                            <span>Adso</span>\r\n                        </div>\r\n                        <div class="col-sm-12">\r\n                            <label>Division</label>\r\n                            <span>Development</span>\r\n                        </div>\r\n                        <div class="col-sm-12">\r\n                            <label>Dept</label>\r\n                            <span>Java</span>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div class="clear"></div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class="col-md-12 col-sm-12 col-12 po-ro-setup">\r\n            <div class="x_panel">\r\n                <div>\r\n                    &nbsp;\r\n                    <label class="wauto"><input type="radio" class="labor-block1" value="labor-block1" name="labor-blocks-input" checked /> Labor Hours</label>&nbsp;&nbsp;&nbsp;&nbsp;\r\n                    <label class="wauto"><input type="radio" class="labor-block2" value="labor-block2" name="labor-blocks-input" /> Labor Checkin Checkout</label>&nbsp;&nbsp;&nbsp;&nbsp;\r\n                    <label class="wauto"><input type="radio" class="labor-block3" value="labor-block3" name="labor-blocks-input" /> Scan</label>\r\n                </div>\r\n\r\n                <hr />\r\n\r\n                <div class="x_content labor-hrs-block">\r\n                    <form id="" class="form-horizontal ro-grid-form mtop10" name="" action="#" method="post" onsubmit="return false;">\r\n                        <div class="col-sm-3">\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">WO ID</label>\r\n                                <div class="col-sm-7">\r\n                                    <div class="inner-addon right-addon inline-block">\r\n                                        <i class="fa fa-search"></i>\r\n                                        <input type="text" class="form-control numberids" value="123456">\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">Data Entered By</label>\r\n                                <div class="col-sm-7">\r\n                                    <div class="inner-addon right-addon inline-block">\r\n                                        <i class="fa fa-search"></i>\r\n                                        <input type="text" class="form-control names" value="Roger">\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">Expertise</label>\r\n                                <div class="col-sm-7">\r\n                                    <select>\r\n                                        <option value="">Select Expertise</option>\r\n                                        <option value="Technician">Technician</option>\r\n                                        <option value="Quality">Quality</option>\r\n                                        <option value="Mechanic">Mechanic</option>\r\n                                        <option value="Inspector">Inspector</option>\r\n                                        <option value="Receiver">Receiver</option>\r\n                                        <option value="Auditor">Auditor</option>\r\n                                        <option value="Engineer">Engineer</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">Employee</label>\r\n                                <div class="col-sm-7">\r\n                                    <select>\r\n                                        <option value="">Select Expertise</option>\r\n                                        <option value="Technician">Technician</option>\r\n                                        <option value="Quality">Quality</option>\r\n                                        <option value="Mechanic">Mechanic</option>\r\n                                        <option value="Inspector">Inspector</option>\r\n                                        <option value="Receiver">Receiver</option>\r\n                                        <option value="Auditor">Auditor</option>\r\n                                        <option value="Engineer">Engineer</option>\r\n                                    </select>\r\n                                </div>\r\n                                \x3c!--<div class="col-sm-7">\r\n                                    <div class="inner-addon right-addon inline-block">\r\n                                        <i class="fa fa-search"></i>\r\n                                        <input type="text" class="form-control names" value="Roger">\r\n                                    </div>\r\n                                </div>--\x3e\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-sm-3">\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-10">Actions completed by ONE Tech/Mech</label>\r\n                                <div class="col-sm-1">\r\n                                    <input type="checkbox" class="form-control">\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-10">Use target hours from Workflow</label>\r\n                                <div class="col-sm-1">\r\n                                    <input type="checkbox" class="form-control">\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-10">Assign hours by specific Actions</label>\r\n                                <div class="col-sm-1">\r\n                                    <input type="checkbox" class="form-control">\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-10">Assign Total Hours to Work Order</label>\r\n                                <div class="col-sm-1">\r\n                                    <input type="checkbox" class="form-control">\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n\r\n                        </div>\r\n                        <div class="col-sm-5">\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-3">Memo</label>\r\n                                <div class="col-sm-8">\r\n                                    <textarea placeholder="Memo" style="height:110px; width:100%;"></textarea>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class="clear"></div>\r\n\r\n\r\n                    </form>\r\n                    <div class="table-responsive">\r\n                        <div class="clear mtop5"></div>\r\n                        <table class="table table-bordered table-striped ">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Actions</th>\r\n                                    <th>Employee</th>\r\n                                    <th>Hours</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>Total Hours - ALL Actions</td>\r\n                                    <td>\r\n                                        <div class="inner-addon right-addon inline-block">\r\n                                            <i class="fa fa-search"></i>\r\n                                            <input type="text" class="form-control names" value="Roger">\r\n                                        </div>\r\n                                    </td>\r\n                                    <td><input type="text" class="form-control w80 time" /></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Receive</td>\r\n                                    <td>\r\n                                        <div class="inner-addon right-addon inline-block">\r\n                                            <i class="fa fa-search"></i>\r\n                                            <input type="text" class="form-control names" value="Roger">\r\n                                        </div>\r\n                                    </td>\r\n                                    <td><input type="text" class="form-control w80 time" value="1.00" /></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Inspect</td>\r\n                                    <td>\r\n                                        <div class="inner-addon right-addon inline-block">\r\n                                            <i class="fa fa-search"></i>\r\n                                            <input type="text" class="form-control names" value="Roger">\r\n                                        </div>\r\n                                    </td>\r\n                                    <td><input type="text" class="form-control w80 time" value="2.50" /></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Evaluate</td>\r\n                                    <td>\r\n                                        <div class="inner-addon right-addon inline-block">\r\n                                            <i class="fa fa-search"></i>\r\n                                            <input type="text" class="form-control names" value="Roger">\r\n                                        </div>\r\n                                    </td>\r\n                                    <td><input type="text" class="form-control w80 time" value="1.50" /></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Teardown</td>\r\n                                    <td>\r\n                                        <div class="inner-addon right-addon inline-block">\r\n                                            <i class="fa fa-search"></i>\r\n                                            <input type="text" class="form-control names" value="Roger">\r\n                                        </div>\r\n                                    </td>\r\n                                    <td><input type="text" class="form-control w80 time" value="4.00" /></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Disassemble</td>\r\n                                    <td>\r\n                                        <div class="inner-addon right-addon inline-block">\r\n                                            <i class="fa fa-search"></i>\r\n                                            <input type="text" class="form-control names" value="Roger">\r\n                                        </div>\r\n                                    </td>\r\n                                    <td><input type="text" class="form-control w80 time" value="2.00" /></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Assemble</td>\r\n                                    <td></td>\r\n                                    <td><input type="text" class="form-control w80 time" value="-" /></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Testing</td>\r\n                                    <td></td>\r\n                                    <td><input type="text" class="form-control w80 time" value="-" /></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>QC</td>\r\n                                    <td></td>\r\n                                    <td><input type="text" class="form-control w80 time" value="-" /></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Ship</td>\r\n                                    <td></td>\r\n                                    <td><input type="text" class="form-control w80 time" value="-" /></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Clean</td>\r\n                                    <td></td>\r\n                                    <td><input type="text" class="form-control w80 time" value="-" /></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td></td>\r\n                                    <td></td>\r\n                                    <td><input type="text" class="form-control w80 time" value="11.00" /></td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n\r\n                    <div class="clear"></div>\r\n                </div>\r\n\r\n                <div class="clear"></div>\r\n\r\n                <div class="x_content labor-inout-hrs-block">\r\n                    <form id="" class="form-horizontal ro-grid-form mtop10" name="" action="#" method="post" onsubmit="return false;">\r\n                        <div class="col-sm-3">\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">WO ID</label>\r\n                                <div class="col-sm-7">\r\n                                    <div class="inner-addon right-addon inline-block">\r\n                                        <i class="fa fa-search"></i>\r\n                                        <input type="text" class="form-control numberids" value="123456">\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">Employee</label>\r\n                                \x3c!--<div class="col-sm-7">\r\n                                    <div class="inner-addon right-addon inline-block">\r\n                                        <i class="fa fa-search"></i>\r\n                                        <input type="text" class="form-control names" value="Roger">\r\n                                    </div>\r\n                                </div>--\x3e\r\n                                <div class="col-sm-7">\r\n                                    <select>\r\n                                        <option value="">Select Expertise</option>\r\n                                        <option value="Technician">Technician</option>\r\n                                        <option value="Quality">Quality</option>\r\n                                        <option value="Mechanic">Mechanic</option>\r\n                                        <option value="Inspector">Inspector</option>\r\n                                        <option value="Receiver">Receiver</option>\r\n                                        <option value="Auditor">Auditor</option>\r\n                                        <option value="Engineer">Engineer</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n                        <div class="col-sm-3">\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-10">Actions completed by ONE Tech/Mech</label>\r\n                                <div class="col-sm-1">\r\n                                    <input type="checkbox" class="form-control">\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-10">Assign hours by specific Actions</label>\r\n                                <div class="col-sm-1">\r\n                                    <input type="checkbox" class="form-control">\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-10">Assign Total Hours to Work Order</label>\r\n                                <div class="col-sm-1">\r\n                                    <input type="checkbox" class="form-control">\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n\r\n                        </div>\r\n                        <div class="col-sm-5">\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-3">Memo</label>\r\n                                <div class="col-sm-8">\r\n                                    <textarea placeholder="Memo" style="height:110px; width:100%;"></textarea>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="clear"></div>\r\n\r\n\r\n                    </form>\r\n                    <div class="table-responsive">\r\n                        <div class="clear mtop5"></div>\r\n                        <table class="table table-bordered table-striped po-ro-setup-table">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Actions</th>\r\n                                    <th>Expertise</th>\r\n                                    <th>Employee</th>\r\n                                    <th>Billable /NonBillable</th>\r\n                                    <th>Start</th>\r\n                                    <th>Start Date and Time</th>\r\n                                    <th>Stop</th>\r\n                                    <th>End Date and Time</th>\r\n                                    <th>Hours/Mins</th>\r\n                                    <th>Adjustments</th>\r\n                                    <th>Adjusted Hours</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>Total Hours - ALL Actions</td>\r\n                                    <td>\r\n                                        <select>\r\n                                            <option value="">Select Expertise</option>\r\n                                            <option value="Technician">Technician</option>\r\n                                            <option value="Quality">Quality</option>\r\n                                            <option value="Mechanic">Mechanic</option>\r\n                                            <option value="Inspector">Inspector</option>\r\n                                            <option value="Receiver">Receiver</option>\r\n                                            <option value="Auditor">Auditor</option>\r\n                                            <option value="Engineer">Engineer</option>\r\n                                        </select>\r\n                                    </td>\r\n                                    <td>\r\n                                        <div class="inner-addon right-addon inline-block">\r\n                                            <i class="fa fa-search"></i>\r\n                                            <input type="text" class="form-control names ui-autocomplete-input" value="Roger" autocomplete="off">\r\n                                        </div>\r\n                                    </td>\r\n                                    <td>\r\n                                        <select>\r\n\r\n                                            <option value="billable">Billable</option>\r\n                                            <option value="non-billable">Non Billable</option>\r\n                                        </select>\r\n                                    </td>\r\n                                    <td><input type="checkbox" class="start-date-checkbox"></td>\r\n                                    <td><span class="start-date">26/03/2018 10:00</span></td>\r\n                                    <td><input type="checkbox" class="end-date-checkbox"></td>\r\n                                    <td><span class="end-date">26/03/2018 10:30</span></td>\r\n                                    <td>20.30</td>\r\n                                    <td><input type="text" class="form-control w50 decimal2"></td>\r\n                                    <td>20.30</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Receive</td>\r\n                                    <td>\r\n                                        <select>\r\n                                            <option value="">Select Expertise</option>\r\n                                            <option value="Technician">Technician</option>\r\n                                            <option value="Quality">Quality</option>\r\n                                            <option value="Mechanic">Mechanic</option>\r\n                                            <option value="Inspector">Inspector</option>\r\n                                            <option value="Receiver">Receiver</option>\r\n                                            <option value="Auditor">Auditor</option>\r\n                                            <option value="Engineer">Engineer</option>\r\n                                        </select>\r\n                                    </td>\r\n                                    <td>\r\n                                        <div class="inner-addon right-addon inline-block">\r\n                                            <i class="fa fa-search"></i>\r\n                                            <input type="text" class="form-control names ui-autocomplete-input" value="Roger" autocomplete="off">\r\n                                        </div>\r\n                                    </td>\r\n                                    <td>\r\n                                        <select>\r\n\r\n                                            <option value="billable">Billable</option>\r\n                                            <option value="non-billable">Non Billable</option>\r\n                                        </select>\r\n                                    </td>\r\n                                    <td><input type="checkbox" class="start-date-checkbox"></td>\r\n                                    <td><span class="start-date">26/03/2018 10:00</span></td>\r\n                                    <td><input type="checkbox" class="end-date-checkbox"></td>\r\n                                    <td><span class="end-date">26/03/2018 10:30</span></td>\r\n                                    <td>20.30</td>\r\n                                    <td><input type="text" class="form-control w50 decimal2"></td>\r\n                                    <td>20.30</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Inspect</td>\r\n                                    <td>\r\n                                        <select>\r\n                                            <option value="">Select Expertise</option>\r\n                                            <option value="Technician">Technician</option>\r\n                                            <option value="Quality">Quality</option>\r\n                                            <option value="Mechanic">Mechanic</option>\r\n                                            <option value="Inspector">Inspector</option>\r\n                                            <option value="Receiver">Receiver</option>\r\n                                            <option value="Auditor">Auditor</option>\r\n                                            <option value="Engineer">Engineer</option>\r\n                                        </select>\r\n                                    </td>\r\n                                    <td>\r\n                                        <div class="inner-addon right-addon inline-block">\r\n                                            <i class="fa fa-search"></i>\r\n                                            <input type="text" class="form-control names ui-autocomplete-input" value="Roger" autocomplete="off">\r\n                                        </div>\r\n                                    </td>\r\n                                    <td>\r\n                                        <select>\r\n\r\n                                            <option value="billable">Billable</option>\r\n                                            <option value="non-billable">Non Billable</option>\r\n                                        </select>\r\n                                    </td>\r\n                                    <td><input type="checkbox" class="start-date-checkbox"></td>\r\n                                    <td><span class="start-date">26/03/2018 10:00</span></td>\r\n                                    <td><input type="checkbox" class="end-date-checkbox"></td>\r\n                                    <td><span class="end-date">26/03/2018 10:30</span></td>\r\n                                    <td>20.30</td>\r\n                                    <td><input type="text" class="form-control w50 decimal2"></td>\r\n                                    <td>20.30</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Evaluate</td>\r\n                                    <td>\r\n                                        <select>\r\n                                            <option value="">Select Expertise</option>\r\n                                            <option value="Technician">Technician</option>\r\n                                            <option value="Quality">Quality</option>\r\n                                            <option value="Mechanic">Mechanic</option>\r\n                                            <option value="Inspector">Inspector</option>\r\n                                            <option value="Receiver">Receiver</option>\r\n                                            <option value="Auditor">Auditor</option>\r\n                                            <option value="Engineer">Engineer</option>\r\n                                        </select>\r\n                                    </td>\r\n                                    <td>\r\n                                        <div class="inner-addon right-addon inline-block">\r\n                                            <i class="fa fa-search"></i>\r\n                                            <input type="text" class="form-control names ui-autocomplete-input" value="Roger" autocomplete="off">\r\n                                        </div>\r\n                                    </td>\r\n                                    <td>\r\n                                        <select>\r\n\r\n                                            <option value="billable">Billable</option>\r\n                                            <option value="non-billable">Non Billable</option>\r\n                                        </select>\r\n                                    </td>\r\n                                    <td><input type="checkbox" class="start-date-checkbox"></td>\r\n                                    <td><span class="start-date">26/03/2018 10:00</span></td>\r\n                                    <td><input type="checkbox" class="end-date-checkbox"></td>\r\n                                    <td><span class="end-date">26/03/2018 10:30</span></td>\r\n                                    <td>20.30</td>\r\n                                    <td><input type="text" class="form-control w50 decimal2"></td>\r\n                                    <td>20.30</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Teardown</td>\r\n                                    <td>\r\n                                        <select>\r\n                                            <option value="">Select Expertise</option>\r\n                                            <option value="Technician">Technician</option>\r\n                                            <option value="Quality">Quality</option>\r\n                                            <option value="Mechanic">Mechanic</option>\r\n                                            <option value="Inspector">Inspector</option>\r\n                                            <option value="Receiver">Receiver</option>\r\n                                            <option value="Auditor">Auditor</option>\r\n                                            <option value="Engineer">Engineer</option>\r\n                                        </select>\r\n                                    </td>\r\n                                    <td>\r\n                                        <div class="inner-addon right-addon inline-block">\r\n                                            <i class="fa fa-search"></i>\r\n                                            <input type="text" class="form-control names ui-autocomplete-input" value="Roger" autocomplete="off">\r\n                                        </div>\r\n                                    </td>\r\n                                    <td>\r\n                                        <select>\r\n\r\n                                            <option value="billable">Billable</option>\r\n                                            <option value="non-billable">Non Billable</option>\r\n                                        </select>\r\n                                    </td>\r\n                                    <td><input type="checkbox" class="start-date-checkbox"></td>\r\n                                    <td><span class="start-date">26/03/2018 10:00</span></td>\r\n                                    <td><input type="checkbox" class="end-date-checkbox"></td>\r\n                                    <td><span class="end-date">26/03/2018 10:30</span></td>\r\n                                    <td>20.30</td>\r\n                                    <td><input type="text" class="form-control w50 decimal2"></td>\r\n                                    <td>20.30</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Disassemble</td>\r\n                                    <td>\r\n                                        <select>\r\n                                            <option value="">Select Expertise</option>\r\n                                            <option value="Technician">Technician</option>\r\n                                            <option value="Quality">Quality</option>\r\n                                            <option value="Mechanic">Mechanic</option>\r\n                                            <option value="Inspector">Inspector</option>\r\n                                            <option value="Receiver">Receiver</option>\r\n                                            <option value="Auditor">Auditor</option>\r\n                                            <option value="Engineer">Engineer</option>\r\n                                        </select>\r\n                                    </td>\r\n                                    <td>\r\n                                        <div class="inner-addon right-addon inline-block">\r\n                                            <i class="fa fa-search"></i>\r\n                                            <input type="text" class="form-control names ui-autocomplete-input" value="Roger" autocomplete="off">\r\n                                        </div>\r\n                                    </td>\r\n                                    <td>\r\n                                        <select>\r\n\r\n                                            <option value="billable">Billable</option>\r\n                                            <option value="non-billable">Non Billable</option>\r\n                                        </select>\r\n                                    </td>\r\n                                    <td><input type="checkbox" class="start-date-checkbox"></td>\r\n                                    <td><span class="start-date">26/03/2018 10:00</span></td>\r\n                                    <td><input type="checkbox" class="end-date-checkbox"></td>\r\n                                    <td><span class="end-date">26/03/2018 10:30</span></td>\r\n                                    <td>20.30</td>\r\n                                    <td><input type="text" class="form-control w50 decimal2"></td>\r\n                                    <td>20.30</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Assemble</td>\r\n                                    <td>\r\n                                        <select>\r\n                                            <option value="">Select Expertise</option>\r\n                                            <option value="Technician">Technician</option>\r\n                                            <option value="Quality">Quality</option>\r\n                                            <option value="Mechanic">Mechanic</option>\r\n                                            <option value="Inspector">Inspector</option>\r\n                                            <option value="Receiver">Receiver</option>\r\n                                            <option value="Auditor">Auditor</option>\r\n                                            <option value="Engineer">Engineer</option>\r\n                                        </select>\r\n                                    </td>\r\n                                    <td>\r\n                                        <div class="inner-addon right-addon inline-block">\r\n                                            <i class="fa fa-search"></i>\r\n                                            <input type="text" class="form-control names ui-autocomplete-input" value="Roger" autocomplete="off">\r\n                                        </div>\r\n                                    </td>\r\n                                    <td>\r\n                                        <select>\r\n\r\n                                            <option value="billable">Billable</option>\r\n                                            <option value="non-billable">Non Billable</option>\r\n                                        </select>\r\n                                    </td>\r\n                                    <td><input type="checkbox" class="start-date-checkbox"></td>\r\n                                    <td><span class="start-date">26/03/2018 10:00</span></td>\r\n                                    <td><input type="checkbox" class="end-date-checkbox"></td>\r\n                                    <td><span class="end-date">26/03/2018 10:30</span></td>\r\n                                    <td>20.30</td>\r\n                                    <td><input type="text" class="form-control w50 decimal2"></td>\r\n                                    <td>20.30</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Testing</td>\r\n                                    <td>\r\n                                        <select>\r\n                                            <option value="">Select Expertise</option>\r\n                                            <option value="Technician">Technician</option>\r\n                                            <option value="Quality">Quality</option>\r\n                                            <option value="Mechanic">Mechanic</option>\r\n                                            <option value="Inspector">Inspector</option>\r\n                                            <option value="Receiver">Receiver</option>\r\n                                            <option value="Auditor">Auditor</option>\r\n                                            <option value="Engineer">Engineer</option>\r\n                                        </select>\r\n                                    </td>\r\n                                    <td>\r\n                                        <div class="inner-addon right-addon inline-block">\r\n                                            <i class="fa fa-search"></i>\r\n                                            <input type="text" class="form-control names w100 ui-autocomplete-input" value="Roger" autocomplete="off">\r\n                                        </div>\r\n                                    </td>\r\n                                    <td>\r\n                                        <select>\r\n\r\n                                            <option value="billable">Billable</option>\r\n                                            <option value="non-billable">Non Billable</option>\r\n                                        </select>\r\n                                    </td>\r\n                                    <td><input type="checkbox" class="start-date-checkbox"></td>\r\n                                    <td><span class="start-date">26/03/2018 10:00</span></td>\r\n                                    <td><input type="checkbox" class="end-date-checkbox"></td>\r\n                                    <td><span class="end-date">26/03/2018 10:30</span></td>\r\n                                    <td>20.30</td>\r\n                                    <td><input type="text" class="form-control w50 decimal2"></td>\r\n                                    <td>20.30</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>QC</td>\r\n                                    <td>\r\n                                        <select>\r\n                                            <option value="">Select Expertise</option>\r\n                                            <option value="Technician">Technician</option>\r\n                                            <option value="Quality">Quality</option>\r\n                                            <option value="Mechanic">Mechanic</option>\r\n                                            <option value="Inspector">Inspector</option>\r\n                                            <option value="Receiver">Receiver</option>\r\n                                            <option value="Auditor">Auditor</option>\r\n                                            <option value="Engineer">Engineer</option>\r\n                                        </select>\r\n                                    </td>\r\n                                    <td>\r\n                                        <div class="inner-addon right-addon inline-block">\r\n                                            <i class="fa fa-search"></i>\r\n                                            <input type="text" class="form-control names ui-autocomplete-input" value="Roger" autocomplete="off">\r\n                                        </div>\r\n                                    </td>\r\n                                    <td>\r\n                                        <select>\r\n\r\n                                            <option value="billable">Billable</option>\r\n                                            <option value="non-billable">Non Billable</option>\r\n                                        </select>\r\n                                    </td>\r\n                                    <td><input type="checkbox" class="start-date-checkbox"></td>\r\n                                    <td><span class="start-date">26/03/2018 10:00</span></td>\r\n                                    <td><input type="checkbox" class="end-date-checkbox"></td>\r\n                                    <td><span class="end-date">26/03/2018 10:30</span></td>\r\n                                    <td>20.30</td>\r\n                                    <td><input type="text" class="form-control w50 decimal2"></td>\r\n                                    <td>20.30</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Ship</td>\r\n                                    <td>\r\n                                        <select>\r\n                                            <option value="">Select Expertise</option>\r\n                                            <option value="Technician">Technician</option>\r\n                                            <option value="Quality">Quality</option>\r\n                                            <option value="Mechanic">Mechanic</option>\r\n                                            <option value="Inspector">Inspector</option>\r\n                                            <option value="Receiver">Receiver</option>\r\n                                            <option value="Auditor">Auditor</option>\r\n                                            <option value="Engineer">Engineer</option>\r\n                                        </select>\r\n                                    </td>\r\n                                    <td>\r\n                                        <div class="inner-addon right-addon inline-block">\r\n                                            <i class="fa fa-search"></i>\r\n                                            <input type="text" class="form-control names ui-autocomplete-input" value="Roger" autocomplete="off">\r\n                                        </div>\r\n                                    </td>\r\n                                    <td>\r\n                                        <select>\r\n\r\n                                            <option value="billable">Billable</option>\r\n                                            <option value="non-billable">Non Billable</option>\r\n                                        </select>\r\n                                    </td>\r\n                                    <td><input type="checkbox" class="start-date-checkbox"></td>\r\n                                    <td><span class="start-date">26/03/2018 10:00</span></td>\r\n                                    <td><input type="checkbox" class="end-date-checkbox"></td>\r\n                                    <td><span class="end-date">26/03/2018 10:30</span></td>\r\n                                    <td>20.30</td>\r\n                                    <td><input type="text" class="form-control w50 decimal2"></td>\r\n                                    <td>20.30</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Clean</td>\r\n                                    <td>\r\n                                        <select>\r\n                                            <option value="">Select Expertise</option>\r\n                                            <option value="Technician">Technician</option>\r\n                                            <option value="Quality">Quality</option>\r\n                                            <option value="Mechanic">Mechanic</option>\r\n                                            <option value="Inspector">Inspector</option>\r\n                                            <option value="Receiver">Receiver</option>\r\n                                            <option value="Auditor">Auditor</option>\r\n                                            <option value="Engineer">Engineer</option>\r\n                                        </select>\r\n                                    </td>\r\n                                    <td>\r\n                                        <div class="inner-addon right-addon inline-block">\r\n                                            <i class="fa fa-search"></i>\r\n                                            <input type="text" class="form-control names ui-autocomplete-input" value="Roger" autocomplete="off">\r\n                                        </div>\r\n                                    </td>\r\n                                    <td>\r\n                                        <select>\r\n\r\n                                            <option value="billable">Billable</option>\r\n                                            <option value="non-billable">Non Billable</option>\r\n                                        </select>\r\n                                    </td>\r\n                                    <td><input type="checkbox" class="start-date-checkbox"></td>\r\n                                    <td><span class="start-date">26/03/2018 10:00</span></td>\r\n                                    <td><input type="checkbox" class="end-date-checkbox"></td>\r\n                                    <td><span class="end-date">26/03/2018 10:30</span></td>\r\n                                    <td>20.30</td>\r\n                                    <td><input type="text" class="form-control w50 decimal2"></td>\r\n                                    <td>20.30</td>\r\n                                </tr>\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <div class="clear"></div>\r\n                </div>\r\n\r\n                <div class="clear"></div>\r\n                <div class="x_content labor-hrs-scan-block">\r\n                    <h4>Content not given</h4>\r\n                    <div class="clear"></div>\r\n                </div>\r\n\r\n                <div class="clear"></div>\r\n                <br />\r\n                <a class="btn btn-info">Submit</a>\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>'},"Z+/w":function(e,r,t){"use strict";t.r(r),r.default=""},Zchf:function(e,r,t){"use strict";t.r(r),r.default=".btn-spaces > button {\r\n  margin-right: 13px !important;\r\n}\r\n/* .ui-radiobutton-label{\r\n  color: #ffffff !important;\r\n} */\r\ninput[type='text'],\r\ninput[type='number'],\r\nselect,\r\ntextarea {\r\n  height: 24px !important;\r\n  border-radius: 5px !important;\r\n}\r\n.select-read-only{\r\n  border: none;\r\n  -webkit-appearance: none;\r\n  -moz-appearance: none;\r\n  text-indent: 1px;\r\n  text-overflow: '';\r\n  box-shadow: none !important;\r\n}\r\n.table-overflow th {\r\n  text-align: center;\r\n}\r\n/* p-radiobutton .ui-radiobutton .ui-radiobutton-box{\r\n  border: 3px solid #ffffff !important;\r\n} */\r\n.seve{\r\n  margin-bottom: 20px;\r\n  margin-right: 12px;\r\n}\r\n.ui-table .ui-table-tbody > tr:nth-child(odd) {\r\n  background-color: #ffffff !important;\r\n}\r\n.footer td{\r\n  background-color: #eaf2fd !important;\r\n}\r\nselect.select-read-only {\r\n  background-color: #ffffff !important;\r\n}\r\n.p-radiobutton-label-horizontal .ui-radiobutton-label {\r\n  width: unset !important;\r\n  margin-right: 10px;\r\n}\r\n\r\n"},Zmz0:function(e,r,t){"use strict";t.r(r),r.default='.grey-card {\n  background-color: #e7e7e7;\n}\n\n.wo-multiple-pn-details {\n  background: #fff;\n  padding: 8px;\n  border: 5px solid #e7e7e7;\n}\n\n.nav-pills-cstm {\n  margin-top: 10px;\n  font-size: 11px;\n}\n\n.nav-pills-cstm li {\n  float: left;\n}\n\n.nav-pills-cstm li a {\n  background-color: #4298ffb0;\n  color: white;\n  margin-right: 4px;\n}\n\nli.nav-item {\n  margin-right: 1px;\n  border-radius: 4px;\n}\n\n.nav-pills .nav-link,\n.nav-pills .show > .nav-link {\n  color: black;\n  background-color: #ddd;\n}\n\n.nav-pills > li > a.active,\n.nav-pills > li > a.active:focus,\n.nav-pills > li > a.active:hover {\n  color: #fff;\n  background-color: #337ab7 !important;\n}\n\n.dropdown-menu.show > a {\n  background-color: white !important;\n  color: black !important;\n}\n\n.hidedata {\n  display: none;\n}\n\n.hidedataOthers {\n  display: none;\n}\n\n.dropdown-submenu {\n  position: relative;\n}\n\n.dropdown-submenu .dropdown-menu {\n  top: 0;\n  left: 100%;\n  margin-top: -1px;\n}\n\nlabel {\n  text-align: left;\n  width: auto;\n  margin-right: 0;\n  font-weight: normal;\n}\n\ninput[type=text],\ninput[type=number],\nselect,\ntextarea {\n  height: 24px !important;\n  border-radius: 5px !important;\n}\n\n.ui-widget {\n  padding: 0px !important;\n}\n\n.nav-pills li a {\n  padding: 5px 4px !important;\n}\n\n@media (min-width: 768px) {\n  .col-md-6 .col-md-6 {\n    max-width: 44%;\n    margin-right: 15px;\n  }\n\n  .col-md-3 {\n    max-width: 22%;\n    margin-right: 15px;\n  }\n}\n\n.isDisabled {\n  pointer-events: none;\n}\n\n.ui-chkbox-box {\n  margin-right: 10px;\n  background-color: red !important;\n}\n\n.c-wf-bcrumb {\n  background-color: transparent;\n}\n\n.c-wf-bcrumb li {\n  font-family: "Roboto";\n  font-size: medium;\n  font-weight: 900;\n  color: #295d92;\n}\n\n.c-wf-bcrumb .breadcrumb-item.active {\n  color: #6c757d !important;\n}\n\n.wf-popup-form label {\n  width: 100px;\n  text-align: right;\n  margin-top: 1px;\n}\n\n.wfl-table-popup-cstm {\n  margin-top: 4px;\n}\n\n.wfl-table-popup-cstm tr th {\n  padding: 8px 4px !important;\n}\n\n.wfl-table-popup-cstm tr td {\n  padding: 5px;\n}\n\n.po-head-wfl {\n  font-weight: bold;\n  font-size: 13px !important;\n  color: #295d92 !important;\n  margin-bottom: 0;\n}\n\n.table > thead > tr > th {\n  padding: 4px;\n  min-width: 80px;\n}\n\n.table tbody tr td {\n  padding: 4px;\n}'},buFw:function(e,r,t){"use strict";t.r(r),r.default='\r\n    <div class="card" style="padding: 10px;">\r\n        <div class="col-md-12">\r\n            <h4 class="po-head-sm">\r\n                  Communication - Phone \r\n                  <a href="#" data-toggle="modal" data-target="#addNewPhone"\r\n                  (click)="addPhone()" *ngIf="!isView">\r\n                  <i class="fa fa-plus-circle fa-lg"></i></a>\r\n            </h4>\r\n        </div>\r\n    </div>\r\n    <div>\r\n        <p-table #dt\r\n        class="rpo-table-cstm rro-table-cstm"\r\n        [value]="data"\r\n        [metaKeySelection]="true"\r\n        [first]="0"\r\n        (onPage)="pageIndexChange($event)"\r\n        [rows]="pageSize"\r\n        [paginator]="true"\r\n        [pageLinks]="3"\r\n        [rowsPerPageOptions]="[10, 20, 50, 100]"\r\n        [columns]="selectedColumns"\r\n        selectionMode="multiple"\r\n        [resizableColumns]="true"\r\n        [reorderableColumns]="true"\r\n        [totalRecords]="totalRecords"\r\n        [scrollable]="true" scrollHeight="450px">\r\n        <ng-template pTemplate="caption">\r\n            <div style="text-align: right; min-height: 30px;">\r\n                <p-multiSelect [options]="headers" [(ngModel)]="selectedColumns"\r\n                [ngModelOptions]="{ standalone: true }" optionLabel="header" \r\n                selectedItemsLabel="{0} columns selected"\r\n                [style]="{ minWidth: \'200px\' }" defaultLabel="Choose Columns" style="float:left"></p-multiSelect>\r\n                <div class="inner-addon right-addon w200 inline-block g-filter-search-cstm">\r\n                    <i class="fa fa-search"></i>\r\n                    <input type="text" pInputText size="50" class="form-control ui-autocomplete-input"\r\n                        (input)="dt.filterGlobal($event.target.value, \'contains\')" placeholder=" Filter"\r\n                        style="height: 28px !important;" />\r\n                </div>\r\n                <button type="button" class="btn btn-primary" matTooltip="Download Data" matTooltipPosition="above"\r\n                pButton icon="fa-download" iconPos="left" label="Export Data" (click)="dt.exportCSV()"\r\n                style="padding:5px 10px !important;"></button>\r\n                <button type="button" class="btn btn-primary" matTooltip="Download Selected Data"\r\n                matTooltipPosition="above" pButton icon="fa-download" iconPos="left" label="Export Selected Data"\r\n                (click)="dt.exportCSV({ selectionOnly: true })" style="padding:5px 10px !important;"></button>\r\n\r\n                \x3c!-- <div class="excel-upload excel-upload-cstm">\r\n                <button type="button" class="btn btn-primary" matTooltip="Download Sample File"\r\n                    matTooltipPosition="above" (click)="sampleExcelDownload()" style="padding: 5px 10px !important;">\r\n                    Sample File Download\r\n                </button>\r\n\r\n                <input type="file" name="upload[]" id="upload" (change)="customExcelUpload($event)"\r\n                    class="uploaddoc upload-file" accept=".xlsx, .xls, .csv" />\r\n                <label for="upload">\r\n                    <span matTooltip="Upload Data (Excel)" matTooltipPosition="above">\r\n                    <i class="fa fa-upload"></i>\r\n                    </span>\r\n                </label>\r\n                </div> --\x3e\r\n            </div>\r\n        </ng-template>\r\n\r\n\r\n            <ng-template pTemplate="colgroup" let-columns>\r\n                <colgroup>\r\n                    <ng-container *ngFor="let col of headers">\r\n                        <col *ngIf="col.field == \'phoneNo\' || col.field == \'contactBy\' || col.field == \'createdDate\' || col.field == \'createdBy\'" style="width:70px">\r\n                        <col *ngIf="col.field == \'notes\'" style="width:180px" >\r\n                    </ng-container>\r\n                </colgroup>\r\n            </ng-template>\r\n            <ng-template pTemplate="header" let-columns>\r\n                <tr>\r\n                    <ng-container *ngFor="let col of headers">\r\n                        <th width="170"\r\n                        *ngIf="col.field == \'phoneNo\' || col.field == \'contactBy\'"\r\n                        pResizableColumn\r\n                        pReorderableColumn\r\n                        [pSortableColumn]="col.field">\r\n                        {{ col.header }}\r\n                            <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                        </th>\r\n                        <th\r\n                        *ngIf="col.field != \'phoneNo\' && col.field != \'contactBy\'"\r\n                        pResizableColumn\r\n                        pReorderableColumn\r\n                        [pSortableColumn]="col.field">\r\n                        {{ col.header }}\r\n                            <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                        </th>\r\n                    </ng-container>\r\n                    \x3c!-- <th style="width:auto"\r\n                        \r\n                        pResizableColumn\r\n                        pReorderableColumn\r\n                        [pSortableColumn]="col.field">\r\n                        {{ col.header }}\r\n                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                    </th> --\x3e\r\n                    <th style="width:50px;position:sticky"\r\n                        *ngIf="selectedColumns.length > 0 && !isView">\r\n                        Actions\r\n                    </th>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <ng-container *ngFor="let col of headers">\r\n                        <th width="170" *ngIf="col.field == \'phoneNo\' || col.field == \'contactBy\'" [ngSwitch]="col.field">\r\n                            <input  pInputText type="text" (input)="\r\n                                dt.filter($event.target.value, col.field, \'contains\')\r\n                            " />\r\n                        </th>\r\n                        <th *ngIf="col.field != \'phoneNo\' && col.field != \'contactBy\'" [ngSwitch]="col.field">\r\n                            <input pInputText type="text" (input)="\r\n                                dt.filter($event.target.value, col.field, \'contains\')\r\n                            " />\r\n                        </th>\r\n                    </ng-container>\r\n                    \x3c!-- <th style="width:auto" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                        <input style="width:100%;" pInputText type="text" (input)="\r\n                            dt.filter($event.target.value, col.field, \'contains\')\r\n                        " />\r\n                    </th> --\x3e\r\n                    <th style="width: 50px;" *ngIf="!isView"></th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate="body" let-rowData let-columns="columns">\r\n                    <tr [pSelectableRowDblClick]="rowData" [pSelectableRow]="rowData">\r\n                        <ng-container *ngFor="let col of headers">\r\n                            <td style="width:70px"\r\n                            *ngIf="col.field == \'contactBy\'"\r\n\r\n                            class="ui-resizable-column"\r\n                            pReorderableRowHandle>\r\n                            {{rowData[col.field]}}\r\n                            </td>\r\n                            <td style="width:70px;"\r\n                            *ngIf="col.field == \'phoneNo\'"\r\n                            class="ui-resizable-column"\r\n                            pReorderableRowHandle>\r\n                            <p class="m-0 p-0 text-right">{{rowData[col.field]}}</p>\r\n                            </td>\r\n                            <td \r\n                                *ngIf="col.field == \'notes\'"\r\n                                class="ui-resizable-column"\r\n                                pReorderableRowHandle>\r\n                                <p class="m-0 p-0 p_textEditor" style="white-space: nowrap;" \r\n                                matTooltip="view" matTooltipPosition="above" [innerHTML]=rowData[col.field]></p>\r\n                            </td>\r\n                            <td \r\n                            *ngIf="col.field == \'createdDate\'"\r\n                            class="ui-resizable-column"\r\n                            pReorderableRowHandle>\r\n                            {{rowData[col.field]}}\r\n                            </td>\r\n                            <td \r\n                            *ngIf="col.field == \'createdBy\'"\r\n                            class="ui-resizable-column"\r\n                            pReorderableRowHandle>\r\n                            {{rowData[col.field]}}\r\n                            </td>\r\n                        </ng-container>\r\n                        \r\n                        <td style="width:50px;position:sticky" class="ui-resizable-column" *ngIf="!isView">\r\n                            \x3c!-- <span data-target="#addNewPhone" data-toggle="modal"><a class="btn nobg btn-edit-cstm"\r\n                                (click)="edit(rowData, i)" matTooltip="Edit" matTooltipPosition="above"><i class="fa fa-pencil"></i></a> </span> --\x3e\r\n                            <span data-toggle="modal" data-target="#viewPhone"><a class="btn nobg btn-view-cstm"\r\n                                (click)="phoneView(rowData)" matTooltip="View" matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n                            <span><a class="btn nobg btn-delete-cstm" (click)="showDeletePhoneConfirmation(rowData)" matTooltip="Delete" matTooltipPosition="above"><i class="fa fa-trash"></i></a> </span>\r\n                            \x3c!-- <button class="btn-edit ptable-wo-btns" mat-icon-button data-target="#addNewPhone" data-toggle="modal"\r\n                            (click)="edit(rowData, i)" matTooltip="Edit">\r\n                                <mat-icon>edit</mat-icon>\r\n                            </button> \r\n                            <button class="btn btn-danger nobg" (click)="deletePhone(rowData)">\r\n                                <i class="fa fa-trash"></i>\r\n                            </button> --\x3e\r\n                        </td>\r\n                    </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate="emptymessage" let-columns *ngIf="data.length == 0">\r\n                <tr>\r\n                  <td colspan="4" style="color: red; font-weight: bold; text-align: center">\r\n                    No records found\r\n                  </td>\r\n                </tr>\r\n            </ng-template>\r\n            \x3c!-- <ng-template pTemplate="summary" id="footer">\r\n                <label id="footer" class="footer">No\'of records:</label>\r\n                <input style="width: 5%;"\r\n                        [(ngModel)]="totalRecords"\r\n                        [disabled]="true"\r\n                        pInputText\r\n                        type="text" />\r\n                &nbsp;&nbsp;\r\n                <label id="footer" class="footer1">Pages Count:</label>\r\n                <input style="width: 5%;"\r\n                        [(ngModel)]="totalPages"\r\n                        [disabled]="true"\r\n                        pInputText\r\n                        type="text" />\r\n            </ng-template> --\x3e\r\n            <ng-template pTemplate="summary" id="footer">\r\n                <label id="footer">Total:</label>\r\n                <input style="width: 5%;" [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText type="text" />\r\n                &nbsp;&nbsp;\r\n                <label id="footer">Pages Count:</label>    \r\n                <input style="width: 5%;" [ngModel]="getPageCount(dt._totalRecords, pageSize)" [disabled]="true" pInputText type="text" />\r\n              </ng-template>\r\n        </p-table>\r\n</div>\r\n\r\n<div id="addNewPhone" class="modal fade" role="dialog" data-backdrop="static">\r\n    <div class="modal-dialog">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">{{ isEdit ? \'Edit\' : \'Add\'  }} Phone </h4>\r\n           \r\n                <div class="col-md-12 shadow-box-cstm">\r\n                    <div class="col-md-6">\r\n                      <p class="fs12">\r\n                        <label class="control-label labels-font-header" style="width: auto;">Customer Name:\r\n                        </label>\r\n                        <span class="span-header-red" style="text-transform: capitalize" *ngIf="isSubWorkOrder">\r\n                            {{subWorkOrderDetails.customerName}}\r\n                        </span>\r\n                        <span class="span-header-red" style="text-transform: capitalize" *ngIf="!isSubWorkOrder">\r\n                            {{savedWorkOrderData.customerId.customerName}}\r\n                        </span>\r\n                      </p>\r\n                    </div>\r\n                    <div class="col-md-6">\r\n                      <p class="fs12">\r\n                        <label class="control-label labels-font-header" style="width: auto;">Customer Code:\r\n                        </label>\r\n                        <span class="span-header-red" style="text-transform: capitalize" *ngIf="isSubWorkOrder">\r\n                            {{subWorkOrderDetails.customerCode}}\r\n                        </span>\r\n                        <span class="span-header-red" style="text-transform: capitalize" *ngIf="!isSubWorkOrder">\r\n                            {{savedWorkOrderData.customerId.customerCode}}\r\n                        </span>\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n           \r\n            </div>\r\n            <form #phoneForm="ngForm" class="form-horizontal" ngNativeValidate>\r\n            <div class="modal-body" *ngIf="addList.length > 0">\r\n                <div class="form-row">                   \r\n                    <div class="col-md-6">\r\n                        <div class="form-group">\r\n                            <label class="col-md-12">Customer Contact <span class="clr-red">*</span></label>\r\n                            <p-autoComplete field="name"\r\n                            [(ngModel)]="customerContact" required\r\n                            name="cusContact" #cusContact="ngModel"\r\n                            errorMessage="Records not found" [forceSelection]="true"\r\n                            [dropdown]="true" [suggestions]="cusContactList"\r\n                            (completeMethod)="filterCustomerContact($event)"\r\n                            [size]="30" [minLength]="1" [dropdown]="true"\r\n                            (onSelect)="contactSelected($event)" \r\n                            class="p-autoComplete-ctsm">\r\n                            </p-autoComplete>\r\n                        </div>\r\n                        <div class="form-group">\r\n                            <label>Phone</label>\r\n                            <input class="form-control" type="text" [(ngModel)] = "addList[0].phoneNo" maxlength="20" name="phoneNo" required disabled/>\r\n                        </div>\r\n                        <div class="form-group">\r\n                            <label class="col-md-12">Contacted By</label>\r\n                            \x3c!-- <select [(ngModel)]="addList[0].contactId"\r\n                                class="form-control" name="contactedBy" required>\r\n                                <option value="">Select</option>\r\n                                <option *ngFor="let employee of employees" [value]="employee.value">{{employee.label}}</option>\r\n                            </select> --\x3e\r\n                            <p-autoComplete field="name"\r\n                                [(ngModel)]="addList[0].contactId"\r\n                                name="employees" errorMessage="Records not found" [forceSelection]="true"\r\n                                [dropdown]="true" [suggestions]="employeeList"\r\n                                (completeMethod)="filterEmployee($event)"\r\n                                [size]="30" [minLength]="1" [dropdown]="true"\r\n                                class="p-autoComplete-ctsm" required>\r\n                            </p-autoComplete>\r\n                        </div>                        \r\n                    </div>\r\n                    <div class="col-md-12">\r\n                        <div class="form-group">\r\n                            <label>Notes</label>\r\n                            <p-editor class="p-editor-cstm" [(ngModel)]="addList[0].notes" style="overflow-y: auto;;"\r\n                                     [style]="{\'height\':\'150px\'}" name="notes"></p-editor>\r\n                            \x3c!-- <p-editor [(ngModel)]="addList[0].notes" [style]="{\'height\':\'320px\'}" name="notes"></p-editor> --\x3e\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button class="btn btn-primary btn-primary" data-dismiss="modal" (click)="savePhone()"\r\n                    style="padding: 6px 12px !important;margin-top: 10px;" [disabled]="!phoneForm.valid">\r\n                    {{(!isEdit)?\'Save\':\'Update\'}}\r\n                </button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" style="padding: 6px 12px !important;margin-top: 10px;">Close</button>\r\n            </div>\r\n        </form>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div id="viewPhone" class="modal fade"\r\n role="dialog" data-backdrop="static">\r\n    <div class="modal-dialog modal-xl">\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title"> Phone Details</h4>\r\n                <div class="col-md-12 shadow-box-cstm">\r\n                    <div class="col-md-6">\r\n                      <p class="fs12">\r\n                        <label class="control-label labels-font-header" style="width: auto;">Customer Name:\r\n                        </label>\r\n                        <span class="span-header-red" style="text-transform: capitalize" *ngIf="isSubWorkOrder">\r\n                            {{subWorkOrderDetails.customerName}}\r\n                        </span>\r\n                        <span class="span-header-red" style="text-transform: capitalize" *ngIf="!isSubWorkOrder">\r\n                            {{savedWorkOrderData.customerId.customerName}}\r\n                        </span>\r\n                      </p>\r\n                    </div>\r\n                    <div class="col-md-6">\r\n                      <p class="fs12">\r\n                        <label class="control-label labels-font-header" style="width: auto;">Customer Code:\r\n                        </label>\r\n                        <span class="span-header-red" style="text-transform: capitalize" *ngIf="isSubWorkOrder">\r\n                            {{subWorkOrderDetails.customerCode}}\r\n                        </span>\r\n                        <span class="span-header-red" style="text-transform: capitalize" *ngIf="!isSubWorkOrder">\r\n                            {{savedWorkOrderData.customerId.customerCode}}\r\n                        </span>\r\n                      </p>\r\n                    </div> \r\n                  </div>\r\n            </div>\r\n            <div class="modal-body">\r\n                \x3c!-- <div class="col-sm-12" *ngIf="phoneViewData">\r\n                    <p>\r\n                        <span class="label"><strong> Customer Contact: </strong></span><span class="value">{{\r\n                            phoneViewData.customerContact\r\n                        }}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label"><strong> Phone: </strong></span><span class="value">{{\r\n                            phoneViewData.phoneNo\r\n                        }}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label"><strong> Contact By: </strong></span><span class="value">{{\r\n                            phoneViewData.contactBy\r\n                        }}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label"><strong> Notes: </strong></span><span class="value">\r\n                            <p class="m-0 p-0 p_textEditor" [innerHTML]=phoneViewData.notes></p></span>\r\n                    </p>\r\n                </div> --\x3e\r\n                <p-table #viewdt\r\n                class="rpo-table-cstm rro-table-cstm"\r\n                [value]="viewdata"\r\n                [metaKeySelection]="true"\r\n                [first]="0"\r\n                (onPage)="viewPageIndexChange($event)"\r\n                [rows]="viewPageSize"\r\n                [paginator]="true"\r\n                [pageLinks]="3"\r\n                [rowsPerPageOptions]="[10, 20, 50, 100]"\r\n                [columns]="selectedColumns"\r\n                selectionMode="multiple"\r\n                [resizableColumns]="true"\r\n                [reorderableColumns]="true"\r\n                [totalRecords]="viewTotalRecords"\r\n                [scrollable]="true" scrollHeight="450px">\r\n                <ng-template pTemplate="caption">\r\n                    <div style="text-align: right; min-height: 30px;">\r\n\r\n                        \x3c!-- <div class="excel-upload excel-upload-cstm">\r\n                        <button type="button" class="btn btn-primary" matTooltip="Download Sample File"\r\n                            matTooltipPosition="above" (click)="sampleExcelDownload()" style="padding: 5px 10px !important;">\r\n                            Sample File Download\r\n                        </button>\r\n\r\n                        <input type="file" name="upload[]" id="upload" (change)="customExcelUpload($event)"\r\n                            class="uploaddoc upload-file" accept=".xlsx, .xls, .csv" />\r\n                        <label for="upload">\r\n                            <span matTooltip="Upload Data (Excel)" matTooltipPosition="above">\r\n                            <i class="fa fa-upload"></i>\r\n                            </span>\r\n                        </label>\r\n                        </div> --\x3e\r\n                    </div>\r\n                </ng-template>\r\n\r\n\r\n                    <ng-template pTemplate="colgroup" let-columns>\r\n                        <colgroup>\r\n                            <ng-container *ngFor="let col of headers">\r\n                                <col *ngIf="col.field == \'phoneNo\' || col.field == \'contactBy\' || col.field == \'createdDate\' || col.field == \'createdBy\'" style="width:70px">\r\n                                <col *ngIf="col.field == \'notes\'" style="width:180px" >\r\n                            </ng-container>\r\n                        </colgroup>\r\n                    </ng-template>\r\n                    <ng-template pTemplate="header" let-columns>\r\n                        <tr>\r\n\r\n                            <th style="width:auto"\r\n                                *ngFor="let col of headers"\r\n                                pResizableColumn\r\n                                pReorderableColumn\r\n                                [pSortableColumn]="col.field">\r\n                                {{ col.header }}\r\n                                <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                            </th>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <th style="width:auto" *ngFor="let col of headers" [ngSwitch]="col.field">\r\n                                <input style="width:100%;" pInputText type="text" (input)="\r\n                                viewdt.filter($event.target.value, col.field, \'contains\')\r\n                                " />\r\n                            </th>\r\n                        </tr>\r\n                    </ng-template>\r\n                    <ng-template pTemplate="body" let-rowData let-columns="columns">\r\n                            <tr [pSelectableRowDblClick]="rowData" [pSelectableRow]="rowData">\r\n                                <ng-container *ngFor="let col of headers">\r\n                                    <td style="width:auto"\r\n                                    *ngIf="col.field == \'contactBy\'"\r\n\r\n                                    class="ui-resizable-column"\r\n                                    pReorderableRowHandle>\r\n                                    {{rowData[col.field]}}\r\n                                    </td>\r\n                                    <td style="width:auto"\r\n                                    *ngIf="col.field == \'phoneNo\'"\r\n                                    class="ui-resizable-column"\r\n                                    pReorderableRowHandle>\r\n                                    <p class="m-0 p-0 text-right">{{rowData[col.field]}}</p>\r\n                                    </td>\r\n                                    <td style="width:auto"\r\n                                        *ngIf="col.field == \'notes\'"\r\n                                        class="ui-resizable-column"\r\n                                        pReorderableRowHandle>\r\n                                        <p class="m-0 p-0 p_textEditor" style="white-space: nowrap;" \r\n                                        matTooltip="view" matTooltipPosition="above" [innerHTML]=rowData[col.field]></p>\r\n                                    </td>\r\n                                    <td style="width:auto"\r\n                                    *ngIf="col.field == \'createdDate\'"\r\n                                    class="ui-resizable-column"\r\n                                    pReorderableRowHandle>\r\n                                    {{rowData[col.field]}}\r\n                                    </td>\r\n                                    <td style="width:auto"\r\n                                    *ngIf="col.field == \'createdBy\'"\r\n                                    class="ui-resizable-column"\r\n                                    pReorderableRowHandle>\r\n                                    {{rowData[col.field]}}\r\n                                    </td>\r\n                                </ng-container>\r\n                            </tr>\r\n                    </ng-template>\r\n                    <ng-template pTemplate="emptymessage" let-columns *ngIf="viewdata.length == 0">\r\n                        <tr>\r\n                        <td colspan="5" style="color: red; font-weight: bold; text-align: center">\r\n                            No records found\r\n                        </td>\r\n                        </tr>\r\n                    </ng-template>\r\n                    \x3c!-- <ng-template pTemplate="summary" id="footer">\r\n                        <label id="footer" class="footer">No\'of records:</label>\r\n                        <input style="width: 5%;"\r\n                                [(ngModel)]="totalRecords"\r\n                                [disabled]="true"\r\n                                pInputText\r\n                                type="text" />\r\n                        &nbsp;&nbsp;\r\n                        <label id="footer" class="footer1">Pages Count:</label>\r\n                        <input style="width: 5%;"\r\n                                [(ngModel)]="totalPages"\r\n                                [disabled]="true"\r\n                                pInputText\r\n                                type="text" />\r\n                    </ng-template> --\x3e\r\n                    <ng-template pTemplate="summary" id="footer">\r\n                        <label id="footer">Total:</label>\r\n                        <input style="width: 5%;" [(ngModel)]="viewdt._totalRecords" [disabled]="true" pInputText type="text" />\r\n                        &nbsp;&nbsp;\r\n                        <label id="footer">Pages Count:</label>    \r\n                        <input style="width: 5%;" [ngModel]="getPageCount(viewdt._totalRecords, viewPageSize)" [disabled]="true" pInputText type="text" />\r\n                    </ng-template>\r\n                </p-table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n </div>\r\n\r\n <div id="deleteRowConfirmation" class="modal fade" role="dialog" data-backdrop="static">\r\n    <div class="modal-dialog modal-sm">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <h4 class="modal-title">Are You Sure Want to Delete the record?</h4>\r\n                <button type="button" class="close" aria-label="Close" data-dismiss="modal">\r\n                    <span aria-hidden="true">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-primary" data-dismiss="modal" (click)="deletePhone(deletingRecord)">Yes</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">No</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n <div class="preloader" *ngIf="isSpinnerVisible">\r\n    <div class="loading">\r\n        <div class="lds-roller"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n    </div>\r\n</div>'},dgsx:function(e,r,t){"use strict";t.r(r),r.default='<div *ngIf="!isView && !isQuote">\r\n  <button data-target="#addNewExclusions" data-toggle="modal" (click)="createNew()" class="btn btn-primary btn-primary"\r\n    style="padding: 6px 12px !important;margin-left: 6px;">\r\n    Add Exclusions \r\n  </button>\r\n</div>\r\n \x3c!-- {{addNewExclusion}} --\x3e\r\n<div id="addNewExclusions" class="modal fade" role="dialog" data-backdrop="static" *ngIf="!view">\r\n  <div class="modal-dialog modal-xlg">\r\n    \x3c!-- Modal content--\x3e\r\n    <div class="modal-content">\r\n      <div class="modal-header">\r\n        <button type="button" class="close" data-dismiss="modal" (click)="closeAddNew()">\r\n          &times;\r\n        </button>\r\n        <h4 class="modal-title"> {{isEdit ? \'Edit\' : \'Add\'}} Exclusions </h4>\r\n      </div>\r\n      <div class="modal-body">\r\n        \x3c!-- && addNewExclusion --\x3e\r\n\x3c!-- && addNewExclusion --\x3e\r\n        <div *ngIf="!isEdit ">\r\n          <grd-exclusions [isQuote]="isQuote" [workFlow]="workFlowObject" [isWorkOrder]="isWorkOrder"\r\n            [markupList]="markupList" [taskList]="taskList" (saveExclusionsListForWO)="saveExclusionsList($event)">\r\n          </grd-exclusions>\r\n        </div>\r\n\r\n        <div *ngIf="isEdit && editData ">\r\n          <grd-exclusions [isQuote]="isQuote" [isEdit]="isEdit" [editData]="editData" [workFlow]="workFlowObject"\r\n            [isWorkOrder]="isWorkOrder" [markupList]="markupList" [taskList]="taskList"\r\n            (updateExclusionsListForWO)="updateExclusionsList($event)">\r\n          </grd-exclusions>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div>\r\n  \x3c!-- <table class="table table-bordered table-striped table-sorting mpn-list-table table-disabled">\r\n      <thead>\r\n          <tr style="color: #f1f1f1;">\r\n              <td colspan="10" style="width: 500px;">&nbsp;</td>\r\n              <td colspan="3" style="display: flex;">\r\n                  <div class="form-group" style="text-align: center;">\r\n                    <p-radioButton\r\n                      class="p-radiobutton-label-horizontal"\r\n                      name="costPlusType"\r\n                      label="T&M"\r\n                      value="Mark Up"\r\n                      [(ngModel)]="costPlusType"\r\n                      [disabled]="isView"\r\n                    ></p-radioButton>\r\n                    <div style="display: flex;">\r\n                      <label>Mat Mark Up %</label>\r\n                      <select class="form-control wf-pub-id" (change)="markupChanged({}, \'all\')" [(ngModel)]="overAllMarkup" [disabled]="isView || costPlusType != \'Mark Up\'">\r\n                        <option value="">Select</option>\r\n                        <option *ngFor="let markUp of markupList" [value]="markUp.value">{{markUp.label}}</option>\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n              </td>\r\n              <td colspan="4">\r\n                <div>\r\n                  <p-radioButton\r\n                    class="p-radiobutton-label-horizontal col-width"\r\n                    name="costPlusType"\r\n                    value="Fixed Mat Price"\r\n                    label="Fixed Mat Price"\r\n                    [(ngModel)]="costPlusType"\r\n                    [disabled]="isView"\r\n                  ></p-radioButton>\r\n                </div>\r\n              </td>\r\n          </tr>\r\n      </thead>\r\n    </table> --\x3e\r\n  <p-table class="rpo-table-cstm rro-table-cstm pub-ptable-cstm ptable-f10" [columns]="cols" [lazy]="false"\r\n    [value]="workOrderExclusionsList" [paginator]="true" [rows]="10">\r\n    <ng-template pTemplate="header" let-columns>\r\n      <tr *ngIf="isQuote">\r\n        <th colspan="7" style="background: #fff; border: 1px solid #fff;border-right: 1px solid #e7ecf1;">&nbsp;</th>\r\n        <ng-container *ngIf="isView">\r\n            <th colspan="3"  style="background: #fff; border: 1px solid #e7ecf1;padding: 0;">\r\n              <div class="display-flex">\r\n                <div class="form-group" style="text-align: center; display: flex;margin-bottom: 0px;">\r\n                  <p-radioButton class="p-radiobutton-label-horizontal p-radiobutton-label-w92" name="costPlusType"\r\n                    label="T&M - Mark Up" value="1" [(ngModel)]="costPlusType" [disabled]="isView" (click)="tmchange()">\r\n                  </p-radioButton>\r\n                  <div>\r\n                    <select class="form-group select-markup" (change)="markupChanged({}, \'all\')" [(ngModel)]="overAllMarkup"\r\n                      [disabled]="isView || costPlusType != 1" style="margin-top: 10px;">\r\n                      <option value="">Select</option>\r\n                      <option *ngFor="let markUp of markupList" [value]="markUp.value">{{markUp.label}}</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n                <div style="float: left; margin-bottom: 7px; margin-left: 30px;">\r\n                  <p-radioButton class="p-radiobutton-label-horizontal" name="costPlusType" value="2"\r\n                    label="Actual" [(ngModel)]="costPlusType" [disabled]="isView" (click)="tmchange()"></p-radioButton>\r\n                </div>\r\n              </div>\r\n            </th>\r\n        </ng-container>\r\n        <ng-container *ngIf="!isView">\r\n            <th colspan="4"  style="background: #fff; border: 1px solid #e7ecf1;padding: 0;">\r\n              <div class="display-flex">\r\n                <div class="form-group" style="text-align: center; display: flex;margin-bottom: 0px;">\r\n                  <p-radioButton class="p-radiobutton-label-horizontal p-radiobutton-label-w92" name="costPlusType"\r\n                    label="T&M - Mark Up" value="1" [(ngModel)]="costPlusType" [disabled]="isView" (click)="tmchange()">\r\n                  </p-radioButton>\r\n                  <div>\r\n                    <select class="form-group select-markup" (change)="markupChanged({}, \'all\')" [(ngModel)]="overAllMarkup"\r\n                      [disabled]="isView || costPlusType != 1" style="margin-top: 10px;">\r\n                      <option value="">Select</option>\r\n                      <option *ngFor="let markUp of markupList" [value]="markUp.value">{{markUp.label}}</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n                <div style="float: left; margin-bottom: 7px; margin-left: 30px;">\r\n                  <p-radioButton class="p-radiobutton-label-horizontal" name="costPlusType" value="2"\r\n                    label="Actual" [(ngModel)]="costPlusType" [disabled]="isView" (click)="tmchange()"></p-radioButton>\r\n                </div>\r\n              </div>\r\n            </th>\r\n        </ng-container>\r\n        <th style="background: #fff; border: 1px solid #fff;"></th>\r\n      </tr>\r\n      <tr>\r\n        <th>Task</th>\r\n        <th *ngFor="let col of columns">\r\n          {{ col.header }}\r\n        </th>\r\n        <ng-container *ngIf="isQuote">\r\n          <th>Billing Method</th>\r\n          <th>Mark Up %</th>\r\n          <th tooltip="Time & Materials">Billing Rate</th>\r\n          <th>Billing Amount</th>\r\n\r\n        </ng-container>\r\n        <th *ngIf="!isView">Actions</th>\r\n      </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n      <ng-container *ngFor="let dt of rowData; let subIndex = index">\r\n        <tr *ngIf="!dt[\'isDeleted\']">\r\n          <td class="vd_cls">\r\n            <select class="form-control select-read-only select_view" [(ngModel)]="dt.taskId" disabled>\r\n              <option value="">Select</option>\r\n              <option *ngFor="let task of taskList" [value]="task.taskId">{{task.description}}</option>\r\n            </select>\r\n          </td>\r\n          <td *ngFor="let col of columns" [ngClass]="{ \' content-to-end\': (col.field==\'quantity\' || col.field==\'unitCost\' ||col.field==\'extendedCost\')}">\r\n           \x3c!-- {{ dt[col.field]}} --\x3e\r\n            \x3c!-- {{col |json}} --\x3e\r\n            \x3c!-- <span *ngIf="dt[col.field] !=\'memo\'" >{{ dt[col.field] }} </span> --\x3e\r\n            <span [innerHTML]=dt[col.field] class="p_textEditor"> </span>\r\n            \x3c!-- <span  *ngIf="dt[col.field] ==\'memo\'">\r\n            \r\n              {{dt[col.field]|json}}\r\n            </span> --\x3e\r\n          </td>\r\n          <ng-container *ngIf="isQuote">\r\n            <td>\r\n              <select class="form-control" [(ngModel)]="dt.billingMethodId" [disabled]="isView" (change)="dt.markUpPercentageId = \'\';dt.billingRate = 0;(dt.billingMethodId == \'2\')?dt.billingAmount = dt.extendedCost:\'\';">\r\n                <option value="">Select</option>\r\n                <option *ngFor="let bm of [{\'label\': \'T&M\', \'value\': \'1\'}, {\'label\': \'Actual\', \'value\': \'2\'}]"\r\n                  [value]="bm.value">{{bm.label}}</option>\r\n              </select>\r\n            </td>\r\n            <td>\r\n              <select class="form-control select-markup" (change)="markupChanged(dt, \'row\')"\r\n                [(ngModel)]="dt.markUpPercentageId" [disabled]="isView || dt.billingMethodId != \'1\'">\r\n                <option value="">Select</option>\r\n                <option *ngFor="let markUp of markupList" [value]="markUp.value">{{ markUp.label }}</option>\r\n              </select>\r\n            </td>\r\n            <td class="content-to-end">{{ dt.billingRate }}</td>\r\n            <td>\r\n              <input type="number" class="form-control" (change)="dt.billingAmount = (dt.billingAmount).toFixed(2)" [(ngModel)]="dt.billingAmount"\r\n                [disabled]="isView || dt.billingMethodId != \'2\'" />\r\n            </td>\r\n          </ng-container>\r\n          <td *ngIf="!isView">\r\n\r\n            <span data-target="#addNewExclusions" data-toggle="modal"><a class="btn nobg btn-edit-cstm"\r\n              (click)="edit(dt, rowIndex, subIndex)" matTooltip="Edit"><i class="fa fa-pencil"></i></a> </span>\r\n          <span><a class="btn nobg btn-delete-cstm" (click)="delete(dt, rowIndex)" matTooltip="Delete"><i\r\n                class="fa fa-trash"></i></a> </span>\r\n\r\n\r\n            \x3c!-- <button class="btn-edit ptable-wo-btns buton_back_bordernon" mat-icon-button\r\n               data-target="#addNewExclusions" data-toggle="modal"\r\n              (click)="edit(dt, rowIndex, subIndex)" matTooltip="Edit">\r\n              <mat-icon>edit</mat-icon>\r\n            </button>\r\n            <button class="btn-delete ptable-wo-btns buton_back_bordernon" mat-icon-button\r\n             matTooltip="Delete"\r\n              (click)="delete(dt, rowIndex)">\r\n              <mat-icon color="warn">delete</mat-icon>\r\n            </button> --\x3e\r\n          </td>\r\n        </tr>\r\n      </ng-container>\r\n      <tr *ngIf="rowData && rowData[0]" class="task-total">\r\n        <td>Total ({{rowData[0][\'taskName\']}})</td>\r\n        <td>&nbsp;</td>\r\n        <td>&nbsp;</td>\r\n        <td class=" content-to-end">{{ getTotalTaskQuantity(rowData) }}</td>\r\n        <td>&nbsp;</td>\r\n        <td class=" content-to-end">{{ getTotalTaskUnitCost(rowData) }}</td>\r\n        <td *ngIf="isQuote">&nbsp;</td>\r\n        <td>&nbsp;</td>\r\n        <ng-container *ngIf="isQuote">\r\n          <td>&nbsp;</td>\r\n          <td></td>\r\n          <td class=" content-to-end">{{ getTotalTaskBillingAmount(rowData) }}</td>\r\n        </ng-container>\r\n        <td *ngIf="!isView">&nbsp;</td>\r\n      </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate="footer" *ngIf="isQuote">\r\n      <tr class="footer">\r\n        <td>Total</td>\r\n        <td>&nbsp;</td>\r\n        <td>&nbsp;</td>\r\n        <td class=" content-to-end">{{ getTotalQuantity() }}</td>\r\n        <td>&nbsp;</td>\r\n        <td class=" content-to-end">{{ getTotalUnitCost() }}</td>\r\n        <td *ngIf="isQuote">&nbsp;</td>\r\n        <td>&nbsp;</td>\r\n        <td >&nbsp;</td>\r\n        <td></td>\r\n        <td class="content-to-end">{{getTotalBillingAmount()}}</td>\r\n        <td *ngIf="!isView">&nbsp;</td>\r\n      </tr>\r\n    </ng-template>\r\n  </p-table>\r\n  <button class="btn btn-primary pull-right" (click)="saveQuotation()" *ngIf="isQuote && !isView">\r\n    Save Exclusions\r\n  </button>\r\n</div>\r\n\r\n\x3c!-- <div class="equipment-tab-content" >\r\n     <div class="x_panel" *ngIf="workOrderExclusionsList">\r\n                                                    <div class="tab-content">\r\n                                                        <div class="table-responsive table-overflow" id="workflow-attributes-block">\r\n                                                            <table class="table table-bordered ">\r\n                                                                <thead>\r\n                                                                    <tr>\r\n                                                                        <th class="text-center">EPN</th>\r\n                                                                        <th class="text-center">EPN Description</th>\r\n                                                                        <th class="text-center">Quantity</th>\r\n                                                                        <th class="text-center">Unit Cost</th>\r\n                                                                        <th class="text-center">Extended Cost</th>\r\n                                                                        <th class="text-center">Memo</th>\r\n                                                                        <th colspan="4" class="text-center" *ngIf="!isView"></th>\r\n                                                                    </tr> \r\n                                                                </thead>\r\n                                                            \r\n                                                                <tbody>\r\n                                                                  <ng-container *ngFor="let w  of workOrderExclusionsList; let i=index;">\r\n                                                                    <tr *ngIf="!w[\'isDeleted\']">\r\n                                                                      <td>{{w.epn}}</td>\r\n                                                                      <td>{{w.epnDescription}}</td>\r\n                                                                      <td>{{w.quantity}}</td>\r\n                                                                      <td>{{w.unitCost}}</td>\r\n                                                                      <td>{{w.extendedCost}}</td>\r\n                                                                      <td>{{w.memo}}</td>\r\n\r\n                                                                      <td *ngIf="!isView">\r\n                                                                        <button\r\n                                                                          class="btn-edit ptable-wo-btns"\r\n                                                                          mat-icon-button\r\n                                                                          data-target="#addNewExclusions"\r\n                                                                          data-toggle="modal"\r\n                                                                          (click)="edit(w, i)"\r\n                                                                          matTooltip="Edit"\r\n                                                                        >\r\n                                                                          <mat-icon>edit</mat-icon>\r\n                                                                        </button>\r\n                                                                      </td>\r\n                                                                      <td *ngIf="!isView">\r\n                                                                        <button\r\n                                                                          class="btn-delete ptable-wo-btns"\r\n                                                                          mat-icon-button\r\n                                                                          matTooltip="Delete"\r\n                                                                          (click)="delete(w, i)"\r\n                                                                        >\r\n                                                                          <mat-icon color="warn">delete</mat-icon>\r\n                                                                        </button>\r\n                                                                      </td>\r\n\r\n                                                                    </tr> \r\n                                                                  </ng-container>\r\n                                                                </tbody>\r\n                                                            </table>\r\n                                                            <button\r\n                                                              class="btn btn-primary pull-right"\r\n                                                              (click)="saveQuotation()"\r\n                                                              *ngIf = "isQuote && !isView"\r\n                                                            >\r\n                                                              Save\r\n                                                            </button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class="clear"></div>\r\n                                                    <br />\r\n                                                    <br />\r\n                                                    <br />\r\n                                                    <br />\r\n                                                </div>\r\n</div> --\x3e'},dxLM:function(e,r,t){"use strict";t.r(r),r.default=".footer1 {\n  margin-right: 0px;\n}\n\n.control-label {\n  text-align: left;\n  width: 100% !important;\n  font-weight: 500;\n}\n\nlabel {\n  width: 100%;\n}\n\n.modal-body-cstm p .label {\n  width: 33%;\n}\n\n.modal-body-cstm p .value {\n  width: 67%;\n}\n\n.view_icon_adjust {\n  color: #333333;\n  margin-left: 4px;\n}"},eVVA:function(e,r,t){"use strict";t.r(r),r.default=".ui-treetable {\n  margin-top: 12px;\n}"},fNk3:function(e,r,t){"use strict";t.r(r),r.default='<div *ngIf="!isSubWorkOrder">\r\n\r\n    \x3c!-- <div class="inline-block display-flex">\r\n        <h3 class="po-head lead">Work Order List</h3>\r\n        &nbsp;&nbsp;&nbsp;&nbsp;\r\n        <a matTooltip="Create Work Order" class="plusicon-cstm new-margin" [routerLink]="[\r\n            \'/workordersmodule/workorderspages/app-work-order-add\'\r\n          ]">\r\n            <i class="fa fa-plus-circle fa-lg"></i>\r\n        </a>\r\n    </div> --\x3e\r\n\r\n    <div class="card new-card">\r\n        <div class="card-header bg-primary new-card-header">\r\n          <div class="row">\r\n            <div class="col">\r\n              <h4 class="new-card-heading">Work Order List</h4>\r\n            </div>\r\n            <div>\r\n              <button\r\n                type="button"\r\n                class="btn-sm new-btn-primary"\r\n                [routerLink]="[\'/workordersmodule/workorderspages/app-work-order-add\']"\r\n              >\r\n              Create Work Order\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n    \r\n\r\n    <div class="card-body new-card-body">\r\n    <p-table #dt class="rpo-table-cstm rro-table-cstm" [value]="workOrderData" [first]="0"\r\n             [rows]="pageSize" [paginator]="true" [pageLinks]="3" [rowsPerPageOptions]="[10, 20, 50, 100]"\r\n             [columns]="selectedColumns" selectionMode="multiple" expandableRows="true" rowExpandMode="single" [lazy]="true"\r\n             (onLazyLoad)="loadData($event)" [resizableColumns]="true" [reorderableColumns]="true"\r\n             [totalRecords]="totalRecords" [scrollable]="true" [metaKeySelection]="true"\r\n             [dataKey]="workOrderPartListDataKeys" scrollHeight="450px" (onPage)="pageIndexChange($event)">\r\n        <ng-template pTemplate="caption">\r\n            <div class="row">\r\n                <div class="col">\r\n                <p-multiSelect [maxSelectedLabels]="2" [options]="headers" optionLabel="header"\r\n                               [(ngModel)]="selectedColumns" [style]="{ minWidth: \'200px\' }" style="float:left"\r\n                               (onChange)="columnsChanges()"></p-multiSelect>\r\n                </div>\r\n                <div class="col">\r\n                    <div\r\n                      style="width: auto !important; float: right;"\r\n                      class="inner-addon right-addon w50 inline-block g-filter-search-cstm"\r\n                    >\r\n                    <i class="fa fa-search"></i>\r\n                    <input type="text" pInputText size="50" class="form-control"\r\n                           (input)="globalSearch($event.target.value)" placeholder=" Filter" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class="row">\r\n            <div class="col">\r\n                <button type="button" class="btn btn-primary new-table-button" pButton icon="fa-download" iconPos="left"\r\n                        style="padding: 5px 12px !important;" label="Export Data" matTooltip="Download Data"\r\n                        matTooltipPosition="above" (click)="dt.exportCSV()"></button>\r\n                <button type="button" class="btn btn-primary new-table-button" pButton icon="fa-download" iconPos="left"\r\n                        label="Export Selected Data" style="padding: 5px 12px !important;"\r\n                        matTooltip="Download Selected Data" matTooltipPosition="above"\r\n                        (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n                \x3c!-- <div class="excel-upload  excel-upload-cstm">\r\n                  <input\r\n                    type="file"\r\n                    name="upload[]"\r\n                    id="upload"\r\n                    (change)="customExcelUpload($event)"\r\n                    class="uploaddoc upload-file"\r\n                    accept=".xlsx, .xls, .csv"\r\n                  />\r\n                  <label for="upload">\r\n                    <span matTooltip="Upload Data (Excel)">\r\n                      <i class="fa fa-upload"></i>\r\n                    </span>\r\n                  </label>\r\n                  &nbsp; &nbsp;\r\n                  <a\r\n                    matTooltip="Create Customer"\r\n                    class="btn btn-success nobg btn-cstm"\r\n                    [routerLink]="[\r\n                      \'/workordersmodule/workorderspages/app-work-order-add\'\r\n                    ]"\r\n                    ><span><i class="fa fa-plus"></i></span\r\n                  ></a>\r\n                </div> --\x3e\r\n            </div>\r\n            <div class="col">\r\n                <div class="">\r\n                  <div\r\n                    class="col"\r\n                    style="width: 656px; float: right; padding-top: 3px;"\r\n                  >\r\n                    <div class="form-group">\r\n                      \x3c!-- <label class="radiobtn-label new-radio-btn-label">Status:</label> --\x3e\r\n                      <div\r\n                        class="pull-left"\r\n                        style="margin-top: 4px; margin-right: 15px;"\r\n                      >\r\n                            <label class="radio-cstm wauto">\r\n                                <input type="radio" name="viewType" class="form-control" value="mpn" [(ngModel)]="viewType"\r\n                                       (click)="changeOfStatus(\'\',\'mpn\')">\r\n                                <span class="checkmark"></span>MPN View\r\n                            </label>\r\n                        </div>\r\n                        <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                            <label class="radio-cstm wauto">\r\n                                <input type="radio" name="viewType" class="form-control" value="wp" [(ngModel)]="viewType"\r\n                                       (click)="changeOfStatus(\'\',\'wp\')">\r\n                                <span class="checkmark"></span>WO View\r\n                            </label>\r\n                        </div>\r\n        \r\n                        <label class="radiobtn-label" style="margin-left: 50px;">Status:</label>\r\n                        <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                            <label class="radio-cstm wauto">\r\n                                <input type="radio" name="woStatus" class="form-control" value="open"\r\n                                       [(ngModel)]="currentStatus" (click)="changeOfStatus(\'open\', \'\')">\r\n                                <span class="checkmark"></span>Open\r\n                            </label>\r\n                        </div>\r\n                        <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                            <label class="radio-cstm wauto">\r\n                                <input type="radio" name="woStatus" class="form-control" value="closed"\r\n                                       [(ngModel)]="currentStatus" (click)="changeOfStatus(\'closed\', \'\')">\r\n                                <span class="checkmark"></span>Closed\r\n                            </label>\r\n                        </div>\r\n                        <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                            <label class="radio-cstm wauto">\r\n                                <input type="radio" name="woStatus" class="form-control" value="canceled"\r\n                                       [(ngModel)]="currentStatus" (click)="changeOfStatus(\'canceled\', \'\')">\r\n                                <span class="checkmark"></span>Cancelled\r\n                            </label>\r\n                        </div>\r\n                        <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                            <label class="radio-cstm wauto">\r\n                                <input type="radio" name="woStatus" class="form-control" value="all" [(ngModel)]="currentStatus"\r\n                                       (click)="changeOfStatus(\'all\', \'\')">\r\n                                <span class="checkmark"></span>All\r\n                            </label>\r\n                        </div>\r\n                        </div>\r\n                        </div>\r\n        \r\n        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </ng-template>\r\n        <ng-template pTemplate="colgroup" let-columns>\r\n            <colgroup>\r\n                <col *ngFor="let col of columns" style="width:140px">\r\n            </colgroup>\r\n        </ng-template>\r\n        <ng-template pTemplate="header" let-columns>\r\n            <tr>\r\n                <th *ngFor="let col of columns" pResizableColumn pReorderableColumn [pSortableColumn]="col.field"\r\n                    style="text-align:center;">\r\n                    {{ col.header }}\r\n                    <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                </th>\r\n                <th style="width:80px;position:sticky" *ngIf="selectedColumns.length > 0">\r\n                    Actions\r\n                </th>\r\n            </tr>\r\n            <tr>\r\n                <th style="width:120px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                    \x3c!-- <input type="text" style="width:100%;" pInputText   (keyup)="filterData($event)"> --\x3e\r\n                    <input *ngIf="col.field !== \'openDate\'\r\n                    && col.field !== \'customerRequestDateType\'\r\n                    && col.field !== \'promisedDateType\'\r\n                    && col.field !== \'estimatedShipDateType\'\r\n                    && col.field !== \'estimatedCompletionDateType\'" style="width:100%;" pInputText type="text"\r\n                           (input)="dt.filter($event.target.value, col.field, \'contains\'); fieldSearch(col.field)">\r\n                    <input type="date" *ngIf="col.field == \'openDate\'" name="openDate" style="width:100%;"\r\n                           (change)="dt.filter($event.target.value, col.field, \'contains\')">\r\n                    <input type="date" *ngIf="col.field == \'customerRequestDateType\'" name="customerRequestDate"\r\n                           style="width:100%;" (change)="dt.filter($event.target.value, col.field, \'contains\')">\r\n                    <input type="date" *ngIf="col.field == \'promisedDateType\'" name="promisedDate" style="width:100%;"\r\n                           (change)="dt.filter($event.target.value, col.field, \'contains\')">\r\n                    <input type="date" *ngIf="col.field == \'estimatedShipDateType\'" name="estimatedShipDate"\r\n                           style="width:100%;" (change)="dt.filter($event.target.value, col.field, \'contains\')">\r\n                    <input type="date" *ngIf="col.field == \'estimatedCompletionDateType\'" name="estimatedCompletionDate"\r\n                           style="width:100%;" (change)="dt.filter($event.target.value, col.field, \'contains\')">\r\n                </th>\r\n                <th style="width:80px;position:sticky"></th>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate="body" let-rowData let-rowIndex="rowIndex" let-expanded="expanded" let-columns="columns">\r\n            \x3c!-- <tr class="ui-widget-header"> --\x3e\r\n            <tr class="ui-widget-header" [pSelectableRow]="rowData" pReorderableRowHandle\r\n                (dblclick)="openViewOnDbl(rowData)">\r\n                \x3c!--  <td>\r\n                   <a [pRowToggler]="rowData">\r\n                     <i\r\n                       (click)="getWorkOrderPartListByWorkOrderId(rowData)"\r\n                       [ngClass]="\r\n                         expanded\r\n                           ? \'fa fa-fw fa-chevron-circle-down\'\r\n                           : \'fa fa-fw fa-chevron-circle-right\'\r\n                       "\r\n                     ></i>\r\n                     <span> {{ rowData.workOrderNum }}</span>\r\n                   </a>\r\n\r\n                 </td> --\x3e\r\n                \x3c!-- [ngStyle]="{\'color\': convertDate(col.field , rowData)   == \'Multiple\' ? \'green\' : \'red\'  }" --\x3e\r\n                <td *ngFor="let col of columns" style="text-overflow: ellipsis; "\r\n                    [matTooltip]="mouseOverData(col.field,  rowData)" matTooltipPosition="above" [matTooltipDisabled]="rowData[\'partNoType\'] != \'Multiple\' ||\r\n                    rowData[\'workScopeType\'] != \'Multiple\' || rowData[\'priorityType\'] != \'Multiple\'||\r\n                    rowData[\'pnDescriptionType\'] != \'Multiple\' || rowData[\'stageType\'] != \'Multiple\' ||\r\n                    rowData[\'customerRequestDateType\'] != \'Multiple\' || rowData[\'estimatedShipDateType\'] != \'Multiple\' ||\r\n                    rowData[\'customerRequestDateType\'] != \'Multiple\' || rowData[\'estimatedCompletionDateType\'] != \'Multiple\'\r\n                    " [ngStyle]="{\'color\': getColorCodeForMultiple(rowData)}">\r\n                    {{convertDate(col.field , rowData)}}\r\n                </td>\r\n                <td style="width:80px" *ngIf="selectedColumns.length > 0">\r\n                    \x3c!-- <p-inputSwitch [(ngModel)]="rowData[\'isActive\']"\r\n                                   name="isActive{{ rowIndex }}"\r\n                                   (onChange)="changeStatus(rowData)"></p-inputSwitch> --\x3e\r\n                    <span data-toggle="modal" data-target="#viewWorkOrder">\r\n                        <a class="btn nobg btn-view-cstm"\r\n                           (click)="view(rowData)" matTooltip="View" matTooltipPosition="above">\r\n                            <i class="fa fa-eye"></i>\r\n                        </a>\r\n                    </span>\r\n                    <span>\r\n                        <a class="btn nobg btn-edit-cstm" (click)="edit(rowData)" matTooltip="Edit"\r\n                           matTooltipPosition="above"><i class="fa fa-pencil"></i></a>\r\n                    </span>\r\n                    \x3c!-- <span data-toggle="modal" data-target="#contentHist"><a class="btn nobg btn-hist-cstm"\r\n                            matTooltip="History" matTooltipPosition="above"><i class="fa fa-history"></i></a></span> --\x3e\r\n                    \x3c!-- <span data-toggle="modal" data-target="#viewWorkOrder">\r\n                        <a class="btn btn-info boxed-float-btn nobg"\r\n                           data-toggle="tooltip"\r\n                           (click)="view(rowData)">\r\n                            <i class="fa fa-eye"></i>\r\n                        </a>\r\n                    </span> --\x3e\r\n                    \x3c!-- <button class="btn-edit ptable-wo-btns"\r\n                            mat-icon-button\r\n                            (click)="edit(rowData)"\r\n                            matTooltip="Edit">\r\n                        <mat-icon>edit</mat-icon>\r\n                    </button> --\x3e\r\n                    \x3c!-- <button class="btn-delete ptable-wo-btns"\r\n                            mat-icon-button\r\n                            matTooltip="Delete"\r\n                            data-target="#delete"\r\n                            data-toggle="modal"\r\n                            (click)="delete(rowData)">\r\n                        <mat-icon color="warn">delete</mat-icon>\r\n                    </button> --\x3e\r\n                    \x3c!-- <button class="btn-history ptable-wo-btns"\r\n                            mat-icon-button\r\n                            matTooltip="History"\r\n                            data-target="#contentHist"\r\n                            data-toggle="modal"\r\n                            (click)="getAuditHistoryById(rowData)">\r\n                        <mat-icon color="green">history</mat-icon>\r\n                    </button>  dt._totalRecords--\x3e\r\n                </td>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate="summary" id="footer">\r\n            <label id="footer" class="footer">Total:</label>\r\n            <input style="width: 5%;" [(ngModel)]=" totalRecords" [disabled]="true" pInputText type="text" />\r\n            &nbsp;&nbsp;\r\n            <label id="footer" class="footer1">Pages Count:</label>\r\n            <input style="width: 5%;" [ngModel]="getPageCount(dt._totalRecords, pageSize)" [disabled]="true" pInputText\r\n                   type="text" />\r\n        </ng-template>\r\n        \x3c!-- <ng-template pTemplate="rowexpansion" let-rowData let-rowIndex="rowIndex">\r\n                  <tr>\r\n        [(ngModel)]="totalPages"\r\n                  </tr>\r\n                </ng-template> --\x3e\r\n    </p-table>\r\n</div>\r\n</div>\r\n</div>\r\n\x3c!-- Modal --\x3e\r\n<div id="viewWorkOrder" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-xl">\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal" (click)="closeView.emit(false); workOrderId = 0;">\r\n                    &times;\r\n                </button>\r\n                <h4 class="modal-title">Work Order View</h4>\r\n            </div>\r\n\r\n            <div class="card-body" *ngIf="workOrderId">\r\n                <app-work-view-component [workOrderId]="workOrderId" [currencyList]="currencyList" [employeesOriginalData]="employeesOriginalData"></app-work-view-component>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="closeView.emit(false); workOrderId = 0;">\r\n                    Close\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div *ngIf="isSubWorkOrder">\r\n    <h4 class="modal-title">Work Order View</h4>\r\n    <div class="card-body" *ngIf="viewWorkOrderHeader">\r\n        <div class="card">\r\n            <div class="card-body">\r\n                <div class="table-responsive default-bg clear">\r\n\r\n                    <div>\r\n                        <div class="col-md-6">\r\n\r\n                            <p>\r\n                                <span class="label"><b> MPN Type : </b></span><span class="value">\r\n                                    {{\r\n                  viewWorkOrderHeader.singleMPN\r\n                                    }}\r\n                                </span>\r\n\r\n                            </p>\r\n                        </div>\r\n                        <div class="col-md-6">\r\n\r\n\r\n                            <p>\r\n                                <span class="label"><b> Work Order Type : </b></span><span class="value">\r\n                                    {{\r\n                      viewWorkOrderHeader.workOrderType\r\n                                    }}\r\n                                </span>\r\n\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                    <hr style="clear: both;">\r\n\r\n                    <div>\r\n                        <div class="col-sm-3">\r\n                            <p>\r\n                                <span class="label"><b>WorkOrder Number: </b></span><span class="value">\r\n                                    {{\r\n                            viewWorkOrderHeader.workOrderNumber\r\n                                    }}\r\n                                </span>\r\n                            </p>\r\n                            <p>\r\n                                <span class="label"><b>Open Date: </b></span><span class="value">\r\n                                    {{\r\n                            viewWorkOrderHeader.openDate | date: \'MM/dd/yyyy\'\r\n                                    }}\r\n                                </span>\r\n                            </p>\r\n                            <p>\r\n                                <span class="label"><b>WO Status: </b></span><span class="value">{{ viewWorkOrderHeader.woStatus }}</span>\r\n                            </p>\r\n                        </div>\r\n                        <div class="col-sm-3">\r\n                            <p>\r\n                                <span class="label"><b>Customer Name: </b></span><span class="value">\r\n                                    {{\r\n                            viewWorkOrderHeader.customerName\r\n                                    }}\r\n                                </span>\r\n                            </p>\r\n                            <p>\r\n                                <span class="label"><b>Customer Code: </b></span><span class="value"></span>\r\n                            </p>\r\n                            <p>\r\n                                <span class="label"><b>Customer Ref: </b></span><span class="value"></span>\r\n                            </p>\r\n                        </div>\r\n\r\n                        <div class="col-sm-3">\r\n                            <p>\r\n                                <span class="label"><b>Contract: </b></span><span class="value">\r\n                                    {{\r\n                            viewWorkOrderHeader.isContractAvl\r\n                                    }}\r\n                                </span>\r\n                            </p>\r\n                            <p *ngIf="isContractAvl">\r\n                                <span class="label"> <b>Contract Reference:</b> </span><span class="value">\r\n                                    {{\r\n                            viewWorkOrderHeader.contractReference\r\n                                    }}\r\n                                </span>\r\n                            </p>\r\n                        </div>\r\n                        <div class="col-sm-3">\r\n                            <p>\r\n                                <span class="label"><b>Credit Limit & Terms: </b></span><span class="value">\r\n                                    {{ viewWorkOrderHeader.creditTerm }} &\r\n                                    {{ viewWorkOrderHeader.creditLimit }}\r\n                                </span>\r\n                            </p>\r\n                            <p>\r\n                                <span class="label"><b>Employee: </b></span><span class="value">{{ viewWorkOrderHeader.employee }}</span>\r\n                            </p>\r\n                            <p>\r\n                                <span class="label"><b>Sales person: </b></span><span class="value">\r\n                                    {{\r\n                            viewWorkOrderHeader.salesperson\r\n                                    }}\r\n                                </span>\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="table-responsive" *ngIf="viewWorkOrderMPN" style="height: 300px;">\r\n                    <table class="table table-bordered table-striped table-fixed table-sorting mpn-list-table"\r\n                           id="mpn-list-table">\r\n                        <thead>\r\n                            <tr>\r\n                                <th rowspan="2">MPN *</th>\r\n                                <th rowspan="2">MPN Description *</th>\r\n                                <th rowspan="2">Revised MPN</th>\r\n                                \x3c!-- <th rowspan="2">Work Scope *</th> --\x3e\r\n                                <th rowspan="2">NTE</th>\r\n                                <th rowspan="2">Condition Id *</th>\r\n                                <th rowspan="2">Stock Line Num *</th>\r\n                                <th rowspan="2">Serial Num *</th>\r\n                                <th rowspan="2">CMM/Pub Ref</th>\r\n                                \x3c!-- <th rowspan="2">Workflow ID </th> --\x3e\r\n                                <th rowspan="2">Stage *</th>\r\n                                <th rowspan="2">Status *</th>\r\n                                <th rowspan="2">Priority *</th>\r\n                                <th rowspan="2">Customer Request Date *</th>\r\n                                <th rowspan="2">Promised Date *</th>\r\n                                <th rowspan="2">Est. Comp Date *</th>\r\n                                <th rowspan="2">Est. Ship Date *</th>\r\n                                <th colspan="2">Restrictions</th>\r\n                                <th rowspan="2">Tech Name</th>\r\n                                <th rowspan="2">Tech Station</th>\r\n                                <th rowspan="2">Tear Down Report</th>\r\n                                <th colspan="2">TAT (Days)</th>\r\n                                \x3c!-- <th rowspan="2"></th> --\x3e\r\n                            </tr>\r\n                            <tr>\r\n                                <th>PMA</th>\r\n                                <th>DER</th>\r\n                                <th>Current</th>\r\n                                <th>Standard</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr class="mpn-row" style="display: table-row;"\r\n                                *ngFor="let p of viewWorkOrderMPN; let i = index">\r\n                                <td>\r\n                                    {{ p.partNumber }}\r\n                                </td>\r\n                                <td>\r\n                                    {{ p.partDescription }}\r\n                                </td>\r\n                                <td>\r\n                                    {{ p.revisedPartNo }}\r\n                                </td>\r\n                                <td>\r\n                                    {{ p.nte }}\r\n                                </td>\r\n                                <td>\r\n                                    {{ p.condition }}\r\n                                </td>\r\n                                <td>\r\n                                    {{ p.stockLine }}\r\n                                </td>\r\n\r\n                                <td>\r\n                                    {{ p.serialNumber }}\r\n                                </td>\r\n\r\n                                <td>\r\n                                    {{ p.publicationId }}\r\n                                </td>\r\n                                <td>\r\n                                    {{ p.workOrderStage }}\r\n                                </td>\r\n                                <td>\r\n                                    {{ p.workOrderStatus }}\r\n                                </td>\r\n                                <td>\r\n                                    {{ p.priority }}\r\n                                </td>\r\n                                <td>\r\n                                    {{ p.customerRequestDate | date: \'MM/dd/yyyy\' }}\r\n                                </td>\r\n                                <td>\r\n                                    {{ p.promisedDate | date: \'MM/dd/yyyy\' }}\r\n                                </td>\r\n                                <td>\r\n                                    {{ p.estimatedShipDate | date: \'MM/dd/yyyy\' }}\r\n                                </td>\r\n\r\n                                <td>\r\n                                    {{ p.estimatedCompletionDate | date: \'MM/dd/yyyy\' }}\r\n                                </td>\r\n\r\n                                <td>\r\n                                    {{ p.isDER }}\r\n                                </td>\r\n                                <td>\r\n                                    {{ p.isPMA }}\r\n                                </td>\r\n                                <td>\r\n                                    {{ p.firstName }}\r\n                                </td>\r\n                                <td>\r\n                                    {{ p.techStation }}\r\n                                </td>\r\n                                <td>\r\n                                    {{ p.tearDownReport }}\r\n                                </td>\r\n                                <td>\r\n                                    {{ p.tatDaysCurrent }}\r\n                                </td>\r\n                                <td>\r\n                                    {{ p.tatDaysStandard }}\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class="card" *ngIf="showMPN">\r\n            <div class="card-body">\r\n                <p-dropdown [options]="mpnPartNumbersList" placeholder="Select Part Number" class="p-dropdown-custom-md"\r\n                            (onChange)="changeofMPN($event.value)">\r\n                </p-dropdown>\r\n            </div>\r\n        </div>\r\n\r\n        <div class="card">\r\n            <div class="card-body" *ngIf="showTableGrid">\r\n                <p-tabView class="pas-tabview" [activeIndex]="activeIndex">\r\n\r\n                    <p-tabPanel *ngIf="workFlowId" header="Work Flow">\r\n                        <app-workflow-list [isWorkOrder]="isWorkOrder" [workFlowId]="workFlowId"></app-workflow-list>\r\n                    </p-tabPanel>\r\n\r\n                    <p-tabPanel header="Material List">\r\n                        <div class="equipment-tab-content">\r\n                            <div class="x_panel" *ngIf="workOrderMaterialList">\r\n                                <div class="tab-content">\r\n                                    <div class="table-responsive table-overflow" id="workflow-attributes-block">\r\n                                        <table class="table table-bordered ">\r\n                                            <thead>\r\n                                                <tr>\r\n\r\n                                                    <th class="text-center">Part Number </th>\r\n                                                    <th class="text-center">Part Description</th>\r\n                                                    <th class="text-center">Alternate PN</th>\r\n                                                    <th class="text-center">SerialNumber</th>\r\n                                                    <th class="text-center">Provision</th>\r\n                                                    <th class="text-center">OEM</th>\r\n                                                    <th class="text-center">Control</th>\r\n                                                    <th class="text-center">Condition</th>\r\n                                                    <th class="text-center">Item Type</th>\r\n                                                    <th class="text-center">Qunatity Requried</th>\r\n                                                    <th class="text-center">Qunatity Reserved</th>\r\n                                                    <th class="text-center">Qunatity TurnIn</th>\r\n                                                    <th class="text-center">Qunatity Issued</th>\r\n                                                    <th class="text-center">Qunatity BackOrder</th>\r\n                                                    <th class="text-center">Qunatity Remaining</th>\r\n                                                    <th class="text-center">Unit Cost</th>\r\n                                                    <th class="text-center">Extended Cost</th>\r\n                                                    <th class="text-center">Currency</th>\r\n                                                    <th class="text-center">Purchase OrderNumber</th>\r\n                                                    <th class="text-center">Repair OrderNumber</th>\r\n                                                    <th class="text-center">Part Quantity OnHand</th>\r\n                                                    <th class="text-center">Part Quantity Available</th>\r\n                                                    <th class="text-center">Part Quantity OnOrder</th>\r\n                                                    <th class="text-center">WorkOrder Number</th>\r\n                                                    <th class="text-center">Sub WorkOrder</th>\r\n                                                    <th class="text-center">SalesOrder</th>\r\n                                                    <th class="text-center">Condition</th>\r\n                                                    <th class="text-center">TimeLife</th>\r\n                                                    <th class="text-center">Ware House</th>\r\n                                                    <th class="text-center">Location</th>\r\n                                                    <th class="text-center">Shelf</th>\r\n                                                    <th class="text-center">Bin</th>\r\n\r\n                                                </tr>\r\n                                            </thead>\r\n\r\n                                            <tbody>\r\n                                                <tr *ngFor="let m  of workOrderMaterialList; let i=index;">\r\n                                                    <td>{{m.partNumber}}</td>\r\n                                                    <td>{{m.partDescription}}</td>\r\n                                                    <td>{{m.altPartNumber}}</td>\r\n                                                    <td>{{m.serialNumber}}</td>\r\n                                                    <td>{{m.provision}}</td>\r\n                                                    <td>{{m.oem}}</td>\r\n                                                    <td>{{m.control}}</td>\r\n                                                    <td>{{m.condition}}</td>\r\n                                                    <td>{{m.itemType}}</td>\r\n                                                    <td>{{m.qunatityRequried}}</td>\r\n                                                    <td>{{m.qunatityReserved}}</td>\r\n                                                    <td>{{m.qunatityTurnIn}}</td>\r\n                                                    <td>{{m.qunatityIssued}}</td>\r\n                                                    <td>{{m.qunatityBackOrder}}</td>\r\n                                                    <td>{{m.qunatityRemaining}}</td>\r\n                                                    <td>{{m.unitCost}}</td>\r\n                                                    <td>{{m.extendedCost}}</td>\r\n                                                    <td>{{m.currency}}</td>\r\n                                                    <td>{{m.purchaseOrderNumber}}</td>\r\n                                                    <td>{{m.repairOrderNumber}}</td>\r\n                                                    <td>{{m.partQuantityOnHand}}</td>\r\n                                                    <td>{{m.partQuantityAvailable}}</td>\r\n                                                    <td>{{m.partQuantityOnOrder}}</td>\r\n                                                    <td>{{m.receiver}}</td>\r\n                                                    <td>{{m.workOrderNumber}}</td>\r\n                                                    <td>{{m.subWorkOrder}}</td>\r\n                                                    <td>{{m.salesOrder}}</td>\r\n                                                    <td>{{m.timeLife}}</td>\r\n                                                    <td>{{m.wareHouse}}</td>\r\n                                                    <td>{{m.location}}</td>\r\n                                                    <td>{{m.shelf}}</td>\r\n                                                    <td>{{m.bin}}</td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="clear"></div>\r\n                                <br />\r\n                                <br />\r\n                                <br />\r\n                                <br />\r\n                            </div>\r\n                        </div>\r\n                    </p-tabPanel>\r\n\r\n\r\n                    <p-tabPanel header="Labor">\r\n\r\n                        <p-accordion [multiple]="true">\r\n\r\n                            <p-accordionTab header="{{x.task}}" *ngFor="let x of workOrderLaborList; let i = index;">\r\n\r\n                                <div class="equipment-tab-content">\r\n                                    <div class="x_panel" *ngIf="workOrderLaborList">\r\n                                        <div class="tab-content">\r\n                                            <div class="table-responsive table-overflow" id="workflow-attributes-block">\r\n                                                <table class="table table-bordered ">\r\n                                                    <thead>\r\n                                                        <tr>\r\n                                                            <th class="text-center">Expertise</th>\r\n                                                            <th class="text-center">Description</th>\r\n\r\n                                                        </tr>\r\n                                                    </thead>\r\n\r\n                                                    <tbody>\r\n                                                        <tr>\r\n                                                            <td>{{x.expertise}}</td>\r\n                                                            <td>{{x.hours}}</td>\r\n                                                        </tr>\r\n                                                    </tbody>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class="clear"></div>\r\n                                        <br />\r\n                                        <br />\r\n                                        <br />\r\n                                        <br />\r\n                                    </div>\r\n                                </div>\r\n                            </p-accordionTab>\r\n\r\n\r\n\r\n\r\n                        </p-accordion>\r\n\r\n\r\n\r\n                    </p-tabPanel>\r\n                    <p-tabPanel header="Tools">\r\n\r\n                        <div class="equipment-tab-content" *ngIf="workOrderAssetList">\r\n                            <div class="x_panel">\r\n                                <div class="tab-content">\r\n                                    <div class="table-responsive" id="workflow-attributes-block">\r\n                                        <table class="table table-bordered ">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th class="text-center">Tool Id </th>\r\n                                                    <th class="text-center">Tool Name</th>\r\n                                                    <th class="text-center">Tool Description</th>\r\n                                                    <th class="text-center">Tool Type</th>\r\n                                                    <th class="text-center">Qty</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                <tr *ngFor="let asset of workOrderAssetList; let i=index;">\r\n                                                    <td>{{asset.assetId}}</td>\r\n                                                    <td>{{asset.name}}</td>\r\n                                                    <td>{{asset.description}}</td>\r\n                                                    <td>{{asset.assetTypeName}}</td>\r\n                                                    <td>{{asset.quantity}}</td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n\r\n                                    </div>\r\n                                </div>\r\n                                <div class="clear"></div>\r\n                                <br />\r\n                                <br />\r\n                                <br />\r\n                                <br />\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    </p-tabPanel>\r\n\r\n\r\n                    <p-tabPanel header="Quote">\r\n\r\n                        <div class="h-300">\r\n                            <h3>No Data Found</h3>\r\n                        </div>\r\n\r\n                    </p-tabPanel>\r\n                    <p-tabPanel header="Main Component">\r\n                        <div class="h-300">\r\n                            <h3>No Data Found</h3>\r\n                        </div>\r\n                    </p-tabPanel>\r\n                    <p-tabPanel header="Billing/Invocing">\r\n                        <div class="h-300" *ngIf="billing">\r\n                            \x3c!-- <h3>No Data Found</h3> --\x3e\r\n                            <app-work-order-billing [billingorInvoiceForm]="billing" [legalEntityList]="legalEntityList"\r\n                                                    [currencyList]="currencyList" [savedWorkOrderData]="savedWorkOrderData"\r\n                                                    [employeesOriginalData]="employeesOriginalData" [isEditBilling]="isEditBilling"\r\n                                                    (saveWOBilling)="saveWorkOrderBilling($event)" (updateWOBilling)="saveWorkOrderBilling($event)"\r\n                                                    [workOrderQuoteId]="workOrderQuoteId" [quoteExclusionList]="quoteExclusionList"\r\n                                                    [quoteMaterialList]="quoteMaterialList" [quoteFreightsList]="quoteFreightsList"\r\n                                                    [quoteChargesList]="quoteChargesList" [quoteLaborList]="quoteLaborList" [taskList]="taskList" [buildMethodDetails]="buildMethodDetails" [isViewMode]="isView"></app-work-order-billing>\r\n                        </div>\r\n                        <div class="h-300" *ngIf="!billing">\r\n                            <h3>No Data Found</h3>\r\n                        </div>\r\n                    </p-tabPanel>\r\n\r\n                    <p-tabPanel header="Shipping">\r\n                        <div class="h-300">\r\n                            <h3>No Data Found</h3>\r\n                        </div>\r\n                    </p-tabPanel>\r\n\r\n                    <p-tabPanel header="Sub-WO">\r\n                        <div class="h-300">\r\n                            <h3>No Data Found</h3>\r\n                        </div>\r\n                    </p-tabPanel>\r\n\r\n                    <p-tabPanel>\r\n                        <ng-template pTemplate="header" style="height: 36px; width: 134px;">\r\n                            Communication\r\n                            <i (click)="showOtherCommunicationOptions()" class="fa fa-caret-down" aria-hidden="true"></i>\r\n                            <div class="vertical-menu-wolist" *ngIf="communicationOptionShow">\r\n                                <a (click)="otherCommunicationOptionSelected(\'memo\')"\r\n                                   style="color: #333333 !important">Memo</a>\r\n                                <a (click)="otherCommunicationOptionSelected(\'email\')"\r\n                                   style="color: #333333 !important">Email</a>\r\n                                <a (click)="otherCommunicationOptionSelected(\'phone\')"\r\n                                   style="color: #333333 !important">Phone</a>\r\n                                <a (click)="otherCommunicationOptionSelected(\'text\')"\r\n                                   style="color: #333333 !important">Text</a>\r\n                            </div>\r\n\r\n                        </ng-template>\r\n                        <div>\r\n                            <div>\r\n                                <div *ngIf="selectedCommunicationOption == \'memo\'">\r\n                                    <app-memo [workOrderId]="workOrderId"></app-memo>\r\n                                </div>\r\n                                <div *ngIf="selectedCommunicationOption == \'email\'">\r\n                                    <app-email [workOrderId]="workOrderId"></app-email>\r\n                                </div>\r\n                                <div *ngIf="selectedCommunicationOption == \'phone\'">\r\n                                    <app-text [workOrderId]="workOrderId"></app-text>\r\n                                </div>\r\n                                <div *ngIf="selectedCommunicationOption == \'text\'">\r\n                                    <app-phone [workOrderId]="workOrderId"></app-phone>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </p-tabPanel>\r\n\r\n\r\n                    <p-tabPanel header="Documents">\r\n                        <div class="h-300">\r\n                            <h3>No Data Found</h3>\r\n                        </div>\r\n                    </p-tabPanel>\r\n\r\n\r\n                    <p-tabPanel header="Work Complete">\r\n                        <div class="h-300">\r\n                            <h3>No Data Found</h3>\r\n                        </div>\r\n                    </p-tabPanel>\r\n\r\n\r\n\r\n                    <p-tabPanel header="WO Analysis">\r\n                        <div class="h-300">\r\n                            <h3>No Data Found</h3>\r\n                        </div>\r\n                    </p-tabPanel>\r\n\r\n\r\n                    <p-tabPanel header="Labor Analysis">\r\n                        <div class="h-300">\r\n                            <h3>No Data Found</h3>\r\n                        </div>\r\n                    </p-tabPanel>\r\n                    <p-tabPanel header="Tear Down">\r\n                        <div class="h-300">\r\n                            <h3>workFlowWorkOrderId : {{workFlowWorkOrderId }}</h3>\r\n\r\n                            <app-teardown-overview *ngIf="workFlowWorkOrderId"\r\n                                                   [workFlowWorkOrderId1]="workFlowWorkOrderId"></app-teardown-overview>\r\n                        </div>\r\n                    </p-tabPanel>\r\n\r\n\r\n                    <p-tabPanel>\r\n                        <ng-template pTemplate="header" style="height: 36px; width: 134px;">\r\n                            Other Options\r\n                            <i (click)="showOtherOptions()" class="fa fa-caret-down" aria-hidden="true"></i>\r\n                            <div class="vertical-menu-wolist" *ngIf="otherOptionShow">\r\n                                <a (click)="otherOptionSelected(\'freight\')"\r\n                                   style="color: #333333 !important">Freight</a>\r\n                                <a (click)="otherOptionSelected(\'contactGrid\')"\r\n                                   style="color: #333333 !important">Contact Grid</a>\r\n                                <a (click)="otherOptionSelected(\'accounting\')"\r\n                                   style="color: #333333 !important">Accounting</a>\r\n                                <a (click)="otherOptionSelected(\'charges\')"\r\n                                   style="color: #333333 !important">Charges</a>\r\n                                <a (click)="otherOptionSelected(\'exclusion\')"\r\n                                   style="color: #333333 !important">Exclusion</a>\r\n                            </div>\r\n\r\n                        </ng-template>\r\n\r\n                        <div>\r\n\r\n                            <div class="equipment-tab-content" *ngIf="selectedOtherSubTask === \'charges\'">\r\n                                <div class="x_panel" *ngIf="workOrderChargesList">\r\n                                    <div class="tab-content">\r\n                                        <div class="table-responsive table-overflow" id="workflow-attributes-block">\r\n                                            \x3c!-- <table class="table table-bordered ">\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th class="text-center">Charge Type </th>\r\n                                                        <th class="text-center">Description</th>\r\n                                                        <th class="text-center">Quantity</th>\r\n                                                        <th class="text-center">Unit Cost</th>\r\n                                                        <th class="text-center">Extented Cost</th>\r\n                                                        <th class="text-center">Unit Price</th>\r\n                                                        <th class="text-center">Extended Price</th>\r\n                                                        <th class="text-center">vendorName</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n\r\n                                                <tbody>\r\n                                                    <tr *ngFor="let w  of workOrderChargesList; let i=index;">\r\n                                                        <td>{{w.chargeType}}</td>\r\n                                                        <td>{{w.description}}</td>\r\n                                                        <td>{{w.quantity}}</td>\r\n                                                        <td>{{w.unitCost}}</td>\r\n                                                        <td>{{w.extendedCost}}</td>\r\n                                                        <td>{{w.unitPrice}}</td>\r\n                                                        <td>{{w.extendedPrice}}</td>\r\n                                                        <td>{{w.vendorName}}</td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table> --\x3e\r\n                                            <app-work-order-charges workFlowObject="[]" [isWorkOrder]="isWorkOrder"\r\n                                                                    [workOrderChargesList]="workOrderChargesList" [taskList]="taskList"\r\n                                                                    (refreshData)="getChargesListByWorkOrderId(0, 0)"></app-work-order-charges>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="clear"></div>\r\n                                    <br />\r\n                                    <br />\r\n                                    <br />\r\n                                    <br />\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n                        <div *ngIf="selectedOtherSubTask === \'exclusion\'">\r\n                            <app-work-order-exclusions [workFlowObject]="workFlowObject" [isWorkOrder]="isWorkOrder"\r\n                                                       [workOrderExclusionsList]="workOrderExclusionsList" [taskList]="taskList"\r\n                                                       (refreshData)="getExclusionListByWorkOrderId(0, 0)" [isView]="isView"></app-work-order-exclusions>\r\n\r\n                            \x3c!-- <div class="equipment-tab-content">\r\n                                <div class="x_panel" *ngIf="workOrderExclusionsList">\r\n                                    <div class="tab-content">\r\n                                        <div class="table-responsive table-overflow" id="workflow-attributes-block">\r\n                                            <table class="table table-bordered ">\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th class="text-center">EPN</th>\r\n                                                        <th class="text-center">EPN Description</th>\r\n                                                        <th class="text-center">Quantity</th>\r\n                                                        <th class="text-center">Unit Cost</th>\r\n                                                        <th class="text-center">Extended Cost</th>\r\n                                                        <th class="text-center">Memo</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n\r\n                                                <tbody>\r\n                                                    <tr *ngFor="let w  of workOrderExclusionsList; let i=index;">\r\n                                                        <td>{{w.epn}}</td>\r\n                                                        <td>{{w.epnDescription}}</td>\r\n                                                        <td>{{w.quantity}}</td>\r\n                                                        <td>{{w.unitCost}}</td>\r\n                                                        <td>{{w.extendedCost}}</td>\r\n                                                        <td>{{w.memo}}</td>\r\n\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="clear"></div>\r\n                                    <br />\r\n                                    <br />\r\n                                    <br />\r\n                                    <br />\r\n                                </div>\r\n                            </div> --\x3e\r\n\r\n                        </div>\r\n                        <div *ngIf="selectedOtherSubTask === \'freight\'">\r\n                            <app-work-order-freight [freightForm]="freight" [workOrderFreightList]="workOrderFreightList"\r\n                                                    [savedWorkOrderData]="savedWorkOrderData" [taskList]="taskList" [isView]="isView">\r\n                            </app-work-order-freight>\r\n                        </div>\r\n                    </p-tabPanel>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    \x3c!-- <p-tabPanel header="Publications">\r\n\r\n                         <div class="equipment-tab-content" >\r\n                             <div class="x_panel" *ngIf="workOrderPublicationList">\r\n                                 <div class="tab-content">\r\n                                     <div class="table-responsive table-overflow" id="workflow-attributes-block">\r\n                                         <table class="table table-bordered ">\r\n                                             <thead>\r\n                                                 <tr>\r\n                                                     <th class="text-center">Publication ID</th>\r\n                                                     <th class="text-center">Description</th>\r\n                                                     <th class="text-center">Type</th>\r\n                                                     <th class="text-center">Revision Date</th>\r\n                                                     <th class="text-center">Sequence</th>\r\n                                                     <th class="text-center">Source</th>\r\n                                                     <th class="text-center">AirCraft Manufacturer</th>\r\n                                                     <th class="text-center">AirCraft Model</th>\r\n                                                     <th class="text-center">AirCraft DashNumber</th>\r\n                                                     <th class="text-center">Location</th>\r\n                                                     <th class="text-center">VerifiedBy</th>\r\n                                                     <th class="text-center">VerifiedDate</th>\r\n                                                     <th class="text-center">Status</th>\r\n                                                 </tr>\r\n                                             </thead>\r\n\r\n                                             <tbody>\r\n                                               <tr *ngFor="let w  of workOrderPublicationList; let i=index;">\r\n                                                     <td>{{w.publicationName}}</td>\r\n                                                     <td>{{w.publicationDescription}}</td>\r\n                                                     <td>{{w.publicationType}}</td>\r\n                                                     <td>{{w.revisionDate | date: \'MM-dd-YYYY\'}}</td>\r\n                                                     <td>{{w.sequence}}</td>\r\n                                                     <td>{{w.source}}</td>\r\n                                                     <td>{{w.airCraftManufacturer}}</td>\r\n                                                     <td>{{w.model}}</td>\r\n                                                     <td></td>\r\n                                                     <td>{{w.location}}</td>\r\n                                                     <td>{{w.verifiedBy}}</td>\r\n                                                     <td>{{w.verifiedDate | date: \'MM-dd-YYYY\'}}</td>\r\n                                                     <td>{{w.status}}</td>\r\n                                                 </tr>\r\n                                             </tbody>\r\n                                         </table>\r\n                                     </div>\r\n                                 </div>\r\n                                 <div class="clear"></div>\r\n                                 <br />\r\n                                 <br />\r\n                                 <br />\r\n                                 <br />\r\n                             </div>\r\n                         </div>\r\n                     </p-tabPanel>  --\x3e\r\n                    \x3c!-- <p-tabPanel  header="Directions" >\r\n\r\n                        <div class="equipment-tab-content" >\r\n                            <div class="x_panel" *ngIf="workOrderDirectionList">\r\n                                <div class="tab-content">\r\n                                    <div class="table-responsive table-overflow" id="workflow-attributes-block">\r\n                                        <table class="table table-bordered ">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th class="text-center">Action</th>\r\n                                                    <th class="text-center">Direction Name</th>\r\n                                                    <th class="text-center">Sequence</th>\r\n                                                    <th class="text-center">Memo</th>\r\n                                                </tr>\r\n                                            </thead>\r\n\r\n                                            <tbody>\r\n                                              <tr *ngFor="let w  of workOrderDirectionList; let i=index;">\r\n                                                    <td>{{w.action}}</td>\r\n                                                    <td>{{w.directionName}}</td>\r\n                                                    <td>{{w.sequence}}</td>\r\n                                                    <td>{{w.memo}}</td>\r\n\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="clear"></div>\r\n                                <br />\r\n                                <br />\r\n                                <br />\r\n                                <br />\r\n                            </div>\r\n                        </div>\r\n                    </p-tabPanel> --\x3e\r\n\r\n\r\n\r\n                </p-tabView>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n<div id="warnRestrictMesg" class="modal fade" role="dialog" data-backdrop="static">\r\n    <div class="modal-dialog modal-xsm">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Message</h4>\r\n                \x3c!-- <p id="clockdiv" class="clockdiv"></p> --\x3e\r\n            </div>\r\n            <div class="pad_msf">\r\n                <p *ngIf="warningID != 0" class="mar_o">\r\n                    <strong>Warning Message</strong>\r\n                    :{{warningMessage}}\r\n                </p>\r\n                \x3c!-- <p *ngIf="warningMessage != undefined">Not able to create customer work because cuatomer having restrcitions</p> --\x3e\r\n                <p *ngIf="restrictID != 0" class="mar_o">\r\n                    <strong>Restrcition Message</strong>\r\n                    {{restrictMessage}}\r\n                </p>\r\n                <p *ngIf=" restrictID != 0" class="mar_o">\r\n                    Not able to Edit Wo because this customer\r\n                    having restrictions\r\n                </p>\r\n            </div>\r\n            <div class="modal-footer" style="padding:10px;">\r\n                <button class="btn btn-primary btn-primary" data-dismiss="modal" (click)="WarnRescticModel()"\r\n                        style="padding: 6px 12px !important;">\r\n                    Ok\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class="preloader" *ngIf="isSpinnerVisible">\r\n    <div class="loading">\r\n        <div class="lds-roller">\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    </div>\r\n</div> '},fn75:function(e,r,t){"use strict";t.r(r),r.default='<div style="float: right; margin: 3px 0 19px 0px;">\r\n    <button type="button" class="btn btn-primary" (click)="detailView()">\r\n        {{(isOpenedAll)?\'Summary\':\'Detail View\'}}\r\n    </button>\r\n</div>\r\n<div style="margin-top: 15px;">\r\n<p-treeTable [value]="gridData" (onNodeExpand)="getShippingData($event.node)">\r\n    <ng-template pTemplate="header">\r\n        <tr>\r\n            <th style="background-color: #337ab7; color: white;">PartNumber</th>\r\n            <th style="background-color: #337ab7; color: white">Part Description</th>\r\n            <th style="background-color: #337ab7; color: white">Revised PartNo</th>\r\n            <th style="background-color: #337ab7; color: white">Address Type</th>\r\n            <th style="background-color: #337ab7; color: white">User</th>\r\n            <th style="background-color: #337ab7; color: white">Address</th>\r\n            <th style="background-color: #337ab7; color: white">City</th>\r\n            <th style="background-color: #337ab7; color: white">State</th>\r\n            <th style="background-color: #337ab7; color: white">Postal</th>\r\n            <th style="background-color: #337ab7; color: white">Country</th>\r\n            <th style="background-color: #337ab7; color: white">Contact Name</th>\r\n        </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate="body" let-rowNode let-rowData="rowData">\r\n        <tr>\r\n            <td>\r\n                <p-treeTableToggler [rowNode]="rowNode"></p-treeTableToggler>\r\n                {{rowData.partNumber}}\r\n            </td>\r\n            <td>{{rowData.partDescription}}</td>\r\n            <td>{{rowData.revisedPN}}</td>\r\n            <td>{{rowData.addressTye}}</td>\r\n            <td>{{rowData.user}}</td>\r\n            <td>{{rowData.address}}</td>\r\n            <td>{{rowData.city}}</td>\r\n            <td>{{rowData.state}}</td>\r\n            <td>{{rowData.postal}}</td>\r\n            <td>{{rowData.country}}</td>\r\n            <td>{{rowData.contactName}}</td>\r\n        </tr>\r\n    </ng-template>\r\n</p-treeTable>\r\n</div>\r\n<div class="preloader" *ngIf="isSpinnerVisible">\r\n    <div class="loading">\r\n        <div class="lds-roller"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n    </div>\r\n</div>'},gwmu:function(e,r,t){"use strict";t.r(r),r.default=""},hyPF:function(e,r,t){"use strict";t.r(r),r.default=""},iD4C:function(e,r,t){"use strict";t.r(r),r.default='<div *ngIf="!isView">\r\n  <button data-target="#addNewFreight" data-toggle="modal" (click)="createNew()" class="btn btn-primary" style="margin-left: 10px;">\r\n    Add Freight\r\n  </button>\r\n</div>\r\n\r\n<div>\r\n  <p-table [columns]="cols" [value]="workOrderFreightList" [lazy]="false" [paginator]="true" [rows]="10"\r\n  class="rpo-table-cstm ptable-f10" [paginator]="true"> \x3c!--freightss--\x3e\r\n    <ng-template pTemplate="header" let-columns>\r\n      <tr *ngIf="isQuote">\r\n        <th colspan="9" style="background: #fff; border: 1px solid #fff;border-right: 1px solid #e7ecf1;">\r\n          &nbsp;\r\n        </th>\r\n        <ng-container *ngIf="isView">\r\n            <th colspan="5" style="background: #fff; border: 1px solid #e7ecf1;padding: 0;">\r\n              <div class="display-flex">\r\n                <div class="form-group" style="text-align: center; display: flex;    margin-bottom: 0px;">\r\n                  <p-radioButton class="p-radiobutton-label-horizontal p-radiobutton-label-w92" name="costPlusType"\r\n                    label="T&M - Mark Up" value="1" [(ngModel)]="costPlusType" [disabled]="isView" (click)="tmchange()">\r\n                  </p-radioButton>\r\n                  <div>\r\n                    <select class="form-group select-markup" (change)="markupChanged({}, \'all\')" [(ngModel)]="overAllMarkup"\r\n                      [disabled]="isView || costPlusType != 1" style="margin-top: 10px;">\r\n                      <option value="">Select</option>\r\n                      <option *ngFor="let markUp of markupList" [value]="markUp.value">{{markUp.label}}</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n                <div style="float: left; margin-bottom: 7px; margin-left: 4px; margin-right: 4px;">\r\n                  <p-radioButton class="p-radiobutton-label-horizontal" name="costPlusType" value="2"\r\n                    label="Actual" [(ngModel)]="costPlusType" [disabled]="isView" (click)="(!isView)?tmchange():\'\'"></p-radioButton>\r\n                </div>\r\n                <div>\r\n                  <p-radioButton class="p-radiobutton-label-horizontal" name="costPlusType"\r\n                    value="3" label="Flat Rate" [(ngModel)]="costPlusType" [disabled]="isView" (click)="(!isView)?tmchange():\'\'">\r\n                  </p-radioButton>\r\n                </div>\r\n              </div>\r\n            </th>\r\n        </ng-container>\r\n        <ng-container *ngIf="!isView">\r\n            <th colspan="5" style="background: #fff; border: 1px solid #e7ecf1;padding: 0;">\r\n              <div class="display-flex">\r\n                <div class="form-group" style="text-align: center; display: flex;    margin-bottom: 0px;">\r\n                  <p-radioButton class="p-radiobutton-label-horizontal p-radiobutton-label-w92" name="costPlusType"\r\n                    label="T&M - Mark Up" value="1" [(ngModel)]="costPlusType" [disabled]="isView" (click)="tmchange()">\r\n                  </p-radioButton>\r\n                  <div>\r\n                    <select class="form-group select-markup" (change)="markupChanged({}, \'all\')" [(ngModel)]="overAllMarkup"\r\n                      [disabled]="isView || costPlusType != 1" style="margin-top: 10px;">\r\n                      <option value="">Select</option>\r\n                      <option *ngFor="let markUp of markupList" [value]="markUp.value">{{markUp.label}}</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n                <div style="float: left; margin-bottom: 7px; margin-left: 4px; margin-right: 4px;">\r\n                  <p-radioButton class="p-radiobutton-label-horizontal" name="costPlusType" value="2"\r\n                    label="Actual" [(ngModel)]="costPlusType" [disabled]="isView" (click)="tmchange()"></p-radioButton>\r\n                </div>\r\n                <div>\r\n                  <p-radioButton class="p-radiobutton-label-horizontal" name="costPlusType"\r\n                    value="3" label="Flat Rate" [(ngModel)]="costPlusType" [disabled]="isView" (click)="(!isView)?tmchange():\'\'">\r\n                  </p-radioButton>\r\n                </div>\r\n              </div>\r\n            </th>\r\n            \x3c!-- <th style="background: #fff; border: 1px solid #fff;"></th> --\x3e\r\n        </ng-container>\r\n        \x3c!-- <th colspan="2">\r\n          <div>\r\n            <p-radioButton\r\n              class="p-radiobutton-label-horizontal col-width p-radio-custom"\r\n              name="costPlusType"\r\n              value="Fixed Mat Price"\r\n              label="Fixed Mat Price"\r\n              [(ngModel)]="costPlusType"\r\n              [disabled]="isView"\r\n            ></p-radioButton>\r\n          </div>\r\n        </th> --\x3e\r\n      </tr>\r\n      <tr>\r\n        <th rowspan="2">Task</th>\r\n        <th *ngFor="let col of columns" rowspan="2">\r\n          {{ col.header }}\r\n        </th>\r\n        <th colspan="3">Dimensions</th>\r\n        <th rowspan="2">UOM</th>\r\n        <th rowspan="2">Currency</th>\r\n        <th rowspan="2">Amount</th>\r\n        <th rowspan="2">Memo</th>\r\n        <ng-container *ngIf="isQuote">\r\n          <th rowspan="2">Billing Method</th>\r\n          <th rowspan="2">Mark Up</th>\r\n          \x3c!-- <th tooltip="Time & Materials">Billing Rate</th> --\x3e\r\n          <th rowspan="2">Billing Amount</th>\r\n          \x3c!-- <th tooltip="Time & Materials">T&M Amount</th>\r\n          <th>Fixed Amount</th> --\x3e\r\n        </ng-container>\r\n        <th rowspan="2" *ngIf="!isView">Actions</th>\r\n      </tr>\r\n      <tr>\r\n        <th>L</th>\r\n        <th>H</th>\r\n        <th>W</th>\r\n      </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n      <ng-container *ngFor="let dt of rowData; let subIndex = index;">\r\n        <tr *ngIf="!dt[\'isDeleted\']">\r\n          <td>\r\n            <p>{{dt.taskName}}</p>\r\n            \x3c!-- <select class="form-control select-read-only" [(ngModel)]="dt.taskId" disabled>\r\n              <option value="">Select</option>\r\n              <option *ngFor="let task of taskList" [value]="task.taskId">{{task.description}}</option>\r\n            </select> --\x3e\r\n          </td>\r\n          <ng-container *ngFor="let col of columns">\r\n            \x3c!-- <td *ngIf="col.field != \'shipVia\' && col.field != \'carrierName\'">\r\n              {{dt[col.field]}}\r\n            </td> --\x3e\r\n            <td *ngIf="col.field == \'carrierName\'">\r\n              <select class="form-control select-read-only" [(ngModel)]="dt.carrierId" disabled style="background-color: transparent !important;">\r\n                <option value="">Select</option>\r\n                <option *ngFor="let cl of carrierList" [value]="cl.value">{{cl.label}}</option>\r\n              </select>\r\n            </td>\r\n            <td *ngIf="col.field == \'shipVia\'">\r\n              <select class="form-control select-read-only" [(ngModel)]="dt.shipViaId" disabled style="background-color: transparent !important;">\r\n                <option value="">Select</option>\r\n                <option *ngFor="let sv of shipViaList" [value]="sv.value">{{sv.label}}</option>\r\n              </select>\r\n            </td>\r\n          </ng-container>\r\n          <td class="content-to-end">{{dt.weight}}</td>\r\n          <td>{{dt.uom}}</td>\r\n          <td class="content-to-end">{{dt.length}}</td>\r\n          <td class="content-to-end">{{dt.height}}</td>\r\n          <td class="content-to-end">{{dt.width}}</td>\r\n          <td>{{dt.dimensionUOM}}</td>\r\n          <td>{{dt.currency}}</td>\r\n          <td class="content-to-end"><span *ngIf="dt.amount">{{formateCurrency(dt.amount)}}</span></td>\r\n          <td [innerHTML]="dt.memo"></td> \r\n          \x3c!-- <span *ngIf="col.field ==\'memo\'" [innerHTML]="rowData[col.field]"> </span> --\x3e\r\n          \x3c!-- <td *ngFor="let col of columns">\r\n            {{ dt[col.field] }}\r\n          </td> --\x3e\r\n          <ng-container *ngIf="isQuote">\r\n            <td>\r\n              <select class="form-control" [(ngModel)]="dt.billingMethodId" [disabled]="isView || costPlusType == 3" (change)="dt.markupPercentageId = \'\';dt.billingAmount = 0;(dt.billingMethodId == \'2\')?dt.billingAmount = dt.amount:\'\';">\r\n                <option value="">Select</option>\r\n                <option *ngFor="let bm of [{\'label\': \'T&M\', \'value\': \'1\'}, {\'label\': \'Actual\', \'value\': \'2\'}]"\r\n                  [value]="bm.value">{{bm.label}}</option>\r\n              </select>\r\n            </td>\r\n            <td>\r\n              <select class="form-control select-markup" (change)="markupChanged(dt, \'row\')"\r\n                [(ngModel)]="dt.markupPercentageId" [disabled]="isView || dt.billingMethodId != \'1\'">\r\n                <option value="">Select</option>\r\n                <option *ngFor="let markUp of markupList" [value]="markUp.value">{{ markUp.label }}</option>\r\n              </select>\r\n            </td>\r\n            \x3c!-- <td>\r\n                {{ dt.freightCostPlus }}\r\n              </td>\r\n              <td>\r\n                <input type="number" [(ngModel)]="dt.fixedAmount" [disabled]="costPlusType != \'Fixed Mat Price\'"/>\r\n              </td> --\x3e\r\n            <td>\r\n              <input type="text" pInputText pKeyFilter="money" class="form-control text_right" value="{{ formateCurrency(dt.billingAmount) }}" (change)="dt.billingAmount = formateCurrency(dt.billingAmount)" [(ngModel)]="dt.billingAmount"\r\n                [disabled]="isView || dt.billingMethodId != \'2\'" />\r\n            </td>\r\n            \x3c!-- <td>{{ dt.billingAmount }}</td> --\x3e\r\n          </ng-container>\r\n          <td class="btn-spaces text-center" *ngIf="!isView">\r\n            <span data-target="#addNewFreight" data-toggle="modal"><a class="btn nobg btn-edit-cstm"\r\n                (click)="edit(dt, rowIndex, subIndex)" matTooltip="Edit"><i class="fa fa-pencil"></i></a> </span>\r\n            <span><a class="btn nobg btn-delete-cstm" (click)="openDelete(content,dt)"  matTooltip="Delete"><i\r\n                  class="fa fa-trash"></i></a> </span>\r\n            \x3c!-- <button class="btn-edit ptable-wo-btns" mat-icon-button data-target="#addNewFreight" data-toggle="modal"\r\n              (click)="edit(rowData, rowIndex)" matTooltip="Edit">\r\n              <mat-icon>edit</mat-icon>\r\n            </button>\r\n            <button class="btn-delete ptable-wo-btns" mat-icon-button matTooltip="Delete" (click)="delete(rowData)">\r\n              <mat-icon color="warn">delete</mat-icon>\r\n            </button> --\x3e\r\n          </td>\r\n        </tr>\r\n      </ng-container>\r\n      <tr *ngIf="rowData && rowData[0]" class="task-total">\r\n        <td><strong>Total</strong></td>\r\n        <td>&nbsp;</td>\r\n        <td>&nbsp;</td>\r\n        <td>&nbsp;</td>\r\n        <td>&nbsp;</td>\r\n        <td>&nbsp;</td>\r\n        <td>&nbsp;</td>\r\n        <td>&nbsp;</td>\r\n        <td>&nbsp;</td>\r\n        <td class="content-to-end"><strong>{{formateCurrency(getTotalTaskAmount(rowData))}}</strong></td>\r\n        <td>&nbsp;</td>\r\n        <td>&nbsp;</td>\r\n        <ng-container *ngIf="isQuote">\r\n          <td>&nbsp;</td>\r\n          \x3c!-- <td>{{getTotalBillingRate()}}</td> --\x3e\r\n          <td class="content-to-end"><strong>{{formateCurrency(getTotalTaskBillingAmount(rowData))}}</strong></td>\r\n          <td *ngIf="!isView">&nbsp;</td>\r\n        </ng-container>\r\n      </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate="footer" *ngIf="isQuote">\r\n      <tr class="footer">\r\n        <td><strong>Total</strong></td>\r\n        <td>&nbsp;</td>\r\n        <td>&nbsp;</td>\r\n        <td>&nbsp;</td>\r\n        <td>&nbsp;</td>\r\n        <td>&nbsp;</td>\r\n        <td>&nbsp;</td>\r\n        <td>&nbsp;</td>\r\n        <td>&nbsp;</td>\r\n        <td class="content-to-end"><strong>{{formateCurrency(getTotalAmount())}}</strong></td>\r\n        <td>&nbsp;</td>\r\n        <td>&nbsp;</td>\r\n        <td>&nbsp;</td>\r\n        \x3c!-- <td>{{getTotalBillingRate()}}</td> --\x3e\r\n        <ng-container *ngIf="costPlusType != 3">\r\n            <td class="content-to-end"><strong>{{formateCurrency(getTotalBillingAmount())}}</strong></td>\r\n        </ng-container>\r\n        <ng-container *ngIf="costPlusType == 3">\r\n          <td>\r\n            <input type="text" pInputText pKeyFilter="money" (blur)="freightFlatBillingAmount = (freightFlatBillingAmount)?formateCurrency(freightFlatBillingAmount):\'0.00\'" [(ngModel)]="freightFlatBillingAmount" [disabled]="isView" />\r\n          </td>\r\n        </ng-container>\r\n        <td *ngIf="!isView">&nbsp;</td>\r\n      </tr>\r\n    </ng-template>\r\n  </p-table>\r\n  <button class="btn btn-primary pull-right seve" (click)="createFreightsQuote()" *ngIf="!isView && isQuote">\r\n    Save Freights\r\n  </button>\r\n</div>\r\n\r\n<div id="addNewFreight" class="modal fade" role="dialog" *ngIf="!view" data-backdrop="static" data-keyboard="false">\r\n  <div class="modal-dialog modal-xl">\r\n    \x3c!-- Modal content--\x3e\r\n    <div class="modal-content">\r\n      <div class="modal-header">\r\n        <button type="button" class="close" data-dismiss="modal">\r\n          &times;\r\n        </button>\r\n        <h4 class="modal-title"> {{isEdit ? \'Edit\' : \'Add\'}} Freight</h4>\r\n      </div>\r\n      <div class="modal-body">\r\n        <div *ngIf="!isEdit">\r\n          <span class="cat-heading cat4 ng-star-inserted">\r\n            Add Freight\r\n            <i class="fa fa-plus" (click)="addNewRow()"></i>\r\n          </span>\r\n        </div>\r\n        <div class="tab-content">\r\n          <div class="table-responsive table-overflow" style="height: 300px;">\r\n            <form #frieghtsCreateForm="ngForm">\r\n              <table class="table table-bordered ">\r\n                <thead>\r\n                  <tr>\r\n                    <th rowspan="2">Task *</th>\r\n                    \x3c!-- <th>Carrier *</th> --\x3e\r\n                    <th rowspan="2">Ship Via *</th>\r\n                    \x3c!-- <th>Dimensions *</th> --\x3e\r\n                    <th rowspan="2">Weight</th>\r\n                    <th rowspan="2">UOM</th>\r\n                    <th colspan="3">Dimensions</th>\r\n                    <th rowspan="2">UOM</th>\r\n                    <th rowspan="2">Currency</th>\r\n                    <th rowspan="2">Amount *</th>\r\n                    \x3c!-- <th>Fixed Freight</th>\r\n                    <th *ngIf="!isQuote">Fixed Amount</th> --\x3e\r\n                    <th rowspan="2">Memo</th>\r\n                    <th *ngIf="!isQuote || !isEdit" rowspan="2">Actions </th>\r\n                  </tr>\r\n                  <tr>\r\n                    <th>L</th>\r\n                    <th>H</th>\r\n                    <th>W</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr *ngFor="let f of freightForm; let i = index">\r\n                    <td>\r\n                      <select class="form-control" [(ngModel)]="f.taskId" [disabled]="isView" name="task_{{i}}"\r\n                        style="width:100px;">\r\n                        <option value="">Select</option>\r\n                        <option *ngFor="let task of taskList" [value]="task.taskId">{{task.description}}</option>\r\n                      </select>\r\n                    </td>\r\n                    \x3c!-- <td>\r\n                      <p-dropdown placeholder="Select Carrier" name="carrier{{ i }}" #carrier="ngModel"\r\n                        [options]="carrierList" class="p-dropdown-custom-md" [(ngModel)]="f.carrierId" required>\r\n                      </p-dropdown>\r\n                    </td> --\x3e\r\n                    <td>\r\n                      <p-dropdown placeholder="Select Site Name" name="shipVia{{ i }}" #shipVia="ngModel"\r\n                        [options]="shipViaList" class="p-dropdown-custom-md" [(ngModel)]="f.shipViaId" required>\r\n                      </p-dropdown>\r\n                    </td>\r\n                    \x3c!-- <td>\r\n                      <input type="text" name="length{{ i }}" [(ngModel)]="f.length" #length="ngModel"\r\n                        class="form-control w50" required />\r\n                      L -\r\n                      <input type="text" name="width{{ i }}" #width="ngModel" [(ngModel)]="f.width"\r\n                        class="form-control w50" required />\r\n                      W -\r\n                      <input type="text" name="height{{ i }}" #height="ngModel" [(ngModel)]="f.height"\r\n                        class="form-control w50" required />H\r\n                    </td> --\x3e\r\n                    <td>\r\n                      <input type="number" name="weight{{ i }}" #weight="ngModel" [(ngModel)]="f.weight"\r\n                        class="form-control w50" />\r\n                    </td>\r\n                    <td>\r\n                      <p-dropdown placeholder="Select UOM" name="unitOfMeasureId{{ i }}" [options]="unitOfMeasureList"\r\n                        class="p-dropdown-custom-md" [(ngModel)]="f.uomId">\r\n                      </p-dropdown>\r\n                    </td>\r\n                    <td><input type="number" name="length{{ i }}" [(ngModel)]="f.length" #length="ngModel"\r\n                        class="form-control w50" /></td>\r\n                    <td><input type="number" name="height{{ i }}" #height="ngModel" [(ngModel)]="f.height"\r\n                        class="form-control w50" /></td>\r\n                    <td><input type="number" name="width{{ i }}" #width="ngModel" [(ngModel)]="f.width"\r\n                        class="form-control w50" /></td>\r\n                    <td>\r\n                      <p-dropdown placeholder="Select UOM" name="dimensionUOMId{{ i }}" [options]="unitOfMeasureList"\r\n                        class="p-dropdown-custom-md" [(ngModel)]="f.dimensionUOMId">\r\n                      </p-dropdown>\r\n                    </td>\r\n                    <td>\r\n                      <p-dropdown placeholder="Select Currency" name="currencyId{{ i }}" [options]="currencyList"\r\n                        class="p-dropdown-custom-md" [(ngModel)]="f.currencyId">\r\n                      </p-dropdown>\r\n                    </td>\r\n                    <td>\r\n                      <input type="text" InputText pKeyFilter="money" name="amount{{ i }}" #amount="ngModel" [(ngModel)]="f.amount"\r\n                        class="form-control w50 text_right" (change)="f.amount = formateCurrency(f.amount);" required />\r\n                    </td>\r\n                    \x3c!-- <td>\r\n                      <input type="checkbox" name="fixed{{ i }}" #fixed="ngModel" [(ngModel)]="f.isFixedFreight" />\r\n                    </td>\r\n                    <td *ngIf="!isQuote">\r\n                      <input type="number" name="fixedAmount{{ i }}" #fixedAmount="ngModel" [(ngModel)]="f.fixedAmount"\r\n                        class="form-control w50" />\r\n                    </td> --\x3e\r\n                    <td>\r\n                      \x3c!-- <textarea name="memo{{ i }}" cols="30" rows="4" [(ngModel)]="f.memo"\r\n                        style="height: 28px !important;"></textarea> --\x3e\r\n                      <div class="form-group memo-popup-cstm mat_emo" style="width: 120px;    display: inline-flex;    margin-bottom: 0;">\r\n                        \x3c!-- <input type="text" style="width: 100px;" name="memo" pInputText class="form-control aline_de"\r\n                          value="{{f.memo}}" disabled /> --\x3e\r\n                          <div [innerHTML]="f.memo"  matTooltipPosition="above"\r\n                          [matTooltip]="parsedText(f.memo)" class="text_editor_box"></div>\r\n                        <i class="fa fa-pencil fa-lg ci_cls" data-toggle="modal"\r\n                         style="position: relative;top: 6px;"\r\n                          data-target="#textarea-popupFreight" matTooltip="memo" matTooltipPosition="above"\r\n                          (click)="onAddTextAreaInfo(f,i)"></i>\r\n                      </div>\r\n                    </td>\r\n                    <td *ngIf="!isQuote || !isEdit">\r\n                      <button class="btn btn-danger nobg" [disabled]="!f.isShowDelete" (click)="deleteRow(i)">\r\n                        <i class="fa fa-trash"></i>\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </form>\r\n            <div class="modal fade" id="textarea-popupFreight" role="dialog" data-backdrop="static"\r\n              data-keyboard="false">\r\n              <div class="modal-dialog modal-sm" style="max-width: 400px !important;">\r\n                <div class="modal-content">\r\n                  <div class="modal-header">\r\n                    <button type="button" class="close" (click)="onCloseTextAreaInfo()">&times;</button>\r\n                    \x3c!-- <h4 class="modal-title">Edit {{textAreaLabel}}</h4> --\x3e\r\n                  </div>\r\n                  <div class="modal-body">\r\n                    \x3c!-- <div class="form-group">\r\n                      <label>Memo</label>\r\n                      <textarea class="form-control" name="textAreaInfo" [(ngModel)]="textAreaInfo"\r\n                        value={{textAreaInfo}}></textarea>\r\n                    </div> --\x3e\r\n                    <p-editor [(ngModel)]="textAreaInfo" [style]="{\'height\':\'320px\'}" name="textAreaInfo" required></p-editor>\r\n                  </div>\r\n                  <div class="modal-footer">\r\n                    <button type="button" class="btn btn-primary"\r\n                      (click)="onSaveTextAreaInfo(textAreaInfo)">Save</button>\r\n                    <button type="button" class="btn btn-danger" (click)="onCloseTextAreaInfo()">Close</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class="modal-footer">\r\n        <button class="btn btn-primary pull-right " (click)="saveFreightList()" [disabled]="!frieghtsCreateForm.valid">\r\n          {{ isEdit ? \'Update\' : (isQuote)?\'Add\':\'Save\' }}\r\n        </button>\r\n        <button type="button" class="btn btn-danger" data-dismiss="modal">\r\n          Close\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<ng-template #content let-c="close" let-d="dismiss">\r\n  <div class="modal-header">\r\n      \r\n      <h4 class="modal-title">Are You Sure Want to Delete?</h4>\r\n      <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n          <span aria-hidden="true">&times;</span>\r\n\r\n      \r\n      </button>\r\n    \r\n  </div>\r\n\r\n  <div class="modal-footer">\r\n    <button type="button" class="btn btn-primary" (click)="delete()">Yes</button>\r\n    <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n  </div>\r\n\r\n\r\n</ng-template>'},"imF+":function(e,r,t){"use strict";t.r(r),r.default=""},irkm:function(e,r,t){"use strict";t.r(r),r.default='<router-outlet>\r\n    <div class="preloader" *ngIf="isSpinnerVisible">\r\n        <div class="loading">\r\n       <div class="lds-roller"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n        </div>\r\n        </div>\r\n</router-outlet>'},k32y:function(e,r,t){"use strict";t.r(r),r.default=""},mdVg:function(e,r,t){"use strict";t.r(r),r.default='<div>\r\n    <div class="inline-block display-flex">\r\n        <h3 class="po-head lead">Workorder Report</h3>\r\n        \r\n    \r\n        \r\n           \r\n\r\n    </div>\r\n    <p-table #dt\r\n             class="rpo-table-cstm rro-table-cstm"\r\n             [value]="workorderReportList"\r\n             [first]="0"\r\n             [rows]="pageSize"\r\n             [paginator]="true"\r\n             [pageLinks]="3"\r\n             [rowsPerPageOptions]="[10, 20, 50, 100]"\r\n             [columns]="headers"\r\n             selectionMode="multiple"\r\n             [metaKeySelection]="true"\r\n             expandableRows="true"\r\n             rowExpandMode="single"\r\n             [lazy]="true"\r\n             (onLazyLoad)="loadData($event)"\r\n             [resizableColumns]="true"\r\n             [reorderableColumns]="true"\r\n             [totalRecords]="totalRecords"\r\n             [scrollable]="true"\r\n             [metaKeySelection]="true"\r\n             scrollHeight="450px">\r\n        <ng-template pTemplate="caption">\r\n            <div style="text-align: right;margin-left:-6px !important;min-height: 30px;">\r\n\r\n                <h5 style="text-align:left">Management Structure Search</h5>\r\n                <div class="inline-block display-flex">\r\n              \r\n                   <div class="card" style="width:90%">\r\n                    \r\n                    <div class="inline-block display-flex" style="margin-top:10px">\r\n                     \r\n                    <div class="form-group col-sm-2" style="margin-left:10px">\r\n                        <select class="form-control" name="company" [(ngModel)]="managementStructure.companyId" \r\n                        (change)="selectedLegalEntity(managementStructure.companyId);" #companyName="ngModel" required>\r\n                            <option value="0">Select Legal Entity</option>\r\n                            <option *ngFor="let name of legalEntityList" [ngValue]="name.value">{{name.label}}</option>\r\n                        </select>\r\n                        <div *ngIf="companyName.invalid && (companyName.dirty || companyName.touched)" class="alert alert-danger alert-danger-cstm">\r\n                                <div *ngIf="companyName.errors.required">\r\n                                    <small> Legal Entity Name is required </small>\r\n                                </div>\r\n                        </div>        \r\n                    </div>\r\n                    <div class="form-group  col-sm-2" style="margin-left:10px">\r\n                        <select class="form-control" [(ngModel)]="managementStructure.buId" name="buId" (change)="selectedBusinessUnit(managementStructure.buId)">\r\n                            <option value="0">-- Select --</option>\r\n                            <option *ngFor="let name of businessUnitList" [ngValue]="name.value">{{name.label}}</option>\r\n                        </select>\r\n                    </div>\r\n                    <div class="form-group  col-sm-2" style="margin-left:10px">\r\n                        <select class="form-control " [(ngModel)]="managementStructure.divisionId" name="divisionId" (change)="selectedDivision(managementStructure.divisionId)">\r\n                            <option value="0">-- Select --</option>\r\n                            <option *ngFor="let name of divisionList" [ngValue]="name.value">{{name.label}}</option>\r\n                        </select>\r\n                    </div>\r\n                    <div class="form-group  col-sm-2" style="margin-left:10px">\r\n                        <select class="form-control " [(ngModel)]="managementStructure.departmentId" name="departmentId" (change)="selectedDepartment(managementStructure.departmentId)">\r\n                            <option value="0">-- Select --</option>\r\n                            <option *ngFor="let name of departmentList" [ngValue]="name.value">{{name.label}}</option>\r\n                        </select>\r\n                    </div>\r\n                    <button type="button" pButton icon="fa fa-search"\r\n                    class="btn btn-primary" \r\n                     style="padding: 4px 12px !important;height:25px"></button>\r\n                    </div>\r\n                  \r\n                  \r\n            </div>\r\n            <div style="text-align: right;">\r\n                    \r\n              \r\n    \r\n                   <button type="button"\r\n                           class="btn btn-primary"\r\n\r\n                           pButton\r\n                           icon="fa-download"\r\n                           iconPos="left"\r\n                           label="Download" matTooltip="Download" matTooltipPosition="above"\r\n                           (click)="downloadStockLineReport()"></button>\r\n                          \r\n    </div>\r\n            </div>\r\n           \r\n   \r\n          \r\n          \r\n        </div>\r\n        </ng-template>\r\n        <ng-template pTemplate="colgroup" let-columns>\r\n            <colgroup>\r\n                <col *ngFor="let col of columns" style="width:130px">\r\n            </colgroup>\r\n        </ng-template>\r\n        <ng-template pTemplate="header" let-columns>\r\n            <tr>\r\n\r\n                <th *ngFor="let col of columns"\r\n                 pResizableColumn pReorderableColumn\r\n                    [pSortableColumn]="col.field"\r\n                     style="text-align:center;">\r\n                    {{ col.header }}\r\n                    <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                </th>\r\n            </tr>\r\n            <tr>\r\n                <th style="width:auto"\r\n                 *ngFor="let col of columns"\r\n                  [ngSwitch]="col.field">\r\n                    \x3c!-- <input type="text" style="width:100%;" pInputText   (keyup)="filterData($event)"> --\x3e\r\n                    <input style="width:100%;"\r\n                     pInputText type="text" (input)="dt.filter($event.target.value, col.field, \'contains\'); ">\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate="body"\r\n                     let-rowData\r\n                     let-rowIndex="rowIndex"\r\n                     let-expanded="expanded"\r\n                     let-columns="columns">\r\n            <tr class="ui-widget-header">\r\n                <td *ngFor="let col of columns" style="text-overflow: ellipsis; overflow: hidden;">\r\n                    {{rowData[col.field]}}\r\n                </td>\r\n\r\n            </tr>\r\n\r\n        </ng-template>\r\n        <ng-template pTemplate="summary" id="footer">\r\n            <label id="footer" class="footer">Total:</label>\r\n            <input style="width: 5%;"\r\n                   [(ngModel)]="totalRecords"\r\n                   [disabled]="true"\r\n                   pInputText\r\n                   type="text" />\r\n            &nbsp;&nbsp;\r\n            <label id="footer" class="footer1">Pages Count:</label>\r\n            <input style="width: 5%;"\r\n                   [(ngModel)]="totalPages"\r\n                   [disabled]="true"\r\n                   pInputText\r\n                   type="text" />\r\n        </ng-template>\r\n    </p-table>\r\n</div>\r\n'},mv3S:function(e,r,t){"use strict";t.r(r),r.default='<div>\r\n    <p-table #dt\r\n    class="rpo-table-cstm rro-table-cstm ptable-f10"\r\n    [value]="partNumbersList"\r\n    [metaKeySelection]="true"\r\n    [first]="0"\r\n    (onPage)="pageIndexChange($event)"\r\n    [rows]="pageSize"\r\n    [paginator]="true"\r\n    [pageLinks]="3"\r\n    [rowsPerPageOptions]="[10, 20, 50, 100]"\r\n    [columns]="selectedColumns"\r\n    selectionMode="multiple"\r\n    [resizableColumns]="true"\r\n    [reorderableColumns]="true"\r\n    [totalRecords]="totalRecords"\r\n    [scrollable]="true" scrollHeight="450px">\r\n\r\n        <ng-template pTemplate="caption">\r\n            <div style="text-align: right; min-height: 30px;">\r\n                <p-multiSelect [options]="headers" [(ngModel)]="selectedColumns"\r\n                [ngModelOptions]="{ standalone: true }" optionLabel="header" \r\n                selectedItemsLabel="{0} columns selected"\r\n                [style]="{ minWidth: \'200px\' }" defaultLabel="Choose Columns" style="float:left"></p-multiSelect>\r\n                <div class="inner-addon right-addon w200 inline-block g-filter-search-cstm">\r\n                    <i class="fa fa-search"></i>\r\n                    <input type="text" pInputText size="50" class="form-control ui-autocomplete-input"\r\n                        (input)="dt.filterGlobal($event.target.value, \'contains\')" placeholder=" Filter"\r\n                        style="height: 28px !important;" />\r\n                </div>\r\n                <button type="button" class="btn btn-primary" matTooltip="Download Data" matTooltipPosition="above"\r\n                pButton icon="fa-download" iconPos="left" label="Export Data" (click)="dt.exportCSV()"\r\n                style="padding:5px 10px !important;"></button>\r\n                <button type="button" class="btn btn-primary" matTooltip="Download Selected Data"\r\n                matTooltipPosition="above" pButton icon="fa-download" iconPos="left" label="Export Selected Data"\r\n                (click)="dt.exportCSV({ selectionOnly: true })" style="padding:5px 10px !important;"></button>\r\n\r\n                \x3c!-- <div class="excel-upload excel-upload-cstm">\r\n                <button type="button" class="btn btn-primary" matTooltip="Download Sample File"\r\n                    matTooltipPosition="above" (click)="sampleExcelDownload()" style="padding: 5px 10px !important;">\r\n                    Sample File Download\r\n                </button>\r\n\r\n                <input type="file" name="upload[]" id="upload" (change)="customExcelUpload($event)"\r\n                    class="uploaddoc upload-file" accept=".xlsx, .xls, .csv" />\r\n                <label for="upload">\r\n                    <span matTooltip="Upload Data (Excel)" matTooltipPosition="above">\r\n                    <i class="fa fa-upload"></i>\r\n                    </span>\r\n                </label>\r\n                </div> --\x3e\r\n            </div>\r\n        </ng-template>\r\n        <ng-template pTemplate="colgroup" let-columns>\r\n            <colgroup>\r\n                <col *ngFor="let col of columns" style="width:130px">\r\n            </colgroup>\r\n        </ng-template>\r\n        <ng-template pTemplate="header" let-columns>\r\n            <tr>\r\n\r\n                <th style="width:auto"\r\n                    *ngFor="let col of columns"\r\n                    pResizableColumn\r\n                    pReorderableColumn\r\n                    [pSortableColumn]="col.field">\r\n                    {{ col.header }}\r\n                    <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                </th>\r\n                <th style="width:50px;position:sticky"\r\n                    *ngIf="selectedColumns.length > 0 && !isView">\r\n                    Actions\r\n                </th>\r\n            </tr>\r\n            <tr>\r\n                <th style="width:auto" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                    <input style="width:100%;" pInputText type="text" (input)="\r\n                        dt.filter($event.target.value, col.field, \'contains\')\r\n                    " />\r\n                </th>\r\n                <th style="width: 50px;" *ngIf="!isView"></th>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                <tr [pSelectableRowDblClick]="rowData" [pSelectableRow]="rowData">\r\n                    <ng-container *ngFor="let col of columns" >\r\n                            <td  style="width:auto"\r\n                            *ngIf="col.field == \'SERIAL_NO\'"\r\n                            class="ui-resizable-column"\r\n                            pReorderableRowHandle>\r\n                            <p class="m-0 p-0 text-right">{{rowData[col.field]}}</p>\r\n                            <span> </span>\r\n                            </td>\r\n                            <td style="width:auto"\r\n                            *ngIf="col.field !== \'SERIAL_NO\'"\r\n                            class="ui-resizable-column"\r\n                            pReorderableRowHandle>\r\n                                <p class="p_textEditor" [innerHTML]=rowData[col.field]></p>\r\n                            </td>\r\n                    </ng-container>\r\n                    <td style="width:50px;position:sticky" class="ui-resizable-column" *ngIf="!isView">\r\n                        \x3c!-- <button class="btn-edit ptable-wo-btns buton_back_bordernon" mat-icon-button data-target="#addNewMemo" data-toggle="modal"\r\n                        (click)="edit(rowData, i)" matTooltip="Edit">\r\n                            <mat-icon>edit</mat-icon>\r\n                        </button> --\x3e\r\n                        \x3c!-- <button class="btn btn-danger nobg" (click)="deleteMemo(rowData)">\r\n                            <i class="fa fa-trash" style="font-size: 14px;"></i>\r\n                        </button> --\x3e\r\n                        <span data-toggle="modal" data-target="#addNewMemo"><a class="btn nobg btn-edit-cstm" (click)="edit(rowData, rowIndex)" matTooltip="Edit" matTooltipPosition="above" data-dismiss="modal"><i class="fa fa-pencil"></i></a> </span>\r\n                        <span><a class="btn nobg btn-delete-cstm" (click)="deleteMemo(rowData)" matTooltip="Delete" matTooltipPosition="above"><i class="fa fa-trash"></i></a> </span>\r\n                    </td>\r\n                </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate="emptymessage" let-columns *ngIf="partNumbersList.length == 0">\r\n            <tr>\r\n                <td colspan="10" style="color: red; font-weight: bold; text-align: center">\r\n                No records found\r\n                </td>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate="summary" id="footer">\r\n            <label id="footer">Total:</label>\r\n            <input style="width: 5%;" [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText type="text" />\r\n            &nbsp;&nbsp;\r\n            <label id="footer">Pages Count:</label>    \r\n            <input style="width: 5%;" [ngModel]="getPageCount(dt._totalRecords, pageSize)" [disabled]="true" pInputText type="text" />\r\n        </ng-template>\r\n    </p-table>\r\n</div>\r\n\r\n<div class="preloader" *ngIf="isSpinnerVisible">\r\n    <div class="loading">\r\n        <div class="lds-roller"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n    </div>\r\n</div>'},"n+4h":function(e,r,t){"use strict";t.r(r),r.default='<div [@fadeInOut] class="page-content work_order_cont">\r\n    <div class="right_col" role="main">\r\n        <form #workOrderForm="ngForm">\r\n            <div class="col-md-12">\r\n                <div class="card new-card" *ngIf="!isSubWorkOrder">\r\n                    <div class="x_content">\r\n                        \x3c!-- <nav aria-label="breadcrumb">\r\n                            <ol class="breadcrumb">\r\n                                <li class="breadcrumb-item" aria-current="page">Work Order</li>\r\n                                <li class="breadcrumb-item active" aria-current="page" *ngIf="!isView">Create Work Order</li>\r\n                                <li *ngIf="isSubWorkOrder" class="breadcrumb-item active" aria-current="page">\r\n                                    Sub\r\n                                    WOrkOrder\r\n                                </li>\r\n                            </ol>\r\n                        </nav> --\x3e\r\n                        <div class="card-header bg-primary" *ngIf="!isSubWorkOrder && !isView">\r\n                            \r\n                              <div class="pull-left">\r\n                                  <h4  class="new-card-heading">\r\n                                      {{ isEdit ? \'Edit\' : \'Create\' }} Work Order</h4>\r\n\r\n                                      \x3c!-- <h4  class="new-card-heading">\r\n                                        {{ isEdit ? \'Edit\' : \'Create\' }} Sub Work Order</h4>    --\x3e\r\n                              </div>\r\n\r\n                              <button class="btn-sm new-btn-primary" style="margin-left:20px" (click)="toggleDisplayMode()">\r\n                                {{isDetailedView ? \'Collapse\' : \'Expand\'}}\r\n                            </button>\r\n\r\n                                <button\r\n                                  type="button"\r\n                                  class="btn-sm new-btn-primary pull-right"\r\n                                  [routerLink]="[\'/workordersmodule/workorderspages/app-work-order-list\']"\r\n                                >\r\n                                  Work Order List\r\n                                </button>\r\n                              \r\n                            \r\n                          </div>\r\n\r\n                        \x3c!-- <div class="pheading" *ngIf="!hideWOHeader">\r\n                            <h4 *ngIf="!isSubWorkOrder && !isView" class="page-heading">Create Work Order </h4>\r\n                            <h4 *ngIf="isSubWorkOrder && !isView" class="page-heading">Create Sub Work Order </h4>\r\n                        </div> --\x3e\r\n                        <div class="clear"></div> \r\n                        <div class="card" style="border-radius: 0px;" *ngIf="!hideWOHeader">\r\n                            <div class="card-body new-card-body">\r\n                                <div class="col-sm-12 link-block">\r\n                                    <h4 class="pull-left" style="cursor:pointer;">\r\n                                        General Info\r\n                                        \x3c!-- <span [hidden]="isDetailedView" class="more-details-btn">\r\n                                            (More <i class="fa fa-caret-down"></i>)\r\n                                        </span>\r\n                                        <span [hidden]="!isDetailedView" class="less-details-btn">\r\n                                            (Less <i class="fa fa-caret-up"></i>)\r\n                                        </span> --\x3e\r\n                                    </h4>\r\n                                    \x3c!--(click)="toggleDisplayMode()"--\x3e\r\n                                  \r\n                                    <div class="clear"></div>\r\n                                </div>\r\n                                <div class="less-details" [hidden]="isDetailedView">\r\n                                    <div class="clear"></div>\r\n                                    <hr>\r\n                                    <div class="col-sm-3">\r\n                                        <div class="form-group col-sm-12">\r\n                                            <label class="control-label col-sm-4" style="padding-top: 5px;">\r\n                                                WO Num\r\n                                            </label>\r\n                                            <div class="col-sm-7" matTooltipPosition="above"\r\n                                                matTooltip="This field should display \'creating\' before the header info is saved WO ID should be autogenerated.  Allow siffices or prefeices depending on what config in the WO setup screen">\r\n                                                <input *ngIf="workOrderGeneralInformation.workOrderNumber !== \'\' "\r\n                                                    type="text" class="form-control"\r\n                                                    value={{workOrderGeneralInformation.workOrderNumber}} disabled>\r\n                                                <input *ngIf="workOrderGeneralInformation.workOrderNumber === \'\' "\r\n                                                    type="text" class="form-control" value=\'\' disabled>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div class="col-sm-3">\r\n                                        <div class="form-group col-sm-12">\r\n                                            <label class="control-label col-sm-4" style="padding-top: 5px;">Cust\r\n                                                Name</label>\r\n                                            <div class="col-sm-7" matTooltipPosition="above"\r\n                                                matTooltip="This field should display \'creating\' before the header info is saved WO ID should be autogenerated.  Allow siffices or prefeices depending on what config in the WO setup screen">\r\n                                                <input *ngIf="workOrderGeneralInformation.customerId !== null"\r\n                                                    type="text" class="form-control"\r\n                                                    value={{workOrderGeneralInformation.customerId.customerName}}\r\n                                                    disabled>\r\n                                                <input *ngIf="workOrderGeneralInformation.customerId === null"\r\n                                                    type="text" class="form-control" value=\'\' disabled>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="clear"></div>\r\n                                <div class="more-details" [hidden]="!isDetailedView">\r\n                                    <div class="col-md-12 row">\r\n                                        <div class="col-md-3">\r\n                                            <label style="width: auto;" matTooltipPosition="above" [ngClass]="{pointerEvents : isEdit && !isRecCustomer}"\r\n                                                matTooltip="Single MPN">\r\n                                                <input type="radio" [value]=true name="type" #type="ngModel"\r\n                                                    class="radio_adjust"\r\n                                                    [(ngModel)]="workOrderGeneralInformation.isSinglePN">\r\n                                                Single MPN\r\n                                            </label>\r\n                                            <label style="width: auto;" matTooltipPosition="above" [ngClass]="{pointerEvents : isEdit && !isRecCustomer}"\r\n                                                matTooltip="Multiple MPN">\r\n                                                <input type="radio" [value]=false name="type" #type="ngModel"\r\n                                                    class="radio_adjust"\r\n                                                    [(ngModel)]="workOrderGeneralInformation.isSinglePN"\r\n                                                    >\r\n                                                Multiple MPN\r\n                                            </label>\r\n                                            \x3c!-- <div class="form-group">\r\n                                                <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                    <label class="radio-cstm wauto" [ngClass]="{pointerEvents : workOrderGeneralInformation.isRecCustomer || isEdit}">\r\n                                                        <input type="radio" name="type" class="form-control" [value]=true [disabled]="isEdit && !isRecCustomer" [(ngModel)]="workOrderGeneralInformation.isSinglePN">\r\n                                                        <span class="checkmark"></span>  Single MPN\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                    <label class="radio-cstm wauto" [ngClass]="{pointerEvents : workOrderGeneralInformation.isRecCustomer || isEdit}">\r\n                                                        <input type="radio" name="type" class="form-control" [value]=false [disabled]="isEdit && !isRecCustomer"  [(ngModel)]="workOrderGeneralInformation.isSinglePN">\r\n                                                        <span class="checkmark"></span>  Multiple MPN\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>  --\x3e\r\n                                        </div>\r\n                                        <div class="col-md-6">\r\n                                            <div *ngFor="let workOrderType of workOrderTypes" class="align-row">\r\n                                                <label matTooltipPosition="above" matTooltip="Work Order Type"\r\n                                                    style="width: auto;" [ngClass]="{pointerEvents : workOrderGeneralInformation.isRecCustomer || isEdit}">\r\n                                                    <input type="radio" class="radio_adjust" name="work-type"\r\n                                                        [value]="workOrderType.id"\r\n                                                        (click)="woDealerChange($event.target.value)"\r\n                                                        [checked]="workOrderGeneralInformation.workOrderTypeId == workOrderType.id"\r\n                                                        (change)="selectedCustomerType()"\r\n                                                        \r\n                                                        >\r\n                                                    {{workOrderType.description}}\r\n                                                </label>\r\n                                                  </div>\r\n                                                \x3c!-- [ngClass]="{pointerEvents : workOrderGeneralInformation.isRecCustomer || isEdit}" --\x3e\r\n                                        \r\n                                        \r\n                                                \x3c!-- <div class="form-group"> \r\n                                                    <div *ngFor="let workOrderType of workOrderTypes" class="pull-left align-row" style="margin-top: 4px; margin-right: 15px;">\r\n                                                        <label class="radio-cstm wauto" [ngClass]="{pointerEvents : workOrderGeneralInformation.isRecCustomer || isEdit}" matTooltipPosition="above" matTooltip="{{workOrderType.description}}"\r\n                                                        style="width: auto;">\r\n                                                            <input type="radio" name="type" class="form-control"  [value]="workOrderType.id"\r\n                                                            (click)="woDealerChange($event.target.value)"\r\n                                                            [(ngModel)]="workOrderGeneralInformation.workOrderTypeId == workOrderType.id"\r\n                                                            (change)="selectedCustomerType()">\r\n                                                            <span class="checkmark"></span>  {{workOrderType.description}}\r\n                                                        </label>\r\n                                                    </div>\r\n                                        </div> --\x3e\r\n                                        \r\n                                        \r\n                                          \r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="clear"></div>\r\n                                    <hr>\r\n                                    <div class="form-row">\r\n                                        <div class="col-md-6 main_ar">\r\n                                            <div class="form-row">\r\n                                                <div class="col-md-6">\r\n                                                    <div class="form-group ">\r\n                                                        <label for="workflownum">\r\n                                                            WO Num\r\n                                                        </label>\r\n                                                        <input class="form-control" matTooltipPosition="above"\r\n                                                            type="text" name="workOrderNumber"\r\n                                                            #workOrderNumber="ngModel" disabled\r\n                                                            [(ngModel)]="workOrderGeneralInformation.workOrderNumber"\r\n                                                            matTooltip="This field should display \'creating\' before the header info is saved WO ID should be autogenerated.  Allow siffices or prefeices depending on what config in the WO setup screen" />\r\n                                                    </div>\r\n                                                    <div class="form-group">\r\n                                                        <label for="opendate">\r\n                                                            Open Date <span class="clr-red">*</span>\r\n                                                        </label>\r\n                                                        <p-calendar [showIcon]="true" class="calender-cstm"\r\n                                                        [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100"\r\n                                                            name="openDate" #openDate="ngModel" required (ngModelChange)="getmemo($event)"\r\n                                                            [(ngModel)]="workOrderGeneralInformation.openDate" [disabled]="isView" appendTo="body">\r\n                                                        </p-calendar>\r\n                                                    </div>\r\n                                                    <div class="form-group">\r\n                                                        <label for="credit" style="width: 100%;">\r\n                                                            WO Status\r\n                                                            <span class="clr-red">*</span>\r\n                                                        </label>\r\n                                                        <input class="form-control" matTooltipPosition="above" required\r\n                                                            type="text" name="WoSatus" #contactName="ngModel" disabled\r\n                                                            [ngModel]="workOrderNumberStatus" />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class="col-md-6">\r\n                                                    <div class="form-group">\r\n                                                        <label for="customername">\r\n                                                            Customer Name\r\n                                                            <span class="clr-red">*</span>\r\n                                                            <span\r\n                                                                *ngIf="workOrderGeneralInformation.customerId !== null ">\r\n                                                                <a matTooltipPosition="above"\r\n                                                                    matTooltip="Customer Email: {{workOrderGeneralInformation.customerId.customerEmail}}, Customer Phone: {{workOrderGeneralInformation.customerId.customerPhoneNo}}"\r\n                                                                    (click)="viewCustomerDetails(workOrderGeneralInformation.customerId.customerId)">\r\n                                                                    <i class="fa fa-eye view_icon_adjust"></i>\r\n                                                                </a>\r\n                                                            </span>\r\n                                                        </label>\r\n                                                        <p-autoComplete field="customerName"\r\n                                                            [(ngModel)]="workOrderGeneralInformation.customerId"\r\n                                                            name="customerName" errorMessage="Records not found"\r\n                                                            [forceSelection]="true"\r\n                                                            (onSelect)="selectCustomer($event, workOrderGeneralInformation ,\'formHtml\')"\r\n                                                            [suggestions]="customerNamesList"\r\n                                                            (completeMethod)="filterCustomerName($event)"\r\n                                                            (onClear)="clearautoCompleteInput(workOrderGeneralInformation, \'customerId\' )"\r\n                                                            [size]="30" [minLength]="1" #customerName="ngModel" required\r\n                                                            [dropdown]="true" class="p-autoComplete-ctsm"\r\n                                                            [disabled]="workOrderGeneralInformation.isRecCustomer || isView || isEdit">\r\n                                                        </p-autoComplete>\r\n\r\n                                                        <div *ngIf="customerName.invalid && (customerName.dirty || customerName.touched)"\r\n                                                            class="alert alert-danger alert-danger-cstm">\r\n                                                            <div *ngIf="customerName.errors.required">\r\n                                                                <small> Customer Name is required </small>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div class="clear"></div>\r\n\r\n                                                    </div>\r\n                                                    <div class="form-group">\r\n                                                        <label>Contact Name<span class="text-danger">*</span></label>\r\n\r\n                                                        \x3c!-- {{myCustomerContact|json}} --\x3e\r\n                                                        <input type="text" *ngIf="isView" class="form-control" name="customercontact"  [(ngModel)]="workOrderGeneralInformation.customerContact"  disabled>\r\n                                                        <p-autoComplete *ngIf="!isView"\r\n                                                            (onSelect)="onSelectCustomerContact(myCustomerContact)"\r\n                                                            field="customerContact" class="pautocomp-cstm"\r\n                                                            [(ngModel)]="myCustomerContact" name="customerContactId"\r\n                                                            [suggestions]="customerContactInfo"\r\n                                                            (completeMethod)="filterCustContacts($event)" [size]="30"\r\n                                                            [minLength]="1" [dropdown]="true" (ngModelChange)="getmemo($event)"\r\n                                                            errorMessage="Records not found" [forceSelection]="true"\r\n                                                            #cusContact="ngModel" required [disabled]="isView"></p-autoComplete>\r\n                                                    </div>\r\n                                                    <div class="form-group ">\r\n                                                        <label for="workflownum">\r\n                                                            Contact Phone\r\n                                                        </label>\r\n                                                        <input class="form-control" matTooltipPosition="above"\r\n                                                            type="text" name="customerPhoneNo" #contactPhone="ngModel"\r\n                                                            disabled\r\n                                                            [(ngModel)]="workOrderGeneralInformation.customerPhoneNo" />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class="col-md-12 max_alf">\r\n                                                    <label for="notes">\r\n                                                        Notes\r\n                                                    </label>\r\n                                                    <textarea class="form-control text-area-cstm m-0" (ngModelChange)="getmemo($event)" rows="2" cols="50"\r\n                                                        [(ngModel)]="workOrderGeneralInformation.notes" name="notes"\r\n                                                        [disabled]="isView"></textarea>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n\r\n                                        <div class="col-md-3">\r\n                                            <div class="form-group">\r\n                                                <label for="credit">\r\n                                                    Credit Limit &amp; Term\r\n                                                    <span class="clr-red">*</span>\r\n                                                </label>\r\n                                                <div class="col-md-12 set_padNone">\r\n                                                    <div class="col-md-6">\r\n                                                        <input type="text" class="form-control wo-input text_right"\r\n                                                            name="creditLimit" #creditLimit="ngModel"\r\n                                                            [(ngModel)]="workOrderGeneralInformation.creditLimit"\r\n                                                            required [readonly]="true">\r\n                                                    </div>\r\n\r\n                                                    <div class="col-md-6">\r\n                                                        <input type="text" class="form-control wo-input"\r\n                                                            name="creditTerm" #creditTerm="ngModel"\r\n                                                            [(ngModel)]="workOrderGeneralInformation.creditTerm"\r\n                                                            required [readonly]="true">\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class="form-group p-t-10" style="clear: both;">\r\n\r\n                                                <label for="employee">\r\n                                                    Salesperson / Agent\r\n                                                </label>\r\n\r\n                                                <p-autoComplete field="name"\r\n                                                    [(ngModel)]="workOrderGeneralInformation.salesPerson"\r\n                                                    name="salesPerson" #salesPerson="ngModel"\r\n                                                    errorMessage="Records not found" [forceSelection]="true"\r\n                                                    [dropdown]="true" [suggestions]="salesPersonList" (ngModelChange)="getmemo($event)"\r\n                                                    (completeMethod)="filterSalesPerson($event)"\r\n                                                    (onClear)="clearautoCompleteInput(workOrderGeneralInformation, \'salesPersonId\' )"\r\n                                                    [size]="30" [minLength]="1" [dropdown]="true"\r\n                                                    class="p-autoComplete-ctsm" [disabled]="isView">\r\n                                                </p-autoComplete>\r\n                                            </div>\r\n                                            <div class="form-group ">\r\n                                                <label for="customercontact">\r\n                                                    CSR\r\n                                                </label>\r\n                                                <p-autoComplete field="name"\r\n                                                    [(ngModel)]="workOrderGeneralInformation.csr" name="csr"\r\n                                                    #csr="ngModel" errorMessage="Records not found" (ngModelChange)="getmemo($event)"\r\n                                                    [forceSelection]="true" [dropdown]="true" [suggestions]="csrList"\r\n                                                    (completeMethod)="filterCsr($event)"\r\n                                                    (onClear)="clearautoCompleteInput(workOrderGeneralInformation, \'csr\' )"\r\n                                                    [size]="30" [minLength]="1" class="p-autoComplete-ctsm" [disabled]="isView">\r\n                                                </p-autoComplete>\r\n                                            </div>\r\n\r\n                                            <div class="form-group ">\r\n                                                <label for="employee">\r\n                                                    Employee\r\n                                                </label>\r\n                                                <p-autoComplete field="name"\r\n                                                    [(ngModel)]="workOrderGeneralInformation.woEmployee"\r\n                                                    name="employees" #employees="ngModel" (ngModelChange)="getmemo($event)"\r\n                                                    errorMessage="Records not found" [forceSelection]="true"\r\n                                                    [dropdown]="true" [suggestions]="employeeList"\r\n                                                    (completeMethod)="filterEmployee($event)"\r\n                                                    (onClear)="clearautoCompleteInput(workOrderGeneralInformation, \'employeeId\' )"\r\n                                                    [size]="30" [minLength]="1" [dropdown]="true"\r\n                                                    class="p-autoComplete-ctsm" [disabled]="isView">\r\n                                                </p-autoComplete>\r\n                                            </div> \r\n                                        </div>\r\n                                        <div class="col-md-3">\r\n                                            <div class="form-group">\r\n                                                <label for="memo">Memo</label>\r\n                                                <textarea class="form-control" rows="4" cols="50"\r\n                                                    style="height: 190px !important;" (ngModelChange)="getmemo($event)"\r\n                                                    [(ngModel)]="workOrderGeneralInformation.memo" name="memo"\r\n                                                    [disabled]="isView"></textarea>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="footer_adjust" *ngIf="isEdit && !isRecCustomer && !isView">\r\n                                        <button class="btn btn-primary pull-right" type="button" style="margin:0px"\r\n                                            [disabled]="!workOrderForm.valid || disableSaveForEdit" (click)="saveWorkOrder()">\r\n                                            Update\r\n                                        </button>\r\n                                        <button class="btn btn-primary pull-right"\r\n                                            *ngIf="(!showTabsGrid && !isEdit) || isRecCustomer" type="button"\r\n                                            [disabled]="!workOrderForm.valid" (click)="saveWorkOrder()">\r\n                                            Save\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div *ngIf="!workOrderGeneralInformation.isSinglePN && workOrderId">\r\n                        <app-common-wo-summarization [workOrderId]="workOrderId"  [savedWorkOrderData]="savedWorkOrderData" [mpnPartNumbersList]="mpnPartNumbersList" [employeesOriginalData]="employeesOriginalData" [taskList]="taskList" [workOrderWorkFlowOriginalData]="workOrderWorkFlowOriginalData" [customerContactList]="customerContactList" [defaultTab]="defaultTab" (resetSelectedTab)="resetSelectedTab()"></app-common-wo-summarization>\r\n                    </div>\r\n                    <div *ngIf="!hideWOHeader && !isView">\r\n                        <button *ngIf="!workOrderGeneralInformation.isSinglePN && !workOrderQuoteId"\r\n                            class="btn btn-primary pull-right addMPN_details" (click)="addMPN()">\r\n                            Add MPN\r\n                        </button>\r\n                    </div>\r\n                    <div>\r\n                    </div>\r\n                    <div class="table-responsive add-wo-grid" *ngIf="!hideWOHeader">\r\n                      <table class="table table-bordered table-striped table-fixed table-sorting mpn-list-table"\r\n                            id="mpn-list-table">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th rowspan="2">MPN *</th>\r\n                                    <th rowspan="2">MPN Description *</th>\r\n                                    <th rowspan="2">Revised MPN</th>\r\n                                    <th rowspan="2">Item Group</th>\r\n                                    <th rowspan="2">Qty</th>\r\n                                    <th rowspan="2">Work Scope *</th>\r\n                                    <th rowspan="2">Customer Ref</th>\r\n                                    <th rowspan="2" colspan="4">Management Structure </th>\r\n                                    <th rowspan="2">NTE</th>\r\n                                    <th rowspan="2">Cond *</th>\r\n                                    <th rowspan="2" *ngIf="workOrderGeneralInformation.workOrderTypeId==1">Contract</th>\r\n                                    <th rowspan="2" *ngIf="workOrderGeneralInformation.workOrderTypeId==1"\r\n                                        style="min-width: 80px;">Contract No</th>\r\n                                    <th rowspan="2">Stk Line </th>\r\n                                    <th rowspan="2">Serial Num </th>\r\n                                    <th rowspan="2">CMM/Pub Ref</th>\r\n                                    <th rowspan="2">Workflow ID </th>\r\n                                    <th rowspan="2">Stage *</th>\r\n                                    <th rowspan="2">Status *</th>\r\n                                    <th rowspan="2">Priority *</th>\r\n                                    <th rowspan="2">Customer Received Date</th>\r\n                                    <th rowspan="2">Customer Request Date *</th>\r\n                                    <th rowspan="2">Promised Date *</th>\r\n                                    <th rowspan="2">Est. Comp Date *</th>\r\n                                    <th rowspan="2">Est. Ship Date *</th>\r\n                                    <th colspan="2">Restrictions</th>\r\n                                    <th rowspan="2">Tech Name</th>\r\n                                    <th rowspan="2">Tech Station</th>\r\n                                    <th rowspan="2" style="display:none">Tear Down Report</th>\r\n                                    <th colspan="2">TAT (Days)</th>\r\n                                    <th rowspan="2"></th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>PMA</th>\r\n                                    <th>DER</th>\r\n                                    <th>Current</th>    \r\n                                    <th>Standard</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr class="mpn-row" style="display: table-row;"\r\n                                    *ngFor="let workOrderPartNumber of workOrderGeneralInformation.partNumbers; let i=index;">\r\n                                    <td>\r\n                                        \x3c!-- workOrderQuoteId --\x3e\r\n                                        <p-autoComplete field="partNumber"\r\n                                                        [(ngModel)]="workOrderPartNumber.masterPartId" name="mpn{{i}}" \r\n                                                        #mpn="ngModel" errorMessage="Records not found" [forceSelection]="true"\r\n                                                        [dropdown]="true" [suggestions]="partNumberList"\r\n                                                        (onSelect)="onSelectedPartNumber($event, workOrderPartNumber, i); getWorkFlowByPNandScope(workOrderPartNumber); getStockLineByItemMasterIdOnChangePN(workOrderPartNumber,i);"\r\n                                                        (completeMethod)="filterPartNumber($event)" emptyMessage="No Records Found"\r\n                                                        (onClear)="clearautoCompleteInput(workOrderPartNumber, \'masterPartId\' )"\r\n                                                        [size]="30" [minLength]="1"\r\n                                                        class="p-autoComplete-ctsm custome_automo p-autocomplete-mh120" required [disabled]="isView || quotestatusofCurrentPart ==\'Approved\'"  appendTo="body">\r\n                                        </p-autoComplete>\r\n                                    </td>\r\n                                    <td>\r\n                                        <input type="text" class="form-control  w150" name="description{{i}}"\r\n                                               #description="ngModel" [(ngModel)]="workOrderPartNumber.description"\r\n                                               required disabled>\r\n                                    </td>\r\n                                    <td> \r\n                                        <input type="text" class="form-control w100" name="revisedPartNo{{i}}"\r\n                                               #description="ngModel" [(ngModel)]="workOrderPartNumber.revisedPartNo"\r\n                                               disabled>\r\n                                    </td>\r\n                                    <td>\r\n                                        <input type="text" class="form-control w100" name="itemGroup{{i}}"\r\n                                               #description="ngModel" [(ngModel)]="workOrderPartNumber.itemGroup"\r\n                                               disabled>\r\n                                    </td>\r\n                                    <td>\r\n                                        <input type="number" class="form-control w100 text_right" name="quantity{{i}}"\r\n                                               [(ngModel)]="workOrderPartNumber.quantity" disabled>\r\n                                    </td>\r\n                                    <td>\r\n                                        <p-dropdown placeholder="Select" name="scope{{i}}" #scope="ngModel"\r\n                                        [options]="workScopesList" class="p-dropdown-custom-md p-dropdown-mh120"\r\n                                        [(ngModel)]="workOrderPartNumber.workOrderScopeId" [disabled]="isView || quotestatusofCurrentPart ==\'Approved\'"\r\n                                        (onChange)="getWorkFlowByPNandScope(workOrderPartNumber)" required appendTo="body">\r\n                            </p-dropdown>\r\n                                    </td>\r\n                                    <td>\r\n                                        <input type="text" class="form-control w100" name="customerReference{{i}}"\r\n                                               #customerReference="ngModel"\r\n                                               [(ngModel)]="workOrderPartNumber.customerReference" disabled>\r\n                                    </td>\r\n                                    <td>\r\n                                        <input type="text" class="form-control w100" name="companyName{{i}}"\r\n                                               [(ngModel)]="workOrderPartNumber.level1" disabled>\r\n                                    </td>\r\n                                    <td>\r\n                                        <input type="text" class="form-control w100" name="buName{{i}}"\r\n                                               [(ngModel)]="workOrderPartNumber.level2" disabled>\r\n                                    </td>\r\n                                    <td>\r\n                                        <input type="text" class="form-control w100" name="divisionName{{i}}"\r\n                                               [(ngModel)]="workOrderPartNumber.level3" disabled>\r\n                                    </td>\r\n                                    <td>\r\n                                        <input type="text" class="form-control w100" name="deptName{{i}}"\r\n                                               [(ngModel)]="workOrderPartNumber.level4" disabled>\r\n                                    </td>\r\n                                    <td>\r\n                                        <input type="text" class="form-control w50"\r\n                                               [(ngModel)]="workOrderPartNumber.nte" name="nte{{i}}" #nte="ngModel"\r\n                                               disabled>\r\n                                    </td>\r\n                                    <td>\r\n                                        <p-dropdown placeholder="Select" [options]="conditionList"\r\n                                                    name="condition{{i}}" #condition="ngModel" (onChange)="selectedCondition($event.value,workOrderPartNumber,i)"\r\n                                                    class="p-dropdown-custom-md" [(ngModel)]="workOrderPartNumber.conditionId" required [disabled]="isView || quotestatusofCurrentPart ==\'Approved\'" appendTo="body">\r\n                                        </p-dropdown>\r\n                                        \x3c!-- <select class="form-control" name="conditionId" [(ngModel)]="workOrderPartNumber.conditionId"\r\n             required>\r\n            <option value="0">-- Select --</option>\r\n            <option *ngFor="let condition of conditionList"\r\n                [ngValue]="condition.conditionId">{{condition.label}}</option>\r\n        </select> --\x3e\r\n                                        \x3c!-- <input type="text" class="form-control w100" name="condition{{i}}"\r\n            #serialNumber="ngModel" [(ngModel)]="workOrderPartNumber.condition"\r\n            disabled> --\x3e\r\n                                    </td>\r\n                                    <td *ngIf="this.workOrderGeneralInformation.workOrderTypeId==1" style="text-align:center;">\r\n                                        <input type="checkbox" name="contract {{i}}" #contract="ngModel"\r\n                                               class="form-control w60" [(ngModel)]="workOrderPartNumber.isMPNContract" disabled>\r\n                                        \x3c!-- <span class="cr"><i class="cr-icon pi pi-check"></i></span> Contract --\x3e\r\n                                    </td>\r\n                                    <td>\r\n                                        \x3c!-- {{workOrderPartNumber.contractNo}} --\x3e\r\n                                        <input type="text" name="contract1{{i}}" class="form-control w100"\r\n                                               [(ngModel)]="workOrderPartNumber.contractNo"\r\n                                               [required]="workOrderPartNumber.isMPNContract"\r\n                                               [disabled]="!workOrderPartNumber.isMPNContract">\r\n                                    </td>\r\n                                    <td>\r\n                                        <input type="text" class="form-control w100" name="stockLineNumber{{i}}"\r\n                                               #serialNumber="ngModel" [(ngModel)]="workOrderPartNumber.stockLineNumber"\r\n                                               disabled>\r\n                                    </td>\r\n                                    <td>\r\n                                        <input type="text" class="form-control w100" name="serialNumber{{i}}"\r\n                                               #serialNumber="ngModel" [(ngModel)]="workOrderPartNumber.serialNumber"\r\n                                               disabled>\r\n                                    </td>\r\n                                    <td>\r\n                                        <p-dropdown class="min_selct_height" name="cmm{{i}}" #cmm="ngModel"\r\n                                                    [options]="cmmList" class="p-dropdown-custom-md p-dropdown-mh120"\r\n                                                    [(ngModel)]="workOrderPartNumber.cmmId" [disabled]="isView || quotestatusofCurrentPart ==\'Approved\'" appendTo="body">\r\n                                        </p-dropdown>\r\n                                    </td>\r\n                                    <td>\r\n                                        <span class="inline-block">\r\n                                            <p-dropdown [options]="workFlowList" name="workFlow{{i}}"\r\n                                                        #workFlow="ngModel" class="p-dropdown-custom-md p-dropdown-mh120"\r\n                                                        [(ngModel)]="workOrderPartNumber.workflowId" [disabled]="isView || quotestatusofCurrentPart ==\'Approved\'" appendTo="body">\r\n                                            </p-dropdown>\r\n                                        </span>\r\n                                    </td>\r\n                                    <td>\r\n                                        <p-dropdown [options]="workOrderStagesList" name="stage{{i}}" #stage="ngModel"\r\n                                                    placeholder="Select" class="p-dropdown-custom-md p-dropdown-mh120"\r\n                                                    (onChange)="selectedStage($event.value,workOrderPartNumber,i)"\r\n                                                    [(ngModel)]="workOrderPartNumber.workOrderStageId" required [disabled]="isView || quotestatusofCurrentPart ==\'Approved\'" appendTo="body">\r\n                                        </p-dropdown>\r\n                                    </td>\r\n                                    <td>\r\n                                        <p-dropdown [options]="workOrderStatusList" placeholder="Select"\r\n                                                    name="status{{i}}" #status="ngModel"\r\n                                                    class="p-dropdown-custom-md custome_pd-totext p-dropdown-mh120"\r\n                                                    [(ngModel)]="workOrderPartNumber.workOrderStatusId" disabled required appendTo="body">\r\n                                        </p-dropdown>\r\n                                        \x3c!-- <span>{{workOrderPartNumber.workOrderStatus}}</span> --\x3e\r\n                                    </td>\r\n                                    <td>\r\n                                        <p-dropdown [options]="priorityList" placeholder="Select" name="priority{{i}}"\r\n                                                    #priority="ngModel" class="p-dropdown-custom-md p-dropdown-mh120"\r\n                                                    [(ngModel)]="workOrderPartNumber.workOrderPriorityId" required [disabled]="isView || quotestatusofCurrentPart ==\'Approved\'" appendTo="body">\r\n                                        </p-dropdown>\r\n                                    </td>\r\n                                    <td>\r\n                                        <p-calendar [showIcon]="true" name="receivedDate{{i}}" class="calender-cstm"\r\n                                        [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100"\r\n                                                    #receivedDate="ngModel" [(ngModel)]="workOrderPartNumber.receivedDate"\r\n                                                    disabled appendTo="body">\r\n                                        </p-calendar>\r\n                                    </td>\r\n                                    <td>\r\n                                        <p-calendar [showIcon]="true" name="customerRequestDate{{i}}"\r\n                                        [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100"\r\n                                                    class="calender-cstm" #customerRequestDate="ngModel"\r\n                                                    [(ngModel)]="workOrderPartNumber.customerRequestDate"\r\n                                                    [minDate]="workOrderPartNumber.receivedDate" required [disabled]="isView || quotestatusofCurrentPart ==\'Approved\'"  appendTo="body"></p-calendar>\r\n                                    <td>\r\n                                        <p-calendar [showIcon]="true" name="promisedDate{{i}}" class="calender-cstm"\r\n                                        [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100"\r\n                                                    #promisedDate="ngModel" [(ngModel)]="workOrderPartNumber.promisedDate"\r\n                                                    [minDate]="workOrderPartNumber.receivedDate" required [disabled]="isView || quotestatusofCurrentPart ==\'Approved\'"  appendTo="body">\r\n                                        </p-calendar>\r\n                                    <td>\r\n                                        <p-calendar [showIcon]="true" name="estimatedCompletionDate{{i}}"\r\n                                                    class="calender-cstm" #estimatedCompletionDate="ngModel"\r\n                                                    [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100"\r\n                                                    [minDate]="workOrderPartNumber.receivedDate"\r\n                                                    [(ngModel)]="workOrderPartNumber.estimatedCompletionDate" required [disabled]="isView || quotestatusofCurrentPart ==\'Approved\'"  appendTo="body">\r\n                                        </p-calendar>\r\n                                    </td>\r\n                                    <td>\r\n                                        <p-calendar [showIcon]="true" class="calender-cstm"\r\n                                                    name="estimatedShipDate{{i}}"\r\n                                                    [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100"\r\n                                                    [(ngModel)]="workOrderPartNumber.estimatedShipDate"\r\n                                                    [minDate]="workOrderPartNumber.receivedDate" #estimatedShipDate="ngModel"\r\n                                                    required [disabled]="isView || quotestatusofCurrentPart ==\'Approved\'"  appendTo="body"></p-calendar>\r\n                                    </td>\r\n                                    <td style="text-align:center;">\r\n                                        \x3c!-- [disabled]="isView" --\x3e\r\n                                        <input type="checkbox" class="form-control w60" name="isPMA{{i}}"\r\n                                               #isPMA="ngModel" [(ngModel)]="workOrderPartNumber.isPMA" disabled>\r\n                                    </td>\r\n                                    <td style="text-align:center;">\r\n                                        <input type="checkbox" class="form-control w60" name="isDER{{i}}"\r\n                                               #isDER="ngModel" [(ngModel)]="workOrderPartNumber.isDER" disabled>\r\n\r\n                                    </td>\r\n                                    <td>\r\n                                        <p-autoComplete field="name" [(ngModel)]="workOrderPartNumber.partTechnicianId"\r\n                                                        name="technician{{i}}" #technician="ngModel"\r\n                                                        errorMessage="Records not found" [forceSelection]="true" [dropdown]="true"\r\n                                                        [suggestions]="technicianList"\r\n                                                        (onSelect)="onSelectedTechnician($event, workOrderPartNumber);"\r\n                                                        (completeMethod)="filterTechnician($event)"\r\n                                                        (onClear)="clearautoCompleteInput(workOrderPartNumber, \'partTechnicianId\' )"\r\n                                                        [size]="30" [minLength]="1"\r\n                                                        class="p-autoComplete-ctsm custome_automo p-autocomplete-mh120"\r\n                                                       [disabled]="isView || quotestatusofCurrentPart ==\'Approved\'" appendTo="body">\r\n\r\n                                        </p-autoComplete>\r\n                                    </td>\r\n                                    <td>\r\n                                        <p-dropdown placeholder="Select" name="techStation{{i}}" #techStatsion="ngModel"\r\n                                                    [options]="techStationList" class="p-dropdown-custom-md p-dropdown-mh120"\r\n                                                    [(ngModel)]="workOrderPartNumber.techStationId"[disabled]="isView || quotestatusofCurrentPart ==\'Approved\'" appendTo="body">\r\n                                        </p-dropdown>\r\n                                    </td>\r\n                                    <td style="display:none">\r\n                                        <p-dropdown placeholder="Select" name="tearDown{{i}}" #tearDown="ngModel"\r\n                                                    [options]="tearDownReportList" class="p-dropdown-custom-md"\r\n                                                    [(ngModel)]="workOrderPartNumber.tearDownReport"[disabled]="isView || quotestatusofCurrentPart ==\'Approved\'">\r\n                                        </p-dropdown>\r\n                                    </td>\r\n                                    <td>\r\n                                        \x3c!-- {{workOrderPartNumber.tatDaysCurrent}} --\x3e\r\n                                        <input type="number" class="form-control w50" name="tatDaysCurrent{{i}}"\r\n                                               #tatDaysCurrent="ngModel" [(ngModel)]="workOrderPartNumber.tatDaysCurrent"\r\n                                               disabled>\r\n                                    </td>\r\n                                    <td>\r\n                                        <input type="number" class="form-control w50" name="tatDaysStandard{{i}}"\r\n                                               #tatDaysStandard="ngModel" [(ngModel)]="workOrderPartNumber.tatDaysStandard"\r\n                                               disabled>\r\n                                    </td>\r\n                                    <td *ngIf="!isView"> \r\n                                        <span *ngIf="!workOrderGeneralInformation.isSinglePN " class="delete-row-btn" >\r\n                                            \x3c!-- <a class="btn btn-danger boxed-float-btn nobg"  (click)="openDelete(content,i)" [disabled]="workOrderQuoteId"\r\n                                               matTooltipPosition="above" matTooltip="Delete" >\r\n                                                <i class="fa fa-trash"></i> \r\n                                            </a>  --\x3e\r\n\r\n                                            <button type="button" class="btn nobg btn-delete-cstm" (click)="openDelete(content,i)"  [disabled]="quotestatusofCurrentPart ==\'Approved\' || workOrderPartNumber==false" matTooltip="Delete" matTooltipPosition="above">\r\n                                                <i class="fa fa-trash"></i>\r\n                                            </button> </span>\r\n             \r\n                                        \x3c!-- <span>\r\n                                            <a class="btn nobg" (click)="openDelete(content,rowData)" matTooltip="Delete" matTooltipPosition="above">\r\n                                                <i class="fa fa-trash"></i>\r\n                                            </a> [disabled]="workOrderQuoteId"\r\n                                        </span> --\x3e\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <div class="footer_adjust" *ngIf="!hideWOHeader && !isView">\r\n                        <button class="btn btn-primary pull-right" *ngIf="(!showTabsGrid && !isEdit) || isRecCustomer"\r\n                            type="button" [disabled]="!workOrderForm.valid || checkworkscope()" (click)="saveWorkOrder()">\r\n                            Save\r\n                        </button>\r\n                        <button class="btn btn-primary pull-right" *ngIf="isEdit && !isRecCustomer" type="button"\r\n                            [disabled]="!workOrderForm.valid" (click)="saveWorkOrder()">\r\n                            Update\r\n                        </button>\r\n                        <button *ngIf="showTabsGrid && !isView" class="btn btn-primary pull-right" (click)="createQuote()">\r\n                            {{(workOrderQuoteId)?\'Edit Quote\':\'Create Quote\'}}\r\n                        </button>\r\n                    </div>\r\n\r\n                    <ng-template #content let-c="close" let-d="dismiss" data-backdrop="static">\r\n                        <div class="modal-header">\r\n                            <h4 class="modal-title">Are You Sure Want to Delete?</h4>\r\n                            <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n                                <span aria-hidden="true">&times;</span>\r\n                            </button>\r\n                        </div>\r\n                    \r\n                        <div class="modal-body">\r\n                            \x3c!-- <strong>\r\n                                Receiving Num:\r\n                                <span class="new-label">{{selectedRowForDelete.receivingNumber}}</span>\r\n                            </strong> --\x3e\r\n                        </div>\r\n                        <div class="modal-footer">\r\n                            <button type="button" class="btn btn-primary" (click)="deleteMPN()">Yes</button>\r\n                            <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n                        </div>\r\n                    </ng-template>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n    <div class="card" *ngIf="showTabsGrid" style="margin-top: 7px;">\r\n        <div *ngIf="showTabsMPNGrid">\r\n            <div class="card-header" *ngIf="!workOrderGeneralInformation.isSinglePN">\r\n                Multiple MPN\r\n            </div>\r\n            <div class="card-body">\r\n                <div class="col-md-12" [hidden]="workOrderGeneralInformation.isSinglePN && !showTabsGrid">\r\n                    <div class="col-md-2">\r\n                        <label class="control-label col-sm-3" style=" margin-right: 4px;margin-top: 6px;">MPN\r\n                        </label>\r\n                        <div class="col-sm-7">\r\n                            <p-dropdown [options]="mpnPartNumbersList" name="partNumber" #partNumber="ngModel"\r\n                                placeholder="Select Part Number" (onChange)="changeofMPN($event.value)"\r\n                                class="p-dropdown-custom-md" [(ngModel)]="selectedMPN">\r\n                            </p-dropdown>\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-md-10" style="background-color: white;margin-top: 3px" *ngIf="mpnGridData">\r\n                        <div class="col-md-3">\r\n                            <label class="fs12">Description : </label>\r\n                            <span>{{mpnGridData.description}}</span>\r\n                        </div>\r\n                        <div class="col-md-2">\r\n                            <label class="fs12">Workscope : </label>\r\n                            <span>{{mpnGridData.workscope}}</span>\r\n                        </div>\r\n                        <div class="col-md-2">\r\n                            <label class="fs12">NTE : </label>\r\n                            <span>{{mpnGridData.nte}}</span>\r\n                        </div>\r\n\r\n                        <div class="col-md-1">\r\n                            <label class="fs12">Qty :</label>\r\n                            <span class="text_right">{{mpnGridData.qty}}</span>\r\n                        </div>\r\n                        <div class="col-md-2">\r\n                            <label class="fs12" style="text-align: left;\r\n                                        width: 41px;">Stage : </label>\r\n                            <span>{{mpnGridData.stage}}</span>\r\n                        </div>\r\n                        <div class="col-md-2">\r\n                            <label class="fs12">Priority :</label>\r\n                            <span>{{mpnGridData.priority}}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class="card-body" *ngIf="showGridMenu" style="padding: 0px;">\r\n            <div class="col-md-2" *ngIf="isSubWorkOrder==true">\r\n  <label class="control-label col-sm-3" style=" margin-right: 4px;margin-top: 6px;">MPN\r\n  </label>\r\n  <div class="col-sm-7">\r\n      <p-dropdown [options]="mpnDropdownList"  name="subWOPartNoId" #subWOPartNoId="ngModel"\r\n          placeholder="Select Part Number" (onChange)="changeofMPNForSubWo($event.value)"\r\n          class="p-dropdown-custom-md" [(ngModel)]="selectedMPNSubWo">\r\n      </p-dropdown>\r\n  </div>\r\n</div>\r\n            <div class="card col-md-12" style="background: #ffffff; margin-top: 0px;">\r\n                \x3c!--#f1f1f1--\x3e\r\n                <ul class="nav nav-pills nav-pills-cstm back_filsd" id="pills-tab" role="tablist"\r\n                    style="margin-top: 2px;" *ngIf="!hideWOHeader">\r\n\r\n                    <li class="nav-item" *ngIf="isSubWorkOrder">\r\n                        <a id="pills-home-tab" role="tab" aria-controls="pills-home" aria-selected="true"\r\n                            [ngClass]="{active : gridActiveTab === \'workOrderMain\'}"\r\n                            (click)="gridTabChange(\'workOrderMain\');  ">WorkOrder Main</a>\r\n                    </li>\r\n                    <li class="nav-item dropdown" *ngIf="workFlowId !==0">\r\n                        <a class="nav-link dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true"\r\n                            aria-expanded="false"\r\n                            [ngClass]="{active : gridActiveTab === \'workFlow\' ||  subTabWorkFlow === \'editworkFlow\' || subTabWorkFlow === \'createworkFlow\' || subTabWorkFlow === \'viewworkFlow\'  }">Workflow</a>\r\n                        <div class="dropdown-menu">\r\n                            <a class="dropdown-item" (click)="subTabWorkFlowChange(\'viewworkFlow\');">View WF</a>\r\n                            <a class="dropdown-item" (click)="subTabWorkFlowChange(\'editworkFlow\')">\r\n                                Edit\r\n                                Existing WF\r\n                            </a>\r\n                            \x3c!-- <a *ngIf="workFlowWorkOrderId == 0 " class="dropdown-item" (click)="subTabWorkFlowChange(\'createworkFlow\')">Create New\r\n                                        WF</a> --\x3e\r\n                            <div class="dropdown-divider"></div>\r\n                        </div>\r\n                    </li>\r\n                    <li class="nav-item">\r\n                        <a id="pills-contact-tab" role="tab" [ngClass]="{active : gridActiveTab === \'materialList\'}"\r\n                            (click)="gridTabChange(\'materialList\'); ">\r\n                            Material\r\n                            List\r\n                        </a>\r\n                    </li>\r\n                    <li class="nav-item">\r\n                        <a id="pills-home-tab" role="tab" aria-controls="pills-home" aria-selected="true"\r\n                            [ngClass]="{active : gridActiveTab === \'labor\'}"\r\n                            (click)="gridTabChange(\'labor\');  ">Labor</a>\r\n                    </li>\r\n                    <li class="nav-item">\r\n                        <a id="pills-profile-tab" role="tab" aria-controls="pills-profile"\r\n                            [ngClass]="{active : gridActiveTab === \'equipment\'}"\r\n                            (click)="gridTabChange(\'equipment\');">Tools</a>\r\n                    </li>\r\n                    \x3c!-- <li class="nav-item" [hidden]="workOrderGeneralInformation.isSinglePN">\r\n                        <a id="pills-contact-tab" role="tab" aria-controls="pills-contact"\r\n                            [ngClass]="{active : gridActiveTab === \'quote\'}" (click)="gridTabChange(\'quote\')">Quote</a>\r\n                    </li> --\x3e\r\n                    <li class="nav-item dropdown">\r\n                        <a class="nav-link dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true"\r\n                            [ngClass]="{active : gridActiveTab === \'main\'}" (click)="gridTabChange(\'main\')">\r\n                            Main\r\n                            Component\r\n                        </a>\r\n                        <div class="dropdown-menu">\r\n                            \x3c!-- <a class="dropdown-item" (click)="mainComponentTabSelected(\'existingRO\')">\r\n                                Add to an\r\n                                Existing RO\r\n                            </a> --\x3e\r\n                            <a class="dropdown-item" (click)="mainComponentTabSelected(\'createNewRO\')">\r\n                                 RO\r\n                            </a>\r\n                            \x3c!-- Create  New RO --\x3e\r\n                            <a class="dropdown-item" (click)="mainComponentTabSelected(\'interOrexternal\')">\r\n                                Convert Internal to\r\n                                External\r\n                            </a>\r\n                            <a class="dropdown-item" (click)="mainComponentTabSelected(\'returnMCToCustomer\')">\r\n                                Return MC to Customer\r\n                            </a>\r\n                            \x3c!-- <a class="dropdown-item" (click)="mainComponentTabSelected(\'returnmc\')">\r\n                                Return MC to\r\n                                Customer  \r\n                            </a> --\x3e\r\n\r\n                        </div>\r\n                    </li>\r\n                    <li class="nav-item" *ngIf="!isSubWorkOrder">\r\n                        <a id="pills-contact-tab" role="tab" [ngClass]="{active : gridActiveTab === \'billorInvoice\'}"\r\n                            (click)="gridTabChange(\'billorInvoice\');">Billing/Invoicing</a>\r\n                        \x3c!-- billingCreateOrEdit(); --\x3e\r\n                    </li>\r\n                    <li class="nav-item" *ngIf="!isSubWorkOrder">\r\n                        <a id="pills-contact-tab" role="tab" [ngClass]="{active : gridActiveTab === \'quote\'}"\r\n                            (click)="gridTabChange(\'quote\');">Quote</a>\r\n                    </li>\r\n                    <li class="nav-item" *ngIf="!isSubWorkOrder">\r\n                        <a id="pills-contact-tab" role="tab" [ngClass]="{active : gridActiveTab === \'shipping\'}"\r\n                            (click)="gridTabChange(\'shipping\')">Shipping</a>\r\n                    </li>\r\n                    <li class="nav-item" *ngIf="!isSubWorkOrder">\r\n                        <a id="pills-contact-tab" role="tab" [ngClass]="{active : gridActiveTab === \' \'}"\r\n                            (click)="gridTabChange(\'subWO\')">Sub-WO</a> \r\n                    </li>\r\n                    <li class="nav-item dropdown">\r\n                        <a class="nav-link dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true"\r\n                            aria-expanded="false" [ngClass]="{active : gridActiveTab === \'communication\'}"\r\n                            (click)="gridTabChange(\'communication\')">Communication</a>\r\n                        <div class="dropdown-menu">\r\n                            <a class="dropdown-item" (click)="selectedCommunicationTab=\'memo\'">Memo</a>\r\n                            <a class="dropdown-item" (click)="selectedCommunicationTab=\'email\'">Email</a>\r\n                            <a class="dropdown-item" (click)="selectedCommunicationTab=\'phone\'">Phone</a>\r\n                            <a class="dropdown-item" (click)="selectedCommunicationTab=\'text\'">Text</a>\r\n                            \x3c!-- <a class="dropdown-item">Chat</a> --\x3e\r\n                        </div>\r\n                    </li>\r\n                    <li class="nav-item">\r\n                        <a class="nav-link" id="pills-contact-tab" role="tab"\r\n                            [ngClass]="{active : gridActiveTab === \'documents\'}"\r\n                            (click)="gridTabChange(\'documents\'); getDocumentsByWorkOrderId();">Documents</a>\r\n                    </li>\r\n                    <li class="nav-item dropdown">\r\n                        <a class="nav-link dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true"\r\n                            aria-expanded="false" [ngClass]="{active : gridActiveTab === \'workComplete\'}"\r\n                            (click)="gridTabChange(\'workComplete\')">Work Complete</a>\r\n                        <div class="dropdown-menu">\r\n                            <a class="dropdown-item">Move to Finished Goods</a>\r\n                            <a class="dropdown-item">No Work Performed -Return to Customer</a>\r\n                    \x3c!-- <li class="dropdown-submenu">\r\n                        <a class="test">Another dropdown <span class="caret"></span></a>\r\n                        <ul class="dropdown-menu">\r\n                            <li><a>3rd level dropdown</a></li>\r\n                            <li><a>3rd level dropdown</a></li>\r\n                        </ul>\r\n                    </li> --\x3e\r\n            </div>\r\n            </li>\r\n            <li class="nav-item">\r\n                <a class="nav-link" id="pills-contact-tab" role="tab"\r\n                    [ngClass]="{active : gridActiveTab === \'woanalysis\'}" (click)="gridTabChange(\'woanalysis\')">WO\r\n                    Analysis</a>\r\n            </li>\r\n            <li class="nav-item">\r\n                <a class="nav-link" id="pills-contact-tab" role="tab"\r\n                    [ngClass]="{active : gridActiveTab === \'laboranalysis\'}" (click)="gridTabChange(\'laboranalysis\')">\r\n                    Labor Analysis</a>\r\n            </li>\r\n            <li class="nav-item">\r\n                <a id="pills-contact-tab" role="tab" [ngClass]="{active : gridActiveTab === \'tearDown\'}"\r\n                    (click)="gridTabChange(\'tearDown\')">Tear Down</a>\r\n            </li>\r\n            <li class="nav-item dropdown">\r\n                <a class="nav-link dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true"\r\n                    aria-expanded="false" [ngClass]="{active : gridActiveTab === \'otherOptions\'}"\r\n                    (click)="gridTabChange(\'otherOptions\')">Other Options</a>\r\n                <div class="dropdown-menu">\r\n\r\n                    <a class="dropdown-item" (click)="otherOptionTabSelected(\'freight\')">Freight</a>\r\n                    \x3c!--<a class="dropdown-item" (click)="otherOptionTabSelected(\'contactGrid\')">Contact Grid</a>--\x3e\r\n                    \x3c!--<a class="dropdown-item" (click)="otherOptionTabSelected(\'accounting\')">Accounting</a>--\x3e\r\n                    <a class="dropdown-item" (click)="otherOptionTabSelected(\'charges\')">Charges</a>\r\n                    \x3c!-- <a class="dropdown-item" (click)="otherOptionTabSelected(\'exclusions\')">Exclusion </a> --\x3e\r\n                </div>\r\n            </li>\r\n            </ul> \r\n            <br>\r\n            <div *ngIf="isWorkOrderMainView && mainWorkOrderId !=0" [ngClass]="{hidedata :  gridActiveTab !== \'workOrderMain\' }">\r\n                \x3c!-- <app-work-order-list [isSubWorkOrder]="isSubWorkOrder" [workOrderId]="mainWorkOrderId"\r\n                    [isWorkOrderMainView]="isWorkOrderMainView" (closeView)="closeWorkOrderMainView($event)">\r\n                </app-work-order-list> --\x3e\r\n                \x3c!-- <div class="card-body"> --\x3e\r\n                    <app-work-view-component [workOrderId]="mainWorkOrderId"></app-work-view-component>\r\n                \x3c!-- </div> --\x3e\r\n            </div>  \r\n            <div [ngClass]="{hidedata :  subTabWorkFlow !== \'createworkFlow\' }">\r\n                \x3c!-- <wf-create [isWorkOrder]="isWorkOrder" [savedWorkOrderData]="savedWorkOrderData" (savedWorkFlowWorkOrderData)="savedWorkFlowData($event)" > </wf-create> --\x3e\r\n            </div>\r\n            <div *ngIf="workFlowId && subTabWorkFlow && editWorkFlowData"\r\n                [ngClass]="{hidedata: subTabWorkFlow !== \'editworkFlow\' }">\r\n                <wf-create [isWorkOrder]="isWorkOrder" [workOrderPartNumberId]="workOrderPartNumberId"\r\n                    [workFlowWorkOrderId]="workFlowWorkOrderId" [savedWorkOrderData]="savedWorkOrderData"\r\n                    (savedWorkFlowWorkOrderData)="savedWorkFlowData($event)"> </wf-create>\r\n                \x3c!-- <app-workflow-list></app-workflow-list> --\x3e\r\n            </div>\r\n            <div *ngIf="workFlowId && subTabWorkFlow " class="wf-label-cstm"\r\n                [ngClass]="{hidedata :  subTabWorkFlow !== \'viewworkFlow\' }">\r\n                <app-workflow-list [isWorkOrder]="isWorkOrder" [workFlowType]="subTabWorkFlow"\r\n                    [workFlowId]="workFlowId"></app-workflow-list>\r\n            </div>\r\n            <div *ngIf="workOrderId && (gridActiveTab == \'materialList\')"\r\n                [ngClass]="{hidedata : gridActiveTab !== \'materialList\' }"> \r\n                <app-work-order-complete-material-list [materialStatus]="materialStatus" [isWorkOrder]="isWorkOrder"\r\n                    [workFlowObject]="workFlowObject" [savedWorkOrderData]="savedWorkOrderData" [isSubWorkOrder]="isSubWorkOrder" [subWOPartNoId]="subWOPartNoId" [subWorkOrderDetails]="subWorkOrderDetails"\r\n                    [mpnId]="workOrderPartNumberId" [employeesOriginalData]="employeesOriginalData"\r\n                    [workOrderMaterialList]="workOrderMaterialList" (saveRIParts)="saveReservedPartorIssue($event)"\r\n                    (saveMaterialListForWO)="saveWorkOrderMaterialList($event)"  [workOrderId]="workOrderId" \r\n                    (updateMaterialListForWO)="updateWorkOrderMaterialList($event)" [taskList]="taskList"\r\n                    (refreshData)="getMaterialListHandle()" [mpnPartNumbersList]="mpnPartNumbersList" [isView]="isView || isViewForApprovedPart"></app-work-order-complete-material-list>\r\n            </div>\r\n            \x3c!-- //  isSubWorkOrder true , subWOPartNoId and subWorkOrderDetails  those are going to be handel subworkorder --\x3e\r\n            <div *ngIf="labor && (gridActiveTab == \'labor\') " [ngClass]="{hidedata : gridActiveTab !== \'labor\'}" id="check">\r\n                <app-work-order-labor [taskList]="taskList" [laborForm]="labor"\r\n                    [employeesOriginalData]="employeesOriginalData" [workOrderLaborList]="workOrderLaborList"\r\n                    [workOrderWorkFlowOriginalData]="workOrderWorkFlowOriginalData" [isSubWorkOrder]="isSubWorkOrder" [subWOPartNoId]="subWOPartNoId" [subWorkOrderDetails]="subWorkOrderDetails"\r\n                    [selectedPartNumber]="selectedPartNumber" [savedWorkOrderData]="savedWorkOrderData"\r\n                    (saveworkOrderLabor)="saveworkOrderLabor($event)" [workFlowId]="workFlowId" [isView]="isView || isViewForApprovedPart">\r\n                </app-work-order-labor>  \r\n            </div> \r\n            <div *ngIf="(gridActiveTab == \'equipment\')" [ngClass]="{hidedata : gridActiveTab !== \'equipment\'}">\r\n                <app-work-order-assets (saveEquipmentListForWO)="saveWorkOrderEquipmentList($event)" [workOrderPartNumberId]="workOrderPartNumberId"\r\n                    (updateEquipmentListForWO)="updateWorkOrderEquipmentList($event)" [woNumber]="workOrderGeneralInformation.workOrderNum" [customerName]="workOrderGeneralInformation.customerDetails.customerName" [woOperDate]="workOrderGeneralInformation.openDate"\r\n                    (refreshData)="getEquipmentByWorkOrderId($event)" [employeesOriginalData]="employeesOriginalData" [isSubWorkOrder]="isSubWorkOrder" [subWOPartNoId]="subWOPartNoId" [subWorkOrderDetails]="subWorkOrderDetails"\r\n                    [isWorkOrder]="isWorkOrder" [workFlowObject]="workFlowObject"  [workOrderId]="workOrderId"\r\n                    [workOrderAssetList]="workOrderAssetList" [savedWorkOrderData]="savedWorkOrderData" [isView]="isView"> \r\n                </app-work-order-assets>\r\n            </div>\r\n            <div *ngIf="workOrderId && workOrderPartNumberId && (subTabMainComponent === \'existingRO\')"\r\n                [ngClass]="{hidedataMain :  subTabMainComponent !== \'existingRO\'} ">\r\n                <app-work-order-ro-list [mpnId]="workOrderPartNumberId" [isView]="isView || isViewForApprovedPart"></app-work-order-ro-list>\r\n            </div>\r\n            <div *ngIf="workOrderId && workOrderPartNumberId && (subTabMainComponent === \'createNewRO\') "\r\n                [ngClass]="{hidedataMain :  subTabMainComponent !== \'createNewRO\'} ">\r\n                <app-work-order-ro-create [mpnId]="workOrderPartNumberId" [isView]="isView || isViewForApprovedPart" [isSubWorkOrder]="isSubWorkOrder" [subWOPartNoId]="subWOPartNoId"> </app-work-order-ro-create>\r\n            </div>\r\n            <div *ngIf="workOrderId && workOrderPartNumberId && (subTabMainComponent === \'returnMCToCustomer\') "\r\n                [ngClass]="{hidedataMain :  subTabMainComponent !== \'returnMCToCustomer\'} ">\r\n                <app-wo-return-to-customer [workOrderPartNoId]="workOrderPartNumberId" [workOrderId]="workOrderId"> </app-wo-return-to-customer>\r\n            </div>\r\n            <div *ngIf="billing && quoteMaterialList && (gridActiveTab == \'billorInvoice\') && !isSubWorkOrder"\r\n                [ngClass]="{hidedata : gridActiveTab !== \'billorInvoice\'}">\r\n                \x3c!-- workOrderMaterialList --\x3e\r\n                <app-work-order-billing [billingorInvoiceForm]="billing" [legalEntityList]="legalEntityList"\r\n                    [currencyList]="currencyList" [savedWorkOrderData]="savedWorkOrderData" \r\n                    [employeesOriginalData]="employeesOriginalData" [isEditBilling]="isEditBilling" [isbillingNotCreated]="isbillingNotCreated"\r\n                    (saveWOBilling)="saveWorkOrderBilling($event)" (updateWOBilling)="saveWorkOrderBilling($event)"\r\n                    [workOrderQuoteId]="workOrderQuoteId" [quoteExclusionList]="quoteExclusionList" [workFlowWorkOrderId]="workFlowWorkOrderId"\r\n                    [quoteMaterialList]="quoteMaterialList" [quoteFreightsList]="quoteFreightsList" [quotestatusofCurrentPart]="quotestatusofCurrentPart" [workFlowId]="workFlowId" [labordata]="labor" [workOrderLaborList]="workOrderLaborList"\r\n                    [quoteChargesList]="quoteChargesList" [workOrderChargesList]="workOrderChargesList" [quoteLaborList]="quoteLaborList" [taskList]="taskList" [buildMethodDetails]="buildMethodDetails" [isViewMode] = "isView || isViewForApprovedPart"></app-work-order-billing>\r\n            </div> \r\n\r\n            <div *ngIf="(gridActiveTab == \'quote\') && !isSubWorkOrder">\r\n                <div *ngIf="workOrderQuoteId == undefined" class="no-quote">\r\n                    Quote not yet created\r\n                </div>\r\n                <div class="form-row pull-right" style="margin: -12px 10px 10px;" *ngIf="workOrderQuoteId == undefined">\r\n                    <button class="btn btn-primary" (click)="enableBackToWO(\'wo\')">\r\n                        Back To Work Order\r\n                    </button>\r\n                </div>\r\n                <div *ngIf="workOrderQuoteId != undefined ">\r\n                    <app-work-order-quote [workorderid]="workOrderId" isView="true"\r\n                        (enableBackToWO)="enableBackToWO($event)" [customerId]="customerId" enableEditBtn="true" isWoTab="true" [isListView]="isListView">\r\n                    </app-work-order-quote>\r\n                </div>\r\n            </div>\r\n            \r\n            <div *ngIf="(gridActiveTab == \'shipping\') && !isSubWorkOrder">\r\n                    <app-shipping [workOrderGeneralInformation]="workOrderGeneralInformation" [managementStructureId]="managementStructureId" [workOrderPartNumberId]="selectedPartNumber.workOrderPartNumberId" [isView]="isView || isViewForApprovedPart"></app-shipping>\r\n            </div>\r\n\r\n            <div *ngIf="workOrderId && (gridActiveTab === \'subWO\') " [ngClass]="{hidedata : gridActiveTab !== \'subWO\'}">\r\n                <app-sub-work-orderlist [workOrderId]="workOrderId" [mpnId]="workOrderPartNumberId" [isView]="isView || isViewForApprovedPart" [forSubWorkOrder]="false">\r\n                </app-sub-work-orderlist>\r\n\r\n            </div>\r\n\r\n            <div [ngClass]="{hidedata : gridActiveTab !== \'communication\'}">\r\n                <div *ngIf="(selectedCommunicationTab == \'memo\')">\r\n                    <app-memo [workOrderId]="workOrderId" [savedWorkOrderData]="savedWorkOrderData" [isSubWorkOrder]="isSubWorkOrder" [subWOPartNoId]="subWOPartNoId" [subWorkOrderDetails]="subWorkOrderDetails" [selectedPartNumber]="selectedPartNumber" [customerContactList]="customerContactList" [isView]="isView || isViewForApprovedPart"></app-memo>\r\n                </div>\r\n                <div *ngIf="(selectedCommunicationTab == \'email\')">\r\n                    <app-email [workOrderId]="workOrderId" [savedWorkOrderData]="savedWorkOrderData" [isSubWorkOrder]="isSubWorkOrder" [subWOPartNoId]="subWOPartNoId" [subWorkOrderDetails]="subWorkOrderDetails" [selectedPartNumber]="selectedPartNumber" [customerContactList]="customerContactList" [isViewFromWO]="isView || isViewForApprovedPart"></app-email>\r\n                </div>\r\n                <div *ngIf="(selectedCommunicationTab == \'text\')">\r\n                    <app-text [workOrderId]="workOrderId" [savedWorkOrderData]="savedWorkOrderData" [isSubWorkOrder]="isSubWorkOrder" [subWOPartNoId]="subWOPartNoId" [subWorkOrderDetails]="subWorkOrderDetails" [selectedPartNumber]="selectedPartNumber" [customerContactList]="customerContactList" [isView]="isView || isViewForApprovedPart"></app-text>\r\n                </div>\r\n                <div *ngIf="(selectedCommunicationTab == \'phone\')">\r\n                    <app-phone [workOrderId]="workOrderId" [savedWorkOrderData]="savedWorkOrderData" [isSubWorkOrder]="isSubWorkOrder" [subWOPartNoId]="subWOPartNoId" [subWorkOrderDetails]="subWorkOrderDetails" [selectedPartNumber]="selectedPartNumber" [customerContactList]="customerContactList" [isView]="isView || isViewForApprovedPart"></app-phone>\r\n                </div>\r\n            </div>\r\n            <div *ngIf="documents && (gridActiveTab == \'documents\')"\r\n                [ngClass]="{hidedata: gridActiveTab !== \'documents\'}">\r\n                <app-work-order-documents [documentForm]="documents" [workFlowWorkOrderId]="workFlowWorkOrderId" [isSubWorkOrder]="isSubWorkOrder" [subWOPartNoId]="subWOPartNoId" [subWorkOrderDetails]="subWorkOrderDetails"\r\n                    [savedWorkOrderData]="savedWorkOrderData" [documentsDestructuredData]="documentsDestructuredData" [isView]="isView || isViewForApprovedPart">\r\n                </app-work-order-documents>\r\n            </div>\r\n\r\n\r\n            <div *ngIf="(gridActiveTab == \'woanalysis\')" [ngClass]="{hidedata: gridActiveTab !== \'woanalysis\'}">\r\n                <app-work-order-analysis [savedWorkOrderData]="savedWorkOrderData" [selectedPartNumber]="selectedPartNumber" [isSubWorkOrder]="isSubWorkOrder" [subWOPartNoId]="subWOPartNoId" [subWorkOrderDetails]="subWorkOrderDetails"></app-work-order-analysis>\r\n            </div>\r\n\r\n            <div *ngIf="(gridActiveTab == \'laboranalysis\')" [ngClass]="{hidedata: gridActiveTab !== \'laboranalysis\'}">\r\n                <app-work-order-labour-analysis [savedWorkOrderData]="savedWorkOrderData" [selectedPartNumber]="selectedPartNumber" [isSubWorkOrder]="isSubWorkOrder" [subWOPartNoId]="subWOPartNoId" [subWorkOrderDetails]="subWorkOrderDetails">\r\n                </app-work-order-labour-analysis>\r\n            </div>\r\n\r\n\r\n            <div *ngIf="workOrderId && (gridActiveTab == \'tearDown\')" class="wf-label-cstm set_pad"\r\n                [ngClass]="{hidedata : gridActiveTab !== \'tearDown\'}">\r\n                <app-common-teardown *ngIf="!isView" [workOrderId]="workOrderId" [workFlowWorkOrderId]="workFlowWorkOrderId" [savedWorkOrderData]="savedWorkOrderData" [subWorkOrderDetails]="subWorkOrderDetails" [isSubWorkOrder]="isSubWorkOrder" [subWOPartNoId]="subWOPartNoId"\r\n                    [jobTitles]="jobTitles" [getsaveTearDownData]="saveTearDownData" [isEdit]=\'isEdit\' [isView]="isView || isViewForApprovedPart" [workOrderGeneralInformation]="workOrderGeneralInformation">\r\n                </app-common-teardown> \r\n                <app-teardown-overview  *ngIf="isView"  [isSubWorkOrder]="isSubWorkOrder" [subWOPartNoId]="subWOPartNoId" [workFlowWorkOrderId1]="workFlowWorkOrderId"></app-teardown-overview>\r\n            </div>\r\n\r\n            <div *ngIf="workOrderId && (subTabOtherOptions == \'charges\')" class="wf-label-cstm"\r\n                [ngClass]="{hidedataOthers :  subTabOtherOptions !== \'charges\'} ">\r\n                <app-work-order-charges [workFlowObject]="workFlowObject" [isWorkOrder]="isWorkOrder" [isSubWorkOrder]="isSubWorkOrder"\r\n                    [workOrderChargesList]="workOrderChargesList" [subWOPartNoId]="subWOPartNoId"\r\n                    (saveChargesListForWO)="saveWorkOrderChargesList($event)"\r\n                    (updateChargesListForWO)="updateWorkOrderChargesList($event)" [taskList]="taskList"\r\n                    (refreshData)="getChargesListByWorkOrderId()" [isView]="isView || isViewForApprovedPart"></app-work-order-charges>\r\n            </div>\r\n\r\n\r\n            <div *ngIf="workOrderId && (subTabOtherOptions == \'exclusions\')" class="wf-label-cstm"\r\n                [ngClass]="{hidedataOthers :  subTabOtherOptions !== \'exclusions\'} ">\r\n                <app-work-order-exclusions [workFlowObject]="workFlowObject" [isWorkOrder]="isWorkOrder"\r\n                    [workOrderExclusionsList]="workOrderExclusionsList" \r\n                    (saveExclusionsListForWO)="saveWorkOrderExclusionsList($event)"\r\n                    (updateExclusionsListForWO)="updateWorkOrderExclusionsList($event)" [taskList]="taskList"\r\n                    (refreshData)="getExclusionListByWorkOrderId()" [isView]="isView || isViewForApprovedPart"></app-work-order-exclusions>\r\n            </div>\r\n            <div *ngIf="workOrderId && (subTabOtherOptions == \'freight\')" class="wf-label-cstm"\r\n                [ngClass]="{hidedataOthers :  subTabOtherOptions !== \'freight\'} ">\r\n                <app-work-order-freight [freightForm]="freight" [workOrderFreightList]="workOrderFreightList" [isSubWorkOrder]="isSubWorkOrder" [subWOPartNoId]="subWOPartNoId" [subWorkOrderDetails]="subWorkOrderDetails"\r\n                    [savedWorkOrderData]="savedWorkOrderData" (saveFreightListForWO)="saveWorkOrderFreightsList($event)"\r\n                    (updateFreightListForWo)="updateWorkOrderFreightsList($event)"\r\n                    (refreshData)="getFreightListByWorkOrderId()" [taskList]="taskList" [isView]="isView || isViewForApprovedPart">\r\n                </app-work-order-freight>\r\n            </div>\r\n\r\n            <div *ngIf="addresses" [ngClass]="{hidedata : gridActiveTab !== \'address\'}">\r\n                <app-work-order-addresses [addressesForm]="addresses"></app-work-order-addresses>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n<div id="warnRestrictMesg" class="modal fade" role="dialog" data-backdrop="static">\r\n    <div class="modal-dialog modal-xsm">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title warning_color" *ngIf="restrictID == 0">Warning</h4>\r\n                <h4 class="modal-title restrict_color" *ngIf="restrictID != 0">Restriction</h4>\r\n                \x3c!-- <p id="clockdiv" class="clockdiv"></p> --\x3e\r\n            </div>\r\n            <div class="pad_msf">\r\n                <p *ngIf="warningID != 0 && restrictID == 0" class="mar_o warning_color">\r\n                    {{warningMessage}}</p>\r\n                \x3c!-- <p *ngIf="warningMessage != undefined">Not able to create customer work because cuatomer having restrcitions</p> --\x3e\r\n                <p *ngIf="restrictID != 0 " class="mar_o restrict_color">\r\n                    {{restrictMessage}}</p>\r\n                \x3c!-- <p *ngIf=" restrictID != 0 && isCustomerAction ==true" class="mar_o">Not able to  {{isEdit?\'Edit\':Create}} Work Order   because customer\r\n                    having restrictions</p>\r\n                <p *ngIf=" restrictID != 0 && isQuoteAction ==true" class="mar_o">Not able to  {{(workOrderQuoteId)?\'Edit \':\'Create \'}} Work Order Quote  because customer\r\n                        having restrictions</p>\r\n                <p *ngIf=" restrictID != 0 && isBillAction ==true" class="mar_o">Not able to  show Billing/Invoicing because customer\r\n                            having restrictions</p> --\x3e\r\n                \x3c!-- <p *ngIf=" restrictID != 0 && isQuoteActionTab ==true" class="mar_o">Not able to  show Quote details because customer\r\n                                having restrictions</p> --\x3e\r\n\r\n            </div>\r\n            <div class="modal-footer" style="padding:10px;">\r\n                <button class="btn btn-primary btn-primary" data-dismiss="modal" (click)="WarnRescticModel()"\r\n                    style="padding: 6px 12px !important;">Ok </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n</div>\r\n<div class="preloader" *ngIf="isSpinnerVisible">\r\n    <div class="loading">\r\n        <div class="lds-roller"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n    </div>\r\n</div>\r\n\x3c!-- <div class="preloader" *ngIf="isSpinnerVisible">\r\n    <div class="loading">\r\n        <div class="lds-roller">\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    </div>\r\n</div> --\x3e\r\n\r\n\x3c!-- *ngIf="!isSpinnerVisible" --\x3e'},n8DH:function(e,r,t){"use strict";t.r(r),r.default='<div *ngIf="isSpinnerEnable">\r\n  \x3c!-- ; else loader  --\x3e\r\n  \x3c!-- Edit  --\x3e\r\n  <div *ngIf="\r\n    (isEdit &&\r\n    editWorkOrderGeneralInformation &&\r\n    workOrderTypes &&\r\n    workOrderStatusList &&\r\n    creditTerms &&\r\n    employeesOriginalData &&\r\n    workScopesList &&\r\n    workOrderStagesList &&\r\n    priorityList &&\r\n    partNumberOriginalData &&\r\n    legalEntityList &&\r\n    conditionList  && jobTitles   && salesPersonOriginalList && salesAgentsOriginalList && csrOriginalList && technicianOriginalList && technicianByExpertiseTypeList &&\r\n    techStationList )\r\n  ">\r\n    <app-work-order-add [isSubWorkOrder]="isSubWorkOrder" [subWoMpnGridUpdated]="subWoMpnGridUpdated" [subWorkOrderDetails]="paramsData" [isEdit]="isEdit"\r\n      [workOrderTypes]="workOrderTypes" [workOrderStatusList]="workOrderStatusList" [creditTerms]="creditTerms"\r\n      [jobTitles]="jobTitles" [employeesOriginalData]="employeesOriginalData"\r\n      [salesPersonOriginalList]="salesPersonOriginalList" [salesAgentsOriginalList]="salesAgentsOriginalList"\r\n      [csrOriginalList]="csrOriginalList" [technicianOriginalList]="technicianOriginalList"\r\n      [workScopesList]="workScopesList" [workOrderStagesList]="workOrderStagesList" [priorityList]="priorityList"\r\n      [workorderSettings]="workorderSettings" [currencyList]="currencyList"\r\n      [partNumberOriginalData]="partNumberOriginalData" [legalEntityList]="legalEntityList"\r\n      [conditionList]="conditionList" [workOrderGeneralInformation]="editWorkOrderGeneralInformation" [technicianByExpertiseTypeList]="technicianByExpertiseTypeList"\r\n      [techStationList]="techStationList">\r\n    </app-work-order-add>\r\n  </div>\r\n  <div *ngIf="\r\n    !(\r\n      isEdit &&\r\n      workOrderTypes &&\r\n      workOrderStatusList &&\r\n      creditTerms &&\r\n      employeesOriginalData &&\r\n      workScopesList &&\r\n      workOrderStagesList &&\r\n      priorityList &&\r\n      partNumberOriginalData &&\r\n      legalEntityList && \r\n      conditionList && jobTitles && salesPersonOriginalList && salesAgentsOriginalList && csrOriginalList && technicianOriginalList && technicianByExpertiseTypeList &&\r\n      techStationList \r\n    )\r\n  ">\r\n    \x3c!-- using add form as subworkOrder also --\x3e\r\n    <app-work-order-add [isSubWorkOrder]="isSubWorkOrder" [subWoMpnGridUpdated]="subWoMpnGridUpdated"  [subWorkOrderDetails]="paramsData"\r\n      [workOrderId]="subWorkOrderId" [workFlowWorkOrderId]="workFlowWorkOrderId" [showTabsGrid]="showTabsGrid"\r\n      [showGridMenu]="showGridMenu" [workOrderTypes]="workOrderTypes" [workOrderStatusList]="workOrderStatusList"\r\n      [creditTerms]="creditTerms" [jobTitles]="jobTitles" [currencyList]="currencyList"\r\n      [employeesOriginalData]="employeesOriginalData" [salesPersonOriginalList]="salesPersonOriginalList"\r\n      [salesAgentsOriginalList]="salesAgentsOriginalList" [csrOriginalList]="csrOriginalList"\r\n      [technicianOriginalList]="technicianOriginalList" [workScopesList]="workScopesList"\r\n      [workOrderStagesList]="workOrderStagesList" [workorderSettings]="workorderSettings" [priorityList]="priorityList"\r\n      [partNumberOriginalData]="partNumberOriginalData" [legalEntityList]="legalEntityList"\r\n      [conditionList]="conditionList" [workOrderGeneralInformation]="workOrderGeneralInformation" [technicianByExpertiseTypeList]="technicianByExpertiseTypeList"\r\n      [techStationList]="techStationList"\r\n      (getLatestDefaultSettingByWorkOrderTypeId)="getWorkOrderDefaultSetting($event)">\r\n    </app-work-order-add>\r\n  </div>\r\n</div>\r\n<ng-template #loader>\r\n  <div class="loader-css">\r\n    <img src="../../../../assets/images/loader.gif">\r\n  </div>\r\n</ng-template>\r\n\r\n<div class="preloader" *ngIf="!isSpinnerEnable">\r\n  <div class="loading">\r\n      <div class="lds-roller">\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div> \r\n          <div></div>\r\n      </div>\r\n  </div>\r\n</div> '},noKN:function(e,r,t){"use strict";t.r(r),r.default='<div [@fadeInOut] class="page-content">\r\n    <div class="right_col" role="main">\r\n        <form #laborForm="ngForm">\r\n            <div class="col-md-12">              \r\n                    <div class="x_content">\r\n                        <nav aria-label="breadcrumb">\r\n                            <ol class="breadcrumb">\r\n                                <li class="breadcrumb-item" aria-current="page">Direct Labor and Overhead Cost</li>\r\n                                <li class="breadcrumb-item active" aria-current="page">{{ isEditMode ? \'Edit\' : \'Create\' }} Direct Labor and Overhead Cost</li>                               \r\n                            </ol>\r\n                        </nav>\r\n                        \x3c!-- <div class="pheading">\r\n                            <h4 class="page-heading">Direct Labor and Overhead Cost Setup</h4>\r\n                               </div> --\x3e\r\n                        <div class="clear"></div>\r\n                        <div class="card new-card">\r\n                            <div class="card-header bg-primary">\r\n                              <div class="row">\r\n                                <div class="col">\r\n                                    <h4 class="new-card-heading">\r\n                                        {{ isEditMode ? \'Edit\' : \'Create\' }} Direct Labor and Overhead Cost</h4>\r\n                                </div>\r\n                                <div>\r\n                                  <button\r\n                                    type="button"\r\n                                    class="btn-sm new-btn-primary"\r\n                                    [routerLink]="[\'/workordersmodule/workorderspages/app-direct-labour\']"\r\n                                  >\r\n                                    Direct Labour and Overhead Cost                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class="card-body new-card-body">\r\n                                <div class="col-md-12">\r\n                                    <div class="form-row">\r\n                                        <div class="col-sm-5">\r\n                                            <div class="col-sm-12">\r\n                                                <h5 class="heading">Direct Labor (Technician/Mechanic)</h5>\r\n                                            </div>\r\n                                            <div class="form-group">\r\n                                                <div class="checkbox-cstm">\r\n                                                    <label style="font-weight: bold;">\r\n                                                        What Labor Rate to use on Work Orders? <span class="clr-red">*</span>\r\n                                                    </label>\r\n                                                    \x3c!-- <label>                                            \r\n                                                        <input type="radio" name="laborRateId" [(ngModel)]="directLaborData.laborRateId" value="1" required>\r\n                                                       <span>Use Individual Technician/Mechanic Labor Rate</span>\r\n                                                    </label> --\x3e\r\n                                                    <div class="m-t-10">\r\n                                                        <label class="radio-cstm wauto">\r\n                                                            <input type="radio" name="laborRateId" class="form-control" value="1" [(ngModel)]="directLaborData.laborRateId" (change)="onChangeLaborRate()" required>\r\n                                                            <span class="checkmark"></span>Use Individual Technician/Mechanic Labor Rate</label>\r\n                                                    </div>\r\n                                                    \x3c!-- <label>\r\n                                                        <input type="radio" name="laborRateId" [(ngModel)]="directLaborData.laborRateId" value="2" required>\r\n                                                       Use Average Rate of All Technician/Mechanic \r\n                                                    </label> --\x3e\r\n                                                    <div class="m-t-10">\r\n                                                        <label class="radio-cstm wauto">\r\n                                                            <input type="radio" name="laborRateId" class="form-control" value="2" [(ngModel)]="directLaborData.laborRateId" required>\r\n                                                            <span class="checkmark"></span>Use Average Hourly Rate of all Technician/Mechanic</label>\r\n                                                    </div>\r\n                                                    <div class="form-row m-b-10" *ngIf="directLaborData.laborRateId == \'2\'">\r\n                                                        <div class="col-md-6">\r\n                                                            <input type="number" style="width: 120px;" pKeyFilter="num" name="averageRate" (focusout)="onChangeCost($event.target.value)" class="form-control text-right" [(ngModel)]="directLaborData.averageRate" required>\r\n                                                        </div>\r\n                                                        </div>\r\n                                                </div>            \r\n                                            </div>\r\n\r\n                                            <div class="form-group">\r\n                                                <div class="checkbox-cstm">\r\n                                                    <label style="font-weight: bold; margin-top: 10px;">\r\n                                                       How to Apply Hours to Work Orders? <span class="clr-red">*</span>\r\n                                                    </label>                                                      \r\n                                                    \x3c!-- <label>\r\n                                                        <input type="radio" name="laborHoursId" [(ngModel)]="directLaborData.laborHoursId" value="1" required>\r\n                                                       Assign Hours by Specific Actions\r\n                                                    </label> --\x3e\r\n                                                    <div class="m-t-10">\r\n                                                        <label class="radio-cstm wauto">\r\n                                                            <input type="radio" name="laborHoursId" class="form-control" value="1" [(ngModel)]="directLaborData.laborHoursId" required>\r\n                                                            <span class="checkmark"></span>Assign Hours by Specific Task</label>\r\n                                                    </div>\r\n                                                    \x3c!-- <label>\r\n                                                        <input type="radio" name="laborHoursId" [(ngModel)]="directLaborData.laborHoursId" value="2" required>\r\n                                                       Assign Total Hours to Work Order\r\n                                                    </label> --\x3e\r\n                                                    <div class="m-t-10">\r\n                                                        <label class="radio-cstm wauto">\r\n                                                            <input type="radio" name="laborHoursId" class="form-control" value="2" [(ngModel)]="directLaborData.laborHoursId" required>\r\n                                                            <span class="checkmark"></span>Assign Total Hours to Work Order</label>\r\n                                                    </div>\r\n                                                </div>        \r\n                                            </div>\r\n                                        </div>\r\n                                        <div class="col-sm-4">\r\n                                            <div class="col-sm-12">\r\n                                                <h5 class="heading">Overhead Burden Rate</h5>\r\n                                            </div>\r\n                                            <div class="form-group">\r\n                                                <div>\r\n                                                    \x3c!-- <label>\r\n                                                        <input type="radio" name="burdenRateId" [(ngModel)]="directLaborData.burdenRateId" value="1" (change)="onChangeBurdenRate()" required>\r\n                                                        As A% of Technician/Mechanic Hourly Rate \r\n                                                        <span *ngIf="directLaborData.burdenRateId == \'1\'" class="clr-red">*</span>\r\n                                                    </label> --\x3e\r\n                                                    <div class="m-t-10" style="clear: both;">\r\n                                                        <label class="radio-cstm wauto">\r\n                                                            <input type="radio" name="burdenRateId" class="form-control" value="1" [(ngModel)]="directLaborData.burdenRateId" (change)="onChangeBurdenRate()" required>\r\n                                                            <span class="checkmark"></span>  Use fixed hourly rate \r\n                                                            <span *ngIf="directLaborData.burdenRateId == \'1\'" class="clr-red">*</span>\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div class="form-row m-b-10" *ngIf="directLaborData.burdenRateId == \'1\'">\r\n                                                        <div class="col-md-7">\r\n                                                            <select class="form-control" style="width: 120px;margin-top: 8px;" [(ngModel)]="directLaborData.flatAmount" name="flatAmount" required>\r\n                                                                <option *ngFor="let item of allPercentList" value="{{item.percentId}}">{{item.percentValue}}</option>\r\n                                                            </select>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    \x3c!-- <label>\r\n                                                        <input type="radio" name="burdenRateId" [(ngModel)]="directLaborData.burdenRateId" value="2" (change)="onChangeBurdenRate()" required>\r\n                                                      Flat Amount per Hour\r\n                                                      <span *ngIf="directLaborData.burdenRateId == \'2\'" class="clr-red">*</span>\r\n                                                    </label> --\x3e\r\n                                                    <div class="m-t-10">\r\n                                                        <label class="radio-cstm wauto">\r\n                                                            <input type="radio" name="burdenRateId" class="form-control" value="2" [(ngModel)]="directLaborData.burdenRateId" (change)="onChangeBurdenRate()" required>\r\n                                                            <span class="checkmark"></span>Flat Amount per Hour \r\n                                                            <span *ngIf="directLaborData.burdenRateId == \'2\'" class="clr-red">*</span>\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div class="form-row m-b-10" *ngIf="directLaborData.burdenRateId == \'2\'">\r\n                                                    <div class="col-md-7">\r\n                                                        <input type="number" pKeyFilter="num" name="flatAmount" style="width: 120px;margin-top: 8px;" (focusout)="onChangeBurdenCost($event.target.value)" class="form-control text-right" [(ngModel)]="directLaborData.flatAmount" required>\r\n                                                    </div>\r\n                                                    </div>\r\n                                                    \r\n                                                    \x3c!-- <label>\r\n                                                        <input type="radio" name="burdenRateId" [(ngModel)]="directLaborData.burdenRateId" value="3" (change)="onChangeBurdenRate()" required>\r\n                                                      Flat Amount per Work Order\r\n                                                      <span *ngIf="directLaborData.burdenRateId == \'3\'" class="clr-red">*</span>\r\n                                                    </label> --\x3e\r\n                                                    \x3c!-- <div class="m-t-10">\r\n                                                        <label class="radio-cstm wauto">\r\n                                                            <input type="radio" name="burdenRateId" class="form-control" value="3" [(ngModel)]="directLaborData.burdenRateId" (change)="onChangeBurdenRate()" required>\r\n                                                            <span class="checkmark"></span>Flat Amount per Work Order \r\n                                                            <span *ngIf="directLaborData.burdenRateId == \'3\'" class="clr-red">*</span>\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div class="form-row m-b-10" *ngIf="directLaborData.burdenRateId == \'3\'">\r\n                                                    <div class="col-md-7">\r\n                                                        <input type="text" pKeyFilter="num" name="flatAmount" (focusout)="onChangeBurdenCost($event.target.value)" class="form-control text-right" [(ngModel)]="directLaborData.flatAmount" required>\r\n                                                    </div>\r\n                                                    </div> --\x3e\r\n                                                </div>\r\n\r\n                                                <div class="form-group m-t-10">\r\n                                                <label>Functional Currency <span class="clr-red">*</span></label>\r\n                                                <div class="form-row m-b-10">\r\n                                                    <div class="col-md-7">\r\n                                                        <select class="form-control" style="width: 120px;" [(ngModel)]="directLaborData.functionalCurrencyId" name="functionalCurrencyId" required>\r\n                                                            <option *ngFor="let item of allEmployeeList" value="{{item.value}}">{{item.label}}</option>\r\n                                                        </select>\r\n                                                    </div>\r\n                                                </div>  \r\n                                                \r\n                                                </div>\r\n                                            <div class="form-group">\r\n                                                <label>Transactional Currency <span class="clr-red">*</span></label>\r\n                                                <div class="form-row m-b-10">\r\n                                                    <div class="col-md-7">\r\n                                                        <select class="form-control" style="width: 120px;" [(ngModel)]="directLaborData.transactionalCurrencyId" name="transactionalCurrencyId" required>\r\n                                                            <option *ngFor="let item of allEmployeeList" value="{{item.value}}">{{item.label}}</option>\r\n                                                        </select>\r\n                                                    </div>\r\n                                                </div>                                                  \r\n                                            </div>            \r\n                                            </div>\r\n                                        </div>\r\n                                        \r\n                                        <div class="col-sm-3">\r\n                                            <div class="card" style="margin-top: 20px;margin-bottom: 10px;">\r\n                                                <div class="card-header" style="padding: 10px 12px;">\r\n                                                    <h5 style="margin-bottom: 0; font-size: 12px;">Management Structure <span class="clr-red">*</span></h5>\r\n                                                </div>\r\n                                                <div class="card-body" style="padding: 12px 12px 4px;">\r\n                                                    <div class="col-md-12">\r\n                                                        <div class="form-group">\r\n                                                            <select class="form-control" name="company" [(ngModel)]="managementStructure.companyId" \r\n                                                            (change)="selectedLegalEntity(managementStructure.companyId);" #companyName="ngModel" required>\r\n                                                                <option value="0">Select Legal Entity</option>\r\n                                                                <option *ngFor="let name of legalEntityList" [ngValue]="name.value">{{name.label}}</option>\r\n                                                            </select>\r\n                                                            <div *ngIf="companyName.invalid && (companyName.dirty || companyName.touched)" class="alert alert-danger alert-danger-cstm">\r\n                                                                    <div *ngIf="companyName.errors.required">\r\n                                                                        <small> Legal Entity Name is required </small>\r\n                                                                    </div>\r\n                                                            </div>        \r\n                                                        </div>\r\n                                                        <div class="form-group">\r\n                                                            <select class="form-control" [(ngModel)]="managementStructure.buId" name="buId" (change)="selectedBusinessUnit(managementStructure.buId)">\r\n                                                                <option value="0">-- Select --</option>\r\n                                                                <option *ngFor="let name of businessUnitList" [ngValue]="name.value">{{name.label}}</option>\r\n                                                            </select>\r\n                                                        </div>\r\n                                                        <div class="form-group">\r\n                                                            <select class="form-control" [(ngModel)]="managementStructure.divisionId" name="divisionId" (change)="selectedDivision(managementStructure.divisionId)">\r\n                                                                <option value="0">-- Select --</option>\r\n                                                                <option *ngFor="let name of divisionList" [ngValue]="name.value">{{name.label}}</option>\r\n                                                            </select>\r\n                                                        </div>\r\n                                                        <div class="form-group">\r\n                                                            <select class="form-control" [(ngModel)]="managementStructure.departmentId" name="departmentId" (change)="selectedDepartment(managementStructure.departmentId)">\r\n                                                                <option value="0">-- Select --</option>\r\n                                                                <option *ngFor="let name of departmentList" [ngValue]="name.value">{{name.label}}</option>\r\n                                                            </select>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>            \r\n                                    </div>                                   \r\n                                </div>\r\n                                <div class="form-row pull-right">\r\n                                    <button type="submit" class="btn btn-primary" (click)="onSaveDirectLabor()" [disabled]="!laborForm.valid">{{isEditMode ? \'Update\' : \'Save\'}}</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                <div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n'},"o+nh":function(e,r,t){"use strict";t.r(r),r.default="<p-treeTable [value]=\"gridData\">\r\n    <ng-template pTemplate=\"header\">\r\n        <tr>\r\n            <th style=\"background-color: #337ab7; color: white; width: 111px;\" *ngFor=\"let f of fields\">{{f.header}}</th>\r\n        </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"body\" let-rowNode let-rowData=\"rowData\">\r\n        <tr>\r\n            <td style=\"width: 111px;\">\r\n                <p-treeTableToggler [rowNode]=\"rowNode\"></p-treeTableToggler>\r\n                {{rowData.partNumber}}\r\n            </td>\r\n            <ng-container *ngFor=\"let f of fields\" >\r\n                <td *ngIf=\"f.header != 'Part Number'\" style=\"width: 111px;\" >\r\n                    <div [ngClass]=\"(f.field == 'adjustedHours' || f.field == 'hours' || f.field == 'directCost' || f.field == 'directCostRevenuePercentage' || f.field == 'freightCost' || f.field == 'chargesCost' || f.field == 'laborCost' || f.field == 'laborRevenuePercentage' || f.field == 'margin' || f.field == 'marginPercentage' || f.field == 'materialCost' || f.field == 'materialRevenue' || f.field == 'materialRevenuePercentage' || f.field == 'otherCost' || f.field == 'overHeadCost' || f.field == 'overHeadCostRevenuePercentage' || f.field == 'revenue' || f.field == 'totalLaborCost' || f.field == 'margin' || f.field == 'marginPercentage')?'float-right':''\">\r\n                        {{(f.field == 'contactDate')?getDate(rowData[f.field]):globalizeAmount(rowData[f.field], f.field)}}\r\n                    </div>\r\n                </td>\r\n            </ng-container>\r\n        </tr>\r\n    </ng-template>\r\n</p-treeTable>"},oA9t:function(e,r,t){"use strict";t.r(r),r.default='<div style="float: right; margin: 3px 0 19px 0px;">\r\n    <button type="button" class="btn btn-primary" (click)="detailView()">\r\n        {{(isOpenedAll)?\'Summary\':\'Detail View\'}}\r\n    </button>\r\n</div>\r\n<div style="margin-top: 15px;">\r\n<p-treeTable [value]="gridData" (onNodeExpand)="getShippingData($event.node)">\r\n    <ng-template pTemplate="header">\r\n        <tr>\r\n            <th style="background-color: #337ab7; color: white;">PartNumber</th>\r\n            <th style="background-color: #337ab7; color: white">Part Description</th>\r\n            <th style="background-color: #337ab7; color: white">Revised PartNo</th>\r\n            <th style="background-color: #337ab7; color: white">Description</th>\r\n            <th style="background-color: #337ab7; color: white">DocumentCode</th>\r\n            <th style="background-color: #337ab7; color: white">Document Link</th>\r\n        </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate="body" let-rowNode let-rowData="rowData">\r\n        <tr>\r\n            <td>\r\n                <p-treeTableToggler [rowNode]="rowNode"></p-treeTableToggler>\r\n                {{rowData.partNumber}}\r\n            </td>\r\n            <td>{{rowData.partDescription}}</td>\r\n            <td>{{rowData.revisedPartNo}}</td>\r\n            <td>{{rowData.description}}</td>\r\n            <td>{{rowData.documentCode}}</td>\r\n            <td>{{rowData.documentLink}}</td>\r\n        </tr>\r\n    </ng-template>\r\n</p-treeTable>\r\n</div>\r\n<div class="preloader" *ngIf="isSpinnerVisible">\r\n    <div class="loading">\r\n        <div class="lds-roller"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n    </div>\r\n</div>'},"oz/7":function(e,r,t){"use strict";t.r(r),r.default=""},pfcG:function(e,r,t){"use strict";t.r(r),r.default=".table-overflow {\n  overflow: auto !important;\n}\n\n.table > thead > tr > th {\n  font-size: 10px !important;\n  padding: 5px !important;\n}\n\n.dropbtn {\n  background-color: #3498db;\n  color: white;\n  padding: 16px;\n  font-size: 16px;\n  border: none;\n  cursor: pointer;\n}\n\n/* Dropdown button on hover & focus */\n\n.dropbtn:hover,\n.dropbtn:focus {\n  background-color: #2980b9;\n}\n\n/* The container <div> - needed to position the dropdown content */\n\n.dropdown {\n  position: relative;\n  display: inline-block;\n}\n\n/* Dropdown Content (Hidden by Default) */\n\n.dropdown-content {\n  display: none;\n  position: absolute;\n  background-color: #f1f1f1;\n  min-width: 160px;\n  box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\n  z-index: 1;\n}\n\n/* Links inside the dropdown */\n\n.dropdown-content a {\n  color: black;\n  padding: 12px 16px;\n  text-decoration: none;\n  display: block;\n}\n\n/* Change color of dropdown links on hover */\n\n.dropdown-content a:hover {\n  background-color: #ddd;\n}\n\n/* Show the dropdown menu (use JS to add this class to the .dropdown-content container when the user clicks on the dropdown button) */\n\n.show {\n  display: block;\n}\n\n.vertical-menu-wolist {\n  width: 130px;\n}\n\n.vertical-menu-wolist a {\n  background-color: #eee;\n  display: block !important;\n  text-decoration: none;\n}\n\n.h-300 {\n  height: 300px;\n}\n\n.status-radio label {\n  text-align: left;\n  width: 140px;\n  margin-right: 0;\n  font-weight: normal;\n}"},q3cT:function(e,r,t){"use strict";t.r(r),r.default=".table-overflow {\n  overflow: auto !important;\n}\n\n.table > thead > tr > th {\n  font-size: 10px !important;\n  padding: 5px !important;\n}\n\n.dropbtn {\n  background-color: #3498db;\n  color: white;\n  padding: 16px;\n  font-size: 16px;\n  border: none;\n  cursor: pointer;\n}\n\n/* Dropdown button on hover & focus */\n\n.dropbtn:hover,\n.dropbtn:focus {\n  background-color: #2980b9;\n}\n\n/* The container <div> - needed to position the dropdown content */\n\n.dropdown {\n  position: relative;\n  display: inline-block;\n}\n\n/* Dropdown Content (Hidden by Default) */\n\n.dropdown-content {\n  display: none;\n  position: absolute;\n  background-color: #f1f1f1;\n  min-width: 160px;\n  box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\n  z-index: 1;\n}\n\n/* Links inside the dropdown */\n\n.dropdown-content a {\n  color: black;\n  padding: 12px 16px;\n  text-decoration: none;\n  display: block;\n}\n\n/* Change color of dropdown links on hover */\n\n.dropdown-content a:hover {\n  background-color: #ddd;\n}\n\n/* Show the dropdown menu (use JS to add this class to the .dropdown-content container when the user clicks on the dropdown button) */\n\n.show {\n  display: block;\n}\n\n.vertical-menu-wolist {\n  width: 130px;\n}\n\n.vertical-menu-wolist a {\n  background-color: #eee;\n  display: block !important;\n  text-decoration: none;\n}\n\n.h-300 {\n  height: 300px;\n}\n\n.status-radio label {\n  text-align: left;\n  width: 140px;\n  margin-right: 0;\n  font-weight: normal;\n}"},qh6I:function(e,r,t){"use strict";t.r(r),r.default=".table-overflow {\n  overflow: auto !important;\n}\n\n.table > thead > tr > th {\n  font-size: 10px !important;\n  padding: 5px !important;\n}\n\n.dropbtn {\n  background-color: #3498db;\n  color: white;\n  padding: 16px;\n  font-size: 16px;\n  border: none;\n  cursor: pointer;\n}\n\n/* Dropdown button on hover & focus */\n\n.dropbtn:hover,\n.dropbtn:focus {\n  background-color: #2980b9;\n}\n\n/* The container <div> - needed to position the dropdown content */\n\n.dropdown {\n  position: relative;\n  display: inline-block;\n}\n\n/* Dropdown Content (Hidden by Default) */\n\n.dropdown-content {\n  display: none;\n  position: absolute;\n  background-color: #f1f1f1;\n  min-width: 160px;\n  box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\n  z-index: 1;\n}\n\n/* Links inside the dropdown */\n\n.dropdown-content a {\n  color: black;\n  padding: 12px 16px;\n  text-decoration: none;\n  display: block;\n}\n\n/* Change color of dropdown links on hover */\n\n.dropdown-content a:hover {\n  background-color: #ddd;\n}\n\n/* Show the dropdown menu (use JS to add this class to the .dropdown-content container when the user clicks on the dropdown button) */\n\n.show {\n  display: block;\n}\n\n.vertical-menu-wolist {\n  width: 130px;\n}\n\n.vertical-menu-wolist a {\n  background-color: #eee;\n  display: block !important;\n  text-decoration: none;\n}\n\n.h-300 {\n  height: 300px;\n}\n\n.status-radio label {\n  text-align: left;\n  width: 140px;\n  margin-right: 0;\n  font-weight: normal;\n}"},s0Cn:function(e,r,t){"use strict";t.r(r),r.default='<div class="col-md-12" style="margin-bottom: 15px;">\r\n  <h4 class="po-head-sm">\r\n      WO Analysis Overview\r\n  </h4>\r\n</div>\r\n<div>    \r\n  <p-table #woAnalysis\r\n  class="p-table-cstm wo-ptable-padd ptable-f10"\r\n  [value]="data"\r\n  [metaKeySelection]="true"\r\n  [first]="0"\r\n  (onPage)="pageIndexChange($event)"\r\n  [rows]="pageSize"\r\n  [paginator]="true"\r\n  [pageLinks]="3"\r\n  [rowsPerPageOptions]="[10, 20, 50, 100]"\r\n  [columns]="selectedColumns"\r\n  selectionMode="multiple"\r\n  [resizableColumns]="true"\r\n  [reorderableColumns]="true"\r\n  [totalRecords]="totalRecords"\r\n  [scrollable]="true" scrollHeight="450px">\r\n\r\n      <ng-template pTemplate="caption">\r\n          <div style="text-align: right; min-height: 30px; clear: both;">\r\n              <p-multiSelect [options]="headers" [(ngModel)]="selectedColumns"\r\n        [ngModelOptions]="{ standalone: true }" optionLabel="header" selectedItemsLabel="{0} columns selected" [style]="{ minWidth: \'200px\' }" defaultLabel="Choose Columns" style="float:left"></p-multiSelect>\r\n              <div class="inner-addon right-addon w200 inline-block g-filter-search-cstm">\r\n                  <i class="fa fa-search"></i>\r\n                  <input type="text" pInputText size="50" class="form-control ui-autocomplete-input"\r\n                      (input)="woAnalysis.filterGlobal($event.target.value, \'contains\')" placeholder=" Filter"\r\n                      style="height: 28px !important;" />\r\n              </div>\r\n              <button type="button" class="btn btn-primary" matTooltip="Download Data" matTooltipPosition="above"\r\n              pButton icon="fa-download" iconPos="left" label="Export Data" (click)="woAnalysis.exportCSV()"\r\n              style="padding:5px 10px !important;"></button>\r\n              <button type="button" class="btn btn-primary" matTooltip="Download Selected Data"\r\n              matTooltipPosition="above" pButton icon="fa-download" iconPos="left" label="Export Selected Data"\r\n              (click)="woAnalysis.exportCSV({ selectionOnly: true })" style="padding:5px 10px !important;"></button>\r\n\r\n              \x3c!-- <div class="excel-upload excel-upload-cstm">\r\n              <button type="button" class="btn btn-primary" matTooltip="Download Sample File"\r\n                  matTooltipPosition="above" (click)="sampleExcelDownload()" style="padding: 5px 10px !important;">\r\n                  Sample File Download\r\n              </button>\r\n\r\n              <input type="file" name="upload[]" id="upload" (change)="customExcelUpload($event)"\r\n                  class="uploaddoc upload-file" accept=".xlsx, .xls, .csv" />\r\n              <label for="upload">\r\n                  <span matTooltip="Upload Data (Excel)" matTooltipPosition="above">\r\n                  <i class="fa fa-upload"></i>\r\n                  </span>\r\n              </label>\r\n              </div> --\x3e\r\n          </div>\r\n      </ng-template>\r\n      <ng-template pTemplate="colgroup" let-columns>\r\n          <colgroup>\r\n              <col *ngFor="let col of columns" [ngStyle]="col.field == \'otherCostRevenuePercentage\' ? {\'width\': \'118px\'} : {\'width\': \'105px\'}">\r\n          </colgroup>\r\n      </ng-template>\r\n      <ng-template pTemplate="header" let-columns>\r\n          <tr>\r\n\r\n              <th style="width:auto"\r\n                  *ngFor="let col of columns"\r\n                  pResizableColumn\r\n                  pReorderableColumn\r\n                  [pSortableColumn]="col.field">\r\n                  {{ col.header }}\r\n                  <p-sortIcon [field]="col.field"></p-sortIcon>\r\n              </th>\r\n          </tr>\r\n          <tr>\r\n              <th style="width:auto" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                  <input style="width:100%;" pInputText type="text" (input)="\r\n                  woAnalysis.filter($event.target.value, col.field, \'contains\')\r\n                  " />\r\n              </th>\r\n          </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate="body" let-rowData let-columns="columns">\r\n              <tr [pSelectableRowDblClick]="rowData" [pSelectableRow]="rowData">\r\n                  <td style="width:auto"\r\n                  *ngFor="let col of columns"\r\n                  class="ui-resizable-column"\r\n                  pReorderableRowHandle>\r\n                    <ng-container *ngIf="col.field!=\'materialRevenue\' && col.field!=\'materialCost\' && col.field!=\'materialRevenuePercentage\' && col.field!=\'laborCost\' && col.field!=\'laborRevenuePercentage\' && col.field!=\'overHeadCost\' && col.field!=\'otherCost\' && col.field!=\'directCost\' && col.field!=\'otherCostRevenuePercentage\'">\r\n                        {{rowData[col.field]}}\r\n                    </ng-container>\r\n                    <ng-container *ngIf="col.field==\'materialRevenue\' || col.field==\'materialCost\' || col.field==\'materialRevenuePercentage\' || col.field==\'laborCost\' || col.field==\'laborRevenuePercentage\' || col.field==\'overHeadCost\' || col.field==\'otherCost\' || col.field==\'directCost\' || col.field==\'otherCostRevenuePercentage\'">\r\n                        <p class="m-0 p-0 text-right">{{rowData[col.field]}}</p>\r\n                    </ng-container> \r\n                  </td>\r\n              </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate="summary" id="footer">\r\n          <label id="footer" class="footer">Total:</label>\r\n          <input style="width: 5%;"\r\n                  [(ngModel)]="woAnalysis._totalRecords"\r\n                  [disabled]="true"\r\n                  pInputText\r\n                  type="text" />\r\n          &nbsp;&nbsp;\r\n          <label id="footer" class="footer1">Pages Count:</label>\r\n          <input style="width: 5%;"\r\n                  [ngModel]="getPageCount(woAnalysis._totalRecords, pageSize)"\r\n                  [disabled]="true"\r\n                  pInputText\r\n                  type="text" />\r\n      </ng-template>\r\n  </p-table>\r\n</div>'},swCc:function(e,r,t){"use strict";t.r(r),r.default='.grey-card {\n  background-color: #e7e7e7;\n}\n\n.wo-multiple-pn-details {\n  background: #fff;\n  padding: 8px;\n  border: 5px solid #e7e7e7;\n}\n\n.nav-pills-cstm {\n  margin-top: 10px;\n  font-size: 11px;\n  padding: 0px 7px;\n}\n\n.nav-pills-cstm li {\n  float: left;\n}\n\n.nav-pills-cstm li a {\n  background-color: #4298ffb0;\n  color: white;\n  margin-right: 2px;\n  margin-bottom: 10px;\n  margin-left: 1px;\n  margin-top: 10px;\n  border-radius: 4px;\n}\n\n.nav-pills-cstm li a:hover {\n  background-color: #337ab7 !important;\n}\n\n.nav-pills-cstm li a {\n  font-size: 12px !important;\n}\n\nli.nav-item {\n  margin-right: 1px;\n  border-radius: 4px;\n}\n\n.nav-pills .nav-link,\n.nav-pills .show > .nav-link {\n  color: black;\n  background-color: #ddd;\n}\n\n.nav-pills > li > a.active,\n.nav-pills > li > a.active:focus,\n.nav-pills > li > a.active:hover {\n  color: #fff;\n  background-color: #337ab7 !important;\n}\n\n.dropdown-menu.show > a {\n  background-color: white !important;\n  color: black !important;\n}\n\n.hidedata {\n  display: none;\n}\n\n.hidedataOthers {\n  display: none;\n}\n\n.hidedataMain {\n  display: none;\n}\n\n.dropdown-submenu {\n  position: relative;\n}\n\n.dropdown-submenu .dropdown-menu {\n  top: 0;\n  left: 100%;\n  margin-top: -1px;\n}\n\nlabel {\n  text-align: left;\n  width: auto;\n  margin-right: 0;\n  font-weight: normal;\n}\n\ninput[type=text],\ninput[type=number],\nselect,\ntextarea {\n  height: 24px !important;\n  border-radius: 5px !important;\n}\n\n.ui-widget {\n  padding: 0px !important;\n}\n\n.nav-pills li a {\n  padding: 6px 7px !important;\n}\n\n.set_pad {\n  padding: 2%;\n}\n\n@media (min-width: 768px) {\n  .pull-rig {\n    margin-left: 5%;\n  }\n\n  .max_alf {\n    max-width: 100% !important;\n  }\n\n  .main_ar .col-md-6 {\n    max-width: 50% !important;\n    margin-right: 0px !important;\n  }\n\n  .col-md-6 .col-md-6 {\n    max-width: 44%;\n    margin-right: 15px;\n  }\n\n  .col-md-3 {\n    max-width: 25%;\n    margin-right: 0px;\n  }\n\n  .col-md-6-cstm {\n    max-width: 45%;\n    margin-right: 20px;\n    padding-right: 0;\n  }\n}\n\n.isDisabled {\n  pointer-events: none;\n}\n\n.ui-chkbox-box {\n  margin-right: 10px;\n  background-color: red !important;\n}\n\n.c-wf-bcrumb {\n  background-color: transparent;\n}\n\n.c-wf-bcrumb li {\n  font-family: "Roboto";\n  font-size: medium;\n  font-weight: 900;\n  color: #295d92;\n}\n\n.c-wf-bcrumb .breadcrumb-item.active {\n  color: #6c757d !important;\n}\n\n.wf-popup-form label {\n  width: 100px;\n  text-align: right;\n  margin-top: 1px;\n}\n\n.wfl-table-popup-cstm {\n  margin-top: 4px;\n}\n\n.wfl-table-popup-cstm tr th {\n  padding: 8px 4px !important;\n}\n\n.wfl-table-popup-cstm tr td {\n  padding: 5px;\n}\n\n.po-head-wfl {\n  font-weight: bold;\n  font-size: 13px !important;\n  color: #295d92 !important;\n  margin-bottom: 0;\n}\n\n.back_filsd {\n  background: #e6e6e6 !important;\n}\n\n.no-quote {\n  font-size: 15px;\n  text-align: center;\n  margin-bottom: 16px;\n}\n\n.text-area-cstm {\n  height: 25px !important;\n}\n\n.form-control[readonly] {\n  background-color: #e9ecef !important;\n  opacity: 1;\n  pointer-events: none;\n}\n\n.add-wo-grid th {\n  text-align: center;\n}\n\n.addMPN_details {\n  margin-bottom: 12px;\n  margin-top: 4px;\n  margin-right: 14px;\n}\n\n.radio_adjust {\n  position: relative;\n  top: 2px;\n  margin-left: 6px;\n}\n\n.view_icon_adjust {\n  color: #41bf41;\n  margin-left: 4px;\n}\n\n.footer_adjust {\n  padding-bottom: 17px;\n  width: 100%;\n  margin-bottom: 0px;\n  padding-right: 0px;\n}\n\n.align-row > label {\n  float: left !important;\n}'},tBF8:function(e,r,t){"use strict";t.r(r),r.default=""},"u+oN":function(e,r,t){"use strict";t.r(r),r.default='<div class="card-header bg-primary">\r\n  <div class="row">\r\n    <div class="col">\r\n            <h4  class="new-card-heading">\r\n              {{ isEdit ? \'Edit\' : \'Create\' }} Sub Work Order</h4>   \r\n    </div>\r\n    <div>\r\n      <button\r\n        type="button"\r\n        class="btn-sm new-btn-primary" (click)="navigateToWo()"\r\n       \r\n      >\r\n      Redirect to  Work Order\r\n      </button>\r\n      \x3c!-- [routerLink]="url" --\x3e\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class="card">\r\n  <div class="card-body" *ngIf="subWorkOrderHeader">\r\n    <div class="row labels-ctsm-align">\r\n      <div class="col-md-3">\r\n        <label class="fs12">WorkOrderNumber : </label>\r\n        <span>{{ subWorkOrderHeader.workOrderNum }}</span>\r\n      </div>\r\n      <div class="col-md-3">\r\n        <label class="fs12">MCPN: </label>\r\n        <span>{{ subWorkOrderHeader.mcpn }}</span>\r\n      </div>\r\n      <div class="col-md-3">\r\n        <label class="fs12">Revised MCPN : </label>\r\n        <span>{{ subWorkOrderHeader.revisedMCPN }}</span>\r\n      </div>\r\n\r\n      <div class="col-md-3">\r\n        <label class="fs12">MCPN Description :</label>\r\n        <span>{{ subWorkOrderHeader.mcpnDescription }}</span>\r\n      </div>\r\n    </div>\r\n\r\n    <div class="row labels-ctsm-align">\r\n      <div class="col-md-3">\r\n        <label class="fs12" style="text-align: left">MC SerialNum : </label>\r\n        <span>{{ subWorkOrderHeader.mcSerialNum }}</span>\r\n      </div>\r\n      <div class="col-md-3">\r\n        <label class="fs12">Cust Name :</label>\r\n        <span>{{ subWorkOrderHeader.custName }}</span>\r\n      </div>\r\n      <div class="col-md-3">\r\n        <label class="fs12">workScope : </label>\r\n        <span>{{ subWorkOrderHeader.workScope }}</span>\r\n      </div>\r\n      <div class="col-md-3">\r\n        <label class="fs12">stockline : </label>\r\n        <span>{{ subWorkOrderHeader.stockline }}</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div *ngIf="workOrderDetails">\r\n  <div class="card">\r\n    <div class="card-body" *ngIf="subWorkOrderGeneralInformation">\r\n      <form #subWoHeader="ngForm">\r\n        <div class="form-row">\r\n          <div class="col-md-3">\r\n            <div class="form-group ">\r\n              <label> SubWO Num </label> <span class="clr-red">*</span>\r\n              <input\r\n                class="form-control"\r\n                data-toggle="tooltip"\r\n                type="text"\r\n                name="workOrderNumber"\r\n                #workOrderNumber="ngModel"\r\n                disabled\r\n                required\r\n                [(ngModel)]="subWorkOrderGeneralInformation.subWorkOrderNo"\r\n              />\r\n            </div>\r\n          </div>\r\n           <div class="col-md-3">\r\n            <div class="form-group">\r\n              <label for="opendate">Sub WO Open Date </label>\r\n              <span class="clr-red">*</span>\r\n              <p-calendar\r\n                [showIcon]="true"\r\n                class="calender-cstm"\r\n                name="openDate"\r\n                #openDate="ngModel"\r\n                required\r\n                [(ngModel)]="subWorkOrderGeneralInformation.openDate"\r\n              ></p-calendar>\r\n            </div>\r\n           </div>\r\n        </div>\r\n        <div>\r\n          <button\r\n            class="btn btn-primary pull-right"\r\n            *ngIf="!isEdit"\r\n            type="button"\r\n            [disabled]="!subWoHeader.valid"\r\n            (click)="saveSubWorkOrder()"\r\n          >\r\n            Save\r\n          </button>\r\n          <button\r\n            class="btn btn-primary pull-right"\r\n            *ngIf="isEdit"\r\n            type="button"\r\n            [disabled]="!subWoHeader.valid"\r\n            (click)="saveSubWorkOrder()"\r\n          >\r\n            Update\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n  <div *ngIf="subWorkOrderId !=0">\r\n    <form #workOrderForm="ngForm">\r\n  <div class="table-responsive add-wo-grid">\r\n    <table class="table table-bordered table-striped table-fixed table-sorting mpn-list-table sub_wo_list"\r\n          id="mpn-list-table ">\r\n          <thead>\r\n              <tr>\r\n                  <th rowspan="2" style="min-width: 80px;">MPN *</th>\r\n                  <th rowspan="2">MPN Description *</th>\r\n                  <th rowspan="2">Revised MPN</th>\r\n                  <th rowspan="2">Item Group</th>\r\n                  <th rowspan="2">Qty</th>\r\n                  <th rowspan="2">Work Scope *</th>\r\n                  \x3c!-- <th rowspan="2">Customer Ref</th> --\x3e\r\n                  \x3c!-- <th rowspan="2" colspan="4">Management Structure *</th> --\x3e\r\n                  <th rowspan="2">NTE</th>\r\n                  <th rowspan="2">Condition *</th>\r\n             \r\n                  \x3c!-- *ngIf="subWorkOrderGeneralInformation.subworkOrderTypeId==1" --\x3e\r\n                  \x3c!-- <th rowspan="2"\r\n                      style="min-width: 80px;">Contract No</th> --\x3e\r\n                  <th rowspan="2">Stock Line Num </th>\r\n                  <th rowspan="2">Serial Num </th>\r\n                  <th rowspan="2" >Controller No</th>\r\n                  <th rowspan="2" >Controller Id</th>\r\n                  <th rowspan="2">CMM/Pub Ref</th>\r\n                  <th rowspan="2">Workflow ID </th>\r\n                  <th rowspan="2">Stage *</th>\r\n                  <th rowspan="2">Status *</th>\r\n                  <th rowspan="2">Priority *</th>\r\n                  \x3c!-- <th rowspan="2">Customer Received Date</th> --\x3e\r\n                  <th rowspan="2">Customer Request Date *</th>\r\n                  <th rowspan="2">Promised Date *</th>\r\n                  <th rowspan="2">Est. Comp Date *</th>\r\n                  <th rowspan="2">Est. Ship Date *</th>\r\n                  <th colspan="2">Restrictions</th>\r\n                  <th rowspan="2">Tech Name</th>\r\n                  <th rowspan="2">Tech Station</th>\r\n                  <th rowspan="2" style="display:none">Tear Down Report</th>\r\n                  \x3c!-- <th colspan="2">TAT (Days)</th> --\x3e\r\n                  \x3c!-- <th rowspan="2"></th> --\x3e\r\n              </tr>\r\n              \x3c!-- <tr>\r\n                  <th>PMA</th>\r\n                  <th>DER</th>\r\n                  <th>Current</th>\r\n                  <th>Standard</th>\r\n              </tr> --\x3e\r\n          </thead>\r\n          <tbody>\r\n <tr class="mpn-row" style="display: table-row;"\r\n                  *ngFor="let workOrderPartNumber of subWorkOrderPartNumbers; let i=index;">\r\n                  <td style="min-width: 80px;">\r\n                      {{workOrderPartNumber.partNumber}}\r\n                  </td>\r\n                  <td>\r\n                      <input type="text" class="form-control  w150" name="description{{i}}"\r\n                             #description="ngModel" [(ngModel)]="workOrderPartNumber.partDescription"\r\n                             required disabled>\r\n                  </td>\r\n                  <td>\r\n                      <input type="text" class="form-control w100" name="revisedPartNo{{i}}"\r\n                             #description="ngModel" [(ngModel)]="workOrderPartNumber.revisePartNo"\r\n                             disabled>\r\n                  </td>\r\n                  <td>\r\n                      <input type="text" class="form-control w100" name="itemGroup{{i}}"\r\n                             #description="ngModel" [(ngModel)]="workOrderPartNumber.itemGroup"\r\n                             disabled>\r\n                  </td>\r\n                  <td>\r\n                      <input type="number" class="form-control w100 text_right" name="quantity{{i}}"\r\n                             [(ngModel)]="workOrderPartNumber.quantity" disabled>\r\n                  </td>\r\n                  <td>\r\n                      <p-dropdown placeholder="Select" name="scope{{i}}" #scope="ngModel"\r\n                      [options]="workScopesList" class="p-dropdown-custom-md p-dropdown-mh120"\r\n                      [(ngModel)]="workOrderPartNumber.subWorkOrderScopeId" \r\n                      (onChange)="getWorkFlowByPNandScope(workOrderPartNumber,i)" required appendTo="body">\r\n          </p-dropdown>\r\n          \x3c!-- dybamicworkFlowList[i] --\x3e\r\n                  </td>\r\n                  <td>\r\n                      <input type="text" class="form-control w50"\r\n                             [(ngModel)]="workOrderPartNumber.nte" name="nte{{i}}" #nte="ngModel"\r\n                             disabled>\r\n                  </td>\r\n                  <td>\r\n                      <p-dropdown placeholder="Select" [options]="conditionList"\r\n                                  name="condition{{i}}" #condition="ngModel" (onChange)="selectedCondition($event.value,workOrderPartNumber,i)"\r\n                                  class="p-dropdown-custom-md" [(ngModel)]="workOrderPartNumber.conditionId" required [disabled]="isView" appendTo="body">\r\n                      </p-dropdown>\r\n                  </td>\r\n                  <td>\r\n                      <input type="text" class="form-control w100" name="stockLineNumber{{i}}"\r\n                             #serialNumber="ngModel" [(ngModel)]="workOrderPartNumber.stockLineNumber"\r\n                             disabled>\r\n                  </td>\r\n                  <td>\r\n                      <input type="text" class="form-control w100" name="serialNumber{{i}}"\r\n                             #serialNumber="ngModel" [(ngModel)]="workOrderPartNumber.serialNumber"\r\n                             disabled>\r\n                  </td>\r\n                  <td>\r\n                    <input type="text" class="form-control w100" name="controlNumber{{i}}"\r\n                    #controlNumber="ngModel" [(ngModel)]="workOrderPartNumber.controlNumber"\r\n                    disabled>\r\n                  </td>\r\n                  <td>\r\n                    <input type="text" class="form-control w100" name="controlerId{{i}}"\r\n                    #controlerId="ngModel" [(ngModel)]="workOrderPartNumber.controlerId"\r\n                    disabled>\r\n                  </td>\r\n                  <td>\r\n                      <p-dropdown class="min_selct_height" name="cmm{{i}}" #cmm="ngModel"\r\n                                  [options]="cmmList" class="p-dropdown-custom-md p-dropdown-mh120"\r\n                                  [(ngModel)]="workOrderPartNumber.cmmId" [disabled]="isView" appendTo="body">\r\n                      </p-dropdown>\r\n                  </td>\r\n                  <td>\r\n                      <span class="inline-block">\r\n                          <p-dropdown [options]="dybamicworkFlowList[i]" name="workFlow{{i}}"\r\n                                      #workFlow="ngModel" class="p-dropdown-custom-md p-dropdown-mh120"\r\n                                      [(ngModel)]="workOrderPartNumber.workflowId" [disabled]="isView" appendTo="body">\r\n                          </p-dropdown>\r\n                      </span>\r\n                  </td>\r\n                  <td>\r\n                      <p-dropdown [options]="workOrderStagesList" name="stage{{i}}" #stage="ngModel"\r\n                                  placeholder="Select" class="p-dropdown-custom-md p-dropdown-mh120"\r\n                                  (onChange)="selectedStage($event.value,workOrderPartNumber,i)"\r\n                                  [(ngModel)]="workOrderPartNumber.subWorkOrderStageId" required [disabled]="isView" appendTo="body">\r\n                      </p-dropdown>\r\n                  </td>\r\n                  <td>\r\n                      <p-dropdown [options]="workOrderStatusList" placeholder="Select"\r\n                                  name="status{{i}}" #status="ngModel"\r\n                                  class="p-dropdown-custom-md custome_pd-totext p-dropdown-mh120"\r\n                                  [(ngModel)]="workOrderPartNumber.subWorkOrderStatusId" disabled required appendTo="body">\r\n                      </p-dropdown>\r\n                   </td>\r\n                  <td>\r\n                      <p-dropdown [options]="priorityList" placeholder="Select" name="priority{{i}}"\r\n                                  #priority="ngModel" class="p-dropdown-custom-md p-dropdown-mh120"\r\n                                  [(ngModel)]="workOrderPartNumber.subWorkOrderPriorityId" required [disabled]="isView" appendTo="body">\r\n                      </p-dropdown>\r\n                  </td>\r\n                  \x3c!-- <td>\r\n                      <p-calendar [showIcon]="true" name="receivedDate{{i}}" class="calender-cstm"\r\n                                  #receivedDate="ngModel" [(ngModel)]="workOrderPartNumber.receivedDate"\r\n                                  disabled appendTo="body">\r\n                      </p-calendar>\r\n                       [minDate]="workOrderPartNumber.receivedDate"\r\n                  </td> --\x3e\r\n                  <td>\r\n                      <p-calendar [showIcon]="true" name="customerRequestDate{{i}}"\r\n                                  class="calender-cstm" #customerRequestDate="ngModel"\r\n                                  [(ngModel)]="workOrderPartNumber.customerRequestDate"\r\n                                  required [disabled]="isView"  appendTo="body"></p-calendar>\r\n                  <td>\r\n                      <p-calendar [showIcon]="true" name="promisedDate{{i}}" class="calender-cstm"\r\n                                  #promisedDate="ngModel" [(ngModel)]="workOrderPartNumber.promisedDate"\r\n                                   required [disabled]="isView"  appendTo="body">\r\n                      </p-calendar>\r\n                  <td>\r\n                      <p-calendar [showIcon]="true" name="estimatedCompletionDate{{i}}"\r\n                                  class="calender-cstm" #estimatedCompletionDate="ngModel"\r\n                                  \r\n                                  [(ngModel)]="workOrderPartNumber.estimatedCompletionDate" required [disabled]="isView"  appendTo="body">\r\n                      </p-calendar>\r\n                  </td>\r\n                  <td>\r\n                      <p-calendar [showIcon]="true" class="calender-cstm"\r\n                                  name="estimatedShipDate{{i}}"\r\n                                  [(ngModel)]="workOrderPartNumber.estimatedShipDate"\r\n                                  [minDate]="workOrderPartNumber.receivedDate" #estimatedShipDate="ngModel"\r\n                                  required [disabled]="isView"  appendTo="body"></p-calendar>\r\n                  </td>\r\n                  <td>\r\n                      <input type="checkbox" class="form-control w60" name="isPMA{{i}}"\r\n                             #isPMA="ngModel" [(ngModel)]="workOrderPartNumber.isPMA" [disabled]="isView">\r\n                  </td>\r\n                  <td>\r\n                      <input type="checkbox" class="form-control w60" name="isDER{{i}}"\r\n                             #isDER="ngModel" [(ngModel)]="workOrderPartNumber.isDER" [disabled]="isView">\r\n\r\n                  </td> \r\n                  <td>\r\n                      <p-autoComplete field="name" [(ngModel)]="workOrderPartNumber.partTechnicianId"\r\n                                      name="technician{{i}}" #technician="ngModel"\r\n                                      errorMessage="Records not found" [forceSelection]="true" [dropdown]="true"\r\n                                      [suggestions]="technicianList"\r\n                                      (onSelect)="onSelectedTechnician($event, workOrderPartNumber);"\r\n                                      (completeMethod)="filterTechnician($event)"\r\n                                       [size]="30" [minLength]="1"\r\n                                      class="p-autoComplete-ctsm custome_automo p-autocomplete-mh120"\r\n                                      [disabled]="isView" appendTo="body">\r\n\r\n                      </p-autoComplete>\r\n                  </td>\r\n                  <td>\r\n                      <p-dropdown placeholder="Select" name="techStation{{i}}" #techStatsion="ngModel"\r\n                                  [options]="techStationList" class="p-dropdown-custom-md p-dropdown-mh120"\r\n                                  [(ngModel)]="workOrderPartNumber.techStationId" [disabled]="isView" appendTo="body">\r\n                      </p-dropdown>\r\n                  </td>\r\n                  <td style="display:none">\r\n                      <p-dropdown placeholder="Select" name="tearDown{{i}}" #tearDown="ngModel"\r\n                                  [options]="tearDownReportList" class="p-dropdown-custom-md"\r\n                                  [(ngModel)]="workOrderPartNumber.tearDownReport" [disabled]="isView">\r\n                      </p-dropdown>\r\n                  </td>\r\n                  \x3c!-- <td>\r\n                      <input type="number" class="form-control w50" name="tatDaysCurrent{{i}}"\r\n                             #tatDaysCurrent="ngModel" [(ngModel)]="workOrderPartNumber.tatDaysCurrent"\r\n                             disabled>\r\n                  </td>\r\n                  <td>\r\n                      <input type="number" class="form-control w50" name="tatDaysStandard{{i}}"\r\n                             #tatDaysStandard="ngModel" [(ngModel)]="workOrderPartNumber.tatDaysStandard"\r\n                             disabled>\r\n                  </td> --\x3e\r\n</tr> \r\n          </tbody>\r\n      </table> \r\n  </div> \r\n  <div>\r\n    <button\r\n      class="btn btn-primary pull-right"\r\n      *ngIf="!activeGridUpdateButton"\r\n      type="button" [disabled]="!workOrderForm.valid"\r\n     \r\n      (click)="saveSubWorkOrderParts()"\r\n    >\r\n      Save\r\n    </button>\r\n    <button\r\n      class="btn btn-primary pull-right"\r\n      *ngIf="activeGridUpdateButton"\r\n      type="button" [disabled]="!workOrderForm.valid"\r\n     \r\n      (click)="saveSubWorkOrderParts()"\r\n    >\r\n      Update\r\n    </button>\r\n  </div>\r\n</form> \r\n\x3c!-- <div class="col-md-2">\r\n  <label class="control-label col-sm-3" style=" margin-right: 4px;margin-top: 6px;">MPN\r\n  </label>\r\n  <div class="col-sm-7">\r\n      <p-dropdown [options]="mpnDropdownList" name="partNumber" #partNumber="ngModel"\r\n          placeholder="Select Part Number" (onChange)="changeofMPN($event.value)"\r\n          class="p-dropdown-custom-md" [(ngModel)]="selectedMPN">\r\n      </p-dropdown>\r\n  </div>\r\n</div> --\x3e\r\n</div>\r\n  <div *ngIf="subWorkOrderGeneralInformation && subWorkOrderId!=0 && workOrderId  && isSavedPartNumbers && workOrderDetails && mpnGridUpdated && conditionList" >\r\n    <app-work-order-smart \r\n      [isSubWorkOrder]="issubWorkOrderState" [subWoMpnGridUpdated]="mpnGridUpdated"\r\n      [paramsData]="workOrderDetails"\r\n      [showTabsGrid]="showTabsGrid"\r\n      [showGridMenu]="showGridMenu"\r\n      [subWorkOrderId]="subWorkOrderId"\r\n      [workFlowWorkOrderId]="workFlowWorkOrderId"\r\n      [conditionListfromSubWo]="conditionList"\r\n    ></app-work-order-smart>\r\n  </div>\r\n</div>\r\n'},uAjG:function(e,r,t){"use strict";t.r(r),r.default='<div>\r\n  <button data-target="#addNewEquipments" (click)="createNew()" data-toggle="modal" class="btn btn-primary btn-primary"\r\n    style="padding: 6px 12px !important;margin-left: 6px;" *ngIf="!isView">\r\n    Add Tools\r\n  </button>\r\n</div>\r\n\r\n<div id="addNewEquipments" class="modal fade" role="dialog" data-backdrop="static">\r\n  <div class="modal-dialog modal-xl">\r\n    \x3c!-- Modal content--\x3e\r\n    <div class="modal-content">\r\n      <div class="modal-header">\r\n        <button type="button" class="close" data-dismiss="modal" (click)="closeAddNew()">\r\n          &times;\r\n        </button>\r\n        <h4 class="modal-title">{{isEdit ? \'Edit\' : \'Add\'}} Tools </h4>\r\n      </div>\r\n      <div class="modal-body " id="asset_create">\r\n\r\n        <div *ngIf="!isEdit && addNewEquipment">\r\n          <grd-equipment [workFlowObject]="workFlowObject" [moduleName]="moduleName" [isWorkOrder]="isWorkOrder"\r\n            (saveEquipmentListForWO)="saveEquipmentList($event)"></grd-equipment>\r\n        </div>\r\n        <div *ngIf="isEdit && editData && addNewEquipment">\r\n          <grd-equipment [isEdit]="isEdit" [editData]="editData" [moduleName]="moduleName"\r\n            [workFlowObject]="workFlowObject" [isWorkOrder]="isWorkOrder"\r\n            (updateEquipmentListForWO)="updateEquipmentList($event)"></grd-equipment>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class="equipment-tab-content">\r\n  <div class="x_panel">\r\n    <div class="tab-content">\r\n      <div class="table-responsive" id="workflow-attributes-block">\r\n        <table class="table table-bordered ">\r\n          <thead>\r\n            <tr>\r\n              \x3c!-- <th colspan="9" class="text-center">\r\n                                Equipment &nbsp; &nbsp;<a class="add-asset-checkin-checkout" data-toggle="modal"\r\n                                    data-target=".asset-checkin-checkout"><i class="fa fa-plus plus-icon"></i></a>\r\n                            </th> --\x3e\r\n            </tr>\r\n            <tr *ngIf="!isView">\r\n              <th colspan="4" class="text-center"></th>\r\n              <th colspan="2" class="text-center" *ngIf="!isView">Actions</th>\r\n              \x3c!-- <th colspan="4" class="text-center"></th> --\x3e\r\n            </tr>\r\n            <tr>\r\n              <th class="text-center">Tool Name</th>\r\n              <th class="text-center">Tool Id</th>\r\n              <th class="text-center">Tool Description</th>\r\n              <th class="text-center">Tool Type</th>\r\n              <th class="text-center">Qty</th>\r\n              \x3c!-- <th class="text-center">Min</th>\r\n              <th class="text-center">Max</th> --\x3e\r\n              \x3c!-- <th class="text-center">Expected</th>\r\n              <th class="text-center">Findings</th> --\x3e\r\n              <th class="text-center" *ngIf="!isView"></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody *ngIf="workOrderAssetList.length > 0">\r\n            <tr *ngFor="let asset of workOrderAssetList; let i = index">\r\n              <td>{{ asset.name }}</td>\r\n              <td>{{ asset.assetId }}</td>\r\n              <td>{{ asset.description }}</td>\r\n              <td>{{ asset.assetTypeName }}</td>\r\n              <td class="text-right">{{ asset.quantity }}</td>\r\n              \x3c!-- <td>\r\n                {{ asset.minQuantity }}\r\n              </td>\r\n              <td>\r\n                {{ asset.maxQuantity }}\r\n              </td> --\x3e\r\n              \x3c!-- <td>\r\n                {{ asset.expectedQuantity }}\r\n              </td> --\x3e\r\n              \x3c!-- <td>\r\n                {{ asset.findings }}\r\n              </td> --\x3e\r\n              \x3c!-- \r\n              <td>\r\n                <a\r\n                  class="btn  boxed-float-btn nobg"\r\n                  data-toggle="modal"\r\n                  data-target="#view"\r\n                  (click)="viewAsstes(asset)"\r\n                >\r\n                  <i class="fa fa-eye"></i>\r\n                </a>\r\n              </td> --\x3e\r\n\r\n              <td class="text-center" *ngIf="!isView">\r\n                <span data-target="#addNewEquipments" data-toggle="modal"><a class="btn nobg btn-edit-cstm"\r\n                    (click)="edit(asset)" matTooltip="Edit" matTooltipPosition="above"><i class="fa fa-pencil"></i></a>\r\n                </span>\r\n                <span>\r\n                  \x3c!-- *ngIf="asset.checkInOutStatus === 2" --\x3e\r\n                  <a class="btn  boxed-float-btn nobg" (click)="checkStatus(asset, \'checkOut\'); viewAsstes(asset)"\r\n                    data-toggle="modal" data-target="#checkIn" matTooltipPosition="above"\r\n                    matTooltip="Asset Checked-Out">\r\n                    <i class="fa fa-sign-out clr-red"></i>\r\n                  </a>\r\n                </span>\r\n                <span>\r\n                  \x3c!-- *ngIf="asset.checkInOutStatus === 1" --\x3e\r\n                  <a class="btn  boxed-float-btn nobg" (click)="checkStatus(asset, \'checkIn\'); viewAsstes(asset)"\r\n                    data-toggle="modal" data-target="#checkIn" matTooltipPosition="above" matTooltip="Asset Checked-In">\r\n                    <i class="fa fa-sign-in clr-blue"></i></a>\r\n                </span>\r\n\r\n\r\n                <span><a class="btn nobg btn-delete-cstm" (click)="openDelete(content,asset)" matTooltip="Delete"\r\n                    matTooltipPosition="above"><i class="fa fa-trash"></i></a> </span>\r\n                <span data-toggle="modal" data-target="#assetHistory">\r\n                  <a class="btn nobg btn-hist-cstm" (click)="getAuditHistoryById(asset)" matTooltip="History"><i\r\n                      class="fa fa-history"> </i></a></span>\r\n                \x3c!-- <button class="btn-edit ptable-wo-btns" mat-icon-button data-target="#addNewEquipments"\r\n                  data-toggle="modal" (click)="edit(asset)" matTooltip="Edit" matTooltipPosition="above">\r\n                  <mat-icon>edit</mat-icon>\r\n                </button> --\x3e\r\n              </td>\r\n              \x3c!-- <td *ngIf="asset.checkInOutStatus === 1">\r\n                <a class="btn  boxed-float-btn nobg" (click)="checkStatus(asset, \'checkIn\'); viewAsstes(asset)"\r\n                  data-toggle="modal" data-target="#checkIn" matTooltipPosition="above" matTooltip="Asset Checked-In">\r\n                  <i class="fa fa-sign-in clr-blue"></i>\r\n                </a>\r\n              </td> --\x3e\r\n              \x3c!-- <td *ngIf="asset.checkInOutStatus === 2">\r\n                <a class="btn  boxed-float-btn nobg" (click)="checkStatus(asset, \'checkOut\'); viewAsstes(asset)"\r\n                  data-toggle="modal" data-target="#checkIn" matTooltipPosition="above" matTooltip="Asset Checked-Out">\r\n                  <i class="fa fa-sign-out clr-red"></i>\r\n                </a>\r\n              </td> --\x3e\r\n              \x3c!-- <td>\r\n                <span data-toggle="modal" data-target="#assetHistory">\r\n                  <a class="btn nobg btn-hist-cstm" (click)="getAuditHistoryById(asset)" matTooltip="History"><i\r\n                      class="fa fa-history"> </i></a></span>\r\n              </td> --\x3e\r\n              \x3c!-- <td>\r\n                <button class="btn-delete ptable-wo-btns" mat-icon-button data-toggle="modal" (click)="delete(asset)">\r\n                  <mat-icon color="warn">delete</mat-icon>\r\n                </button>\r\n              </td> --\x3e\r\n              \x3c!--<td>\r\n                <span data-toggle="modal" data-target="#delete">\r\n                  <a\r\n                    class="btn btn-success boxed-float-btn nobg"\r\n                    data-toggle="tooltip"\r\n                    title="Delete Asset"\r\n                    ><i class="fa fa-trash"></i\r\n                  ></a>\r\n                </span>\r\n              </td>--\x3e\r\n            </tr>\r\n            \x3c!-- <div class="text-right">\r\n                                <button class="btn btn-primary" (click)="saveAssets()" >\r\n                                        save Assets\r\n                                    </button>\r\n                        </div> --\x3e\r\n          </tbody>\r\n          <tbody *ngIf="workOrderAssetList.length == 0">\r\n            <tr>\r\n              <td colspan="12" style="color: red; font-weight: bold; text-align: center">\r\n                No records found\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n    <div class="clear"></div>\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <br />\r\n  </div>\r\n</div>\r\n\r\n<div id="view" class="modal fade" role="dialog" data-backdrop="static">\r\n  <div class="modal-dialog modal-xl">\r\n    \x3c!-- Modal content--\x3e\r\n    <div class="modal-content">\r\n      <div class="modal-header">\r\n        <button type="button" class="close" data-dismiss="modal">\r\n          &times;\r\n        </button>\r\n        <h4 class="modal-title">Asstes View</h4>\r\n      </div>\r\n      <div class="modal-body" *ngIf="assetRecordId">\r\n        <app-asset-listing [assetsId]="assetRecordId" [isWorkOrder]="isWorkOrder">\r\n        </app-asset-listing>\r\n      </div>\r\n      <div class="modal-footer">\r\n        <button type="button" class="btn btn-default" data-dismiss="modal">\r\n          Close\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div id="checkIn" class="modal fade" role="dialog" data-backdrop="static">\r\n  <div class="modal-dialog modal-xl">\r\n    \x3c!-- Modal content--\x3e\r\n    <div class="modal-content">\r\n      <div class="modal-header">\r\n        <button type="button" class="close" data-dismiss="modal" (click)="releaseInventory()">\r\n          &times;\r\n        </button>\r\n        <h4 class="modal-title" *ngIf="assetsform.assetStatus == \'checkIn\'">\r\n          Tools Check-In\r\n        </h4>\r\n        <h4 class="modal-title" *ngIf="assetsform.assetStatus == \'checkOut\'">\r\n          Tools Check-Out\r\n        </h4>\r\n      </div>\r\n      <div class="modal-body" *ngIf="assetRecordId">\r\n        <div class="form-row" style="margin-top: 10px;">\r\n          <div class="col-md-3">\r\n            <div class="form-group">\r\n              <label style="width: auto;">WO Num</label>\r\n              <input class="form-control" type="text" [(ngModel)]="woNumber" name="woNumber" disabled />\r\n            </div>\r\n          </div>\r\n          <div class="col-md-3">\r\n            <div class="form-group">\r\n              <label style="width: auto;">Customer</label>\r\n              <input class="form-control" type="text" [(ngModel)]="customerName" name="customerName" disabled />\r\n            </div>\r\n          </div>\r\n          <div class="col-md-3">\r\n            <div class="form-group">\r\n              <label style="width: 100%;">WO Open Date</label>\r\n              \x3c!-- <input class="form-control" type="text" [(ngModel)]="woOperDate" name="woOperDate"\r\n                disabled /> --\x3e\r\n              <p-calendar [showIcon]="true" class="calender-cstm" name="openDate" #openDate="ngModel" required\r\n                [(ngModel)]="woOperDate" disabled appendTo="body">\r\n              </p-calendar>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <hr>\r\n        <div class="panel-group mt-2 tear_down_cls work_order_teardown" id="accordion">\r\n          <div class="panel panel-default">\r\n            <div class="panel-heading">\r\n              \x3c!-- <h4 class="panel-title">\r\n                    <input type="checkbox" name="contract2"  class="set_cds" disabled\r\n                    [(ngModel)]="saveTearDownData.isPmaDerBulletins">\r\n                  </h4> --\x3e\r\n              <table class="asset_tablee"\r\n                style="border: 1px solid #c8c8c8 !important; width: 100%;table-layout: fixed;">\r\n                <thead>\r\n                  <tr>\r\n                    <th style="width:36px;"></th>\r\n                    <th style="text-align:center">Tool Name</th>\r\n                    <th style="text-align:center">Tool Id</th>\r\n                    <th style="text-align:center">Inventory Num</th>\r\n                    <th style="text-align:center">Qty Needed</th>\r\n                    <th style="text-align:center">Qty Seleted</th>\r\n                    <th style="text-align:center">Qty Available</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr>\r\n                    <td style="width:36px;">\r\n                      <span>\r\n                        <a class="collapsed ac_cs" data-toggle="collapse" href="#step2">\r\n                          <i class="fa fa-plus btn btn-success btn-cstm btn-xs" matTooltip="Show Asset Inventory list"\r\n                            matTooltipPosition="above" style="padding: 3px 8px !important;" (click)="openGrid()"></i>\r\n                        </a>\r\n                      </span>\r\n                    </td>\r\n                    <td>\r\n                      {{currentRecord.name}}\r\n                    </td>\r\n                    <td>\r\n                      {{currentRecord.assetId}}\r\n                    </td>\r\n                    <td>\r\n                      \x3c!-- {{currentRecord.quantitySelected}} --\x3e\r\n                      \x3c!-- {{currentRecord.inventoryNumber}} --\x3e\r\n                      Multiple\r\n                    </td>\r\n                    <td style="    text-align: end;">\r\n                      {{currentRecord.quantity}}\r\n                    </td>\r\n                    <td style="    text-align: end;">\r\n                      {{quantitySelected}}\r\n                    </td>\r\n                    <td style="    text-align: end;">\r\n                      \x3c!-- {{currentRecord.qyantityAvalilable}} --\x3e\r\n                      {{AvailableCount}}\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <div id="step2" class="panel-collapse  collapse" *ngIf="showcheckInOutlist">\r\n              <div class="panel-body m-lr-7">\r\n                <form #assetCheckForm="ngForm" style="background: #fff;" >\r\n                  \x3c!-- class="table-responsive" id="workflow-attributes-block" --\x3e\r\n                  <div >\r\n                    <table class="table table-bordered table-border-modal1">\r\n                      <thead>\r\n                        <tr>\r\n                          <th *ngFor="let col of assetChekinCheckoutheaders" style="text-align:center">\r\n                            {{col.header}}\r\n                          </th>\r\n                          <th style="width: 45px;">Actions </th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody *ngIf="workOrderCheckInCheckOutList && workOrderCheckInCheckOutList.length !=0">\r\n                        \x3c!-- <ng-container *ngFor="let x of reservedList; let i=index;" > --\x3e\r\n                        <tr *ngFor="let row of workOrderCheckInCheckOutList; let i = index" id="row_{{i}}">\r\n                          <td style="min-width: 36px;"> \r\n                            <div *ngIf="assetsform.assetStatus == \'checkOut\'">\r\n                              <input type="checkbox" name="contract2" class="set_cds"  *ngIf="row.inventoryStatus==\'Available\'"\r\n                              [(ngModel)]="row.isChecked" required (change)="checkValue(workOrderCheckInCheckOutList)">\r\n                            </div>\r\n                              <input type="checkbox" name="contract2" class="set_cds"  *ngIf="assetsform.assetStatus == \'checkIn\'"\r\n                              [(ngModel)]="row.isChecked" required (change)="checkValue(workOrderCheckInCheckOutList)">\r\n                            </td>\r\n                          <td>{{row.assetName}}</td>\r\n                          <td>{{row.assetId}}</td>\r\n                          <td>{{row.inventoryNumber}}</td>\r\n                          <td>{{row.assetType}}</td>\r\n                          <td>{{row.manufacturer}}</td>\r\n                          <td>{{row.serialNo}}</td>\r\n                          <td>{{row.assetLocation}}</td>\r\n                          <td>{{row.inventoryStatus}}</td>\r\n                          <td style="width: 135px;">\r\n                            <p-autoComplete *ngIf="assetsform.assetStatus == \'checkOut\'" field="label" [disabled]="!row.isChecked"\r\n                              class="pautocomp-cstm" [(ngModel)]="row.checkOutById" name="checkInBy{{i}}"\r\n                              [suggestions]="employeeList" (completeMethod)="filterEmployee($event)" [size]="30"\r\n                              [minLength]="1" [dropdown]="true" errorMessage="Records not found" \r\n                              [forceSelection]="true" > \r\n                            </p-autoComplete>\r\n                            <div *ngIf=" assetsform.assetStatus == \'checkIn\'">{{row.checkOutBy}}</div>\r\n                          </td>\r\n                          <td style="width: 100px;">\r\n                            <div  *ngIf="assetsform.assetStatus == \'checkOut\'">\r\n                              <p-calendar class="pas-clder" [(ngModel)]="row.checkOutDate" [showIcon]="true" [disabled]="!row.isChecked"\r\n                                name="checkOutDate{{i}}"></p-calendar>\r\n                            </div>\r\n                            <div *ngIf=" assetsform.assetStatus == \'checkIn\'">{{row.checkOutDate | date: \'MM/dd/yyyy\'}}</div>\r\n                          </td>\r\n                          <td style="width: 135px;">\r\n                            <div class="form-group" *ngIf="assetsform.assetStatus == \'checkIn\'">\r\n                              <p-autoComplete field="label" class="pautocomp-cstm" [(ngModel)]="row.checkInById" [disabled]="!row.isChecked"\r\n                                name="checkInBy{{i}}" [suggestions]="employeeList"\r\n                                (completeMethod)="filterEmployee($event)" [size]="30" [minLength]="1" [dropdown]="true"\r\n                                errorMessage="Records not found" [forceSelection]="true">\r\n                              </p-autoComplete>\r\n                            </div>\r\n                            <div *ngIf=" assetsform.assetStatus == \'checkOut\'"> {{row.checkInBY}}</div>\r\n                          </td>\r\n                          <td style="width: 100px;"> \r\n                            <div  *ngIf="assetsform.assetStatus == \'checkIn\'">\r\n                              <p-calendar class="pas-clder" [(ngModel)]="row.checkInDate" [showIcon]="true" [disabled]="!row.isChecked"\r\n                                name="checkInDate{{i}}"></p-calendar>\r\n                            </div>\r\n                            <div *ngIf=" assetsform.assetStatus == \'checkOut\'"> {{row.checkInDate | date: \'MM/dd/yyyy\'}}</div>\r\n                          </td>\r\n                          <td> <i class="fa fa-info-circle fa-lg ci_cls" data-toggle="modal" data-target="#textarea-popup" \r\n                            matTooltip="memo" matTooltipPosition="above" (click)="onAddTextAreaInfo(row,i)"></i></td>\r\n                          <td>\r\n                            <span> \r\n                              \x3c!-- data-toggle="modal" data-target="#view" --\x3e\r\n                              \x3c!-- <a class="btn nobg btn-view-cstm" data-toggle="modal" data-target="#checkInOutView"   matTooltip="Asset Inventory View" matTooltipPosition="above">\r\n                                  <i class="fa fa-eye"></i>\r\n                              </a> --\x3e\r\n                              <a\r\n                              class="btn  boxed-float-btn nobg" matTooltip="Asset Inventory View" matTooltipPosition="above"\r\n                              data-toggle="modal"\r\n                              data-target="#checkInOutView1"\r\n                              (click)="viewAsstes(assets)"\r\n                            >\r\n                              <i class="fa fa-eye"></i>\r\n                            </a>\r\n                          </span>\r\n                          \x3c!-- <span>\r\n                            <a class="btn nobg btn-delete-cstm" data-toggle="modal" data-target="#checkInOutHistory"  matTooltip="History" matTooltipPosition="above">\r\n                                <i class="fa fa-history"></i>\r\n                            </a>\r\n                        </span> --\x3e\r\n                          </td>\r\n                        </tr>\r\n                        \x3c!-- </ng-container> --\x3e\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n\r\n                  <div class="text-right save-work-btn cust_ma">\r\n                    \x3c!-- ; getEquipmentData.emit() --\x3e\r\n                    <button class="btn btn-primary btn-primary" (click)="saveAssets(workOrderCheckInCheckOutList)"\r\n                      style="padding: 6px 12px !important;" data-dismiss="modal" [disabled]="!assetCheckForm.valid"\r\n                      type="submit">\r\n                      Save\r\n                    </button>\r\n                    <button type="button" class="btn btn-danger" (click)="releaseInventory()" data-dismiss="modal"\r\n                      style="padding: 6px 12px !important;">\r\n                      Close\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class="modal fade" id="textarea-popup" role="dialog" data-backdrop="static" data-keyboard="false">\r\n          <div class="modal-dialog modal-sm" style="max-width: 400px !important;">\r\n            <div class="modal-content">\r\n              <div class="modal-header">\r\n                <button type="button" class="close" (click)="onCloseTextAreaInfo()">&times;</button>\r\n                <h4 class="modal-title">Memo</h4>\r\n              </div>\r\n              <div class="modal-body">\r\n                  <p-editor [(ngModel)]="textAreaInfo" [style]="{\'height\':\'320px\'}" name="textAreaInfo" required></p-editor>\r\n  \r\n              </div>\r\n              <div class="modal-footer">\r\n                <button type="button" class="btn btn-primary" (click)="onSaveTextAreaInfo(textAreaInfo)">Save</button>\r\n                <button type="button" class="btn btn-danger" (click)="onCloseTextAreaInfo()">Close</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class="modal fade" id="checkInOutView" role="dialog" data-backdrop="static" data-keyboard="false">\r\n          <div class="modal-dialog modal-sm" style="max-width: 400px !important;">\r\n            <div class="modal-content">\r\n              <div class="modal-header">\r\n                <button type="button" class="close" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title"></h4>\r\n              </div>\r\n              \x3c!-- <div class="modal-body" *ngIf="assetInventoryId!=0"> --\x3e\r\n                \x3c!-- [assetsId]="assetRecordId" --\x3e\r\n                \x3c!-- <app-asset-inventory-listing  [assetInventoryId]="assetInventoryId" [isWorkOrder]="isWorkOrder">\r\n                </app-asset-inventory-listing> --\x3e\r\n              \x3c!-- </div> --\x3e\r\n              <div class="modal-footer">\r\n                <button type="button" class="btn btn-primary" (click)="onSaveTextAreaInfo(\'\')">Save</button>\r\n                <button type="button" class="btn btn-danger" (click)="onCloseTextAreaInfo()">Close</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n  \r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\x3c!-- Modal --\x3e\r\n<div id="assetHistory" class="modal fade" role="dialog" data-backdrop="static">\r\n  <div class="modal-dialog modal-xl">\r\n    \x3c!-- Modal content--\x3e\r\n    <div class="modal-content">\r\n      <div class="modal-header">\r\n        <button type="button" class="close" data-dismiss="modal">\r\n          &times;\r\n        </button>\r\n        <h4 class="modal-title">Work Order Tools History</h4>\r\n      </div>\r\n      <div class="modal-body">\r\n        <div class="table-responsive">\r\n          <table class="table table-bordered">\r\n            <thead>\r\n              <tr>\r\n                <th>\tTool Name</th>\r\n                <th>\r\n                  Tool Id\r\n                </th>\r\n                <th>Inventory Num</th>\r\n                <th>Tool Type</th>\r\n                <th>Manufacturer</th>\r\n                <th>Serial Num</th>\r\n                <th>Location</th>\r\n                <th>Status</th>\r\n                <th>CheckOut Date</th>\r\n                <th>CheckOut By</th>\r\n                <th>CheckIn Date</th>\r\n                <th>CheckIn By</th>\r\n                <th>Notes</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr *ngFor="let audit of assetAuditHistory; let i = index">\r\n                <td [ngStyle]="{\r\n                  color: getColorCodeForHistory(\r\n                    i,\r\n                    \'assetName\',\r\n                    audit.assetName\r\n                  )\r\n                    ? \'black\'\r\n                    : \'red\'\r\n                }">\r\n                {{ audit.assetName }}\r\n              </td>\r\n                <td [ngStyle]="{\r\n                    color: getColorCodeForHistory(i, \'assetId\', audit.assetId)\r\n                      ? \'black\'\r\n                      : \'red\'\r\n                  }">\r\n                  {{ audit.assetId }}\r\n                </td>\r\n                <td [ngStyle]="{\r\n                  color: getColorCodeForHistory(i, \'inventoryNumber\', audit.inventoryNumber)\r\n                    ? \'black\'\r\n                    : \'red\'\r\n                }">\r\n                {{ audit.inventoryNumber }}\r\n              </td>\r\n              <td [ngStyle]="{\r\n                color: getColorCodeForHistory(i, \'assetType\', audit.assetType)\r\n                  ? \'black\'\r\n                  : \'red\'\r\n              }">\r\n              {{ audit.assetType }}\r\n            </td>\r\n            <td [ngStyle]="{\r\n              color: getColorCodeForHistory(i, \'manufacturer\', audit.manufacturer)\r\n                ? \'black\'\r\n                : \'red\'\r\n            }">\r\n            {{ audit.manufacturer }}\r\n          </td>\r\n          <td [ngStyle]="{\r\n            color: getColorCodeForHistory(i, \'serialNo\', audit.serialNo)\r\n              ? \'black\'\r\n              : \'red\'\r\n          }">\r\n          {{ audit.serialNo }}\r\n        </td>\r\n        <td [ngStyle]="{\r\n          color: getColorCodeForHistory(i, \'assetLocation\', audit.assetLocation)\r\n            ? \'black\'\r\n            : \'red\'\r\n        }">\r\n        {{ audit.assetLocation }}\r\n      </td>\r\n      <td [ngStyle]="{\r\n        color: getColorCodeForHistory(i, \'inventoryStatus\', audit.inventoryStatus)\r\n          ? \'black\'\r\n          : \'red\'\r\n      }">\r\n      {{ audit.inventoryStatus }}\r\n    </td>\r\n                <td [ngStyle]="{\r\n                  color: getColorCodeForHistory(\r\n                    i,\r\n                    \'checkOutDate\',\r\n                    audit.checkOutDate\r\n                  )\r\n                    ? \'black\'\r\n                    : \'red\'\r\n                }">\r\n                {{ audit.checkOutDate | date: \'MM/dd/yyyy\'}}\r\n              </td>\r\n              <td [ngStyle]="{\r\n                color: getColorCodeForHistory(\r\n                  i,\r\n                  \'checkOutBy\',\r\n                  audit.checkOutBy\r\n                )\r\n                  ? \'black\'\r\n                  : \'red\'\r\n              }">\r\n                {{ audit.checkOutBy }}\r\n              </td>\r\n                <td [ngStyle]="{\r\n                    color: getColorCodeForHistory(\r\n                      i,\r\n                      \'checkInDate\',\r\n                      audit.checkInDate\r\n                    )\r\n                      ? \'black\'\r\n                      : \'red\'\r\n                  }">\r\n                  {{ audit.checkInDate  | date: \'MM/dd/yyyy\'}}\r\n                </td>\r\n                <td [ngStyle]="{\r\n                  color: getColorCodeForHistory(\r\n                    i,\r\n                    \'checkInBy\',\r\n                    audit.checkInBy\r\n                  )\r\n                    ? \'black\'\r\n                    : \'red\'\r\n                }">\r\n                  {{ audit.checkInBy }}\r\n                </td>\r\n                <td [ngStyle]="{\r\n                  color: getColorCodeForHistory(\r\n                    i,\r\n                    \'notes\',\r\n                    audit.notes\r\n                  )\r\n                    ? \'black\'\r\n                    : \'red\'\r\n                }">\r\n                  \x3c!-- {{ audit.notes }}  --\x3e\r\n                  <p class="p_textEditor" [innerHTML]="audit.notes"></p>\r\n                </td>\r\n                \r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      <div class="modal-footer">\r\n        <button type="button" class="btn btn-danger" data-dismiss="modal">\r\n          Close\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<ng-template #content let-c="close" let-d="dismiss">\r\n  <div class="modal-header">\r\n\r\n    <h4 class="modal-title">Are You Sure Want to Delete?</h4>\r\n    <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n      <span aria-hidden="true">&times;</span>\r\n\r\n\r\n    </button>\r\n\r\n  </div>\r\n\r\n  \x3c!-- <div class="modal-body">\r\n      <strong>\r\n        Tool Name:\r\n          <span class="new-label">{{currentRow.name}}</span>\r\n      </strong>\r\n  </div> --\x3e\r\n\r\n  <div class="modal-footer">\r\n    <button type="button" class="btn btn-primary" (click)="delete()">Yes</button>\r\n    <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n  </div>\r\n\r\n\r\n</ng-template>'},umH6:function(e,r,t){"use strict";t.r(r),r.default='<div>\r\n    <div class="inline-block display-flex">\r\n        <h3 class="po-head lead">Inventory Report</h3>       \r\n\r\n           \r\n\r\n    </div>\r\n    <p-table #dt\r\n             class="rpo-table-cstm rro-table-cstm"\r\n             [value]="inventoryReportList"\r\n             [first]="0"\r\n             [rows]="pageSize"\r\n             [paginator]="true"\r\n             [pageLinks]="3"\r\n             [rowsPerPageOptions]="[10, 20, 50, 100]"\r\n             [columns]="headers"\r\n             selectionMode="multiple"\r\n             expandableRows="true"\r\n             rowExpandMode="single"\r\n             [lazy]="true"\r\n             (onLazyLoad)="loadData($event)"\r\n             [resizableColumns]="true"\r\n             [reorderableColumns]="true"\r\n             [totalRecords]="totalRecords"\r\n             [scrollable]="true"\r\n             [metaKeySelection]="true"\r\n             scrollHeight="450px">\r\n        <ng-template pTemplate="caption">\r\n            <div style="text-align: right;margin-left:-6px !important;min-height: 30px;">\r\n\r\n                <h5 style="text-align:left">Management Structure Search</h5>\r\n                <div class="inline-block display-flex">\r\n              \r\n                   <div class="card" style="width:90%">\r\n                    \r\n                    <div class="inline-block display-flex" style="margin-top:10px">\r\n                     \r\n                    <div class="form-group col-sm-2" style="margin-left:10px">\r\n                        <select class="form-control" name="company" [(ngModel)]="managementStructure.companyId" \r\n                        (change)="selectedLegalEntity(managementStructure.companyId);" #companyName="ngModel" required>\r\n                            <option value="0">Select Legal Entity</option>\r\n                            <option *ngFor="let name of legalEntityList" [ngValue]="name.value">{{name.label}}</option>\r\n                        </select>\r\n                        <div *ngIf="companyName.invalid && (companyName.dirty || companyName.touched)" class="alert alert-danger alert-danger-cstm">\r\n                                <div *ngIf="companyName.errors.required">\r\n                                    <small> Legal Entity Name is required </small>\r\n                                </div>\r\n                        </div>        \r\n                    </div>\r\n                    <div class="form-group  col-sm-2" style="margin-left:10px">\r\n                        <select class="form-control" [(ngModel)]="managementStructure.buId" name="buId" (change)="selectedBusinessUnit(managementStructure.buId)">\r\n                            <option value="0">-- Select --</option>\r\n                            <option *ngFor="let name of businessUnitList" [ngValue]="name.value">{{name.label}}</option>\r\n                        </select>\r\n                    </div>\r\n                    <div class="form-group  col-sm-2" style="margin-left:10px">\r\n                        <select class="form-control " [(ngModel)]="managementStructure.divisionId" name="divisionId" (change)="selectedDivision(managementStructure.divisionId)">\r\n                            <option value="0">-- Select --</option>\r\n                            <option *ngFor="let name of divisionList" [ngValue]="name.value">{{name.label}}</option>\r\n                        </select>\r\n                    </div>\r\n                    <div class="form-group  col-sm-2" style="margin-left:10px">\r\n                        <select class="form-control " [(ngModel)]="managementStructure.departmentId" name="departmentId" (change)="selectedDepartment(managementStructure.departmentId)">\r\n                            <option value="0">-- Select --</option>\r\n                            <option *ngFor="let name of departmentList" [ngValue]="name.value">{{name.label}}</option>\r\n                        </select>\r\n                    </div>\r\n                    <button type="button" pButton icon="fa fa-search"\r\n                    class="btn btn-primary" \r\n                     style="padding: 4px 12px !important;height:25px"></button>\r\n                    </div>\r\n                  \r\n                  \r\n            </div>\r\n            <div style="text-align: right;">\r\n                   <button type="button"\r\n                           class="btn btn-primary"\r\n\r\n                           pButton\r\n                           icon="fa-download"\r\n                           iconPos="left"\r\n                           label="Download" matTooltip="Download" matTooltipPosition="above"\r\n                           (click)="downloadStockLineReport()"></button>\r\n    </div>\r\n            </div>\r\n           \r\n   \r\n          \r\n          \r\n        </div>\r\n        </ng-template>\r\n        <ng-template pTemplate="colgroup" let-columns>\r\n            <colgroup>\r\n                <col *ngFor="let col of columns" style="width:130px">\r\n            </colgroup>\r\n        </ng-template>\r\n        <ng-template pTemplate="header" let-columns>\r\n            <tr>\r\n\r\n                <th *ngFor="let col of columns" pResizableColumn pReorderableColumn\r\n                    [pSortableColumn]="col.field" style="text-align:center;">\r\n                    {{ col.header }}\r\n                    <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                </th>\r\n            </tr>\r\n            <tr>\r\n                <th style="width:120px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                    \x3c!-- <input type="text" style="width:100%;" pInputText   (keyup)="filterData($event)"> --\x3e\r\n                    <input style="width:100%;" pInputText type="text" (input)="dt.filter($event.target.value, col.field, \'contains\'); fieldSearch($event.target.value, col.field  )">\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate="body"\r\n                     let-rowData\r\n                     let-rowIndex="rowIndex"\r\n                     let-expanded="expanded"\r\n                     let-columns="columns">\r\n            <tr class="ui-widget-header">\r\n                <td *ngFor="let col of columns" style="text-overflow: ellipsis; overflow: hidden;">\r\n                    {{rowData[col.field]}}\r\n                </td>\r\n\r\n\r\n\r\n\r\n            </tr>\r\n\r\n        </ng-template>\r\n        <ng-template pTemplate="summary" id="footer">\r\n            <label id="footer" class="footer">Total:</label>\r\n            <input style="width: 5%;"\r\n                   [(ngModel)]="totalRecords"\r\n                   [disabled]="true"\r\n                   pInputText\r\n                   type="text" />\r\n            &nbsp;&nbsp;\r\n            <label id="footer" class="footer1">Pages Count:</label>\r\n            <input style="width: 5%;"\r\n                   [(ngModel)]="totalPages"\r\n                   [disabled]="true"\r\n                   pInputText\r\n                   type="text" />\r\n        </ng-template>\r\n    </p-table>\r\n</div>\r\n'},vx5h:function(e,r,t){"use strict";t.r(r),r.default=""},x6VS:function(e,r,t){"use strict";t.r(r),r.default='<div class="card">\r\n  <div class="card-body" style="padding: 10px;" *ngIf="!frombilling">\r\n    <div class="form-row" >\r\n      <div class="col-md-12">\r\n        <div class="col-md-12 display-flex" *ngIf="!hideHeader">\r\n          <div class="col-md-3">\r\n            \x3c!-- <div class="form-group" *ngIf="!isQuote">\r\n              <label for="woID">WO ID </label>\r\n              <p-autoComplete\r\n                [(ngModel)]="laborForm.workFlowWorkOrderId"\r\n                field="label" \r\n                name="workOrderWorkFlow"\r\n                errorMessage="Records not found" \r\n                [forceSelection]="true"\r\n                [dropdown]="true"\r\n                [suggestions]="workOrderWorkFlowList" \r\n                (completeMethod)="filterWorkFlowNumbers($event)"\r\n                [size]="30" [minLength]="1"\r\n                class="p-autoComplete-ctsm"\r\n                [disabled]="isView"\r\n              >\r\n              </p-autoComplete>\r\n            </div> --\x3e\r\n            <form #labourHeader="ngForm">\r\n              <div class="form-group" *ngIf="!isQuote">\r\n                <label for="expertise">Expertise <span *ngIf="laborForm.isTaskCompletedByOne">*</span></label>\r\n                <p-dropdown placeholder="Select Expertise Type" [options]="expertiseTypeList" class="p-dropdown-custom-md-Header" [(ngModel)]="laborForm.expertiseId" [disabled]="isView" (onChange)="\r\n                  getExpertiseEmployeeByExpertiseIdForHeader(laborForm.expertiseId); assignLabourExpertise(laborForm.expertiseId)" name="expertise" [required]="laborForm.isTaskCompletedByOne"></p-dropdown>\r\n              </div>\r\n              <div class="form-group" *ngIf="!isQuote">\r\n                <label for="employee">Employee <span *ngIf="laborForm.isTaskCompletedByOne">*</span></label>\r\n                <p-autoComplete class="p-autoComplete-ctsm" field="label" name="employee" [dropdown]="true"\r\n                  errorMessage="Records not found" [forceSelection]="true" [suggestions]="employeeList"\r\n                  (completeMethod)="filterEmployee($event); " [size]="30" [minLength]="1" [(ngModel)]="laborForm.employeeId"\r\n                  [disabled]="isView" emptyMessage="No Match Found" [required]="laborForm.isTaskCompletedByOne" (onSelect)="assignLabourEmployee(laborForm.employeeId)">\r\n                </p-autoComplete>\r\n              </div>\r\n              <div class="form-group" *ngIf="!isQuote">\r\n                <label for="dataentered">Data Entered By </label>\r\n                <p-autoComplete class="p-autoComplete-ctsm" field="label" name="dataEnteredBy" [dropdown]="true"\r\n                  errorMessage="Records not found" [forceSelection]="true" [suggestions]="dataEnteredByList"\r\n                  (completeMethod)="filterDataEnteredBy($event)" [size]="30" [minLength]="1"\r\n                  [(ngModel)]="laborForm.dataEnteredBy" [disabled]="isView">\r\n                </p-autoComplete>\r\n              </div>\r\n            </form>\r\n            \x3c!-- <div *ngIf="laborForm.workFloworSpecificTaskorWorkOrder == \'workOrder\'">\r\n              <div class="form-group">\r\n                <label for="totalWorkHours">\r\n                    Total Hour to Work Order\r\n                </label>\r\n                <input class="form-control" type="number" [(ngModel)]="laborForm.totalWorkHours" [disabled]="isView" name="totalWorkHours"/>\r\n              </div>\r\n              <div class="form-group">\r\n                <label for="memo">\r\n                    Memo\r\n                </label>\r\n                <textarea class="form-control text-area-cstm" rows="4" cols="50"\r\n                    [(ngModel)]="laborForm.labourMemo" name="memo"\r\n                    [disabled]="isView"></textarea>\r\n              </div>\r\n            </div> --\x3e\r\n          </div>\r\n          <div class="col-md-3 col-offset-3 task-detail" *ngIf="!isQuote">\r\n              <div class="form-row" *ngIf="!isQuote && (laborForm.expertiseId && laborForm.employeeId) && laborForm.workFloworSpecificTaskorWorkOrder != \'workOrder\' && !frombilling">\r\n                <div class="form-group">\r\n                  <p-radioButton class="p-radiobutton-label-horizontal" name="HoursorClockorScan" label="Labour hours" [value]="1"\r\n                    [(ngModel)]="laborForm.hoursorClockorScan" [disabled]="isView"></p-radioButton>\r\n                  <p-radioButton class="p-radiobutton-label-horizontal col-width" name="HoursorClockorScan" [value]="2"\r\n                    label="Labour Clock In/Out" [(ngModel)]="laborForm.hoursorClockorScan" [disabled]="isView"></p-radioButton>\r\n          \r\n                  <p-radioButton class="p-radiobutton-label-horizontal" name="HoursorClockorScan" [value]="3" label="Scan"\r\n                    [(ngModel)]="laborForm.hoursorClockorScan" [disabled]="isView"></p-radioButton>\r\n                </div>\r\n              </div>\r\n              <div class="col-sm-12" *ngIf="(isQuote || (laborForm.expertiseId && laborForm.employeeId)) && laborForm.workFloworSpecificTaskorWorkOrder != \'workOrder\' && !isView">\r\n                  <div class="form-group">\r\n                      <label>Task</label>\r\n                      <ng-multiselect-dropdown\r\n                          class="form-control multiple-custom-select" [placeholder]="\'Select\'"\r\n                          [data]="taskListForHeader" [(ngModel)]="selectedItems"\r\n                          [settings]="dropdownSettings" (onDeSelect)="onDeSelect($event)"\r\n                          (onSelect)="onItemSelect($event)" (onDeSelectAll)="onDeSelectAll($event)"\r\n                          (onSelectAll)="onSelectAll($event)">\r\n                      </ng-multiselect-dropdown>\r\n                  </div>\r\n              </div> \r\n          </div>\r\n          <div class="col-md-3 col-offset-3 task-detail" *ngIf="!isQuote">\r\n            \x3c!-- <div class="form-group"> --\x3e\r\n              <p-checkbox href="#" class="p-checkbox-label task-completed-by-one" name="task" binary="false" label="Task Completed by one Tech/Mech"\r\n                [(ngModel)]="laborForm.isTaskCompletedByOne" [disabled]="isView" (onChange)="taskComletedByConfirmation($event)"></p-checkbox>\r\n            \x3c!-- </div> --\x3e\r\n\r\n            \x3c!-- <div class="form-group" *ngIf="!isQuote"> --\x3e\r\n              \x3c!--  --\x3e\r\n\r\n                <div class="form-group task-hours-type">\r\n                  <p-radioButton *ngIf="workFlowId !==0" class="p-radiobutton-label-horizontal" name="WorkFloworSpecificTaskorWorkOrder"\r\n                  label="Use target hours from workflow" value="workFlow"\r\n                  [(ngModel)]="laborForm.workFloworSpecificTaskorWorkOrder" [disabled]="\r\n                    savedWorkOrderData.workFlowWorkOrderId == 0 || isView\r\n                  " (click)="calculateOverallTotalHours();getWorkFlowLaborList();"></p-radioButton>\r\n                  <p-radioButton class="p-radiobutton-label-horizontal" name="WorkFloworSpecificTaskorWorkOrder" label="Assign hours by specific tasks" value="specificTasks"\r\n                    [(ngModel)]="laborForm.workFloworSpecificTaskorWorkOrder" [disabled]="isView" (click)="laborForm.totalWorkHours = 0;"></p-radioButton>\r\n                  <p-radioButton class="p-radiobutton-label-horizontal" name="WorkFloworSpecificTaskorWorkOrder" value="workOrder"\r\n                    label="Assign total hours to workorder" [(ngModel)]="laborForm.workFloworSpecificTaskorWorkOrder" [disabled]="isView || !laborForm.isTaskCompletedByOne" (click)="assignHoursToToalWorkOrder()"></p-radioButton>\r\n          \r\n                </div>\r\n            \x3c!-- </div> --\x3e\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>   \r\n  </div>\r\n  <div class="table-responsive pas-table-cstm" *ngIf="(isQuote || (laborForm.expertiseId && laborForm.employeeId))" [ngStyle]="isQuote ? {\'margin-top\' : \'-10px\'} : \'\'">\r\n      <table class="table table-bordered  table-sorting mpn-list-table">\r\n        <thead>\r\n          <tr *ngIf="isQuote" style="background-color: #fff;">\r\n            <td colspan="4" class="table-header-col2" *ngIf="\r\n                !laborForm.hoursorClockorScan || laborForm.hoursorClockorScan == 1\r\n              ">\r\n              &nbsp;\r\n            </td>\r\n            <td colspan="7" class="table-header-col2" *ngIf="laborForm.hoursorClockorScan == 2">\r\n              &nbsp;\r\n            </td>\r\n            <td colspan="6" class="table-header-col2" *ngIf="laborForm.hoursorClockorScan == 3">\r\n              &nbsp;\r\n            </td>\r\n            <td colspan="5" class="table-header-col1">\r\n              &nbsp;\r\n            </td>\r\n            <td colspan="4" style="min-width: 410px; padding: 0;">\r\n              <div class="display-flex">\r\n                <div class="form-group" style="text-align: center; display: flex;">\r\n                  <p-radioButton class="p-radiobutton-label-horizontal p-radiobutton-label-w125" name="costPlusType"\r\n                    label="T&M - Markup %/Unit" value="1" [(ngModel)]="laborForm.costPlusType" [disabled]="isView"\r\n                    (click)="(!isView)?tmchange():\'\'"></p-radioButton>\r\n                  <div>\r\n                    <select class="form-control select-markup" (change)="markupChanged({}, \'all\')" [(ngModel)]="overAllMarkup" [disabled]="isView || laborForm.costPlusType != 1" style="margin-top: 10px;" name="markupheader">\r\n                      <option value="">Select</option>\r\n                      <option *ngFor="let markUp of markupList" [value]="markUp.value">{{ markUp.label }}</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n                <div style="margin-left: 10px; margin-right: 10px;">\r\n                  <p-radioButton class="p-radiobutton-label-horizontal" name="costPlusType"\r\n                    value="2" label="Actual" [(ngModel)]="laborForm.costPlusType" [disabled]="isView" (click)="(!isView)?tmchange():\'\'">\r\n                  </p-radioButton>\r\n                </div>\r\n                <div>\r\n                  <p-radioButton class="p-radiobutton-label-horizontal" name="costPlusType"\r\n                    value="3" label="Flat Rate" [(ngModel)]="laborForm.costPlusType" [disabled]="isView" (click)="(!isView)?tmchange():\'\'">\r\n                  </p-radioButton>\r\n                </div>\r\n              </div>\r\n              \x3c!-- <div class="form-group" style="color: #fff;">\r\n                  <p-radioButton\r\n                    class="p-radiobutton-label-horizontal"\r\n                    name="costPlusType"\r\n                    label="Mark Up"\r\n                    value="Mark Up"\r\n                    [(ngModel)]="laborForm.costPlusType"\r\n                    [disabled]="isView"\r\n                  ></p-radioButton>\r\n                  <p-radioButton\r\n                    class="p-radiobutton-label-horizontal col-width"\r\n                    name="costPlusType"\r\n                    value="Cost Plus"\r\n                    label="Cost Plus"\r\n                    [(ngModel)]="laborForm.costPlusType"\r\n                    [disabled]="isView"\r\n                  ></p-radioButton>\r\n                </div> --\x3e\r\n            </td>\r\n            \x3c!-- <td></td>\r\n            <ng-container *ngIf="isQuote">\r\n              <td></td>\r\n            </ng-container> --\x3e\r\n          </tr>\r\n          <tr>\r\n            <th class="text-center padding-td" style="min-width: 120px;">Tasks</th>\r\n            <th class="text-center" style="min-width: 150px;">Expertise</th>\r\n            <th class="text-center" style="padding: 8px 64px !important;" *ngIf="!isQuote">\r\n              Employee\r\n            </th>\r\n            <th class="text-center">Billable /NonBillable</th>\r\n            <th class="text-center" *ngIf="\r\n                laborForm.hoursorClockorScan &&\r\n                laborForm.hoursorClockorScan !== 1 &&\r\n                laborForm.hoursorClockorScan !== 3\r\n              ">\r\n              Start/Stop\r\n            </th>\r\n            <th class="text-center" style="width: 100px;" *ngIf="\r\n                laborForm.hoursorClockorScan && laborForm.hoursorClockorScan !== 1\r\n              ">\r\n              Start Date and Time\r\n            </th>\r\n            <th class="text-center" *ngIf="\r\n                laborForm.hoursorClockorScan && laborForm.hoursorClockorScan !== 1\r\n              ">\r\n              End Date and Time\r\n            </th>\r\n            <th class="text-center">Hours</th>\r\n            <ng-container *ngIf="!isQuote">\r\n              <th class="text-center">Adjustments</th>\r\n              <th class="text-center">Adjusted Hours</th>\r\n            </ng-container>\r\n            <ng-container *ngIf="isQuote">\r\n              <th>\r\n                Direct Labor\r\n              </th>\r\n              <th>\r\n                Burden Rate %\r\n              </th>\r\n              <th>\r\n                Burden Rate Amount\r\n              </th>\r\n              <th>\r\n                Labor Cost/Hr\r\n              </th>\r\n              <th>\r\n                Total Direct Cost\r\n              </th>\r\n              <th>\r\n                Billing Method\r\n              </th>\r\n              <th>Markup %</th>\r\n              <th>\r\n                Billing Rate/hr\r\n              </th>\r\n              <th>\r\n                Billing Amount\r\n              </th>\r\n            </ng-container>\r\n            <th class="text-center" style="padding: 7px 53px !important;" *ngIf="!isQuote">\r\n              Memo\r\n            </th>\r\n            <th *ngIf="!isView">Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          \x3c!-- Receive --\x3e\r\n          <ng-container *ngFor="let task of taskList; let taskIndex = index">\r\n            \x3c!-- <ng-container *ngIf="isAllowedTask(task.taskId)"> --\x3e\r\n            <tr *ngIf="getLenghtOfTask(laborForm.workOrderLaborList[0][task.description | lowercase])">\r\n              <td class="full-width">\r\n                {{ task.description }}\r\n\r\n                <button class="btn-sm new-btn-primary" style="    height: 26px;\r\n                padding: 0px;\r\n                font-size: 11px !important;" (click)="toggle_po_header=!toggle_po_header">\r\n                  {{toggle_po_header ? \'Collapse\' : \'Expand\'}}\r\n              </button>\r\n                <i class="float-right float-right fa fa-plus-circle fa-lg"\r\n                  (click)="addNewTask(task.description.toLowerCase())" *ngIf="!isView"></i>\r\n              </td>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n              <td *ngIf="\r\n                  laborForm.hoursorClockorScan &&\r\n                  laborForm.hoursorClockorScan !== 1 &&\r\n                  laborForm.hoursorClockorScan !== 3\r\n                "></td>\r\n              <td *ngIf="\r\n                  laborForm.hoursorClockorScan &&\r\n                  laborForm.hoursorClockorScan !== 1\r\n                "></td>\r\n              <td *ngIf="\r\n                  laborForm.hoursorClockorScan &&\r\n                  laborForm.hoursorClockorScan !== 1\r\n                "></td>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n              <ng-container *ngIf="isQuote">\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n              </ng-container>\r\n              <td *ngIf="!isView"></td>\r\n            </tr>\r\n            <ng-container *ngFor="\r\n                let rec of laborForm.workOrderLaborList[0][\r\n                  task.description | lowercase\r\n                ];\r\n                let i = index\r\n              ">\r\n              \x3c!-- <tr *ngIf="i < 1">\r\n                <td>\r\n                    {{ task.description }}\r\n                    <i (click)="taskIndexToggle[task.description]=!taskIndexToggle[task.description]" [ngClass]="(!taskIndexToggle[task.description])?\'fa fa-lg fa-angle-down\':\'fa fa-lg fa-angle-up\'"></i>\r\n                </td>\r\n              </tr> --\x3e\r\n              <tr *ngIf="rec && !rec[\'IsDeleted\'] && (taskIndexToggle[task.description] || i == 0) ">\r\n                <td *ngIf="i < 1">\r\n                  {{ task.description }}\r\n                  <i (click)="taskIndexToggle[task.description]=!taskIndexToggle[task.description]" [ngClass]="(!taskIndexToggle[task.description])?\'fa fa-lg fa-angle-down font-size-20\':\'fa fa-lg fa-angle-up font-size-20\'"></i>\r\n                </td>\r\n                <td *ngIf="i >= 1">&nbsp;</td>\r\n                <td>\r\n                  \x3c!-- <p-dropdown\r\n                      placeholder="Select Expertise Type"\r\n                        [options]="getExpertise(expertiseTypeList, task.taskId)"\r\n                        class="p-dropdown-custom-2"\r\n                        [(ngModel)]="rec.expertiseId"\r\n                      ></p-dropdown> --\x3e\r\n\r\n                  <select [(ngModel)]="rec.expertiseId" style="width: 120px;" (change)="\r\n                      getExpertiseEmployeeByExpertiseId($event.target.value, i, rec)\r\n                    " [disabled]="isView || laborForm.isTaskCompletedByOne">\r\n                    <option>Select</option>\r\n                    <ng-container *ngFor="let exp of expertiseTypeList">\r\n                      <option [value]="exp.value">{{ exp.label }}</option>\r\n                    </ng-container>\r\n                  </select>\r\n                  <i *ngIf="!laborForm.isTaskCompletedByOne && !isView && i<1"\r\n                    class="float-right float-right fa fa-plus-circle fa-lg "\r\n                    (click)="addNewTask(task.description.toLowerCase())"></i>\r\n                </td>\r\n                <td class="emp-labour-cstm" *ngIf="!isQuote">\r\n                  \x3c!-- <p-autoComplete\r\n                      class="p-autocomplete-ctsm-1 "\r\n                      field="label" \r\n                      name="employeeId"\r\n                      [dropdown]="true"\r\n                      errorMessage="Records not found" \r\n                      [forceSelection]="true"\r\n                      [suggestions]="employeeList" \r\n                      (completeMethod)="filterEmployee($event)"\r\n                      [size]="30" [minLength]="1"\r\n                      [(ngModel)]="rec.employeeId"\r\n                      #employeeId="ngModel"\r\n                      required\r\n                    >\r\n                    </p-autoComplete> --\x3e\r\n\r\n                  <p-autoComplete field="label" [(ngModel)]="rec.employeeId" #salesPerson="ngModel"\r\n                    errorMessage="Records not found" [forceSelection]="true" [dropdown]="true" [suggestions]="\r\n                      getDynamicVariableData(\'expertiseEmployee\', i)\r\n                    " (completeMethod)="filterExpertiseEmployee($event, i)" emptyMessage="No Match Found" [size]="30"\r\n                    [minLength]="1" [dropdown]="true" class="p-autoComplete-ctsm" required [disabled]="isView || laborForm.isTaskCompletedByOne" appendTo="body">\r\n                  </p-autoComplete>\r\n                </td>\r\n                <td>\r\n                  <p-dropdown placeholder="Select Billing Type" [options]="billableList" class="p-dropdown-custom-md"\r\n                  [(ngModel)]="rec.billableId" [disabled]="isView"></p-dropdown>\r\n                </td>\r\n                <td *ngIf="\r\n                    laborForm.hoursorClockorScan &&\r\n                    laborForm.hoursorClockorScan !== 1 &&\r\n                    laborForm.hoursorClockorScan !== 3\r\n                  " style="text-align: center;">\r\n                  <button class="btn btn-primary start-btn" (click)="startandStop(rec);calculateWorkingHoursandMins(rec);calculateTaskHours(task);" [disabled]="\r\n                      (rec.startDate && rec.endDate) !== null || isView\r\n                    " *ngIf="!rec.startDate || !rec.endDate">\r\n                    {{(!rec.startDate)?\'Start\':\'Stop\'}}\r\n                  </button>\r\n                </td>\r\n                <td *ngIf="\r\n                    laborForm.hoursorClockorScan &&\r\n                    laborForm.hoursorClockorScan !== 1\r\n                  ">\r\n                  <p-calendar [(ngModel)]="rec.startDate" [showIcon]="true" appendTo="body"\r\n                    showTime="true" hourFormat="12" [minDate]="minDateValue" (onSelect)="resetEndDateandTime(rec)" \r\n                    (onClose)="calculateWorkingHoursandMins(rec);calculateTaskHours(task);" class="w150 pcalendar-wo-labor model_view" [disabled]="isView || !rec.startDate">\r\n                  </p-calendar>\r\n                </td>\r\n                <td *ngIf="\r\n                    laborForm.hoursorClockorScan &&\r\n                    laborForm.hoursorClockorScan !== 1\r\n                  ">\r\n                  <p-calendar [(ngModel)]="rec.endDate" [showIcon]="true"  appendTo="body"\r\n                    showTime="true" hourFormat="12" class="w150 pcalendar-wo-labor model_view" [minDate]="rec.endDate"\r\n                    (onClose)="calculateWorkingHoursandMins(rec);calculateTaskHours(task);" [disabled]="isView || !rec.endDate"></p-calendar>\r\n                </td>\r\n                <td *ngIf="\r\n                    laborForm.hoursorClockorScan &&\r\n                    laborForm.hoursorClockorScan !== 1\r\n                  ">\r\n                  {{ rec.totalHours + \':\' + rec.totalMinutes }}\r\n                </td>\r\n                <td *ngIf="\r\n                    !laborForm.hoursorClockorScan ||\r\n                    laborForm.hoursorClockorScan === 1\r\n                  " style="display: flex;">\r\n                  <div style="float: right;min-width: 155px;">\r\n                    <input type="number" class="form-control" (blur)="\r\n                    calculateHoursDifference(rec);\r\n                    calculateTaskHours(task);\r\n                    calculateTotalCost(rec);\r\n                    markupChanged(rec, \'row\')\r\n                    " [(ngModel)]="rec.totalHours" [disabled]="isView" style="width: 75px;" required/>\r\n                    <span style="font-size: 17px; margin: 0 5px;">:</span>\r\n                    <input type="number" class="form-control" (blur)="\r\n                    calculateHoursDifference(rec);\r\n                    calculateTaskHours(task);\r\n                    calculateTotalCost(rec);\r\n                    markupChanged(rec, \'row\')\r\n                    " [(ngModel)]="rec.totalMinutes" [disabled]="isView" style="width: 50px;" max="60" (change)="rec.totalMinutes >=60?rec.totalMinutes=00:\'\'" required/>\r\n                  </div>\r\n                  \x3c!-- <input type="number" class="form-control" (blur)="\r\n                      calculateHoursDifference(rec);\r\n                      calculateTaskHours(task);\r\n                      calculateTotalCost(rec);\r\n                      markupChanged(rec, \'row\')\r\n                    " [(ngModel)]="rec.hours" [disabled]="isView" required/> --\x3e\r\n                </td>\r\n                <ng-container *ngIf="!isQuote">\r\n                  <td>\r\n                      <input type="number" class="form-control" (blur)="calculateHoursDifference(rec);calculateAdjustmentHours(task);" [(ngModel)]="rec.adjustments" [disabled]="isView"/>\r\n                  </td>\r\n                  <td class="content-to-end">\r\n                      {{ rec.adjustedHours }}\r\n                  </td>\r\n                </ng-container>\r\n                <ng-container *ngIf="isQuote">\r\n                  <td>\r\n                    <input type="number" class="form-control" (blur)="calculateTotalCost(rec); markupChanged(rec, \'row\'); calculateBurderRate(rec)"\r\n                      [(ngModel)]="rec.directLaborOHCost" [disabled]="isView" required/>\r\n                  </td>\r\n                  <td>\r\n                    <select class="form-control select-markup" (change)="calculateBurderRate(rec)" [(ngModel)]="rec.burdaenRatePercentageId"\r\n                    style="width: 100px;" [disabled]="isView">\r\n                      <option value="">Select</option>\r\n                      <option *ngFor="let markUp of markupList" [value]="markUp.value">{{ markUp.label }}</option>\r\n                    </select>\r\n                  </td>\r\n                  <td class="content-to-end">\r\n                    \x3c!-- <input type="number" (blur)="calculateTotalCost(rec); markupChanged(rec, \'row\')"\r\n                      [(ngModel)]="rec.burdenRateAmount" [disabled]="isView" /> --\x3e\r\n                      {{(rec.burdenRateAmount)?formateCurrency(rec.burdenRateAmount):0.00}}\r\n                  </td>\r\n                  <td class="content-to-end">\r\n                    {{ (rec.totalCostPerHour)?formateCurrency(rec.totalCostPerHour):0.00 }}\r\n                  </td>\r\n                  <td class="content-to-end">\r\n                    {{ formateCurrency(rec.totalCost) }}\r\n                  </td>\r\n                  <td>\r\n                    <select class="form-control" [(ngModel)]="rec.billingMethodId" style="min-width: 130px;"\r\n                      [disabled]="isView || laborForm.costPlusType == 3" (change)="rec.markupPercentageId = \'\';rec.billingRate = 0;">\r\n                      <option value="">Select</option>\r\n                      <option *ngFor="\r\n                          let bm of [\r\n                            { label: \'T&M\', value: 1 },\r\n                            { label: \'Actual\', value: 2 }\r\n                          ]\r\n                        " [value]="bm.value">{{ bm.label }}</option>\r\n                    </select>\r\n                  </td>\r\n                  <td>\r\n                    \x3c!-- <input [(ngModel)]="matQuotation.markup" /> --\x3e\r\n                    <select class="form-control select-markup" (change)="markupChanged(rec, \'row\')" [(ngModel)]="rec.markupPercentageId"\r\n                      style="min-width: 100px;" [disabled]="isView || rec.billingMethodId != 1">\r\n                      <option value="">Select</option>\r\n                      <option *ngFor="let markUp of markupList" [value]="markUp.value">{{ markUp.label }}</option>\r\n                    </select>\r\n                  </td>\r\n                  <td class="content-to-end">{{ formateCurrency(rec.billingRate) }}</td>\r\n                  <td>\r\n                    <input class="form-control text-right" type="text" pInputText pKeyFilter="money" (change)="rec.billingAmount = formateCurrency(rec.billingAmount)" [(ngModel)]="rec.billingAmount" [disabled]="isView || rec.billingMethodId != 2"/> \x3c!--class="width-unset"--\x3e\r\n                  </td>\r\n                </ng-container>\r\n                <td *ngIf="!isQuote">\r\n                  <input type="text" class="form-control" [(ngModel)]="rec.memo" [disabled]="isView"/>\r\n                </td>\r\n                <td *ngIf="!isView" class="text-center">\r\n                    <span><button type="button" class="btn nobg btn-delete-cstm" mat-icon-button matTooltip="Delete" matTooltipPosition="above"\r\n                      (click)="showDeleteLabourPopup(task.description, i)"><i class="fa fa-trash"></i></button> </span>\r\n                </td>\r\n              </tr>\r\n            </ng-container>\r\n            <tr *ngIf="\r\n            laborForm.workOrderLaborList[0][task.description | lowercase] && laborForm.workOrderLaborList[0][task.description | lowercase]\r\n                  .length != 0 && taskIndexToggle[task.description]\r\n              " class="task-total">\r\n              <td>Total ({{task.description}})</td>\r\n              <td></td>\r\n              <td></td>\r\n              <td *ngIf="!isQuote"></td>\r\n              <td *ngIf="\r\n                  laborForm.hoursorClockorScan &&\r\n                  laborForm.hoursorClockorScan !== 1 &&\r\n                  laborForm.hoursorClockorScan !== 3\r\n                "></td>\r\n              <td *ngIf="\r\n                  laborForm.hoursorClockorScan &&\r\n                  laborForm.hoursorClockorScan !== 1\r\n                "></td>\r\n              <td *ngIf="\r\n                  laborForm.hoursorClockorScan &&\r\n                  laborForm.hoursorClockorScan !== 1\r\n                "></td>\r\n              <td *ngIf="!isQuote">\r\n                  <input type="text" class="form-control text_right" [(ngModel)]="task.totalWorkHours" (change)="calculateTotalHours()" disabled />\r\n              </td>\r\n              <td *ngIf="isQuote" class="content-to-end">\r\n                {{ task.totalWorkHours }}\r\n              </td>\r\n              <td class="content-to-end">\r\n                {{(!isQuote)?task.totalAdjustments:\'\'}}\r\n              </td>\r\n              <td class="content-to-end">{{(!isQuote)?task.totalAdjustedHours:\'\'}}</td>\r\n              <td></td>\r\n              <ng-container *ngIf="isQuote">\r\n                <td></td>\r\n                <td class="content-to-end">\r\n                  {{\r\n                    formateCurrency(getTotalCost(\r\n                      laborForm.workOrderLaborList[0][task.description | lowercase]\r\n                    ))\r\n                  }}\r\n                </td>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n              </ng-container>\r\n              <td *ngIf="isQuote" class="content-to-end">\r\n                {{\r\n                  formateCurrency(getTotalBillingAmount(\r\n                    laborForm.workOrderLaborList[0][task.description | lowercase]\r\n                  ))\r\n                }}\r\n              </td>\r\n              \x3c!-- <td></td> --\x3e\r\n              <td *ngIf="!isView"></td>\r\n            </tr>\r\n            \x3c!-- </ng-container> --\x3e\r\n          </ng-container>\r\n          <ng-container *ngIf="laborForm.workFloworSpecificTaskorWorkOrder != \'workOrder\'">\r\n            <tr class="footer">\r\n              <td><b>Total Labor Hours</b></td>\r\n              <td></td>\r\n              <td></td>\r\n              <td *ngIf="!isQuote"></td>\r\n              <td *ngIf="\r\n                  laborForm.hoursorClockorScan &&\r\n                  laborForm.hoursorClockorScan !== 1 &&\r\n                  laborForm.hoursorClockorScan !== 3\r\n                "></td>\r\n              <td *ngIf="\r\n                  laborForm.hoursorClockorScan &&\r\n                  laborForm.hoursorClockorScan !== 1\r\n                "></td>\r\n              <td *ngIf="\r\n                  laborForm.hoursorClockorScan &&\r\n                  laborForm.hoursorClockorScan !== 1\r\n                "></td>\r\n              <td *ngIf="!isQuote">\r\n                \x3c!-- {{(laborForm.totalWorkHours)?laborForm.totalWorkHours.toFixed(2):0.00}} --\x3e\r\n                <input type="number" class="form-control" [(ngModel)]="laborForm.totalWorkHours" disabled/>\r\n              </td>\r\n              <td *ngIf="isQuote" class="content-to-end">\r\n                {{laborForm.totalWorkHours}}\r\n              </td>\r\n              <td class="content-to-end"><b>{{(!isQuote)?calculateTotalAdjustment():\'\'}}</b></td>\r\n              <td class="content-to-end"><b>{{(!isQuote)?calculateTotalAdjustedHours():\'\'}}</b></td>\r\n              <td></td>\r\n              <ng-container *ngIf="isQuote">\r\n                <td></td>\r\n                <td class="content-to-end"><b>{{ formateCurrency(getOverAlltotal(\'Cost\')) }}</b></td>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n              </ng-container>\r\n              <ng-container *ngIf="laborForm.costPlusType != 3">\r\n                <td *ngIf="isQuote" class="content-to-end"><b>{{ formateCurrency(getOverAlltotal(\'BillingAmount\')) }}</b></td>\r\n              </ng-container>\r\n              <ng-container *ngIf="laborForm.costPlusType == 3 && isQuote">\r\n                <td>\r\n                  <input type="number" class="form-control" [(ngModel)]="laborForm.laborFlatBillingAmount" [disabled]="isView" />\r\n                </td>\r\n              </ng-container>\r\n              \x3c!-- <td></td> --\x3e\r\n              <td *ngIf="!isView"></td>\r\n            </tr>\r\n          </ng-container>\r\n        </tbody>\r\n      </table>\r\n  </div>\r\n  \x3c!-- <ng-template #confirmation let-c="close" let-d="dismiss" data-backdrop="static">\r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Delete the existing records?</h4>\r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-primary" (click)="deleteConfirmation()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n    </div>\r\n  </ng-template> --\x3e\r\n\r\n\r\n  <div id="confirmation" class="modal fade" role="dialog" data-backdrop="static">\r\n      <div class="modal-dialog modal-sm">\r\n  \r\n          \x3c!-- Modal content--\x3e\r\n          <div class="modal-content">\r\n              <div class="modal-header">\r\n                  <h4 class="modal-title">Are You Sure Want to Delete the existing records?</h4>\r\n                  <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n                      <span aria-hidden="true">&times;</span>\r\n                  </button>\r\n              </div>\r\n              <div class="modal-footer">\r\n                  <button type="button" class="btn btn-primary" (click)="deleteConfirmation()">Yes</button>\r\n                  <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n              </div>\r\n          </div>\r\n  \r\n      </div>\r\n  </div>\r\n\r\n  <div id="deleteRowConfirmation" class="modal fade" role="dialog" data-backdrop="static">\r\n      <div class="modal-dialog modal-sm">\r\n  \r\n          \x3c!-- Modal content--\x3e\r\n          <div class="modal-content">\r\n              <div class="modal-header">\r\n                  <h4 class="modal-title">Are You Sure Want to Delete the record?</h4>\r\n                  <button type="button" class="close" aria-label="Close" data-dismiss="modal">\r\n                      <span aria-hidden="true">&times;</span>\r\n                  </button>\r\n              </div>\r\n              <div class="modal-footer">\r\n                  <button type="button" class="btn btn-primary" data-dismiss="modal" (click)="deleteLabor(deletingLabourObj.taskName, deletingLabourObj.index)">Yes</button>\r\n                  <button type="button" class="btn btn-danger" data-dismiss="modal">No</button>\r\n              </div>\r\n          </div>\r\n  \r\n      </div>\r\n  </div>\r\n\r\n  <div id="confirmationTaskDelete" class="modal fade" role="dialog" data-backdrop="static">\r\n      <div class="modal-dialog modal-sm">\r\n  \r\n          \x3c!-- Modal content--\x3e\r\n          <div class="modal-content">\r\n              <div class="modal-header">\r\n                  <h4 class="modal-title">Are You Sure Want to Delete the existing records?</h4>\r\n                  <button type="button" class="close" aria-label="Close" (click)="dismissModelTask()">\r\n                      <span aria-hidden="true">&times;</span>\r\n                  </button>\r\n              </div>\r\n              <div class="modal-footer">\r\n                  <button type="button" class="btn btn-primary" (click)="deleteConfirmationTask(type)">Yes</button>\r\n                  <button type="button" class="btn btn-danger" (click)="dismissModelTask()">No</button>\r\n              </div>\r\n          </div>\r\n  \r\n      </div>\r\n  </div>\r\n</div>\r\n\r\n<button (click)="saveLabor()" class="btn btn-primary pull-right" *ngIf="!isView" style="margin-top: 10px;margin-bottom: 10px;" [disabled]="(labourHeader && !labourHeader.valid) || checkHoursAndDirectLabour()">\r\n  Save Labor\r\n</button>'},xFxS:function(e,r,t){"use strict";t.r(r),r.default=""},xu5b:function(e,r,t){"use strict";t.r(r),r.default=""},xxq1:function(e,r,t){"use strict";t.r(r),r.default='.grey-card {\n  background-color: #e7e7e7;\n}\n\n.wo-multiple-pn-details {\n  background: #fff;\n  padding: 8px;\n  border: 5px solid #e7e7e7;\n}\n\n.nav-pills-cstm {\n  margin-top: 10px;\n  font-size: 11px;\n  padding: 0px 7px;\n}\n\n.nav-pills-cstm li {\n  float: left;\n}\n\n.nav-pills-cstm li a {\n  background-color: #4298ffb0;\n  color: white;\n  margin-right: 2px;\n  margin-bottom: 10px;\n  margin-left: 1px;\n  margin-top: 10px;\n  border-radius: 4px;\n}\n\n.nav-pills-cstm li a:hover {\n  background-color: #337ab7 !important;\n}\n\n.nav-pills-cstm li a {\n  font-size: 10px !important;\n}\n\nli.nav-item {\n  margin-right: 1px;\n  border-radius: 4px;\n}\n\n.nav-pills .nav-link,\n.nav-pills .show > .nav-link {\n  color: black;\n  background-color: #ddd;\n}\n\n.nav-pills > li > a.active,\n.nav-pills > li > a.active:focus,\n.nav-pills > li > a.active:hover {\n  color: #fff;\n  background-color: #337ab7 !important;\n}\n\n.dropdown-menu.show > a {\n  background-color: white !important;\n  color: black !important;\n}\n\n.hidedata {\n  display: none;\n}\n\n.hidedataOthers {\n  display: none;\n}\n\n.hidedataMain {\n  display: none;\n}\n\n.dropdown-submenu {\n  position: relative;\n}\n\n.dropdown-submenu .dropdown-menu {\n  top: 0;\n  left: 100%;\n  margin-top: -1px;\n}\n\nlabel {\n  text-align: left;\n  width: 100%;\n  margin-right: 0;\n  font-weight: normal;\n}\n\ninput[type=text],\ninput[type=number],\nselect,\ntextarea {\n  height: 24px !important;\n  border-radius: 5px !important;\n}\n\n.ui-widget {\n  padding: 0px !important;\n}\n\n.nav-pills li a {\n  padding: 5px 4px !important;\n}\n\n.set_pad {\n  padding: 2%;\n}\n\n@media (min-width: 768px) {\n  .col-md-6 .col-md-6 {\n    max-width: 44%;\n    margin-right: 15px;\n  }\n\n  .col-md-3 {\n    max-width: 22%;\n    margin-right: 15px;\n  }\n\n  .col-md-6-cstm {\n    max-width: 45%;\n    margin-right: 20px;\n    padding-right: 0;\n  }\n}\n\n.isDisabled {\n  pointer-events: none;\n}\n\n.ui-chkbox-box {\n  margin-right: 10px;\n  background-color: red !important;\n}\n\n.c-wf-bcrumb {\n  background-color: transparent;\n}\n\n.c-wf-bcrumb li {\n  font-family: "Roboto";\n  font-size: medium;\n  font-weight: 900;\n  color: #295d92;\n}\n\n.c-wf-bcrumb .breadcrumb-item.active {\n  color: #6c757d !important;\n}\n\n.wf-popup-form label {\n  width: 100px;\n  text-align: right;\n  margin-top: 1px;\n}\n\n.wfl-table-popup-cstm {\n  margin-top: 4px;\n}\n\n.wfl-table-popup-cstm tr th {\n  padding: 8px 4px !important;\n}\n\n.wfl-table-popup-cstm tr td {\n  padding: 5px;\n}\n\n.po-head-wfl {\n  font-weight: bold;\n  font-size: 13px !important;\n  color: #295d92 !important;\n  margin-bottom: 0;\n}\n\n.back_filsd {\n  background: #e6e6e6 !important;\n}\n\n.no-quote {\n  font-size: 15px;\n  text-align: center;\n  margin-bottom: 16px;\n}\n\n.text-area-cstm {\n  height: 90px !important;\n}\n\n.form-control[readonly] {\n  background-color: #e9ecef !important;\n  opacity: 1;\n  pointer-events: none;\n}\n\n.add-wo-grid th {\n  text-align: center;\n}\n\n.addMPN_details {\n  margin-bottom: 12px;\n  margin-top: 4px;\n  margin-right: 14px;\n}\n\n.radio_adjust {\n  position: relative;\n  top: 2px;\n  margin-left: 6px;\n}\n\n.view_icon_adjust {\n  color: #41bf41;\n  margin-left: 4px;\n}\n\n.footer_adjust {\n  padding-bottom: 17px;\n  width: 100%;\n  margin-bottom: 0px;\n  padding-right: 10px;\n  margin-top: 8px;\n}\n\n.align-row > label {\n  float: left !important;\n}'},"y+N7":function(e,r,t){"use strict";t.r(r),r.default='<h4 style="text-align: center;">{{type}} details for {{partNumber}}</h4>\r\n<p-treeTable [value]="gridData">\r\n    <ng-template pTemplate="header">\r\n        <tr>\r\n            <th style="background-color: #337ab7; color: white; width: 111px;" *ngFor="let f of fields">{{f.header}}</th>\r\n        </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate="body" let-rowNode let-rowData="rowData">\r\n        <tr>\r\n            \x3c!-- <td style="width: 111px;">\r\n                <p-treeTableToggler [rowNode]="rowNode"></p-treeTableToggler>\r\n                {{rowData.partNumber}}\r\n            </td> --\x3e\r\n            <ng-container *ngFor="let f of fields">\r\n                <td *ngIf="f.header != \'Part Number\'" style="width: 111px;">\r\n                    <div [ngClass]="f.field == \'adjustedHours\'?\'float-right\':\'\'">\r\n                        {{rowData[f.field]}}\r\n                    </div>\r\n                </td>\r\n            </ng-container>\r\n        </tr>\r\n    </ng-template>\r\n</p-treeTable>\r\n<div class="preloader" *ngIf="isSpinnerVisible">\r\n    <div class="loading">\r\n        <div class="lds-roller"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n    </div>\r\n</div>'},yd6t:function(e,r,t){"use strict";t.r(r),r.default='\r\n  \x3c!-- Edit  --\x3e\r\n  <div *ngIf="editWorkOrderGeneralInformation && workOrderStatusList && creditTerms && jobTitles && employeesOriginalData && salesAgentsOriginalList && salesPersonOriginalList && csrOriginalList && technicianOriginalList && workScopesList && workOrderStagesList && priorityList && currencyList && legalEntityList && conditionList && technicianByExpertiseTypeList &&techStationList && workOrderId">\r\n      <app-work-order-add [isSubWorkOrder]="isSubWorkOrder" [subWorkOrderDetails]="paramsData" [isEdit]="isEdit" [isView]="isEdit"\r\n      [workOrderTypes]="workOrderTypes" [workOrderStatusList]="workOrderStatusList" [creditTerms]="creditTerms"\r\n      [jobTitles]="jobTitles" [employeesOriginalData]="employeesOriginalData"\r\n      [salesPersonOriginalList]="salesPersonOriginalList" [salesAgentsOriginalList]="salesAgentsOriginalList"\r\n      [csrOriginalList]="csrOriginalList" [technicianOriginalList]="technicianOriginalList"\r\n      [workScopesList]="workScopesList" [workOrderStagesList]="workOrderStagesList" [priorityList]="priorityList"\r\n      [workorderSettings]="workorderSettings" [currencyList]="currencyList"\r\n      [partNumberOriginalData]="partNumberOriginalData" [legalEntityList]="legalEntityList"\r\n      [conditionList]="conditionList" [workOrderGeneralInformation]="editWorkOrderGeneralInformation" [technicianByExpertiseTypeList]="technicianByExpertiseTypeList"\r\n      [techStationList]="techStationList" [workOrderId]="workOrderId" isListView="true">\r\n    </app-work-order-add>\r\n  </div>'},z0RJ:function(e,r,t){"use strict";t.r(r),r.default='<div class="card" style="align-items: center;">\r\n    <div class="card-body">\r\n        <form #shippingForm="ngForm">\r\n            <div class="form-row">\r\n                <div class="col-md-4">\r\n                    <div class="card card-stock">\r\n                        <div class="card-body">\r\n                            <div class="form-group col-md-12">\r\n                                <div class="col-md-4">\r\n                                    <label class="workorder-label">Shipping Order Num</label>\r\n                                </div>\r\n                                <div class="col-md-8">\r\n                                    <input class="form-control" type="text" [(ngModel)]="shippingHeader.woShippingNum"\r\n                                           name="shippingOrderNum" disabled />\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-md-12">\r\n                                <div class="col-md-4">\r\n                                    <label>Status<span class="clr-red">*</span></label>\r\n                                </div>\r\n                                <div class="col-md-8">\r\n                                    <select [(ngModel)]="shippingHeader.woShippingStatusId" name="status" required [disabled]="isView">\r\n                                        <option value="">Select</option>\r\n                                        <option *ngFor="let status of [{\'label\':\'Open\', \'id\':1}, {\'label\':\'Shipped\', \'id\':2}, {\'label\':\'In Transit\', \'id\':3}, {\'label\':\'Received\', \'id\':4}]" [value]="status.id">{{status.label}}</option>\r\n                                    </select>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div class="form-group col-md-12">\r\n                                <div class="col-md-4">\r\n                                    <label>Open Date <span class="clr-red">*</span> </label>\r\n                                </div>\r\n                                <div class="col-md-8">\r\n                                    <p-calendar [showIcon]="true" (onSelect)="calculateExpiryDate()"\r\n                                    [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100" [(ngModel)]="shippingHeader.openDate" name="openDate" [disabled]="isView" required></p-calendar>\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-md-12">\r\n                                <div class="col-md-4">\r\n                                    <label>Customer</label>\r\n                                </div>\r\n                                <div class="col-md-8" *ngIf="workOrderGeneralInformation && workOrderGeneralInformation.customerDetails">\r\n                                    <input class="form-control" (change)="calculateExpiryDate()" type="text" [(ngModel)]="workOrderGeneralInformation.customerDetails.customerName" name="customer" disabled />\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-md-12" *ngIf="workOrderGeneralInformation && workOrderGeneralInformation.customerDetails">\r\n                                <div class="col-md-4">\r\n                                    <label>Cus Code</label>\r\n                                </div>\r\n                                <div class="col-md-8">\r\n                                    <input class="form-control" type="text" [(ngModel)]="workOrderGeneralInformation.customerDetails.customerCode" name="customerCode" disabled />\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-md-12">\r\n                                <div class="col-md-4">\r\n                                    <label>Cert Num</label>\r\n                                </div>\r\n                                <div class="col-md-8">\r\n                                    <input class="form-control" type="number" [(ngModel)]="validFor" name="certNum" disabled />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                \x3c!-- <div class="col-md-3">\r\n                    <div class="card card-stock">\r\n                        <div class="card-header">\r\n                            <h5>Manufacturer</h5>\r\n                        </div>\r\n                        <div class="card-body">\r\n                            <div class="form-group">\r\n                                <label>Manufacturer</label>\r\n                                <select [(ngModel)]="stockLineForm.manufacturerId" name="manufacturerId">\r\n                                    <option value="0">-- Select --</option>\r\n                                    <option *ngFor="let manufacturer of allManufacturerInfo" [ngValue]="manufacturer.value">{{manufacturer.label}}</option>\r\n                                </select>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Mfg. Lot Num</label>\r\n                                <input class="form-control" type="text" name="manufacturerLotNumber" [(ngModel)]="stockLineForm.manufacturerLotNumber">\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Mfg. Batch Num</label>\r\n                                <input class="form-control" type="text" name="manufacturingBatchNumber" [(ngModel)]="stockLineForm.manufacturingBatchNumber">\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Mfg. Date</label>\r\n                                <p-calendar class="workflow-clder" [showIcon]="true" [maxDate]="minDateValue" name="manufacturingDate" [(ngModel)]="stockLineForm.manufacturingDate"></p-calendar>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    </div> --\x3e\r\n\r\n\r\n                <div class="col-md-4">\r\n                    <div class="card card-stock">\r\n                        <div class="card-body">\r\n                            <div class="form-group col-md-12">\r\n                                <div class="col-md-4">\r\n                                    <label>Ship Via <span class="clr-red">*</span></label>\r\n                                </div>\r\n                                <div class="col-md-8">\r\n                                    <select [(ngModel)]="shippingHeader.shipviaId" [disabled]="isView" name="shipVia" required>\r\n                                        <option value="">Select</option>\r\n                                        <option *ngFor="let shipvia of shipViaList" [value]="shipvia.value">{{shipvia.label}}</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-md-12">\r\n                                <div class="col-md-4">\r\n                                    <label>Ship Date<span class="clr-red">*</span></label>\r\n                                </div>\r\n                                <div class="col-md-8">\r\n                                    <p-calendar [showIcon]="true" (onSelect)="calculateExpiryDate()" [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100" [(ngModel)]="shippingHeader.shipDate" name="shipDate" [disabled]="isView" required></p-calendar>\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-md-12">\r\n                                <div class="col-md-4">\r\n                                    <label>Airway Bill<span class="clr-red">*</span> </label>\r\n                                </div>\r\n                                <div class="col-md-8">\r\n                                    <input class="form-control" type="text" [(ngModel)]="shippingHeader.airwayBill" name="airwayBill" [disabled]="isView" required />\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-md-12">\r\n                                <div class="col-md-4">\r\n                                    <label class="workorder-label">House Airway Bill<span class="clr-red">*</span></label>\r\n                                </div>\r\n                                <div class="col-md-8">\r\n                                    <input class="form-control" type="text" [(ngModel)]="shippingHeader.houseAirwayBill" name="houseAirwayBill" [disabled]="isView" required />\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-md-12">\r\n                                <div class="col-md-4">\r\n                                    <label>Tracking #<span class="clr-red">*</span></label>\r\n                                </div>\r\n                                <div class="col-md-8">\r\n                                    <input class="form-control" type="text" [(ngModel)]="shippingHeader.trackingNum" name="trackingNum" [disabled]="isView" required />\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-md-12">\r\n                                <div class="col-md-4">\r\n                                    <label>Weight<span class="clr-red">*</span></label>\r\n                                </div>\r\n                                <div class="col-md-8">\r\n                                    <input class="form-control" type="number" [(ngModel)]="shippingHeader.weight" name="weight" [disabled]="isView" required />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="col-md-4">\r\n                    <div class="card card-stock">\r\n                        <div class="card-body">\r\n                            \x3c!-- <div class="form-group col-12">\r\n                                <div class="col-6">\r\n                                    <label>SO Num</label>\r\n                                </div>\r\n                                <div class="col-6" *ngIf="workOrderGeneralInformation && workOrderGeneralInformation.customerDetails">\r\n                                    <input class="form-control" type="text" [(ngModel)]="workOrderGeneralInformation.workOrderNum" name="soNum" disabled/>\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-12">\r\n                                <div class="col-6">\r\n                                    <label>RO Num</label>\r\n                                </div>\r\n                                <div class="col-6" *ngIf="workOrderGeneralInformation && workOrderGeneralInformation.customerDetails">\r\n                                    <input class="form-control" type="text" [(ngModel)]="workOrderGeneralInformation.workOrderNum" name="roNum" readonly/>\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-12">\r\n                                <div class="col-6">\r\n                                    <label>PO Num</label>\r\n                                </div>\r\n                                <div class="col-6" *ngIf="workOrderGeneralInformation && workOrderGeneralInformation.customerDetails">\r\n                                    <input class="form-control" type="text" [(ngModel)]="workOrderGeneralInformation.workOrderNum" name="poNum" readonly/>\r\n                                </div>\r\n                            </div> --\x3e\r\n                            <div class="form-group col-md-12">\r\n                                <div class="col-md-4">\r\n                                    <label>WO Num</label>\r\n                                </div>\r\n                                <div class="col-md-8" *ngIf="workOrderGeneralInformation && workOrderGeneralInformation.customerDetails">\r\n                                    <input class="form-control" type="text" [(ngModel)]="workOrderGeneralInformation.workOrderNum" name="woNum" disabled />\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-md-12">\r\n                                <div class="col-md-4">\r\n                                    <label>Shipment</label>\r\n                                </div>\r\n                                <div class="col-md-8">\r\n                                    <input class="form-control" type="number" [(ngModel)]="shippingHeader.shipment" name="shipment" [disabled]="isView" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <h4 class="heading">Address Details</h4>\r\n            <div class="form-row">\r\n                <div class="col-md-4">\r\n                    <div class="card card-stock">\r\n                        <div class="card-header">\r\n                            <h5 style="text-align: center;">Origin</h5>\r\n                        </div>\r\n                        <div class="card-body">\r\n                            <div class="form-group col-md-12">\r\n                                <div class="col-md-4">\r\n                                    <label>Name <span class="clr-red">*</span></label>\r\n                                </div>\r\n                                <div class="col-md-8">\r\n                                    \x3c!-- <input class="form-control" type="text" [(ngModel)]="shippingHeader.originName"\r\n                                           name="originName" [disabled]="isView" required /> --\x3e\r\n                                           \x3c!-- <p-dropdown placeholder="Select" name="originName" #originName="ngModel"\r\n                                           [options]="orignSiteNames" class="p-dropdown-custom-md p-dropdown-mh120 shipping_v"\r\n                                           [(ngModel)]="shippingHeader.originSiteId"\r\n                                           (onChange)="orignSiteNameEvent($event.value)" required>\r\n                               </p-dropdown> --\x3e \r\n                               <select [(ngModel)]="shippingHeader.originSiteId" name="originSiteId"  (change)="setOriginToAddress(shippingHeader.originSiteId)" required >\r\n                                \x3c!-- <option value=""></option> --\x3e\r\n                                <option *ngFor="let site of orignSiteNames" [ngValue]="site.originSiteId">{{site.originName}}</option>\r\n                            </select>\r\n\x3c!-- \r\n                                <select [(ngModel)]="receivingForm.siteId" name="siteId"\r\n                                        (change)="siteValueChange(receivingForm.siteId)" required>\r\n                                    <option value="0">-- Select --</option>\r\n                                    <option *ngFor="let site of allSites" [ngValue]="site.siteId">{{site.name}}</option>\r\n                                </select> --\x3e\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-md-12">\r\n                                <div class="col-md-4">\r\n                                    <label class="workorder-label">Address Line 1<span class="clr-red">*</span></label>\r\n                                </div>\r\n                                <div class="col-md-8">\r\n                                    <input class="form-control" type="text" [(ngModel)]="shippingHeader.originAddress1" name="originAddress1" disabled required />\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-md-12">\r\n                                <div class="col-md-4">\r\n                                    <label class="workorder-label">Address Line 2</label>\r\n                                </div>\r\n                                <div class="col-md-8">\r\n                                    <input class="form-control" type="text" [(ngModel)]="shippingHeader.originAddress2" name="originAddress2" disabled />\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-md-12">\r\n                                <div class="col-md-4">\r\n                                    <label>City<span class="clr-red">*</span></label>\r\n                                </div>\r\n                                <div class="col-md-8">\r\n                                    <input class="form-control" type="text" [(ngModel)]="shippingHeader.originCity" name="originCity" disabled required />\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-md-12">\r\n                                <div class="col-md-4">\r\n                                    <label>State<span class="clr-red">*</span></label>\r\n                                </div>\r\n                                <div class="col-md-8">\r\n                                    <input class="form-control" type="text" [(ngModel)]="shippingHeader.originState" name="originState" disabled required />\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-md-12">\r\n                                <div class="col-md-4">\r\n                                    <label>Zip<span class="clr-red">*</span></label>\r\n                                </div>\r\n                                <div class="col-md-8">\r\n                                    <input class="form-control" type="text" [(ngModel)]="shippingHeader.originZip" name="originZip"  required  disabled/>\r\n                                </div>\r\n                            </div>\r\n                            \x3c!-- <div class="form-group col-md-12">\r\n                                <div class="col-md-4">\r\n                                    <label>Country<span class="clr-red">*</span></label>\r\n                                </div>\r\n                                <div class="col-md-8">\r\n                                    <select [(ngModel)]="shippingHeader.originCountryId" name="originCountry" required [disabled]="isView">\r\n                                        <option value=""></option>\r\n                                        <option *ngFor="let country of countryList" [value]="country.value">{{country.label}}</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div> --\x3e\r\n                            <div class="form-group col-md-12">\r\n                                <div class="col-md-4">\r\n                                    <label>Country<span class="clr-red">*</span></label>\r\n                                </div>\r\n                                \x3c!--<div class="col-md-8">\r\n                                    <select [(ngModel)]="shippingHeader.soldToCountryId" name="soldToCountryId" required [disabled]="isView" disabled>\r\n                                        <option value=""></option>\r\n                                        <option *ngFor="let country of countryList" [value]="country.value">{{country.label}}</option>\r\n                                    </select>\r\n                                </div>--\x3e\r\n                                <div class="col-md-8">\r\n                                    <input class="form-control" type="text" [(ngModel)]="shippingHeader.originCountryName" name="soldToCountryName2"  required disabled />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="col-md-4">\r\n                    <div class="card card-stock">\r\n                        <div class="card-header">\r\n                            <h5 style="text-align: center;">Bill To</h5>\r\n                        </div>\r\n                        <div class="card-body">\r\n                            <div class="form-group col-md-12">\r\n                                <div class="col-md-4">\r\n                                    <label>Name <span class="clr-red">*</span></label>\r\n                                </div>\r\n                                <div class="col-md-8">\r\n                                    <input class="form-control" type="text" [(ngModel)]="shippingHeader.soldToName" name="soldName" [disabled]="isView" required disabled />\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-md-12">\r\n                                <div class="col-md-4">\r\n                                    <label>Site <span class="clr-red">*</span></label>\r\n                                </div>\r\n                                <div class="col-md-8">\r\n                                    <select [(ngModel)]="shippingHeader.soldToSiteId" (change)="setSoldToAddress()"\r\n                                            [disabled]="isView" name="soldToSite" required>\r\n                                        <option value="">Select</option>\r\n                                        <option *ngFor="let site of siteList" [value]="site.customerShippingAddressId">\r\n                                            {{site.siteName}}\r\n                                        </option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-md-12">\r\n                                <div class="col-md-4">\r\n                                    <label class="workorder-label">Address Line 1<span class="clr-red">*</span></label>\r\n                                </div>\r\n                                <div class="col-md-8">\r\n                                    <input class="form-control" type="text" [(ngModel)]="shippingHeader.soldToAddress1"\r\n                                           name="soldToAddress1" required [disabled]="isView" disabled />\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-md-12">\r\n                                <div class="col-md-4">\r\n                                    <label class="workorder-label">Address Line 2</label>\r\n                                </div>\r\n                                <div class="col-md-8">\r\n                                    <input class="form-control" type="text" [(ngModel)]="shippingHeader.soldToAddress2"\r\n                                           name="soldToAddress2" [disabled]="isView" disabled />\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-md-12">\r\n                                <div class="col-md-4">\r\n                                    <label>City<span class="clr-red">*</span></label>\r\n                                </div>\r\n                                <div class="col-md-8">\r\n                                    <input class="form-control" type="text" [(ngModel)]="shippingHeader.soldToCity" name="soldToCity" [disabled]="isView" required disabled />\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-md-12">\r\n                                <div class="col-md-4">\r\n                                    <label>State<span class="clr-red">*</span></label>\r\n                                </div>\r\n                                <div class="col-md-8">\r\n                                    <input class="form-control" type="text" [(ngModel)]="shippingHeader.soldToState" name="soldToState" [disabled]="isView" required disabled />\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-md-12">\r\n                                <div class="col-md-4">\r\n                                    <label>Zip<span class="clr-red">*</span></label>\r\n                                </div>\r\n                                <div class="col-md-8">\r\n                                    <input class="form-control" type="text" [(ngModel)]="shippingHeader.soldToZip" name="soldToZip" [disabled]="isView" required disabled />\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-md-12">\r\n                                <div class="col-md-4">\r\n                                    <label>Country<span class="clr-red">*</span></label>\r\n                                </div>\r\n                                \x3c!--<div class="col-md-8">\r\n                                    <select [(ngModel)]="shippingHeader.soldToCountryId" name="soldToCountryId" required [disabled]="isView" disabled>\r\n                                        <option value=""></option>\r\n                                        <option *ngFor="let country of countryList" [value]="country.value">{{country.label}}</option>\r\n                                    </select>\r\n                                </div>--\x3e\r\n                                <div class="col-md-8">\r\n                                    <input class="form-control" type="text" [(ngModel)]="shippingHeader.soldToCountryName" name="soldToCountryName" [disabled]="isView" required disabled />\r\n                                </div>\r\n                            </div>\r\n                            <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                <label style="width: auto !important;margin-top: 3px;">\r\n                                  \x3c!--  --\x3e\r\n                                  <input type="checkbox" [(ngModel)]="shippingHeader.isSameForShipTo" name="cparent" id="cparent"  (click)="assignDetails($event.target.checked)"\r\n                                    />\r\n                                  <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                Is same for Ship To\r\n                                </label>\r\n                              </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="col-md-4">\r\n                    <div class="card card-stock">\r\n                        <div class="card-header">\r\n                            <h5 style="text-align: center;">Ship To</h5>\r\n                        </div>\r\n                        <div class="card-body">\r\n                            <div class="form-group col-md-12">\r\n                                <div class="col-md-4">\r\n                                    <label>Name <span class="clr-red">*</span></label>\r\n                                </div>\r\n                                <div class="col-md-8">\r\n                                    \x3c!-- <input class="form-control" type="text"\r\n                                         [(ngModel)]="shippingHeader.shipToName" name="shipToName"\r\n                                          [disabled]="isView" required/> --\x3e\r\n\r\n                                    <p-autoComplete field="customerName"\r\n                                                    [(ngModel)]="shippingHeader.shipToCustomerId"\r\n                                                    name="shipToName"\r\n                                                    errorMessage="Records not found"\r\n                                                    [forceSelection]="true"\r\n                                                    (onSelect)="getSiteNamesByShipCustomerId($event)"\r\n                                                    [suggestions]="customerNamesList"\r\n                                                    (completeMethod)="filterCustomerName($event)"\r\n                                                    (onKeyUp)="clearAddress(\'ShipTo\', $event.target.value)"\r\n                                                    [size]="30"\r\n                                                    [minLength]="1"\r\n                                                    #customerName="ngModel"\r\n                                                    required\r\n                                                    [dropdown]="true"\r\n                                                    class="p-autoComplete-ctsm"\r\n                                                    [disabled]="isView">\r\n                                    </p-autoComplete>\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-md-12">\r\n                                <div class="col-md-4">\r\n                                    <label>Site <span class="clr-red">*</span></label>\r\n                                </div>\r\n                                <div class="col-md-8">\r\n                                    <select [(ngModel)]="shippingHeader.shipToSiteId" (change)="setShipToAddress()"\r\n                                            [disabled]="isView" name="shipToSite" required>\r\n                                        <option value="">Select</option>\r\n                                        <option *ngFor="let site of shipCustomerSiteList" [value]="site.customerShippingAddressId">{{site.siteName}}</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-md-12">\r\n                                <div class="col-md-4">\r\n                                    <label class="workorder-label">Address Line 1<span class="clr-red">*</span></label>\r\n                                </div>\r\n                                <div class="col-md-8">\r\n                                    <input class="form-control" type="text" [(ngModel)]="shippingHeader.shipToAddress1"\r\n                                           name="shipToAddress1" disabled />\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-md-12">\r\n                                <div class="col-md-4">\r\n                                    <label class="workorder-label">Address Line 2</label>\r\n                                </div>\r\n                                <div class="col-md-8">\r\n                                    <input class="form-control" type="text" [(ngModel)]="shippingHeader.shipToAddress2" name="shipToAddress2" disabled />\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-md-12">\r\n                                <div class="col-md-4">\r\n                                    <label>City<span class="clr-red">*</span></label>\r\n                                </div>\r\n                                <div class="col-md-8">\r\n                                    <input class="form-control" type="text" [(ngModel)]="shippingHeader.shipToCity" name="shipToCity" disabled required />\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-md-12">\r\n                                <div class="col-md-4">\r\n                                    <label>State<span class="clr-red">*</span></label>\r\n                                </div>\r\n                                <div class="col-md-8">\r\n                                    <input class="form-control" type="text" [(ngModel)]="shippingHeader.shipToState" name="shipToState" disabled required />\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-md-12">\r\n                                <div class="col-md-4">\r\n                                    <label>Zip<span class="clr-red">*</span></label>\r\n                                </div>\r\n                                <div class="col-md-8">\r\n                                    <input class="form-control" type="text" [(ngModel)]="shippingHeader.shipToZip" name="shipToZip" disabled required />\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-md-12">\r\n                                <div class="col-md-4">\r\n                                    <label>Country<span class="clr-red">*</span></label>\r\n                                </div>\r\n                                \x3c!--<div class="col-md-8">\r\n                                    <select [(ngModel)]="shippingHeader.shipToCountryId" disabled name="shipToCountry" required>\r\n                                        <option value=""></option>\r\n                                        <option *ngFor="let country of countryList" [value]="country.value">{{country.label}}</option>\r\n                                    </select>\r\n                                </div>--\x3e\r\n                                <div class="col-md-8">\r\n                                    <input class="form-control" type="text" [(ngModel)]="shippingHeader.shipToCountryName" name="shipToCountryName" disabled required />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n               \r\n\r\n                \r\n                </div>\r\n            </div>\r\n            \x3c!--  --\x3e\r\n            \x3c!-- {{shippingHeader.originCountryId}}- {{shippingHeader.shipToCountryId}} --\x3e\r\n            \x3c!-- *ngIf="(shippingHeader.soldToCountryId && shippingHeader.shipToCountryId) && shippingHeader.soldToCountryId !=shippingHeader.shipToCountryId" --\x3e\r\n         <div *ngIf="(shippingHeader.originCountryId && shippingHeader.shipToCountryId) && shippingHeader.originCountryId !=shippingHeader.shipToCountryId"> \r\n            <h4 class="heading">Custom Info </h4>\r\n            <div class="form-row">\r\n                <div class="col-md-4">\r\n                    <div class="card card-stock">\r\n                        <div class="card-body">\r\n                            <div class="form-group col-md-12">\r\n                                <div class="col-md-4">\r\n                                    <label>Entry Type </label>\r\n                                </div>\r\n                                <div class="col-md-8">\r\n                                    <input class="form-control" type="text" [(ngModel)]="shippingHeader[\'workOrderCustomsInfo\'][\'entryType\']" name="entryType" [disabled]="isView" required />\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-md-12">\r\n                                <div class="col-md-4">\r\n                                    <label>Entry Num</label>\r\n                                </div>\r\n                                <div class="col-md-8">\r\n                                    <input class="form-control" type="text" [(ngModel)]="shippingHeader[\'workOrderCustomsInfo\'][\'entryNumber\']" name="entryNumber" [disabled]="isView" required />\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-md-12">\r\n                                <div class="col-md-4">\r\n                                    <label class="workorder-label">Entry Commodity Code</label>\r\n                                </div>\r\n                                <div class="col-md-8">\r\n                                    <input class="form-control" type="text" [(ngModel)]="shippingHeader[\'workOrderCustomsInfo\'][\'commodityCode\']" name="entryCommodityCode" [disabled]="isView" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="col-md-4">\r\n                    <div class="card card-stock">\r\n                        <div class="card-body">\r\n                            <div class="form-group col-md-12">\r\n                                <div class="col-md-4">\r\n                                    <label>EPU </label>\r\n                                </div>\r\n                                <div class="col-md-8">\r\n                                    <input class="form-control" type="text" [(ngModel)]="shippingHeader[\'workOrderCustomsInfo\'][\'epu\']" name="epu" [disabled]="isView" required />\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-md-12">\r\n                                <div class="col-md-4">\r\n                                    <label>UCR</label>\r\n                                </div>\r\n                                <div class="col-md-8">\r\n                                    <input class="form-control" type="text" [(ngModel)]="shippingHeader[\'workOrderCustomsInfo\'][\'ucr\']" name="ucr" [disabled]="isView" required />\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-md-12">\r\n                                <div class="col-md-4">\r\n                                    <label>Master UCR</label>\r\n                                </div>\r\n                                <div class="col-md-8">\r\n                                    <input class="form-control" type="text" [(ngModel)]="shippingHeader[\'workOrderCustomsInfo\'][\'masterUCR\']" name="masterUCR" [disabled]="isView" />\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-md-12">\r\n                                <div class="col-md-4">\r\n                                    <label class="workorder-label">Movement Ref No</label>\r\n                                </div>\r\n                                <div class="col-md-8">\r\n                                    <input class="form-control" type="text" [(ngModel)]="shippingHeader[\'workOrderCustomsInfo\'][\'movementRefNo\']" name="MovementRefNo" [disabled]="isView" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="col-md-4">\r\n                    <div class="card card-stock">\r\n                        <div class="card-body">\r\n                            <div class="form-group col-md-12">\r\n                                <div class="col-md-4">\r\n                                    <label class="workorder-label">Customs Value </label>\r\n                                </div>\r\n                                <div class="col-md-8">\r\n                                    <input class="form-control" type="number" [(ngModel)]="shippingHeader[\'workOrderCustomsInfo\'][\'customsValue\']" name="customsValue" [disabled]="isView" required />\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-md-12">\r\n                                <div class="col-md-4">\r\n                                    <label>Net Mass</label>\r\n                                </div>\r\n                                <div class="col-md-8">\r\n                                    <input class="form-control" type="number" [(ngModel)]="shippingHeader[\'workOrderCustomsInfo\'][\'netMass\']" name="netMass" [disabled]="isView" required />\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-md-12">\r\n                                <div class="col-md-4">\r\n                                    <label>VAT Value</label>\r\n                                </div>\r\n                                <div class="col-md-8">\r\n                                    <input class="form-control" type="number" [(ngModel)]="shippingHeader[\'workOrderCustomsInfo\'][\'vatValue\']" name="VATValue" [disabled]="isView" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n         </div>\r\n        </form>\r\n    </div>\r\n    <div class="row">\r\n        <button *ngIf="!isView" class="btn btn-primary pull-right" style="width: 100px;" (click)="save()" [disabled]="!shippingForm.valid">Save</button>\r\n    </div>\r\n</div>\r\n<div class="preloader" *ngIf="isSpinnerVisible">\r\n    <div class="loading">\r\n        <div class="lds-roller"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n    </div>\r\n</div>\r\n'},zc4k:function(e,r,t){"use strict";t.r(r),r.default='label {\n  text-align: left;\n  width: 140px;\n  margin-right: 0;\n  font-weight: normal;\n}\n\ninput[type=text],\ninput[type=number],\nselect,\ntextarea {\n  height: 100px;\n  border-radius: 5px !important;\n}\n\n.form-control[readonly] {\n  background-color: #e9ecef !important;\n}\n\n@media (min-width: 768px) {\n  .col-md-6 .col-md-6 {\n    max-width: 44%;\n    margin-right: 15px;\n  }\n\n  .col-md-3 {\n    max-width: 22%;\n    margin-right: 15px;\n  }\n}\n\n.p-radiobutton-label-horizontal .ui-radiobutton-label {\n  color: white;\n}\n\nselect:disabled {\n  background-color: #e9ecef !important;\n}\n\n.select-read-only {\n  border: none;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  text-indent: 1px;\n  text-overflow: "";\n  box-shadow: none !important;\n}\n\nbody .ui-radiobutton .ui-radiobutton-box {\n  border: 3px solid #ffffff;\n}\n\n.ui-radiobutton .ui-radiobutton-box.ui-state-active .ui-radiobutton-icon {\n  background-color: #212121 !important;\n}'}}]);