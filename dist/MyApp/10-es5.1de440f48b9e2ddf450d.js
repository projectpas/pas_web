function _toConsumableArray(e){return _arrayWithoutHoles(e)||_iterableToArray(e)||_unsupportedIterableToArray(e)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _iterableToArray(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}function _arrayWithoutHoles(e){if(Array.isArray(e))return _arrayLikeToArray(e)}function _createForOfIteratorHelper(e,t){var a;if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(a=_unsupportedIterableToArray(e))||t&&e&&"number"==typeof e.length){a&&(e=a);var n=0,r=function(){};return{s:r,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:r}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,o=!0,s=!1;return{s:function(){a=e[Symbol.iterator]()},n:function(){var e=a.next();return o=e.done,e},e:function(e){s=!0,i=e},f:function(){try{o||null==a.return||a.return()}finally{if(s)throw i}}}}function _unsupportedIterableToArray(e,t){if(e){if("string"==typeof e)return _arrayLikeToArray(e,t);var a=Object.prototype.toString.call(e).slice(8,-1);return"Object"===a&&e.constructor&&(a=e.constructor.name),"Map"===a||"Set"===a?Array.from(e):"Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a)?_arrayLikeToArray(e,t):void 0}}function _arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var a=0,n=new Array(t);a<t;a++)n[a]=e[a];return n}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var a=0;a<t.length;a++){var n=t[a];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function _createClass(e,t,a){return t&&_defineProperties(e.prototype,t),a&&_defineProperties(e,a),e}(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{"0l2l":function(e,t,a){"use strict";a.r(t),t.default='<div class="card new-card">\r\n    \x3c!-- <div class="col-md-12">\r\n       <h4 class="po-head-sm">\r\n             Communication - Text  \r\n             <a href="#" data-toggle="modal" data-target="#addNewText"\r\n             (click)="addText()" *ngIf="!isView">\r\n             <i class="fa fa-plus-circle fa-lg"></i> </a>\r\n        </h4>\r\n    </div> --\x3e\r\n    <div class="card-header header">\r\n        <div class="row">\r\n            <div class="col">\r\n                <h4 class="header-name"> Communication - Text </h4>\r\n            </div>\r\n            <div>\r\n                <button *ngIf="!isView" type="button"\r\n                    class="btn-sm header-button" \r\n                    data-toggle="modal" data-target="#addNewText" (click)="addText()">\r\n                    Create Text\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="card-body header-body">\r\n        <p-table #dt class="rpo-table-cstm rro-table-cstm ptable-f10" [value]="data" [metaKeySelection]="true"\r\n            [first]="0" (onPage)="pageIndexChange($event)" [rows]="pageSize" [paginator]="true" [pageLinks]="3"\r\n            [rowsPerPageOptions]="[10, 20, 50, 100]" [columns]="selectedColumns" selectionMode="multiple"\r\n            [resizableColumns]="true" [reorderableColumns]="true" [totalRecords]="totalRecords" [scrollable]="true"\r\n            scrollHeight="450px">\r\n\r\n            <ng-template pTemplate="caption">\r\n\r\n                <div class="row">\r\n                    <div class="col">\r\n                        <p-multiSelect [options]="headers" [(ngModel)]="selectedColumns"\r\n                            [ngModelOptions]="{ standalone: true }" optionLabel="header"\r\n                            selectedItemsLabel="{0} columns selected" [style]="{ minWidth: \'200px\' }"\r\n                            defaultLabel="Choose Columns" style="float:left"></p-multiSelect>\r\n\r\n\r\n\r\n                    </div>\r\n                    <div class="col" style="text-align: end;">\r\n                        <div class="inner-addon right-addon w200 inline-block g-filter-search-cstm"\r\n                            style="float: right;">\r\n                            <i class="fa fa-search"></i>\r\n                            <input type="text" pInputText size="50" class="form-control"\r\n                                (input)="dt.filterGlobal($event.target.value, \'contains\')" placeholder=" Filter"\r\n                                style="height: 28px !important;" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="row">\r\n                    <div class="col">\r\n                        <button type="button" class="btn btn-primary new-table-button" matTooltip="Download Data"\r\n                            matTooltipPosition="above" pButton icon="fa-download" iconPos="left" label="Export Data"\r\n                            data-toggle="modal" (click)="selectedOnly = false; targetData = dt;"\r\n                            data-target="#textdownloadConfirmation" style="padding:5px 10px !important;"></button>\r\n                        <button type="button" class="btn btn-primary new-table-button"\r\n                            matTooltip="Download Selected Data" matTooltipPosition="above" pButton icon="fa-download"\r\n                            iconPos="left" label="Export Selected Data" (click)="dt.exportCSV({ selectionOnly: true })"\r\n                            style="padding:5px 10px !important;"></button>\r\n                    </div>\r\n                    <div class="col">\r\n                        <div class="">\r\n                            <div class="col" style="width: 395px; float: right; padding-top: 3px;">\r\n                                <div class="form-group" style="float: right;">\r\n                                    <div class="checkbox-cstm pull-left" style="margin-left: 0;">\r\n                                        <label style="width: auto !important;margin-top: 3px;">\r\n                                            <input type="checkbox" [(ngModel)]="deletedStatusInfo" name="cparent55"\r\n                                                id="cparent55" (click)="getDeleteListByStatus($event.target.checked)" />\r\n                                            <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                            Show Deleted List\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </ng-template>\r\n            <ng-template pTemplate="colgroup" let-columns>\r\n                <colgroup>\r\n                    <ng-container *ngFor="let col of headers">\r\n                        <col *ngIf="col.field == \'mobile\' || col.field == \'contactBy\'" class="table-column-width">\r\n                        <col *ngIf="col.field != \'mobile\' && col.field != \'contactBy\'" class="table-column-width">\r\n                    </ng-container>\r\n                </colgroup>\r\n            </ng-template>\r\n            <ng-template pTemplate="header" let-columns>\r\n                <tr>\r\n\r\n                    <th class="table-column-width" *ngFor="let col of headers" pResizableColumn pReorderableColumn\r\n                        [pSortableColumn]="col.field">\r\n                        {{ col.header }}\r\n                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                    </th>\r\n                    <th class="table-actions-column">\r\n                        Actions\r\n                    </th>\r\n                </tr>\r\n                <tr>\r\n                    <th class="table-column-width" *ngFor="let col of headers" [ngSwitch]="col.field">\r\n                        <input pInputText type="text" class="incorn_border table-header-input-width" (input)="\r\n                            dt.filter($event.target.value, col.field, \'contains\')\r\n                        " />\r\n                    </th>\r\n                    <th class="table-actions-column"></th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                <tr [pSelectableRowDblClick]="rowData" [pSelectableRow]="rowData">\r\n                    \x3c!-- <ng-container *ngFor="let col of headers">\r\n                            <td style="width:50px"\r\n                            *ngIf="col.field == \'contactBy\'"\r\n                            class="ui-resizable-column"\r\n                            pReorderableRowHandle>\r\n                            {{rowData[col.field]}}\r\n                            </td>\r\n                            <td style="width:50px"\r\n                            *ngIf="col.field == \'mobile\'"\r\n                            class="ui-resizable-column"\r\n                            pReorderableRowHandle>\r\n                            <p class="m-0 p-0 text-right">{{rowData[col.field]}}</p>\r\n                            </td>\r\n                            <td style="width:50px"\r\n                                *ngIf="col.field == \'notes\'"\r\n                                class="ui-resizable-column"\r\n                                pReorderableRowHandle>\r\n                                <p class="m-0 p-0 p_textEditor" [innerHTML]=rowData[col.field]></p>\r\n                            </td>\r\n                        </ng-container> --\x3e\r\n                    <ng-container *ngFor="let col of columns">\r\n                        <td class="table-column-width" *ngIf="col.field == \'notes\'" class="ui-resizable-column"\r\n                            pReorderableRowHandle>\r\n                            <p class="p_textEditor" [innerHTML]=rowData[col.field]></p>\r\n                        </td>\r\n                        <td class="table-column-width" *ngIf=" col.field!=\'notes\'">\r\n                            {{\r\n                                    col.field == \'createdDate\'\r\n                                      ? (rowData[col.field] | date: \'MM/dd/yyyy h:mm a\')\r\n                                      : rowData[col.field] && col.field == \'updatedDate\'\r\n                                      ? (rowData[col.field] | date: \'MM/dd/yyyy h:mm a\')\r\n                                      : rowData[col.field] \r\n                                  }}\r\n                        </td>\r\n                    </ng-container>\r\n                    <td class="action-icons-cstm table-column-width">\r\n                        <span data-toggle="modal" data-target="#viewText"><a class="btn nobg btn-view-cstm"\r\n                                (click)="getViewData(rowData)" matTooltip="View" matTooltipPosition="above"><i\r\n                                    class="fa fa-eye"></i></a> </span>\r\n                        <span *ngIf="deletedStatusInfo==false  && !isView" data-target="#addNewText"\r\n                            data-toggle="modal"><a class="btn nobg btn-edit-cstm" (click)="edit(rowData, rowIndex)"\r\n                                matTooltip="Edit" matTooltipPosition="above"><i class="fa fa-pencil"></i></a> </span>\r\n                        <span *ngIf="deletedStatusInfo==false  && !isView" data-toggle="modal"\r\n                            data-target="#deleteRowConfirmation"><a class="btn nobg btn-delete-cstm"\r\n                                (click)="deletingRecord = rowData;" matTooltip="Delete" matTooltipPosition="above"><i\r\n                                    class="fa fa-trash"></i></a> </span>\r\n                        <span *ngIf="deletedStatusInfo==true && !isView"><a class="btn nobg"\r\n                                (click)="restore(restoreId,rowData);" matTooltip="Restore Record"\r\n                                matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                        <span data-target="#contentHistDocs" data-toggle="modal"><a class="btn nobg"\r\n                                (click)="openHistory(rowData)" matTooltip="History" matTooltipPosition="above">\r\n                                <i class="fa fa-history"></i></a></span>\r\n                        \x3c!-- <button class="btn-edit ptable-wo-btns" mat-icon-button data-target="#addNewText" data-toggle="modal"\r\n                            (click)="edit(rowData, i)" matTooltip="Edit">\r\n                                <mat-icon>edit</mat-icon>\r\n                            </button>\r\n                            <button class="btn btn-danger nobg" (click)="deleteText(rowData);">\r\n                                <i class="fa fa-trash"></i>\r\n                            </button> --\x3e\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate="emptymessage" let-columns *ngIf="data.length == 0">\r\n                <tr>\r\n                    <td colspan="8" class="no-records-cstm no-records-msg">\r\n                        No records found\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate="summary" id="footer">\r\n                <label id="footer">Total:</label>\r\n                <input class="footer-input-width" [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText type="text" />\r\n                &nbsp;&nbsp;\r\n                <label id="footer">Pages Count:</label>\r\n                <input class="footer-input-width" [ngModel]="getPageCount(dt._totalRecords, pageSize)" [disabled]="true"\r\n                    pInputText type="text" />\r\n            </ng-template>\r\n        </p-table>\r\n        <ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n\r\n            <div class="modal-header">\r\n                <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n\r\n                <button type="button" class="close" data-dismiss="modal" aria-label="Close" (click)="dismissModel()">\r\n                    <span aria-hidden="true">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class="modal-body">\r\n                <strong>\r\n                    Mobile:\r\n                    <span class="new-label">{{restorerecord.mobile}}</span>\r\n                </strong>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-primary" (click)="restoreRecord()">Yes</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="dismissModel()">No</button>\r\n            </div>\r\n        </ng-template>\r\n    </div>\r\n</div>\r\n\r\n<div class="modal fade" id="textdownloadConfirmation" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-sm">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" (click)="closeDeleteModal()">&times;</button>\r\n                <h4 class="modal-title">Are You Sure Want to Download?</h4>\r\n            </div>\r\n            <div class="modal-body" *ngIf="targetData">\r\n                <strong>\r\n                    <span>\r\n                        You are attempting to export {{targetData.totalRecords}} of records.\r\n                    </span>\r\n                </strong>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-primary"\r\n                    (click)="(selectedOnly)?targetData.exportCSV({ selectionOnly: true }):exportCSV(targetData); closeDeleteModal();">Confirm</button>\r\n                <button type="button" class="btn btn-danger" (click)="closeDeleteModal()">Cancel</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div id="addNewText" class="modal fade" role="dialog" data-backdrop="static">\r\n    <div class="modal-dialog modal-sm" style="top: 0;">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">{{ isEdit ? \'Edit\' : \'Add\'  }} Text </h4>\r\n                \x3c!-- <div class="col-md-12 shadow-box-cstm">\r\n                    <div class="col-md-6">\r\n                      <p class="fs12">\r\n                        <label class="control-label labels-font-header" style="width: auto;">Customer Name:\r\n                        </label>\r\n                        <span class="span-header-red" style="text-transform: capitalize" *ngIf="isSubWorkOrder">\r\n                            {{subWorkOrderDetails.customerName}}\r\n                        </span>\r\n                        <span class="span-header-red" style="text-transform: capitalize" *ngIf="!isSubWorkOrder">\r\n                            {{savedWorkOrderData.customerId.customerName}}\r\n                        </span>\r\n                      </p>\r\n                    </div>\r\n                    <div class="col-md-6">\r\n                      <p class="fs12">\r\n                        <label class="control-label labels-font-header" style="width: auto;">Customer Code:\r\n                        </label>\r\n                        <span class="span-header-red" style="text-transform: capitalize" *ngIf="isSubWorkOrder">\r\n                            {{subWorkOrderDetails.customerCode}}\r\n                        </span>\r\n                        <span class="span-header-red" style="text-transform: capitalize" *ngIf="!isSubWorkOrder">\r\n                            {{savedWorkOrderData.customerId.customerCode}}\r\n                        </span>\r\n                      </p>\r\n                    </div>\r\n                  </div> --\x3e\r\n\r\n\r\n\r\n            </div>\r\n            <form #textForm="ngForm" class="form-horizontal" ngNativeValidate>\r\n                <div class="modal-body" *ngIf="addList.length > 0">\r\n                    <div class="form-row">\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Phone <span class="clr-red">*</span></label>\r\n                                \x3c!-- <input class="form-control" type="number" [(ngModel)] = "addList[0].mobile" maxlength="20" name="phoneNo" required/> --\x3e\r\n\r\n                                <input type="text" id="phone" name="phoneNo" [pattern]="phonePattern"\r\n                                    (ngModelChange)="setvaliDate()" #phoneNumberNg="ngModel" class="form-control"\r\n                                    minlength="6" style="text-align: end;" maxlength="10"\r\n                                    (keypress)="patternMobilevalidationWithSpl($event)" [(ngModel)]="addList[0].mobile"\r\n                                    required />\r\n\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label class="col-md-12">Contacted By <span class="clr-red">*</span></label>\r\n                                \x3c!-- <select [(ngModel)]="addList[0].contactId" class="form-control" name="contactedBy" required>\r\n                                <option value="">Select</option>\r\n                                <option *ngFor="let employee of employees" [value]="employee.value">{{employee.label}}</option>\r\n                            </select> --\x3e\r\n                                <p-autoComplete field="name" [(ngModel)]="addList[0].contactId" name="employees"\r\n                                    errorMessage="Records not found" [forceSelection]="true" [dropdown]="true"\r\n                                    [suggestions]="employees" (ngModelChange)="setvaliDate()"\r\n                                    (completeMethod)="filterEmployee($event)" [size]="30" [minLength]="1"\r\n                                    [dropdown]="true" class="p-autoComplete-ctsm" required>\r\n                                </p-autoComplete>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-sm-12">\r\n                            <div class="form-group">\r\n\r\n                                <label class="col-sm-12">Notes </label>\r\n                                \x3c!-- <p-editor [(ngModel)]="addList[0].notes" \r\n                            (ngModelChange)="setvaliDate()"\r\n                             [style]="{\'height\':\'320px\'}" name="notes" \r\n                             required></p-editor> --\x3e\r\n\r\n                                <div class="col-sm-6">\r\n                                    <span>\r\n                                        <div class="form-group memo-popup-cstm mat_emo">\r\n                                            <div (ngModelChange)="enableSave()" [innerHTML]=" addList[0].notes"\r\n                                                [matTooltip]="parsedText(addList[0].notes)" matTooltipPosition="above"\r\n                                                class="form-control" style="width: 99%;" class="text_editor_box"></div>\r\n                                        </div>\r\n                                    </span>\r\n                                </div>\r\n                                <div class="col-sm-1">\r\n                                    <span>\r\n                                        <a class="btn nobg" data-toggle="modal" (ngModelChange)="enableSave()"\r\n                                            data-target="#text-memo-popup" (click)="onClickMemo()"\r\n                                            matTooltip="Add Notes" matTooltipPosition="above">\r\n                                            <i style="color: #337ab7" class="fa fa-pencil"></i>\r\n                                        </a>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button class="btn btn-primary btn-primary" data-dismiss="modal" (click)="savePhone()"\r\n                        style="padding: 6px 12px !important;margin-top: 10px;"\r\n                        [disabled]="!textForm.valid || updateDisabledText">\r\n                        {{(isEdit)?\'Update\':\'Save\'}}\r\n                    </button>\r\n                    <button type="button" class="btn btn-danger" data-dismiss="modal"\r\n                        style="padding: 6px 12px !important;margin-top: 10px;">Close</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div class="modal fade" id="text-memo-popup" style="z-index: 1052 !important;" role="dialog" data-backdrop="static"\r\n    data-keyboard="false">\r\n    <div class="modal-dialog modal-sm">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" (click)="onClickPopupSave()">\r\n                    &times;\r\n                </button>\r\n                <h4 class="modal-title">Edit Notes</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                \x3c!-- <table class="table table-bordered table-fixed workflow-table-material">\r\n                    <thead>\r\n                        <th style="color: #fff;">Notes</th>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td style="white-space: inherit">\r\n                                <p-editor spellcheck="true" (ngModelChange)="enableSaveMemo()"\r\n                                    [(ngModel)]="memoPopupContent" [style]="{ height: \'320px\' }"\r\n                                    name="memoPopupContent"></p-editor>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table> --\x3e\r\n                <p-editor spellcheck="true" (ngModelChange)="enableSaveMemo()"\r\n                [(ngModel)]="memoPopupContent" [style]="{ height: \'320px\' }"\r\n                name="memoPopupContent"></p-editor>\r\n                <div class="editor-buttons">\r\n                    <button type="button" class="btn btn-primary editor-buttons-margin" (click)="onClickPopupSave()"\r\n                        [disabled]="disableSaveMemo">\r\n                        Save\r\n                    </button>\r\n                    <button type="button" class="btn btn-danger editor-buttons-margin"\r\n                        (click)="closeMemoModel()">\r\n                        Close\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div id="viewText" class="modal fade" role="dialog" data-backdrop="static">\r\n    <div class="modal-dialog modal-md">\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" style="font-size:24px;" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title"> Text Details</h4>\r\n                \x3c!-- <div class="col-md-12 shadow-box-cstm">\r\n                    <div class="col-md-6">\r\n                      <p class="fs12">\r\n                        <label class="control-label labels-font-header" style="width: auto;">Customer Name:\r\n                        </label>\r\n                        <span class="span-header-red" style="text-transform: capitalize" *ngIf="isSubWorkOrder">\r\n                            {{subWorkOrderDetails.customerName}}\r\n                        </span>\r\n                        <span class="span-header-red" style="text-transform: capitalize" *ngIf="!isSubWorkOrder">\r\n                            {{savedWorkOrderData.customerId.customerName}}\r\n                        </span>\r\n                      </p>\r\n                    </div>\r\n                    <div class="col-md-6">\r\n                      <p class="fs12">\r\n                        <label class="control-label labels-font-header" style="width: auto;">Customer Code:\r\n                        </label>\r\n                        <span class="span-header-red" style="text-transform: capitalize" *ngIf="isSubWorkOrder">\r\n                            {{subWorkOrderDetails.customerCode}}\r\n                        </span>\r\n                        <span class="span-header-red" style="text-transform: capitalize" *ngIf="!isSubWorkOrder">\r\n                            {{savedWorkOrderData.customerId.customerCode}}\r\n                        </span>\r\n                      </p>\r\n                    </div>\r\n                  </div> --\x3e\r\n            </div>\r\n            <div class="modal-body">\r\n\r\n\r\n                <div class="col-sm-12">\r\n\r\n\r\n                    <p><span class="label"><b>Mobile<span class="clr-red">*</span> : </b></span><span\r\n                            class="value">{{viewdata.mobile}}</span></p>\r\n                    <p><span class="label"><b>Contacted by<span class="clr-red">*</span> : </b></span><span\r\n                            class="value">{{viewdata.contactBy}}</span></p>\r\n                    <p>\r\n                        <span class="label"><strong> Notes: </strong></span><span class="value">\r\n                            <p class="m-0 p-0 p_textEditor" [innerHTML]=viewdata.notes></p>\r\n                        </span>\r\n                    </p>\r\n                    <p><span class="label"><b>Created Date: </b></span><span\r\n                            class="value">{{viewdata.createdDate | date: \'MM/dd/yyyy h:mm a \'}}</span></p>\r\n                    <p><span class="label"><b>Created By: </b></span><span class="value">{{viewdata.createdBy}}</span>\r\n                    </p>\r\n                    <p><span class="label"><b>Updated Date: </b></span><span\r\n                            class="value">{{viewdata.updatedDate | date: \'MM/dd/yyyy h:mm a \'}}</span></p>\r\n                    <p><span class="label"><b>Updated By: </b></span><span class="value">{{viewdata.updatedBy}}</span>\r\n                    </p>\r\n\r\n                    <div class="clear"></div>\r\n                </div>\r\n            </div>\r\n            <div class="editor-buttons">\r\n                <button type="button" class="btn btn-danger editor-buttons-margin" data-dismiss="modal">Close</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class="preloader" *ngIf="isSpinnerVisible">\r\n    <div class="loading">\r\n        <div class="lds-roller">\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div id="deleteRowConfirmation" class="modal fade" role="dialog" data-backdrop="static">\r\n    <div class="modal-dialog modal-sm">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <h4 class="modal-title">Are You Sure Want to Delete ?</h4>\r\n                <button type="button" class="close" aria-label="Close" data-dismiss="modal">\r\n                    <span aria-hidden="true">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class="modal-body">\r\n                \x3c!-- <strong style="    display: inline-flex;" *ngIf="deletingRecord">\r\n                   Mobile:\r\n                    <span class="value textareaMemos new-label" style="margin-left: 6px;" [innerHTML]="deletingRow.mobile"  ></span>\r\n                </strong> --\x3e\r\n                <strong *ngIf="deletingRecord">\r\n                    Mobile:\r\n                    <span class="new-label">{{deletingRecord.mobile}}</span>\r\n                </strong>\r\n            </div>\r\n            <div class="editor-buttons">\r\n                <button type="button" class="btn btn-primary editor-buttons-margin" data-dismiss="modal"\r\n                    (click)="deleteText(deletingRecord)">Yes</button>\r\n                <button type="button" class="btn btn-danger editor-buttons-margin" data-dismiss="modal">No</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div id="contentHistDocs" #contentHistDocs class="modal fade" role="dialog" data-backdrop="static"\r\n    data-keyboard="false">\r\n    <div class="modal-dialog modal-xlg">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n\r\n                <h4 class="modal-title">History of Text</h4>\r\n                <button type="button" class="close" aria-label="Close" (click)="dismissModelHistory()">\r\n                    <span aria-hidden="true">&times;</span>\r\n                </button>\r\n\r\n\r\n            </div>\r\n            <div class="modal-body">\r\n                \x3c!-- <div class="col-md-12 shadow-box-cstm">\r\n                    <div class="col-md-4">\r\n                        <p class="fs12">\r\n                            <label class="control-label labels-font-header"\r\n                             style="width: auto;">Legal Entity Name: </label>\r\n                            <span class="span-header-red"\r\n                             style="text-transform: capitalize"> {{legalEntityName }}\r\n                             </span>\r\n                        </p>\r\n                    </div>\r\n                    <div class="col-md-4">\r\n                        <p class="fs12">\r\n                            <label class="control-label labels-font-header"\r\n                             style="width: auto;">Company Code: </label>\r\n                            <span class="span-header-red" \r\n                            style="text-transform: capitalize"> {{legalEntityCode }} \r\n                        </span>\r\n                        </p>\r\n                    </div>\r\n                </div> --\x3e\r\n                <div class="table-responsive history_hg">\r\n                    <table class="table table-bordered">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Mobile</th>\r\n                                <th>Contacted By</th>\r\n                                <th>Notes</th>\r\n                                <th>Created Date</th>\r\n                                <th>Created By</th>\r\n                                <th>Updated Date</th>\r\n                                <th>Updated By</th>\r\n                                <th>Is Deleted</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor="let audit of documentauditHisory; let i = index;">\r\n                                <td\r\n                                    [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'mobile\', audit.mobile)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.mobile}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'contactBy\', audit.contactBy)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.contactBy}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'notes\', audit.notes)  ? \'black\' : \'red\'  }">\r\n                                    <p [innerHTML]="audit.notes"></p>\r\n                                </td>\r\n                                <td>{{audit.createdDate | date: \'MM/dd/yyyy h:mm a \'}}</td>\r\n                                <td>{{audit.createdBy}}</td>\r\n                                <td>{{audit.updatedDate | date: \'MM/dd/yyyy h:mm a \'}}</td>\r\n                                <td>{{audit.updatedBy}}</td>\r\n                                <td style="text-align: center;">\r\n                                    <span class="value">\r\n                                        <label class="wauto">\r\n                                            <input type="checkbox" name="isDeleted" [checked]="audit.isDeleted == true"\r\n                                                disabled>\r\n                                        </label>\r\n                                    </span>\r\n                                </td>\r\n                            </tr>\r\n\r\n                        </tbody>\r\n\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <div class="editor-buttons">\r\n                <button type="button" class="btn btn-danger editor-buttons-margin" (click)="dismissModelHistory()">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>'},"5Eom":function(e,t,a){"use strict";a.r(t),t.default=".coustomTable tr th {\n  font-weight: 600 !important;\n  font-size: 10.5px !important;\n  color: #fff !important;\n  background-color: #4298ff;\n  border: 1px solid #3a7fd2;\n  letter-spacing: 0.3px;\n  line-height: 25px;\n  text-align: center;\n}\n\n.grayCls {\n  background: #f4f4f4;\n  border-radius: 4px;\n}\n\n.coustomTable tr td {\n  padding: 5px 2px !important;\n  white-space: nowrap;\n  color: #222;\n  background: inherit;\n  border: 1px solid #c8c8c8;\n  font-size: 11px !important;\n}\n\n.workflow-table-material {\n  padding-bottom: 50%;\n}\n\n.fileupload {\n  overflow: scroll;\n}\n\ninput[type=number], input[type=text], input[type=email], select {\n  height: 24px !important;\n  border-radius: 5px !important;\n}\n\n.modal-body p {\n  overflow: auto !important;\n}\n\n.form-horizontal b {\n  top: auto !important;\n}\n\n.email-content {\n  max-height: 300px;\n  overflow: scroll;\n}\n\n.email-content span p {\n  overflow: scroll;\n}"},"6fG1":function(e,t,a){"use strict";a.r(t),t.default='<div class="card new-card">\r\n    \x3c!-- <div class="col-md-12">\r\n           <h4 class="po-head-sm"> \r\n              Communication - Memo \r\n              <span *ngIf="!isView">\r\n              <a href="#" data-toggle="modal" data-target="#addNewMemo" (click)="addMemo()"\r\n               >\r\n                <i class="fa fa-plus-circle fa-lg"></i> </a>\r\n            </span>\r\n            </h4>\r\n        </div> --\x3e\r\n    <div class="card-header header">\r\n        <div class="row">\r\n            <div class="col">\r\n                <h4 class="header-name"> Communication - Memo </h4>\r\n            </div>\r\n            <div>\r\n                <button *ngIf="!isView" type="button"\r\n                 class="btn-sm header-button"\r\n                     data-toggle="modal" data-target="#addNewMemo"\r\n                    (click)="addMemo()">\r\n                    Create Memo\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class="card-body header-body">\r\n        <p-table #dt class="rpo-table-cstm rro-table-cstm ptable-f10" [value]="data" [metaKeySelection]="true"\r\n            [first]="0" (onPage)="pageIndexChange($event)" [rows]="pageSize" [paginator]="true" [pageLinks]="3"\r\n            [rowsPerPageOptions]="[10, 20, 50, 100]" [columns]="selectedColumns" selectionMode="multiple"\r\n            [resizableColumns]="true" [reorderableColumns]="true" [totalRecords]="totalRecords" [scrollable]="true"\r\n            scrollHeight="450px">\r\n\r\n            <ng-template pTemplate="caption">\r\n                <div class="row">\r\n                    <div class="col">\r\n                        <p-multiSelect [options]="headers" [(ngModel)]="selectedColumns"\r\n                            [ngModelOptions]="{ standalone: true }" optionLabel="header"\r\n                            selectedItemsLabel="{0} columns selected" [style]="{ minWidth: \'200px\' }"\r\n                            defaultLabel="Choose Columns" style="float:left"></p-multiSelect>\r\n\r\n\r\n                        \x3c!-- <div class="excel-upload excel-upload-cstm">\r\n                    <button type="button" class="btn btn-primary" matTooltip="Download Sample File"\r\n                        matTooltipPosition="above" (click)="sampleExcelDownload()" style="padding: 5px 10px !important;">\r\n                        Sample File Download\r\n                    </button>\r\n\r\n                    <input type="file" name="upload[]" id="upload" (change)="customExcelUpload($event)"\r\n                        class="uploaddoc upload-file" accept=".xlsx, .xls, .csv" />\r\n                    <label for="upload">\r\n                        <span matTooltip="Upload Data (Excel)" matTooltipPosition="above">\r\n                        <i class="fa fa-upload"></i>\r\n                        </span>\r\n                    </label>\r\n                    </div> --\x3e\r\n\r\n                    </div>\r\n                    <div class="col" style="text-align: end;">\r\n                        <div class="inner-addon right-addon w200 inline-block g-filter-search-cstm"\r\n                            style="float: right;">\r\n                            <i class="fa fa-search"></i>\r\n                            <input type="text" pInputText size="50" class="form-control"\r\n                                (input)="dt.filterGlobal($event.target.value, \'contains\')" placeholder=" Filter"\r\n                                style="height: 28px !important;" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="row">\r\n                    <div class="col">\r\n                        <button type="button" class="btn btn-primary new-table-button" matTooltip="Download Data"\r\n                            matTooltipPosition="above" pButton icon="fa-download" iconPos="left" label="Export Data"\r\n                            data-toggle="modal" (click)="selectedOnly = false; targetData = dt;"\r\n                            data-target="#memodownloadConfirmation" style="padding:5px 10px !important;"></button>\r\n                        <button type="button" class="btn btn-primary new-table-button"\r\n                            matTooltip="Download Selected Data" matTooltipPosition="above" pButton icon="fa-download"\r\n                            iconPos="left" label="Export Selected Data" (click)="dt.exportCSV({ selectionOnly: true })"\r\n                            style="padding:5px 10px !important;"></button>\r\n                    </div>\r\n                    <div class="col">\r\n                        <div class="">\r\n                            <div class="col" style="width: 395px; float: right; padding-top: 3px;">\r\n                                \x3c!-- <div \r\n                      style="text-align: end;padding-right: 2%;"\r\n                    > --\x3e\r\n                                <div class="form-group" style="float: right;">\r\n                                    <div class="checkbox-cstm pull-left" style="margin-left: 0;">\r\n                                        <label style="width: auto !important;margin-top: 3px;">\r\n                                            <input type="checkbox" [(ngModel)]="deletedStatusInfo" name="cparent55"\r\n                                                id="cparent55" (click)="getDeleteListByStatus($event.target.checked)" />\r\n                                            <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                            Show Deleted List\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </ng-template>\r\n            <ng-template pTemplate="colgroup" let-columns>\r\n                <colgroup>\r\n                    <col *ngFor="let col of columns" class="table-column-width">\r\n                </colgroup>\r\n            </ng-template>\r\n            <ng-template pTemplate="header" let-columns>\r\n                <tr>\r\n\r\n                    <th class="table-column-width" *ngFor="let col of columns" pResizableColumn pReorderableColumn\r\n                        [pSortableColumn]="col.field">\r\n                        {{ col.header }}\r\n                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                    </th>\r\n                    <th class="table-actions-column">\r\n                        Actions\r\n                    </th>\r\n                </tr>\r\n                <tr>\r\n                    \x3c!-- <th style="width:auto" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                        <input style="width:100%;" pInputText type="text" class="incorn_border" (input)="\r\n                            dt.filter($event.target.value, col.field, \'contains\')\r\n                        " />  \r\n                    </th> --\x3e\r\n                    <th class="table-column-width" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                        <input class="incorn_border table-header-input-width"\r\n                            *ngIf="col.field != \'createdDate\' && col.field != \'updatedDate\'" pInputText type="text"\r\n                            (input)="dt.filter($event.target.value, col.field, \'contains\')">\r\n\r\n                        <input type="date" class="hidePlaceHolder table-header-input-width" *ngIf="col.field == \'createdDate\'"\r\n                            name="createdDate" (change)="dateFilterForTable($event.target.value, col.field)" />\r\n                        <input type="date" class="hidePlaceHolder table-header-input-width" *ngIf="col.field == \'updatedDate\'"\r\n                            name="updatedDate" (change)="dateFilterForTable($event.target.value,col.field)" />\r\n                    </th>\r\n\r\n\r\n\r\n                    <th class="table-actions-column"></th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                <tr [pSelectableRowDblClick]="rowData" [pSelectableRow]="rowData">\r\n                    <ng-container *ngFor="let col of columns">\r\n                        <td class="table-column-width" *ngIf="col.field == \'SERIAL_NO\'" class="ui-resizable-column"\r\n                            pReorderableRowHandle>\r\n                            <p class="m-0 p-0 text-right">{{rowData[col.field]}}</p>\r\n                            <span> </span>\r\n                        </td>\r\n                        <td class="table-column-width" *ngIf="col.field == \'description\'" class="ui-resizable-column"\r\n                            pReorderableRowHandle>\r\n                            <p class="p_textEditor" [innerHTML]=rowData[col.field]></p>\r\n                        </td>\r\n                        <td class="table-column-width" *ngIf="col.field !=\'SERIAL_NO\' && col.field!=\'description\'">\r\n                            {{\r\n                                        col.field == \'createdDate\'\r\n                                          ? (rowData[col.field] | date: \'MM/dd/yyyy h:mm a\')\r\n                                          : rowData[col.field] && col.field == \'updatedDate\'\r\n                                          ? (rowData[col.field] | date: \'MM/dd/yyyy h:mm a\')\r\n                                          : rowData[col.field] \r\n                                      }}\r\n                        </td>\r\n                    </ng-container>\r\n                    <td class="action-icons-cstm table-column-width">\r\n                        \x3c!-- <button class="btn-edit ptable-wo-btns buton_back_bordernon" mat-icon-button data-target="#addNewMemo" data-toggle="modal"\r\n                            (click)="edit(rowData, i)" matTooltip="Edit">\r\n                                <mat-icon>edit</mat-icon>\r\n                            </button> --\x3e\r\n                        \x3c!-- <button class="btn btn-danger nobg" (click)="deleteMemo(rowData)">\r\n                                <i class="fa fa-trash" style="font-size: 14px;"></i>\r\n                            </button> --\x3e\r\n                        <span data-toggle="modal" data-target="#viewText"><a class="btn nobg btn-view-cstm"\r\n                                (click)="getViewData(rowData)" matTooltip="View" matTooltipPosition="above"><i\r\n                                    class="fa fa-eye"></i></a> </span>\r\n                        <span *ngIf="deletedStatusInfo==false && !isView" data-toggle="modal"\r\n                            data-target="#addNewMemo"><a class="btn nobg btn-edit-cstm" (click)="edit(rowData, rowIndex)"\r\n                                matTooltip="Edit" matTooltipPosition="above" data-dismiss="modal"><i\r\n                                    class="fa fa-pencil"></i></a> </span>\r\n                        <span *ngIf="deletedStatusInfo==false  && !isView"><a class="btn nobg btn-delete-cstm"\r\n                                (click)="deleteMemoConfirmation(rowData)" matTooltip="Delete"\r\n                                matTooltipPosition="above"><i class="fa fa-trash"></i></a> </span>\r\n                        <span *ngIf="deletedStatusInfo==true && !isView"><a class="btn nobg"\r\n                                (click)="restore(restoreId,rowData);" matTooltip="Restore Record"\r\n                                matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                        <span data-target="#contentHistDocs" data-toggle="modal"><a class="btn nobg"\r\n                                (click)="openHistory(rowData)" matTooltip="History" matTooltipPosition="above">\r\n                                <i class="fa fa-history"></i></a></span>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate="emptymessage" let-columns *ngIf="data.length == 0">\r\n                <tr>\r\n                    <td colspan="7" class="no-records-cstm no-records-msg">\r\n                        No records found\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate="summary" id="footer">\r\n                <label id="footer">Total:</label>\r\n                <input class="footer-input-width" [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText type="text" />\r\n                &nbsp;&nbsp;\r\n                <label id="footer">Pages Count:</label>\r\n                <input class="footer-input-width" [ngModel]="getPageCount(dt._totalRecords, pageSize)" [disabled]="true"\r\n                    pInputText type="text" />\r\n            </ng-template>\r\n        </p-table>\r\n        <div id="viewText" class="modal fade" role="dialog" data-backdrop="static">\r\n            <div class="modal-dialog modal-md">\r\n                \x3c!-- Modal content--\x3e\r\n                <div class="modal-content">\r\n                    <div class="modal-header">\r\n                        <button type="button" class="close" style="font-size:24px;"\r\n                            data-dismiss="modal">&times;</button>\r\n                        <h4 class="modal-title"> Memo Details</h4>\r\n                        \x3c!-- <div class="col-md-12 shadow-box-cstm">\r\n                    <div class="col-md-6">\r\n                      <p class="fs12">\r\n                        <label class="control-label labels-font-header" style="width: auto;">Customer Name:\r\n                        </label>\r\n                        <span class="span-header-red" style="text-transform: capitalize" *ngIf="isSubWorkOrder">\r\n                            {{subWorkOrderDetails.customerName}}\r\n                        </span>\r\n                        <span class="span-header-red" style="text-transform: capitalize" *ngIf="!isSubWorkOrder">\r\n                            {{savedWorkOrderData.customerId.customerName}}\r\n                        </span>\r\n                      </p>\r\n                    </div>\r\n                    <div class="col-md-6">\r\n                      <p class="fs12">\r\n                        <label class="control-label labels-font-header" style="width: auto;">Customer Code:\r\n                        </label>\r\n                        <span class="span-header-red" style="text-transform: capitalize" *ngIf="isSubWorkOrder">\r\n                            {{subWorkOrderDetails.customerCode}}\r\n                        </span>\r\n                        <span class="span-header-red" style="text-transform: capitalize" *ngIf="!isSubWorkOrder">\r\n                            {{savedWorkOrderData.customerId.customerCode}}\r\n                        </span>\r\n                      </p>\r\n                    </div>\r\n                  </div> --\x3e\r\n                    </div>\r\n                    <div class="modal-body">\r\n\r\n\r\n                        <div class="col-sm-12">\r\n\r\n\r\n                            \x3c!-- <p><span class="label"><b>Mobile<span class="clr-red">*</span> : </b></span><span class="value">{{viewdata.mobile}}</span></p> --\x3e\r\n                            \x3c!-- <p><span class="label"><b>Contacted by<span class="clr-red">*</span> :   </b></span><span class="value">{{viewdata.contactBy}}</span></p> --\x3e\r\n                            <p>\r\n                                <span class="label"><strong> Memo: </strong></span><span class="value">\r\n                                    <p class="m-0 p-0 p_textEditor" [innerHTML]=viewdata.description></p>\r\n                                </span>\r\n                            </p>\r\n                            <p><span class="label"><b>Created Date: </b></span><span\r\n                                    class="value">{{viewdata.createdDate | date: \'MM/dd/yyyy h:mm a \'}}</span></p>\r\n                            <p><span class="label"><b>Created By: </b></span><span\r\n                                    class="value">{{viewdata.createdBy}}</span></p>\r\n                            <p><span class="label"><b>Updated Date: </b></span><span\r\n                                    class="value">{{viewdata.updatedDate | date: \'MM/dd/yyyy h:mm a \'}}</span></p>\r\n                            <p><span class="label"><b>Updated By: </b></span><span\r\n                                    class="value">{{viewdata.updatedBy}}</span></p>\r\n\r\n                            <div class="clear"></div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="modal-footer">\r\n                        <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n\r\n            <div class="modal-header">\r\n                <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n\r\n                <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n                    <span aria-hidden="true">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class="modal-body">\r\n                <strong style="    display: inline-flex;">\r\n                    Memo:\r\n                    \x3c!-- <span class="new-label">{{restorerecord.name}}</span> --\x3e\r\n                    <span class="value textareaMemos new-label" style="margin-left: 6px;"\r\n                        [innerHTML]="restorerecord.description"></span>\r\n                </strong>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-primary" (click)="restoreRecord()">Yes</button>\r\n                <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n            </div>\r\n        </ng-template>\r\n    </div>\r\n\r\n    <div class="modal fade" id="memodownloadConfirmation" role="dialog" data-backdrop="static" data-keyboard="false">\r\n        <div class="modal-dialog modal-sm">\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <button type="button" class="close" (click)="closeDeleteModal()">&times;</button>\r\n                    <h4 class="modal-title">Are You Sure Want to Download?</h4>\r\n                </div>\r\n                <div class="modal-body" *ngIf="targetData">\r\n                    <strong>\r\n                        <span>\r\n                            You are attempting to export {{targetData.totalRecords}} of records.\r\n                        </span>\r\n                    </strong>\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button type="button" class="btn btn-primary"\r\n                        (click)="(selectedOnly)?targetData.exportCSV({ selectionOnly: true }):exportCSV(targetData); closeDeleteModal();">Confirm</button>\r\n                    <button type="button" class="btn btn-danger" (click)="closeDeleteModal()">Cancel</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div id="addNewMemo" class="modal fade" role="dialog" data-backdrop="static">\r\n        <div class="modal-dialog">\r\n            \x3c!-- Modal content--\x3e\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                    <h4 class="modal-title">{{ isEdit ? \'Edit\' : \'Add\'  }} Memo </h4>\r\n\r\n                    \x3c!-- <div class="col-md-12 shadow-box-cstm">\r\n                    <div class="col-md-6">\r\n                      <p class="fs12">\r\n                        <label class="control-label labels-font-header" style="width: auto;">Customer Name:\r\n                        </label>\r\n                        <span class="span-header-red" style="text-transform: capitalize" *ngIf="isSubWorkOrder">\r\n                            {{subWorkOrderDetails.customerName}}\r\n                        </span>\r\n                        <span class="span-header-red" style="text-transform: capitalize" *ngIf="!isSubWorkOrder">\r\n                            {{savedWorkOrderData.customerId.customerName}}\r\n                        </span>\r\n                      </p>\r\n                    </div>\r\n                    <div class="col-md-6">\r\n                      <p class="fs12">\r\n                        <label class="control-label labels-font-header" style="width: auto;">Customer Code:\r\n                        </label>\r\n                        <span class="span-header-red" style="text-transform: capitalize" *ngIf="isSubWorkOrder">\r\n                            {{subWorkOrderDetails.customerCode}}\r\n                        </span>\r\n                        <span class="span-header-red" style="text-transform: capitalize" *ngIf="!isSubWorkOrder">\r\n                            {{savedWorkOrderData.customerId.customerCode}}\r\n                        </span>\r\n                      </p>\r\n                    </div>\r\n                  </div> --\x3e\r\n\r\n                </div>\r\n                <div class="modal-body">\r\n                    \x3c!-- <table class="table table-bordered table-fixed workflow-table-material">\r\n                        <thead>\r\n                            <th style="color: #fff;">Memo</th>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr class="material-tr" *ngFor="let material of addList; let i = index" id="row_{{i}}">\r\n                                <td>\r\n                                    <p-editor [(ngModel)]="material.description" [style]="{\'height\':\'320px\'}"\r\n                                        name="description" required></p-editor>\r\n                                  \r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table> --\x3e\r\n                    <div  class="material-tr" *ngFor="let material of addList; let i = index" id="row_{{i}}">\r\n                    <p-editor [(ngModel)]="material.description" [style]="{\'height\':\'320px\'}"\r\n                    name="description" required></p-editor>\r\n                    </div>\r\n                    <div class="editor-buttons">\r\n                        <button class="btn btn-primary editor-buttons-margin" (click)="saveMemo()">\r\n                            Save\r\n                        </button>\r\n                        <button type="button" class="btn btn-danger editor-buttons-margin" data-dismiss="modal">Close</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n\r\n    <div id="deleteRowConfirmation" class="modal fade" role="dialog" data-backdrop="static">\r\n        <div class="modal-dialog modal-sm">\r\n\r\n            \x3c!-- Modal content--\x3e\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <h4 class="modal-title">Are You Sure Want to Delete ?</h4>\r\n                    <button type="button" class="close" aria-label="Close" data-dismiss="modal">\r\n                        <span aria-hidden="true">&times;</span>\r\n                    </button>\r\n                </div>\r\n                <div class="modal-body">\r\n                    <strong style="    display: inline-flex;" *ngIf="deletingRow">\r\n                        Memo:\r\n                        \x3c!-- <span class="new-label">{{restorerecord.name}}</span> --\x3e\r\n                        <span class="value textareaMemos new-label" style="margin-left: 6px;"\r\n                            [innerHTML]="deletingRow.description"></span>\r\n                    </strong>\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button type="button" class="btn btn-primary" data-dismiss="modal"\r\n                        (click)="deleteMemo(deletingRow)">Yes</button>\r\n                    <button type="button" class="btn btn-danger" data-dismiss="modal">No</button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n\r\n    <div id="contentHistDocs" #contentHistDocs class="modal fade" role="dialog" data-backdrop="static"\r\n        data-keyboard="false">\r\n        <div class="modal-dialog modal-xlg">\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n\r\n                    <h4 class="modal-title">History of Memo</h4>\r\n                    <button type="button" class="close" aria-label="Close" (click)="dismissModelHistory()">\r\n                        <span aria-hidden="true">&times;</span>\r\n                    </button>\r\n\r\n\r\n                </div>\r\n                <div class="modal-body">\r\n                    \x3c!-- <div class="col-md-12 shadow-box-cstm">\r\n                    <div class="col-md-4">\r\n                        <p class="fs12">\r\n                            <label class="control-label labels-font-header"\r\n                             style="width: auto;">Legal Entity Name: </label>\r\n                            <span class="span-header-red"\r\n                             style="text-transform: capitalize"> {{legalEntityName }}\r\n                             </span>\r\n                        </p>\r\n                    </div>\r\n                    <div class="col-md-4">\r\n                        <p class="fs12">\r\n                            <label class="control-label labels-font-header"\r\n                             style="width: auto;">Company Code: </label>\r\n                            <span class="span-header-red" \r\n                            style="text-transform: capitalize"> {{legalEntityCode }} \r\n                        </span>\r\n                        </p>\r\n                    </div>\r\n                </div> --\x3e\r\n                    <div class="table-responsive history_hg">\r\n                        <table class="table table-bordered">\r\n                            <thead>\r\n                                <tr>\r\n                                    \x3c!-- <th>Memo Id </th> --\x3e\r\n                                    <th>Memo</th>\r\n                                    <th>Created Date</th>\r\n                                    <th>Created By</th>\r\n                                    <th> Updated Date</th>\r\n                                    <th>Updated By</th>\r\n                                    <th>Is Deleted</th>\r\n\r\n\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr *ngFor="let audit of documentauditHisory; let i = index;">\r\n                                    \x3c!-- <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'memoId\', audit.memoId)  ? \'black\' : \'red\'  }">{{audit.memoId}}</td> --\x3e\r\n                                    <td\r\n                                        [ngStyle]="{\'color\': getColorCodeForHistory(i, \'description\', audit.description)  ? \'black\' : \'red\'  }">\r\n                                        <p [innerHTML]="audit.description"></p>\r\n                                    </td>\r\n                                    <td>{{audit.createdDate | date: \'MM/dd/yyyy h:mm a \'}}</td>\r\n                                    <td>{{audit.createdBy}}</td>\r\n                                    <td>{{audit.updatedDate | date: \'MM/dd/yyyy h:mm a \'}}</td>\r\n                                    <td>{{audit.updatedBy}}</td>\r\n                                    <td style="text-align: center;">\r\n                                        <span class="value">\r\n                                            <label class="wauto">\r\n                                                <input type="checkbox" name="isDeleted"\r\n                                                    [checked]="audit.isDeleted == true" disabled>\r\n                                            </label>\r\n                                        </span>\r\n                                    </td>\r\n                                </tr>\r\n\r\n                            </tbody>\r\n\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button type="button" class="btn btn-danger" (click)="dismissModelHistory()">Close</button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class="preloader" *ngIf="isSpinnerVisible">\r\n    <div class="loading">\r\n        <div class="lds-roller">\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    </div>\r\n</div>'},Aa4m:function(e,t,a){"use strict";a.r(t),t.default='<div class="tableFixHead">\r\n<table class="table table-bordered" *ngIf="auditHistory.length> 0 else noDatavailable">\r\n    <thead>\r\n        <tr>\r\n            <ng-container *ngFor="let headername of auditHistoryHeader; let z = index;">\r\n                <th *ngIf="headername.isRequired == true">{{headername.header}}<span style="color: #ff0000;">*</span></th>\r\n                <th *ngIf="headername.isRequired == false">{{headername.header}}</th>\r\n            </ng-container>\r\n        </tr>\r\n    </thead>\r\n    <tbody class="audithistory-cstm">\r\n        <tr *ngFor="let audit of auditHistory; let i = index;">\r\n            <ng-container *ngFor="let headername of auditHistoryHeader; let j = index;">\r\n            <td *ngIf="headername.field != \'isDeleted\'"\r\n                [ngStyle]="{\'color\':  getColorCodeForHistory(i, headername.field, audit[headername.field])  ? \'black\' : \'red\'  }">\r\n                {{audit[headername.field]}}</td>\r\n\r\n                <td *ngIf="headername.field == \'isDeleted\'">\r\n                    <p style="background-color: #fff !important;"> <input type="checkbox"\r\n                                            name="isDeleted" [(ngModel)]="audit[headername.field]" disabled></p>\r\n                </td>\r\n            </ng-container>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<ng-template #noDatavailable>\r\n    <div class="text-center">\r\n        <img src="../../../assets/images/binoculars.png" style="height: 100px; width: 100px;">\r\n        <h4 style="color: #ff5663;">No History Found </h4>\r\n    </div>\r\n</ng-template>\r\n</div>'},FPgC:function(e,t,a){"use strict";a.r(t),t.default='<ng-container>\r\n    <form #createPOAddressForm="ngForm">\r\n      <div class="form-row ro-view-address">\r\n          <div class="col-md-3">\r\n              <h5 class="po-head">Ship To</h5>\r\n              <div class="form-group">\r\n                  <label>User Type <span class="clr-red">*</span></label>\r\n                  <select [ngClass]="shipToUserTypeValidCheck ? \'select-validate-cstm\' : \'\'" class="form-control" name="shipToUserTypeId" [(ngModel)]="sourcePoApproval.shipToUserTypeId" (change)="clearInputShipTo(); onModuleTypeChange(); checkValidOnChange(sourcePoApproval.shipToUserTypeId, \'shipToUserTypeId\');" #shipUserType="ngModel" (ngModelChange)="enableAddSave()" required>\r\n                      <option value="0">-- Select --</option>\r\n                      <ng-container *ngFor="let item of userTypes">\r\n                          <option [value]="item.moduleId" *ngIf="item.moduleName != \'Others\'">{{item.moduleName}}</option>\r\n                      </ng-container>\r\n                  </select>\r\n                  \x3c!-- <div *ngIf="sourcePoApproval.shipToUserTypeId.invalid && (sourcePoApproval.shipToUserTypeId.dirty || sourcePoApproval.shipToUserTypeId.touched)" class="alert alert-danger alert-danger-cstm">\r\n                      <div *ngIf="sourcePoApproval.shipToUserTypeId.errors.required">\r\n                          <small> User Type is required </small>\r\n                      </div>\r\n                  </div> --\x3e\r\n              </div>\r\n              <div class="form-group">\r\n                  <div class="form-row" >\r\n                      <div class="col-sm-12">\r\n                        <label> {{shippingModuleName}} Name <span class="clr-red">*</span></label>\r\n                         <p-autoComplete field="userName" [ngClass]="inputValidCheckAdd ? \'p-acomp-validate\' : \'\'" class="pautocomp-cstm"\r\n                                          (onClear)="clearInputShipTo()"\r\n                                          (onSelect)="onShipToSelected($event)"\r\n                                          [(ngModel)]="sourcePoApproval.shipToUserId" \r\n                                          name="shipCompanyName"\r\n                                          [suggestions]="userShipingList"\r\n                                          (completeMethod)="filterUsersForShiping($event, sourcePoApproval.shipToUserTypeId)"\r\n                                          [size]="30"\r\n                                          title="Ship to Name"\r\n                                          [minLength]="1"\r\n                                          [dropdown]="true"\r\n                                          errorMessage="Records not found"\r\n                                          [forceSelection]="true"\r\n                                          #shipCompanyName="ngModel" (ngModelChange)="enableAddSave()" required>\r\n                          </p-autoComplete>\r\n                          \r\n                          \x3c!-- <div *ngIf="shipCompanyName.invalid && (shipCompanyName.dirty || shipCompanyName.touched)" class="alert alert-danger alert-danger-cstm">\r\n                              <div *ngIf="shipCompanyName.errors.required">\r\n                                  <small> Company Name is required </small>\r\n                              </div>\r\n                          </div> --\x3e\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n              <div class="form-group">\r\n                  <label>\r\n                      Site Name <span class="clr-red">*</span>                              \r\n                      <span style="margin-left:3px;cursor:pointer;"><a *ngIf="sourcePoApproval.shipToUserId" class="fa fa-plus-circle fa-lg" matTooltip="Add Site Name" matTooltipPosition="above" data-toggle="modal" data-target="#createPOSiteName" (click)="onClickShipSiteName(\'Add\')"></a></span>                                \r\n                      \x3c!-- <span style="margin-left:5px;cursor:pointer;">\r\n                        <a *ngIf="sourcePoApproval.shipToUserId && sourcePoApproval.shipToSiteId > 0"\r\n                             class="fa fa-edit fa-lg" matTooltip="Edit Site Name" matTooltipPosition="above"\r\n                              data-toggle="modal" data-target="#createPOSiteName" \r\n                              (click)="onClickShipSiteName(\'Edit\',sourcePoApproval)"></a></span> --\x3e\r\n\r\n                              <span style="margin-left:0px;cursor:pointer;"\r\n                              ><a\r\n                                class="btn nobg"\r\n                                *ngIf="sourcePoApproval.shipToUserId && sourcePoApproval.shipToSiteId > 0"\r\n                                matTooltip="Edit Site Name" matTooltipPosition="above"\r\n                                 data-toggle="modal" data-target="#createPOSiteName" \r\n                                 (click)="onClickShipSiteName(\'Edit\',sourcePoApproval)"\r\n                                ><i class="fa fa-pencil" ></i\r\n                              ></a>\r\n                              </span>\r\n                  </label>\r\n                  <select [ngClass]="shipToSiteNameValidCheck ? \'select-validate-cstm\' : \'\'" class="form-control" (change)="onShipToGetAddress(sourcePoApproval.shipToSiteId);" name="shipCusSiteName" [(ngModel)]="sourcePoApproval.shipToSiteId" #shipCusSiteName="ngModel" (ngModelChange)="enableAddSave()" required>\r\n                      <option value="0">-- Select --</option>\r\n                      <option *ngFor="let object of shipToSite" \r\n                      [ngValue]="object.siteId">{{object.siteName}}</option>\r\n                  </select>\r\n                  \x3c!-- <div *ngIf="shipCusSiteName.invalid && (shipCusSiteName.dirty || shipCusSiteName.touched)" class="alert alert-danger alert-danger-cstm">\r\n                      <div *ngIf="shipCusSiteName.errors.required">\r\n                          <small> Site Name is required </small>\r\n                      </div>\r\n                  </div> --\x3e\r\n              </div>\r\n              <div class="form-group">\r\n                  <label>Address</label>\r\n                  <input class="form-control" type="text" value="{{shipToAddress?.address1}}" disabled>\r\n              </div>\r\n              <div class="form-group">\r\n                  <label>City</label>\r\n                  <input class="form-control" type="text" value="{{shipToAddress?.city}}" disabled>\r\n              </div>\r\n              <div class="form-group">\r\n                  <label>Primary State/Province</label>\r\n                  <input class="form-control" type="text" value="{{shipToAddress?.stateOrProvince}}" disabled>\r\n              </div>\r\n              <div class="form-group">\r\n                  <label>Postal</label>\r\n                  <input class="form-control" type="text" value="{{shipToAddress?.postalCode}}" disabled>\r\n              </div>\r\n              <div class="form-group">\r\n                  <label>Country</label>\r\n                  <input class="form-control" type="text" value="{{shipToAddress?.country}}" disabled>\r\n              </div>\r\n              <div class="form-group" >\r\n                  <label>Contact Name <span class="clr-red">*</span></label>\r\n                  <select [ngClass]="shipToSiteNameValidCheck ? \'select-validate-cstm\' : \'\'" class="form-control" name="shiptoContact" [(ngModel)]="sourcePoApproval.shipToContactId" #shiptoContact="ngModel" (ngModelChange)="enableAddSave()" required>\r\n                    <option value="0">-- Select --</option>\r\n                    <option *ngFor="let object of shipToContactDataList" \r\n                    [ngValue]="object.contactId">{{object.name}}</option>\r\n                </select>\r\n                  \x3c!-- <select [ngClass]="inputValidCheckAdd ? \'select-validate-cstm\' : \'\'" class="form-control" [(ngModel)]="sourcePoApproval.shipToContactId" #shipCusContactName="ngModel" (ngModelChange)="enableAddSave()" required>\r\n                    <option value="0">-- Select --</option>\r\n                    <option *ngFor="let object of shipToContactDataList" [ngValue]="object.contactId">{{object.name}} </option>\r\n                </select> --\x3e\r\n                \x3c!-- <select [ngClass]="shipToSiteNameValidCheck ? \'select-validate-cstm\' : \'\'" class="form-control" (change)="onShipToGetAddress(sourcePoApproval , sourcePoApproval.shipToSiteId);" name="shipCusSiteName" [(ngModel)]="sourcePoApproval.shipToSiteId" #shipCusSiteName="ngModel" (ngModelChange)="enableAddSave()" required>\r\n                    <option value="0">-- Select --</option>\r\n                    <option *ngFor="let object of shipToSite" \r\n                    [ngValue]="object.siteId">{{object.siteName}}</option>\r\n                </select> --\x3e\r\n\r\n                  \x3c!-- <p-autoComplete field="name" [ngClass]="inputValidCheckAdd ? \'p-acomp-validate\' : \'\'" class="pautocomp-cstm"\r\n                                  [(ngModel)]="sourcePoApproval.shipToContactId" \r\n                                  title="Contact Name" name="shipToCustomerContactName" \r\n                                  [suggestions]="firstNamesShipTo" \r\n                                  (completeMethod)="filterContactsForShipTo($event)" \r\n                                  [size]="30" [minLength]="1" [dropdown]="true" #shipCusContactName="ngModel" \r\n                                  errorMessage="Records not found" [forceSelection]="true" \r\n                                  (onClear)="clearShipToContact()" \r\n                                  required></p-autoComplete> --\x3e\r\n                  \x3c!-- <div *ngIf="shipCusContactName.invalid && (shipCusContactName.dirty || shipCusContactName.touched)" class="alert alert-danger alert-danger-cstm">\r\n                      <div *ngIf="shipCusContactName.errors.required">\r\n                          <small> Contact Name is required </small>\r\n                      </div>\r\n                  </div> --\x3e\r\n              </div>          \r\n              <div class="form-group memo-popup-cstm">\r\n                  <label>\r\n                      Memo \r\n                      \x3c!-- <i class="fa fa-info-circle fa-lg" \r\n                      matTooltipPosition="above" matTooltip="Add Memo"\r\n                              data-toggle="modal" data-target="#address-memo"\r\n                               (click)="onClickShipMemo()"></i> --\x3e\r\n\r\n                               <span style="margin-left:-7px"\r\n                               ><a\r\n                                 class="btn nobg"\r\n                                 matTooltipPosition="above" matTooltip="Add Memo"\r\n                                 data-toggle="modal" data-target="#address-memo"\r\n                                  (click)="onClickShipMemo()"\r\n                                 ><i class="fa fa-pencil" ></i\r\n                               ></a>\r\n                               </span>\r\n                  </label>\r\n                  <span>\r\n                      <div [innerHTML]="sourcePoApproval.shipToMemo"\r\n                      [matTooltip]="parsedText(sourcePoApproval.shipToMemo)"\r\n                       class="form-control"\r\n                           style="width:100%;padding:0px !important;" class="text_editor_box"></div>\r\n                  </span>\r\n    \r\n              </div>\r\n    \r\n              <div>\r\n                  <div class="form-group">\r\n                      <label>\r\n                          Ship Via <span class="clr-red">*</span>\r\n                          <span style="margin-left:3px;cursor:pointer;"><a *ngIf="sourcePoApproval.shipToUserId" class="fa fa-plus-circle fa-lg" matTooltip="Add Ship Via" matTooltipPosition="above" data-toggle="modal" data-target="#shipToShipVia" (click)="onEditShipVia(\'Add\',0)"></a></span>\r\n                          \x3c!-- <span style="margin-left:5px;cursor:pointer;">\r\n                            <a *ngIf="sourcePoApproval.shipToUserId && sourcePoApproval.shippingViaId > 0" \r\n                                class="fa fa-edit fa-lg" matTooltip="Edit Ship Via" matTooltipPosition="above"\r\n                                 data-toggle="modal" data-target="#shipToShipVia" \r\n                                 (click)="onEditShipVia(\'Edit\',sourcePoApproval.shippingViaId)"></a></span> --\x3e\r\n\r\n                                 <span style="margin-left:0px;cursor:pointer;"\r\n                                 ><a\r\n                                   class="btn nobg"\r\n                                   *ngIf="sourcePoApproval.shipToUserId && sourcePoApproval.shippingViaId > 0" \r\n                                   matTooltip="Edit Ship Via" matTooltipPosition="above"\r\n                                    data-toggle="modal" data-target="#shipToShipVia" \r\n                                    (click)="onEditShipVia(\'Edit\',sourcePoApproval.shippingViaId)"\r\n                                   ><i class="fa fa-pencil"></i\r\n                                 ></a>\r\n                                 </span>\r\n                                \r\n                      </label>\r\n                      <select [ngClass]="shipViaValidCheck ? \'select-validate-cstm\' : \'\'" class="form-control"  title="Ship Via" name="cusShipViaId"  (ngModelChange)="getShipViaDetails($event); checkValidOnChange(sourcePoApproval.shippingViaId, \'shipViaId\');" [(ngModel)]="sourcePoApproval.shippingViaId" #cusShipViaId="ngModel" (ngModelChange)="enableAddSave()" required>\r\n                          <option value="0">-- Select --</option>\r\n                          <option *ngFor="let object of shipViaList" [ngValue]="object.shippingViaId">{{object.name}}</option>\r\n                      </select>\r\n                      \x3c!-- <div *ngIf="cusShipViaId.invalid && (cusShipViaId.dirty || cusShipViaId.touched)" class="alert alert-danger alert-danger-cstm">\r\n                          <div *ngIf="cusShipViaId.errors.required">\r\n                              <small> Ship Via is required </small>\r\n                          </div>\r\n                      </div> --\x3e\r\n                  </div>\r\n                  <div class="form-group" *ngIf="addressType!= \'SOQ\'">\r\n                      <label>Shipping Cost</label>\r\n                      <input class="form-control text-right" type="text" pKeyFilter="money" name="cusShippingCost" [(ngModel)]="sourcePoApproval.shippingCost" (ngModelChange)="enableAddSave()" (change)="onChangeShippingHandlingCost(\'shippingCost\');">\r\n                  </div>\r\n                  <div class="form-group" *ngIf="addressType!= \'SOQ\'">\r\n                      <label>Handling Cost</label>\r\n                      <input class="form-control text-right" type="text" pKeyFilter="money" name="cusHandlingCost" [(ngModel)]="sourcePoApproval.handlingCost" (ngModelChange)="enableAddSave()" (change)="onChangeShippingHandlingCost(\'handlingCost\');">\r\n                  </div>\r\n                  <div class="form-group">\r\n                      <label>Shipping Acct Info</label>\r\n                      <input class="form-control" type="text" name="cusShippingAcctNum" [(ngModel)]="sourcePoApproval.shippingAccountNo" disabled>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n          <div class="col-md-3">\r\n              <h5 class="po-head">Bill To</h5>\r\n              <div class="form-group">\r\n                  <label>User Type <span class="clr-red">*</span></label>\r\n                  <select [ngClass]="billToUserTypeValidCheck ? \'select-validate-cstm\' : \'\'" class="form-control" name="billToUserTypeId" [(ngModel)]="sourcePoApproval.billToUserTypeId" (change)="clearInputBillTo(); checkValidOnChange(sourcePoApproval.billToUserTypeId, \'billToUserTypeId\');onModuleBillTypeChange();" #billUserType="ngModel" (ngModelChange)="enableAddSave()" required>\r\n                      <option value="0">-- Select --</option>\r\n                      <ng-container *ngFor="let item of userTypes">\r\n                          <option [value]="item.moduleId" *ngIf="item.moduleName != \'Others\'">{{item.moduleName}}</option>\r\n                      </ng-container>\r\n                  </select>\r\n                  \x3c!-- <div *ngIf="billToUserTypeId.invalid && (billToUserTypeId.dirty || billToUserTypeId.touched)" class="alert alert-danger alert-danger-cstm">\r\n                      <div *ngIf="billUserType.errors.required">\r\n                          <small> User Type is required </small>\r\n                      </div>\r\n                  </div> --\x3e\r\n              </div>\r\n              <div class="form-group">\r\n                  <div class="form-row" >\r\n                      <div class="col-sm-12">\r\n                          <label>{{billingingModuleName}} Name <span class="clr-red">*</span></label>\r\n                          <p-autoComplete field="userName" [ngClass]="inputValidCheckAdd ? \'p-acomp-validate\' : \'\'" class="pautocomp-cstm"\r\n                                          (onClear)="clearInputBillTo()"\r\n                                          (onSelect)="onBillToSelected($event)"\r\n                                          [(ngModel)]="sourcePoApproval.billToUserId" name="billCompanyName"\r\n                                          [suggestions]="userBillingList"\r\n                                          (completeMethod)="filterUsersForBilling($event, sourcePoApproval.billToUserTypeId)"\r\n                                          [size]="30"\r\n                                          [minLength]="1"\r\n                                          [dropdown]="true"\r\n                                          errorMessage="Records not found"\r\n                                          [forceSelection]="true"\r\n                                          #billCompName="ngModel" (ngModelChange)="enableAddSave()" required>\r\n                          </p-autoComplete>\r\n                          \x3c!-- <div *ngIf="billCompName.invalid && (billCompName.dirty || billCompName.touched)" class="alert alert-danger alert-danger-cstm">\r\n                              <div *ngIf="billCompName.errors.required">\r\n                                  <small> Company Name is required </small>\r\n                              </div>\r\n                          </div> --\x3e\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n              <div class="form-group">\r\n                  <label>\r\n                      Site Name <span class="clr-red">*</span>\r\n                      <span style="margin-left:3px;cursor:pointer;"><a *ngIf="sourcePoApproval.billToUserId"  class="fa fa-plus-circle fa-lg" matTooltip="Add Site Name" matTooltipPosition="above" data-toggle="modal" data-target="#createBillingSiteName" (click)="onClickBillSiteName(\'Add\')"></a></span>\r\n                      \x3c!-- <span style="margin-left:5px;cursor:pointer;"><a \r\n                        *ngIf="sourcePoApproval.billToUserId && sourcePoApproval.billToSiteId > 0"\r\n                           class="fa fa-edit fa-lg" matTooltip="Edit Site Name" matTooltipPosition="above"\r\n                            data-toggle="modal" data-target="#createBillingSiteName"\r\n                             (click)="onClickBillSiteName(\'Edit\', sourcePoApproval)"></a></span> --\x3e\r\n\r\n                             <span style="margin-left:0px;cursor:pointer;"\r\n                             ><a\r\n                               class="btn nobg"\r\n                               matTooltipPosition="above" matTooltip="Edit Site Name"\r\n                               *ngIf="sourcePoApproval.billToUserId && sourcePoApproval.billToSiteId > 0"\r\n                                data-toggle="modal" data-target="#createBillingSiteName"\r\n                                 (click)="onClickBillSiteName(\'Edit\', sourcePoApproval)"\r\n                               ><i class="fa fa-pencil" ></i\r\n                             ></a>\r\n                             </span>\r\n                  </label>\r\n                  <select [ngClass]="billToSiteNameValidCheck ? \'select-validate-cstm\' : \'\'" class="form-control" (change)="onBillToGetAddress(sourcePoApproval.billToSiteId); checkValidOnChange(sourcePoApproval.billToSiteId, \'billToSiteId\');" name="billCusSiteName" [(ngModel)]="sourcePoApproval.billToSiteId" #billCusSiteName="ngModel" (ngModelChange)="enableAddSave()" required>\r\n                      <option value="0">-- Select --</option>\r\n                      <option *ngFor="let object of billToSite" [ngValue]="object.siteId">{{object.siteName}} </option>\r\n                  </select>\r\n    \r\n                  \x3c!-- <div *ngIf="billCusSiteName.invalid && (billCusSiteName.dirty || billCusSiteName.touched)" class="alert alert-danger alert-danger-cstm">\r\n                      <div *ngIf="billCusSiteName.errors.required">\r\n                          <small> Site Name is required </small>\r\n                      </div>\r\n                  </div> --\x3e\r\n              </div>\r\n              <div class="form-group">\r\n                  <label>Address </label>\r\n                  <input class="form-control" type="text" value="{{billToAddress?.address1}}" disabled>\r\n              </div>\r\n              <div class="form-group">\r\n                  <label>City</label>\r\n                  <input class="form-control" type="text" value="{{billToAddress?.city}}" disabled>\r\n              </div>\r\n              <div class="form-group">\r\n                  <label>Primary State/Province</label>\r\n                  <input class="form-control" type="text" value="{{billToAddress?.stateOrProvince}}" disabled>\r\n              </div>\r\n              <div class="form-group">\r\n                  <label>Postal</label>\r\n                  <input class="form-control" type="text" value="{{billToAddress?.postalCode}}" disabled>\r\n              </div>\r\n              <div class="form-group">\r\n                  <label>Country</label>\r\n                  <input class="form-control" type="text" value="{{billToAddress?.country}}" disabled>\r\n              </div>\r\n              <div class="form-group">\r\n                  <label>Contact Name <span class="clr-red">*</span></label>\r\n                  <select [ngClass]="shipToSiteNameValidCheck ? \'select-validate-cstm\' : \'\'" class="form-control" name="billtoContact" [(ngModel)]="sourcePoApproval.billToContactId" #billtoContact="ngModel" (ngModelChange)="enableAddSave()" required>\r\n                    <option value="0">-- Select --</option>\r\n                    <option *ngFor="let object of billToContactDataList" \r\n                    [ngValue]="object.contactId">{{object.name}}</option>\r\n                </select>\r\n                  \x3c!-- <select [ngClass]="inputValidCheckAdd ? \'select-validate-cstm\' : \'\'" class="form-control" [(ngModel)]="sourcePoApproval.billToContactId" #billCusContactName="ngModel" (ngModelChange)="enableAddSave()" required>\r\n                    <option value="0">-- Select --</option>\r\n                    <option *ngFor="let object of billToContactDataList" [ngValue]="object.contactId">{{object.name}} </option>\r\n                </select> --\x3e\r\n\r\n                  \x3c!-- <p-autoComplete field="name" title="Contact Name " [ngClass]="inputValidCheckAdd ? \'p-acomp-validate\' : \'\'" class="pautocomp-cstm" \r\n                            [(ngModel)]="sourcePoApproval.billToContactId" \r\n                            name="customerContactsForBillTo" \r\n                            [suggestions]="firstNamesBillTo" \r\n                            (completeMethod)="filterContactsForBillTo($event)" [size]="30" \r\n                            errorMessage="Records not found" [forceSelection]="true" [minLength]="1" \r\n                            [dropdown]="true" #billCusContactName="ngModel" (onClear)="clearBillToContact()" \r\n                            (ngModelChange)="enableAddSave()" required>\r\n                  </p-autoComplete> --\x3e\r\n                  \x3c!-- <div *ngIf="billCusContactName.invalid && (billCusContactName.dirty || billCusContactName.touched)" class="alert alert-danger alert-danger-cstm">\r\n                      <div *ngIf="billCusContactName.errors.required">\r\n                          <small> Contact Name is required </small>\r\n                      </div>\r\n                  </div> --\x3e\r\n              </div>\r\n              <div class="form-group memo-popup-cstm">\r\n                  <label>\r\n                      Memo \r\n                      \x3c!-- <i class="fa fa-info-circle fa-lg" \r\n                        matTooltipPosition="above"\r\n                              matTooltip="Add Memo" data-toggle="modal" \r\n                              data-target="#address-memo"\r\n                              (click)="onClickBillMemo()"></i> --\x3e\r\n\r\n                              <span style="margin-left:-7px"\r\n                              ><a\r\n                                class="btn nobg"\r\n                                matTooltipPosition="above"\r\n                                matTooltip="Add Memo" data-toggle="modal" \r\n                                data-target="#address-memo"\r\n                                (click)="onClickBillMemo()"\r\n                                ><i class="fa fa-pencil" ></i\r\n                              ></a>\r\n                              </span>\r\n\r\n                  </label>\r\n                  <span>\r\n    \r\n                      <div [innerHTML]="sourcePoApproval.billToMemo"\r\n                      [matTooltip]="parsedText(sourcePoApproval.billToMemo)" class="form-control"\r\n                           style="width:100%;padding:0px !important;" class="text_editor_box"></div>\r\n    \r\n                  </span>\r\n    \r\n              </div>\r\n          </div>\r\n      </div>\r\n      <div>\r\n        <button class="btn btn-primary pull-right" (click)="savePurchaseOrderAddress()" [disabled]="!enableAddSaveBtn">{{isEditModeAdd ? \'Update\' : \'Save\'}}</button>\r\n           </div>\r\n    </form>\r\n    </ng-container>\r\n\r\n    <div class="modal fade" id="createPOSiteName" role="dialog" data-backdrop="static" data-keyboard="false">\r\n        <div class="modal-dialog partsList-modal">\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <button type="button" class="close" data-dismiss="modal" (click)="resetAddressShippingForm();">&times;</button>\r\n                    <h4 class="modal-title">{{addressSiteNameHeader}}</h4>\r\n                </div>\r\n                <div class="modal-body">\r\n                    <div class="form-row">\r\n                        <form #addSiteNameForm="ngForm" class="form-horizontal">\r\n                            <div class="form-group col-md-12">\r\n                                <label class="col-md-6">Is Primary </label>\r\n                                <input type="checkbox" name="isPrimary"  class="form-control col-md-6"  [(ngModel)]="addressFormForShipping.isPrimary"  (ngModelChange)="shipAddChange()">\r\n                            </div>\r\n                            <div class="form-group col-md-12">\r\n                                <label class="col-md-6">Site Name <span class="clr-red">*</span> :</label>\r\n                                <p-autoComplete                 \r\n                                class="autocomp-customer-cstm" \r\n                                name="siteName"\r\n                                [(ngModel)]="addressFormForShipping.siteName" \r\n                                [suggestions]="lstfilterShippingSite"                     \r\n                                emptyMessage="No Match Found" \r\n                                field="siteName" \r\n                                (onKeyUp)="checkShippingSiteNameExist($event.target.value)"\r\n                                (onChange)="checkShippingSiteNameExist($event.target.value)"\r\n                                (onSelect)="checkShippingSiteNameSelect()"\r\n                                (completeMethod)="filterShippingSite($event);" \r\n                                (ngModelChange)="shipAddChange()" \r\n                                [size]="30" [minLength]="1" [dropdown]="true" required>\r\n                              </p-autoComplete>\r\n                              <div *ngIf="isShippingSiteNameAlreadyExists" class="clr-red">\r\n                                        Site Name Already Exists\r\n                              </div>\r\n                                \x3c!-- <input type="text" class="form-control col-md-6" name="siteName" (change)="shipAddChange()" [(ngModel)]="addressFormForShipping.siteName" required>--\x3e\r\n                            </div>\r\n                            <div class="form-group col-md-12">\r\n                                <label class="col-md-6">Address 1 <span class="clr-red">*</span></label>\r\n                                <input type="text" class="form-control col-md-6" name="address1" (change)="shipAddChange()" [(ngModel)]="addressFormForShipping.address1" required>\r\n                            </div>\r\n                            <div class="form-group col-md-12">\r\n                                <label class="col-md-6">Address 2:</label>\r\n                                <input type="text" class="form-control col-md-6" name="address2" (change)="shipAddChange()" [(ngModel)]="addressFormForShipping.address2">\r\n                            </div>\r\n                            <div class="form-group col-md-12">\r\n                                <label class="col-md-6">City <span class="clr-red">*</span></label>\r\n                                <input type="text" class="form-control col-md-6" name="city" (change)="shipAddChange()" [(ngModel)]="addressFormForShipping.city" required>\r\n                            </div>\r\n                            <div class="form-group col-md-12">\r\n                                <label class="col-md-6">State <span class="clr-red">*</span></label>\r\n                                <input type="text" class="form-control col-md-6" name="stateOrProvince" (change)="shipAddChange()" [(ngModel)]="addressFormForShipping.stateOrProvince" required>\r\n                            </div>\r\n                            <div class="form-group col-md-12">\r\n                                <label class="col-md-6">Postal <span class="clr-red">*</span></label>\r\n                                <input type="text" class="form-control col-md-6" name="postalCode" (change)="shipAddChange()" [(ngModel)]="addressFormForShipping.postalCode" required>\r\n                            </div>\r\n                            <div class="form-group col-md-12">\r\n                                <label class="col-md-6">Country <span class="clr-red">*</span></label>\r\n                                <p-autoComplete field="label" class="pautocomp-cstm" (onSelect)="shipAddChange()" (change)="shipAddChange()" [(ngModel)]="addressFormForShipping.countryId" name="country" [suggestions]="countriesList" (completeMethod)="filterCountries($event)" [size]="30" [minLength]="1" [dropdown]="true" errorMessage="Records not found" [forceSelection]="true" required></p-autoComplete>\r\n                            </div>\r\n                            <div class="form-group col-md-12" style="margin-top: 8px;">\r\n                                <button type="button" class="btn btn-primary" *ngIf="(!isEditModeShippingPoOnly && !isEditModeShipping) || isEditModeShipping" (click)="saveShippingAddress();"  [disabled]="!(addSiteNameForm.valid && ShipAddbutton && !isShippingSiteNameAlreadyExists)"  data-dismiss="modal">{{isEditModeShipping ? \'Update\' : \'Save\' }}</button> \x3c!--resetAddressShippingForm();--\x3e\r\n                                <button type="button" class="btn btn-primary" *ngIf="showIsPoOnlyButton &&  (!isEditModeShippingPoOnly && !isEditModeShipping) || isEditModeShippingPoOnly" [disabled]="!(addSiteNameForm.valid && ShipAddbutton && !isShippingSiteNameAlreadyExists) || addressFormForShipping.isPrimary" (click)="saveShippingAddressToPO();"   data-dismiss="modal">{{isEditModeShippingPoOnly ? \'Update to this PO\' : \'Save to this PO\' }}</button>\r\n                                \x3c!--<button type="button" class="btn btn-primary" *ngIf="(!isEditModeShippingPoOnly && !isEditModeShipping) || isEditModeShipping" (click)="saveShippingAddress();"  [disabled]="!(addSiteNameForm.valid && ShipAddbutton && !isShippingSiteNameAlreadyExists)"  data-dismiss="modal">{{isEditModeShipping ? \'Update\' : \'Save\' }}</button> \r\n                                <button type="button" class="btn btn-primary" *ngIf="showIsPoOnlyButton &&  (!isEditModeShippingPoOnly && !isEditModeShipping) || isEditModeShippingPoOnly" [disabled]="!(addSiteNameForm.valid && ShipAddbutton && !isShippingSiteNameAlreadyExists)" (click)="saveShippingAddressToPO();"   data-dismiss="modal">{{isEditModeShippingPoOnly ? \'Update to this PO\' : \'Save to this PO\' }}</button>--\x3e\r\n                            </div>\r\n    \r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="resetAddressShippingForm();">Close</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class="modal fade" id="createBillingSiteName" role="dialog" data-backdrop="static" data-keyboard="false">\r\n        <div class="modal-dialog partsList-modal">\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <button type="button" class="close" data-dismiss="modal" (click)="resetAddressBillingForm();">&times;</button>\r\n                    <h4 class="modal-title">{{addressSiteNameHeader}}</h4>\r\n                </div>\r\n                <div class="modal-body">\r\n                    <div class="form-row">\r\n                        <form #addBillNameForm="ngForm" class="form-horizontal">\r\n                            <div class="form-group col-md-12">\r\n                                <label class="col-md-6">Is Primary </label>\r\n                                <input type="checkbox" name="isPrimary"  class="form-control col-md-6"  [(ngModel)]="addressFormForBilling.isPrimary"  (ngModelChange)="billAddChange()">\r\n                            </div>\r\n                            <div class="form-group col-md-12">\r\n                                <label class="col-md-6">Site Name <span class="clr-red">*</span></label>\r\n                                <p-autoComplete                 \r\n                                class="autocomp-customer-cstm" \r\n                                name="siteName"\r\n                                [(ngModel)]="addressFormForBilling.siteName" \r\n                                [suggestions]="lstfilterBillingSite"                     \r\n                                emptyMessage="No Match Found" \r\n                                field="siteName" \r\n                                (onKeyUp)="checkSiteNameExist($event.target.value)"\r\n                                (onChange)="checkSiteNameExist($event.target.value)"\r\n                                (onSelect)="checkSiteNameSelect()"\r\n                                (completeMethod)="filterBillingSite($event);" \r\n                                (ngModelChange)="billAddChange()" \r\n                                [size]="30" [minLength]="1" [dropdown]="true" required>\r\n                              </p-autoComplete>\r\n                              <div *ngIf="isSiteNameAlreadyExists" class="clr-red">\r\n                                        Site Name Already Exists\r\n                              </div>\r\n                            </div>\r\n                            \x3c!-- <div class="form-group col-md-12">\r\n                                <label class="col-md-6">Site Name <span class="clr-red">*</span></label>\r\n                                <input type="text" class="form-control col-md-6" name="siteName" (change)="billAddChange()" [(ngModel)]="addressFormForBilling.siteName" required>\r\n                            </div> --\x3e\r\n                            <div class="form-group col-md-12">\r\n                                <label class="col-md-6">Address 1 <span class="clr-red">*</span></label>\r\n                                <input type="text" class="form-control col-md-6" name="address1"  (change)="billAddChange()" [(ngModel)]="addressFormForBilling.address1" required>\r\n                            </div>\r\n                            <div class="form-group col-md-12">\r\n                                <label class="col-md-6">Address 2 </label>\r\n                                <input type="text" class="form-control col-md-6" name="address2" (change)="billAddChange()" [(ngModel)]="addressFormForBilling.address2">\r\n                            </div>\r\n                            <div class="form-group col-md-12">\r\n                                <label class="col-md-6">City <span class="clr-red">*</span></label>\r\n                                <input type="text" class="form-control col-md-6" name="city" (change)="billAddChange()" [(ngModel)]="addressFormForBilling.city" required>\r\n                            </div>\r\n                            <div class="form-group col-md-12">\r\n                                <label class="col-md-6">State <span class="clr-red">*</span></label>\r\n                                <input type="text" class="form-control col-md-6" name="stateOrProvince" (change)="billAddChange()" [(ngModel)]="addressFormForBilling.stateOrProvince" required>\r\n                            </div>\r\n                            <div class="form-group col-md-12">\r\n                                <label class="col-md-6">Postal <span class="clr-red">*</span></label>\r\n                                <input type="text" class="form-control col-md-6" name="postalCode" (change)="billAddChange()" [(ngModel)]="addressFormForBilling.postalCode" required>\r\n                            </div>\r\n                            <div class="form-group col-md-12">\r\n                                <label class="col-md-6">Country <span class="clr-red">*</span></label>\r\n                                <p-autoComplete field="label" class="pautocomp-cstm"  (onSelect)="billAddChange()" (change)="billAddChange()" [(ngModel)]="addressFormForBilling.countryId" name="country" [suggestions]="countriesList" (completeMethod)="filterCountries($event)" [size]="30" [minLength]="1" [dropdown]="true" errorMessage="Records not found" [forceSelection]="true" required></p-autoComplete>\r\n                            </div>\r\n                            <div class="form-group col-md-12" style="margin-top: 8px;">\r\n                                  <button type="button" class="btn btn-primary" \r\n                                  (click)="saveBillingAddress();"  \r\n                                  *ngIf="(!isEditModeBilling && !isEditModeBillingPoOnly) || isEditModeBilling"\r\n                                   [disabled]="!(addBillNameForm.valid && billAddbutton && !isSiteNameAlreadyExists)" \r\n                                    data-dismiss="modal">{{isEditModeBilling ? \'Update\' : \'Save\' }}</button>                                \r\n\r\n                                  <button type="button" class="btn btn-primary"   *ngIf="showIsPoOnlyButton && ((!isEditModeBilling && !isEditModeBillingPoOnly) || isEditModeBillingPoOnly)" [disabled]="!addBillNameForm.valid" (click)="saveBillingAddressToPO();" [disabled]="!(addBillNameForm.valid && billAddbutton && !isSiteNameAlreadyExists) || addressFormForBilling.isPrimary"  data-dismiss="modal">{{isEditModeBillingPoOnly ? \'Update to this PO\' : \'Save to this PO\' }}</button>\r\n\r\n                                  \x3c!--<button type="button" class="btn btn-primary" \r\n                                    *ngIf="showIsPoOnlyButton && ((!isEditModeBilling && !isEditModeBillingPoOnly) || isEditModeBillingPoOnly)"\r\n                                     [disabled]="!addBillNameForm.valid" \r\n                                     (click)="saveBillingAddressToPO();" \r\n                                     [disabled]="!(addBillNameForm.valid && billAddbutton && !isSiteNameAlreadyExists)" \r\n                                      data-dismiss="modal">{{isEditModeBillingPoOnly ? \'Update to this PO\' : \'Save to this PO\' }}</button>--\x3e\r\n\r\n                            </div>\r\n    \r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="resetAddressBillingForm();">Close</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class="preloader" *ngIf="isSpinnerVisible">\r\n        <div class="loading">\r\n            <div class="lds-roller"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class="modal fade" id="shipToShipVia" role="dialog" data-backdrop="static" data-keyboard="false">\r\n        <div class="modal-dialog partsList-modal">\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <button type="button" class="close" data-dismiss="modal" (click)="resetAddressShipViaForm()">&times;</button>\r\n                    <h4 class="modal-title"> {{ ShipViaHeader }} </h4>\r\n                </div>\r\n                <div class="modal-body">\r\n                    <div class="form-row">\r\n                        <form #addShipViaForm="ngForm" class="form-horizontal">\r\n                            <div class="form-group col-md-12">\r\n                                <label class="col-md-6">Ship Via: <span class="clr-red">*</span></label>\r\n                                <select class="form-control col-md-6" title="Ship Via" name="shipVia" [(ngModel)]="addShipViaFormForShipping.shipViaId" (change)="shipViaChange()" required>\r\n                                    <option *ngFor="let object of allShipViaInfo" [ngValue]="object.value">{{object.label}}</option>\r\n                                </select>\r\n                            </div>\r\n                            <div class="form-group col-md-12">\r\n                                <label class="col-md-6">Shipping Acct Info:</label>\r\n                                <input type="text" class="form-control col-md-6" name="shippingAcctInfo" (change)="shipViaChange()" [(ngModel)]="addShipViaFormForShipping.shippingAccountInfo">\r\n                            </div>\r\n                          \r\n                            <div class="form-group col-md-12">                               \r\n                                <label class="col-md-6" style="vertical-align: top;">Memo:</label>\r\n                                <div  class="col-md-6">\r\n                                <div class="form-group memo-popup-cstm" > \r\n                                        <div [innerHTML]="addShipViaFormForShipping.memo" class="form-control"\r\n                                       class="text_editor_box" style="width:100%;padding:0px !important;line-height:1.6">\r\n                                    </div>\r\n                                        \x3c!-- <i class="fa fa-info-circle fa-lg pull-right"\r\n                                             style="margin-top:-20px;margin-right:-18px"\r\n                                                data-toggle="modal"\r\n                                                data-target="#ship-via-memo" matTooltip="Memo"\r\n                                                matTooltipPosition="above"\r\n                                                (click)="onAddShipMemo()"></i>        --\x3e\r\n\r\n                                              <i class="fa fa-pencil btn nobg pull-right"  style="margin-top:-25px;margin-right:-29px" \r\n                                                  data-toggle="modal"\r\n                                                data-target="#ship-via-memo" matTooltip="Memo"\r\n                                                matTooltipPosition="above"\r\n                                                (click)="onAddShipMemo()"></i>\r\n                                        </div>  \r\n                                </div>      \r\n\r\n                             </div>\r\n                            <div class="form-group col-md-12" style="margin-top: 8px;">\r\n                                   <button type="button" class="btn btn-primary" data-dismiss="modal" style="display: none;" [disabled]="!addShipViaForm.valid " (click)="saveShipToShipViaDetailsToPO()">Save to this PO</button>\r\n                            </div>\r\n    \r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button type="button" class="btn btn-primary" data-dismiss="modal" [disabled]="!(addShipViaForm.valid && ShipViabutton)" (click)="saveShipViaForShipTo(); resetAddressShipViaForm();">{{ isEditModeShipVia ? \'Update\' : \'Save\' }}</button>                          \r\n                    <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div> \r\n\r\n    <div class="modal fade" id="ship-via-memo" style="z-index: 10000;" role="dialog" data-backdrop="static" data-keyboard="false">\r\n        <div class="modal-dialog">\r\n          <div class="modal-content">\r\n            <div class="modal-header">\r\n              <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n              <h4 class="modal-title">Edit Memo</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n              \x3c!-- <table class="table table-bordered table-fixed workflow-table-material">\r\n                <thead>\r\n                  <th style="color: #fff;">Memo</th>\r\n                </thead>\r\n                <tbody>\r\n                  <tr>\r\n                    <td>\r\n                      <p-editor [(ngModel)]="tempAddshipViaMemo" \r\n                      [style]="{\'height\':\'320px\'}" name="tempAddshipViaMemo" \r\n                      required></p-editor>\t\t\t\t\t\t\t\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table> --\x3e\r\n              <p-editor [(ngModel)]="tempAddshipViaMemo" \r\n              [style]="{\'height\':\'320px\'}" name="tempAddshipViaMemo" \r\n              required></p-editor>\r\n              <div class="editor-buttons">\r\n                <button type="button" class="btn btn-primary editor-buttons-margin"\t\t\t\t\t\t \r\n                 (click)="onSaveTextAreaInfo()">Save</button>\r\n                <button type="button" class="btn btn-danger editor-buttons-margin"\r\n                 (click)="closeMemoModel()"\r\n                  >Close</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    <div class="modal fade" id="address-memo"\r\n     role="dialog" data-backdrop="static">\r\n    <div class="modal-dialog">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close"\r\n                        data-dismiss="modal">\r\n                    &times;\r\n                </button>\r\n                <h4 class="modal-title">\r\n                    {{addressMemoLabel == \'Edit Ship\' || addressMemoLabel == \'Edit Bill\' ? \'Edit\': addressMemoLabel }} Memo\r\n                </h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                \x3c!-- <table class="table table-bordered\r\n                        table-fixed workflow-table-material">\r\n                    <thead>\r\n                    <th style="color: #fff;">Memo</th>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>\r\n                                <p-editor [(ngModel)]="tempMemo"\r\n                                          [style]="{\'height\':\'320px\'}" name="tempMemo" required></p-editor>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table> --\x3e\r\n                <p-editor [(ngModel)]="tempMemo"\r\n                                          [style]="{\'height\':\'320px\'}" name="tempMemo" required></p-editor>\r\n                <div class="editor-buttons">\r\n                    <button type="button" class="btn btn-primary editor-buttons-margin"\r\n                            data-dismiss="modal" (click)="onSaveAddressMemo()">\r\n                        Save\r\n                    </button>\r\n                    <button type="button" class="btn btn-danger editor-buttons-margin" data-dismiss="modal">Close</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n    '},JTuQ:function(e,t,a){"use strict";a.r(t),t.default="<p>\r\n  common-modules works!\r\n</p>\r\n"},Kppz:function(e,t,a){"use strict";a.r(t),t.default=""},LPWc:function(e,t,a){"use strict";a.r(t),t.default='\r\n    <div class="card new-card">\r\n        \x3c!-- <div class="col-md-12">\r\n            <h4 class="po-head-sm">\r\n                  Communication - Phone \r\n                  <a href="#" data-toggle="modal" data-target="#addNewPhone"\r\n                  (click)="addPhone()" *ngIf="!isView">\r\n                  <i class="fa fa-plus-circle fa-lg"></i></a>\r\n            </h4>\r\n        </div> --\x3e\r\n        <div class="card-header header">\r\n            <div class="row">\r\n              <div class="col">\r\n                <h4 class="header-name">  Communication - Phone </h4>\r\n              </div>\r\n              <div>\r\n                <button *ngIf="!isView"\r\n                  type="button" \r\n                  class="btn-sm header-button"\r\n                  data-toggle="modal" data-target="#addNewPhone"\r\n                  (click)="addPhone()">\r\n                 Create Phone\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n    \r\n    <div class="card-body header-body">\r\n        <p-table #dt\r\n        class="rpo-table-cstm rro-table-cstm tab-table-cstm"\r\n        [value]="data"\r\n        [metaKeySelection]="true"\r\n        [first]="0"\r\n        (onPage)="pageIndexChange($event)"\r\n        [rows]="pageSize"\r\n        [paginator]="true"\r\n        [pageLinks]="3"\r\n        [rowsPerPageOptions]="[10, 20, 50, 100]"\r\n        [columns]="selectedColumns"\r\n        selectionMode="multiple"\r\n        [resizableColumns]="true"\r\n        [reorderableColumns]="true"\r\n        [totalRecords]="totalRecords"\r\n        [scrollable]="true" scrollHeight="450px">\r\n        <ng-template pTemplate="caption">\r\n            <div class="row">\r\n                <div class="col">\r\n                    <p-multiSelect [options]="headers" [(ngModel)]="selectedColumns"\r\n                    [ngModelOptions]="{ standalone: true }" optionLabel="header" \r\n                    selectedItemsLabel="{0} columns selected"\r\n                    class="multiselect-field" defaultLabel="Choose Columns"></p-multiSelect>\r\n                      \r\n                </div>\r\n            <div class="col">\r\n                <div\t\t\t\t\t\r\n\t\t\t\t\t\tclass="global-search-field inner-addon right-addon inline-block"\r\n\t\t\t\t\t  >\r\n                    <i class="fa fa-search"></i>\r\n                    <input type="text" pInputText size="50" class="form-control"\r\n                        (input)="dt.filterGlobal($event.target.value, \'contains\')" placeholder=" Filter"\r\n                       />\r\n                </div>\r\n            </div>\r\n            </div>\r\n            <div class="row">\r\n            <div class="col">\r\n                <button type="button" class="btn btn-primary exports-button" matTooltip="Download Data" matTooltipPosition="above"\r\n                pButton icon="fa-download" iconPos="left" label="Export Data" \r\n                data-toggle="modal" \r\n                (click)="selectedOnly = false; targetData = dt;"\r\n                 data-target="#phonedownloadConfirmation"></button>\r\n                <button type="button" class="btn btn-primary exports-button" matTooltip="Download Selected Data"\r\n                matTooltipPosition="above" pButton icon="fa-download" iconPos="left" label="Export Selected Data"\r\n                (click)="dt.exportCSV({ selectionOnly: true })"></button>\r\n\r\n            </div>\r\n            <div class="pull-right buttons-div-align">\r\n                <div class="col">\r\n                  <div class="col buttons-top-padding">\r\n                  <div class="form-group" style="float: right;"> \r\n                 <div class="checkbox-cstm pull-left" style="margin-left: 0;">\r\n                        <label style="width: auto !important;margin-top: 3px;">\r\n                            <input type="checkbox" [(ngModel)]="deletedStatusInfo" name="cparent55" id="cparent55" (click)="getDeleteListByStatus($event.target.checked)" />\r\n                            <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                            Show  Deleted List\r\n                        </label>\r\n                    </div>\r\n                    </div>\r\n                    </div>\r\n\r\n              </div>\r\n          </div>\r\n          </div>\r\n        </ng-template>\r\n\r\n\r\n            \x3c!-- <ng-template pTemplate="colgroup" let-columns>\r\n                <colgroup>\r\n                    <ng-container *ngFor="let col of headers">\r\n                        <col *ngIf="col.field == \'phoneNo\' || col.field == \'contactBy\' || col.field == \'createdDate\' || col.field == \'createdBy\'" >\r\n                        <col *ngIf="col.field == \'notes\'"  >\r\n                    </ng-container>\r\n                </colgroup>\r\n            </ng-template> --\x3e\r\n            <ng-template pTemplate="colgroup" let-columns>\r\n                <colgroup>\r\n                    <col *ngFor="let col of headers" class="table-column-width">\r\n                </colgroup>\r\n            </ng-template>\r\n            <ng-template pTemplate="header" let-columns>\r\n                <tr>\r\n                    <ng-container *ngFor="let col of headers">\r\n                        <th class="table-column-width"\r\n                        *ngIf="col.field == \'phoneNo\' || col.field == \'contactBy\'"\r\n                        pResizableColumn\r\n                        pReorderableColumn\r\n                        [pSortableColumn]="col.field">\r\n                        {{ col.header }}\r\n                            <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                        </th>\r\n                        <th class="table-column-width"\r\n                        *ngIf="col.field != \'phoneNo\' && col.field != \'contactBy\'"\r\n                        pResizableColumn\r\n                        pReorderableColumn\r\n                        [pSortableColumn]="col.field">\r\n                        {{ col.header }}\r\n                            <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                        </th>\r\n                    </ng-container>\r\n                    \x3c!-- <th style="width:auto"\r\n                        \r\n                        pResizableColumn\r\n                        pReorderableColumn\r\n                        [pSortableColumn]="col.field">\r\n                        {{ col.header }}\r\n                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                    </th> --\x3e\r\n                    <th class="table-actions-column">\r\n                        Actions\r\n                    </th>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <ng-container *ngFor="let col of headers">\r\n                        <th class="table-column-width" *ngIf="col.field == \'phoneNo\' || col.field == \'contactBy\'" [ngSwitch]="col.field">\r\n                            <input  pInputText type="text" class="incorn_border table-header-input-width" (input)="\r\n                                dt.filter($event.target.value, col.field, \'contains\')\r\n                            " />\r\n                        </th>\r\n                        <th class="table-column-width" *ngIf="col.field != \'phoneNo\' && col.field != \'contactBy\'" [ngSwitch]="col.field">\r\n                            <input pInputText type="text"  class="incorn_border table-header-input-width" (input)="\r\n                                dt.filter($event.target.value, col.field, \'contains\')\r\n                            " />\r\n                        </th>\r\n                    </ng-container>\r\n                    \x3c!-- <th style="width:auto" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                        <input style="width:100%;" pInputText type="text" (input)="\r\n                            dt.filter($event.target.value, col.field, \'contains\')\r\n                        " />\r\n                    </th> --\x3e\r\n                    <th class="table-actions-column"></th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                    <tr [pSelectableRowDblClick]="rowData" [pSelectableRow]="rowData">\r\n                        <ng-container *ngFor="let col of columns" >\r\n                            <td class="table-column-width"\r\n                            *ngIf="col.field == \'notes\'"\r\n                            class="ui-resizable-column"\r\n                            pReorderableRowHandle>\r\n                            <p class="m-0 p-0 p_textEditor" style="white-space: nowrap;" \r\n                            matTooltip="view" matTooltipPosition="above" [innerHTML]=rowData[col.field]></p>\r\n                        </td>\r\n                            <td class="table-column-width" *ngIf="col.field !=\'notes\'">\r\n                                {{\r\n                                    col.field == \'createdDate\'\r\n                                      ? (rowData[col.field] | date: \'MM/dd/yyyy h:mm a\')\r\n                                      : rowData[col.field] && col.field == \'updatedDate\'\r\n                                      ? (rowData[col.field] | date: \'MM/dd/yyyy h:mm a\')\r\n                                      : rowData[col.field] \r\n                                  }}\r\n                            </td>\r\n                    </ng-container>\r\n                        <td class="action-icons-cstm table-column-width">\r\n                            <span data-toggle="modal" data-target="#viewPhone"><a class="btn nobg btn-view-cstm"\r\n                                (click)="phoneView(rowData)" matTooltip="View" matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n                            <span  *ngIf="deletedStatusInfo==false  && !isView" data-target="#addNewPhone" data-toggle="modal"><a class="btn nobg btn-edit-cstm"\r\n                                (click)="edit(rowData, rowIndex)" matTooltip="Edit" matTooltipPosition="above"><i class="fa fa-pencil"></i></a> </span>\r\n                          \r\n                            <span *ngIf="deletedStatusInfo==false  && !isView" ><a class="btn nobg btn-delete-cstm" (click)="showDeletePhoneConfirmation(rowData)" matTooltip="Delete" matTooltipPosition="above"><i class="fa fa-trash"></i></a> </span>\r\n                            <span *ngIf="deletedStatusInfo==true && !isView"><a class="btn nobg" (click)="restore(restoreId,rowData);"  matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                            <span data-target="#contentHistDocs" data-toggle="modal"><a class="btn nobg" \r\n                                (click)="openHistory(rowData)"\r\n                                 matTooltip="History"  matTooltipPosition="above">\r\n                                 <i class="fa fa-history"></i></a></span>\r\n                        </td>\r\n                    </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate="emptymessage" let-columns *ngIf="data.length == 0">\r\n                <tr>\r\n                  <td colspan="8" class="no-records-cstm no-records-msg">\r\n                    No records found\r\n                  </td>\r\n                </tr>\r\n            </ng-template>\r\n            \x3c!-- <ng-template pTemplate="summary" id="footer">\r\n                <label id="footer" class="footer">No\'of records:</label>\r\n                <input style="width: 5%;"\r\n                        [(ngModel)]="totalRecords"\r\n                        [disabled]="true"\r\n                        pInputText\r\n                        type="text" />\r\n                &nbsp;&nbsp;\r\n                <label id="footer" class="footer1">Pages Count:</label>\r\n                <input style="width: 5%;"\r\n                        [(ngModel)]="totalPages"\r\n                        [disabled]="true"\r\n                        pInputText\r\n                        type="text" />\r\n            </ng-template> --\x3e\r\n            <ng-template pTemplate="summary" id="footer">\r\n                <label id="footer">Total:</label>\r\n                <input class="footer-input-width" [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText type="text" />\r\n                &nbsp;&nbsp;\r\n                <label id="footer">Pages Count:</label>    \r\n                <input class="footer-input-width" [ngModel]="getPageCount(dt._totalRecords, pageSize)" [disabled]="true" pInputText type="text" />\r\n              </ng-template>\r\n        </p-table>\r\n        <ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n    \r\n            <div class="modal-header">\r\n                <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n          \r\n                <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n                    <span aria-hidden="true">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class="modal-body" *ngIf="restorerecord">\r\n                <strong>\r\n                   Phone:\r\n                    <span class="new-label">{{restorerecord.phoneNo}}</span>\r\n                </strong>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-primary" (click)="restoreRecord()">Yes</button>\r\n                <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n            </div>\r\n          </ng-template> \r\n</div>\r\n</div>\r\n\r\n<div class="modal fade" id="phonedownloadConfirmation" role="dialog" data-backdrop="static" data-keyboard="false">\r\n\t<div class="modal-dialog modal-sm">\r\n\t\t<div class="modal-content">\r\n\t\t\t<div class="modal-header">\r\n\t\t\t\t<button type="button" class="close" (click)="closeDeleteModal()">&times;</button>\r\n\t\t\t\t<h4 class="modal-title">Are You Sure Want to Download?</h4>\r\n\t\t\t</div>\r\n\t\t\t<div class="modal-body" *ngIf="targetData">\r\n\t\t\t\t<strong>\r\n\t\t\t\t\t<span>\r\n\t\t\t\t\t\tYou are attempting to export {{targetData.totalRecords}} of records. \r\n\t\t\t\t\t</span> \r\n\t\t\t\t</strong>\r\n\t\t\t</div>\r\n\t\t\t<div class="modal-footer">\r\n\t\t\t\t<button type="button" class="btn btn-primary" (click)="(selectedOnly)?targetData.exportCSV({ selectionOnly: true }):exportCSV(targetData); closeDeleteModal();">Confirm</button>\r\n\t\t\t\t<button type="button" class="btn btn-danger" (click)="closeDeleteModal()">Cancel</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n<div id="addNewPhone" class="modal fade" role="dialog" data-backdrop="static">\r\n    <div class="modal-dialog">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">{{ isEdit ? \'Edit\' : \'Add\'  }} Phone </h4>\r\n           \r\n                \x3c!-- <div class="col-md-12 shadow-box-cstm">\r\n                    <div class="col-md-6">\r\n                      <p class="fs12">\r\n                        <label class="control-label labels-font-header" style="width: auto;">Customer Name:\r\n                        </label>\r\n                        <span class="span-header-red" style="text-transform: capitalize" *ngIf="isSubWorkOrder">\r\n                            {{subWorkOrderDetails.customerName}}\r\n                        </span>\r\n                        <span class="span-header-red" style="text-transform: capitalize" *ngIf="!isSubWorkOrder">\r\n                            {{savedWorkOrderData.customerId.customerName}}\r\n                        </span>\r\n                      </p>\r\n                    </div>\r\n                    <div class="col-md-6">\r\n                      <p class="fs12">\r\n                        <label class="control-label labels-font-header" style="width: auto;">Customer Code:\r\n                        </label>\r\n                        <span class="span-header-red" style="text-transform: capitalize" *ngIf="isSubWorkOrder">\r\n                            {{subWorkOrderDetails.customerCode}}\r\n                        </span>\r\n                        <span class="span-header-red" style="text-transform: capitalize" *ngIf="!isSubWorkOrder">\r\n                            {{savedWorkOrderData.customerId.customerCode}}\r\n                        </span>\r\n                      </p>\r\n                    </div>\r\n                  </div> --\x3e\r\n           \r\n            </div>\r\n            <form #phoneForm="ngForm" class="form-horizontal" ngNativeValidate>\r\n            <div class="modal-body" *ngIf="addList.length > 0">\r\n                <div class="form-row">                   \r\n                    <div class="col-md-6">\r\n                        <div class="form-group">\r\n                            <label class="col-md-12"><span *ngIf="type==1">Customer</span><span *ngIf="type==2">Vendor</span> Contact <span class="clr-red">*</span></label>\r\n                            <p-autoComplete field="firstName"\r\n                            [(ngModel)]="customerContact" required\r\n                            name="cusContact" #cusContact="ngModel"\r\n                            errorMessage="Records not found" [forceSelection]="true"\r\n                            [dropdown]="true" [suggestions]="cusContactList"\r\n                            (completeMethod)="filterCustomerContact($event)" (ngModelChange)="getmemo()"\r\n                            [size]="30" [minLength]="1" [dropdown]="true"\r\n                            (onSelect)="contactSelected($event)" \r\n                            class="p-autoComplete-ctsm">\r\n                            </p-autoComplete>\r\n                        </div>\r\n                        <div class="form-group">\r\n                            <label>Phone</label>\r\n                            <input class="form-control" type="text" (ngModelChange)="getmemo()" [(ngModel)] = "addList[0].phoneNo" maxlength="20" name="phoneNo" required disabled/>\r\n                        </div>\r\n                        <div class="form-group">\r\n                            <label class="col-md-12">Contacted By</label>\r\n                            \x3c!-- <select [(ngModel)]="addList[0].contactId"\r\n                                class="form-control" name="contactedBy" required>\r\n                                <option value="">Select</option>\r\n                                <option *ngFor="let employee of employees" [value]="employee.value">{{employee.label}}</option>\r\n                            </select> --\x3e\r\n                            <p-autoComplete field="name"\r\n                                [(ngModel)]="addList[0].contactId" (ngModelChange)="getmemo()"\r\n                                name="employees" errorMessage="Records not found" [forceSelection]="true"\r\n                                [dropdown]="true" [suggestions]="employees"\r\n                                (completeMethod)="filterEmployee($event)"\r\n                                [size]="30" [minLength]="1" [dropdown]="true"\r\n                                class="p-autoComplete-ctsm" required>\r\n                            </p-autoComplete>\r\n                        </div>                        \r\n                    </div>\r\n                    <div class="col-md-12">\r\n                        <div class="form-group">\r\n                            <label>Notes</label>\r\n                            <p-editor class="p-editor-cstm" [(ngModel)]="addList[0].notes" (ngModelChange)="getmemo()" style="overflow-y: auto;;"\r\n                                     [style]="{\'height\':\'150px\'}" name="notes"></p-editor>\r\n                            \x3c!-- <p-editor [(ngModel)]="addList[0].notes" [style]="{\'height\':\'320px\'}" name="notes"></p-editor> --\x3e\r\n                        </div> \r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class="editor-buttons">\r\n                <button class="btn btn-primary editor-buttons-margin" data-dismiss="modal" (click)="savePhone()" [disabled]="!phoneForm.valid || disableUpdateButton">\r\n                    {{(!isEdit)?\'Save\':\'Update\'}}\r\n                </button>\r\n                <button type="button" class="btn btn-danger editor-buttons-margin" data-dismiss="modal">Close</button>\r\n            </div>\r\n        </form>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n<div id="viewPhone" class="modal fade"\r\n role="dialog" data-backdrop="static">\r\n    <div class="modal-dialog modal-md">\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title"> Phone Details</h4>\r\n                \x3c!-- <div class="col-md-12 shadow-box-cstm">\r\n                    <div class="col-md-6">\r\n                      <p class="fs12">\r\n                        <label class="control-label labels-font-header" style="width: auto;">Customer Name:\r\n                        </label>\r\n                        <span class="span-header-red" style="text-transform: capitalize" *ngIf="isSubWorkOrder">\r\n                            {{subWorkOrderDetails.customerName}}\r\n                        </span>\r\n                        <span class="span-header-red" style="text-transform: capitalize" *ngIf="!isSubWorkOrder">\r\n                            {{savedWorkOrderData.customerId.customerName}}\r\n                        </span>\r\n                      </p>\r\n                    </div>\r\n                    <div class="col-md-6">\r\n                      <p class="fs12">\r\n                        <label class="control-label labels-font-header" style="width: auto;">Customer Code:\r\n                        </label>\r\n                        <span class="span-header-red" style="text-transform: capitalize" *ngIf="isSubWorkOrder">\r\n                            {{subWorkOrderDetails.customerCode}}\r\n                        </span>\r\n                        <span class="span-header-red" style="text-transform: capitalize" *ngIf="!isSubWorkOrder">\r\n                            {{savedWorkOrderData.customerId.customerCode}}\r\n                        </span>\r\n                      </p>\r\n                    </div> \r\n                  </div> --\x3e\r\n            </div>\r\n            <div class="modal-body">\r\n                \x3c!-- <div class="col-sm-12" *ngIf="phoneViewData">\r\n                    <p>\r\n                        <span class="label"><strong> <span *ngIf="type==1">Customer</span><span *ngIf="type==2">Vendor</span>: </strong></span><span class="value">{{\r\n                            phoneViewData.customerContact\r\n                        }}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label"><strong> Phone: </strong></span><span class="value">{{\r\n                            phoneViewData.phoneNo\r\n                        }}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label"><strong> Contact By: </strong></span><span class="value">{{\r\n                            phoneViewData.contactBy\r\n                        }}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label"><strong> Notes: </strong></span><span class="value">\r\n                            <p class="m-0 p-0 p_textEditor" [innerHTML]=phoneViewData.notes></p></span>\r\n                    </p>\r\n                </div> --\x3e\r\n                <p><span class="label"><b><span *ngIf="type==1">Customer</span><span *ngIf="type==2">Vendor</span> Contact<span class="clr-red">*</span> : </b></span><span class="value">\r\n                    <span *ngIf="type==1"> {{phoneViewData.customerContact}}</span>\r\n                    <span *ngIf="type==2"> {{phoneViewData.vendorContact}}</span>\r\n                   </span></p>\r\n                <p><span class="label"><b>Phone <span class="clr-red">*</span> :   </b></span><span class="value">{{phoneViewData.phoneNo}}</span></p>\r\n                <p><span class="label"><b>Contacted By <span class="clr-red">*</span> :   </b></span><span class="value">{{phoneViewData.contactBy}}</span></p>\r\n             \r\n                <p>\r\n                    <span class="label"><strong> Notes: </strong></span><span class="value">\r\n                        <p class="m-0 p-0 p_textEditor" [innerHTML]=phoneViewData.notes></p></span>\r\n                </p>\r\n                 <p><span class="label"><b>Created Date: </b></span><span class="value">{{phoneViewData.createdDate | date: \'MM/dd/yyyy h:mm a \'}}</span></p>\r\n                <p><span class="label"><b>Created By: </b></span><span class="value">{{phoneViewData.createdBy}}</span></p>\r\n                <p><span class="label"><b>Updated Date: </b></span><span class="value">{{phoneViewData.updatedDate | date: \'MM/dd/yyyy h:mm a \'}}</span></p>\r\n                <p><span class="label"><b>Updated By: </b></span><span class="value">{{phoneViewData.updatedBy}}</span></p>\r\n              \r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n </div>\r\n\r\n <div id="deleteRowConfirmation" class="modal fade" role="dialog" data-backdrop="static">\r\n    <div class="modal-dialog modal-sm">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <h4 class="modal-title">Are You Sure Want to Delete ?</h4>\r\n                <button type="button" class="close" aria-label="Close" (click)="closeRestore()" data-dismiss="modal">\r\n                    <span aria-hidden="true">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class="modal-body" *ngIf="deletingRecord">\r\n                <strong>\r\n                   Phone:\r\n                    <span class="new-label">{{deletingRecord.phoneNo}}</span>\r\n                </strong>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-primary" data-dismiss="modal" (click)="deletePhone(deletingRecord)">Yes</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="closeRestore()">No</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n <div class="preloader" *ngIf="isSpinnerVisible">\r\n    <div class="loading">\r\n        <div class="lds-roller"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n    </div>\r\n</div>\r\n<div  id="contentHistDocs" #contentHistDocs class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-xlg">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n\r\n                <h4 class="modal-title">History of Phone</h4>\r\n                <button type="button" class="close" aria-label="Close" (click)="dismissModelHistory()">\r\n                    <span aria-hidden="true">&times;</span>\r\n                </button>\r\n        \r\n        \r\n            </div>\r\n            <div class="modal-body">\r\n                \x3c!-- <div class="col-md-12 shadow-box-cstm">\r\n                    <div class="col-md-4">\r\n                        <p class="fs12">\r\n                            <label class="control-label labels-font-header"\r\n                             style="width: auto;">Legal Entity Name: </label>\r\n                            <span class="span-header-red"\r\n                             style="text-transform: capitalize"> {{legalEntityName }}\r\n                             </span>\r\n                        </p>\r\n                    </div>\r\n                    <div class="col-md-4">\r\n                        <p class="fs12">\r\n                            <label class="control-label labels-font-header"\r\n                             style="width: auto;">Company Code: </label>\r\n                            <span class="span-header-red" \r\n                            style="text-transform: capitalize"> {{legalEntityCode }} \r\n                        </span>\r\n                        </p>\r\n                    </div>\r\n                </div> --\x3e\r\n                <div class="table-responsive history_hg">\r\n                    <table class="table table-bordered">\r\n                        <thead>\r\n                            <tr>\r\n                                <th><span *ngIf="type==1">Customer</span><span *ngIf="type==2">Vendor</span> Contact </th>\r\n                                <th>Phone</th>\r\n                                <th>Contacted By</th>\r\n                                <th>Notes</th>\r\n                                <th>Created Date</th>\r\n                                <th>Created By</th>\r\n                                <th> Updated Date</th>\r\n                                <th>Updated By</th>\r\n                                <th>Is Deleted</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor="let audit of documentauditHisory; let i = index;">\r\n                                <td *ngIf="type==1" [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'customerContact\', audit.customerContact)  ? \'black\' : \'red\'  }">{{audit.customerContact}}</td>\r\n                                <td *ngIf="type==2" [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'vendorContact\', audit.vendorContact)  ? \'black\' : \'red\'  }">{{audit.vendorContact}}</td>\r\n                                <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'phoneNo\', audit.phoneNo)  ? \'black\' : \'red\'  }">{{audit.phoneNo}}</td>\r\n                                <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'contactBy\', audit.contactBy)  ? \'black\' : \'red\'  }">{{audit.contactBy}}</td>\r\n                                 <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'notes\', audit.notes)  ? \'black\' : \'red\'  }">\r\n                                    <p [innerHTML]="audit.notes"></p>\r\n                                </td>\r\n                                <td>{{audit.createdDate | date: \'MM/dd/yyyy h:mm a \'}}</td>\r\n                                <td>{{audit.createdBy}}</td>\r\n                                <td>{{audit.updatedDate | date: \'MM/dd/yyyy h:mm a \'}}</td>\r\n                                <td>{{audit.updatedBy}}</td>\r\n                                <td style="text-align: center;">\r\n                                    <span class="value">\r\n                                      <label class="wauto">\r\n                                          <input type="checkbox" name="isDeleted" [checked]="audit.isDeleted == true" disabled>\r\n                                      </label>\r\n                                    </span>\r\n                                  </td>\r\n                            </tr>\r\n\r\n                        </tbody>\r\n        \r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" (click)="dismissModelHistory()">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>'},NoKm:function(e,t,a){"use strict";var n=a("mrSG"),r=a("8Y7J"),i=a("G0yt"),o=a("EVdn"),s=a("3LUQ"),l=a("hZbH"),d=a("lGQG"),c=a("wd/R"),p=a("SVse"),u=function(){function e(t,a,n,r,i,o){_classCallCheck(this,e),this.activeModal=t,this.communicationService=a,this.alertService=n,this.authService=r,this.datePipe=i,this.modalService=o,this.isView=!1,this.savedWorkOrderData=[],this.selectedPartNumber={},this.isSubWorkOrder=!1,this.pageSize=10,this.pageIndex=0,this.selectedOnly=!1,this.totalRecords=0,this.data=[],this.headers=[{field:"SERIAL_NO",header:"Serial No"},{field:"description",header:"Memo"},{field:"createdDate",header:"Created Date"},{field:"createdBy",header:"Created By"},{field:"updatedDate",header:"Updated Date"},{field:"updatedBy",header:"Updated By"}],this.selectedColumns=[{field:"SERIAL_NO",header:"Serial No"},{field:"descriptionData",header:"Memo"},{field:"createdDate",header:"Created Date"},{field:"createdBy",header:"Created By"},{field:"updatedDate",header:"Updated Date"},{field:"updatedBy",header:"Updated By"}],this.addList=[],this.moduleName="Communication",this.isSpinnerVisible=!1,this.documentauditHisory=[],this.restorerecord={},this.viewdata={},this.deletedStatusInfo=!1}return _createClass(e,[{key:"ngOnInit",value:function(){}},{key:"ngOnChanges",value:function(){this.referenceId=this.referenceId,this.moduleId=this.moduleId,this.getAllMemoList()}},{key:"dismissModel",value:function(){this.activeModal.close()}},{key:"loadData",value:function(e){this.lazyLoadEventData=e;var t=parseInt(e.first)/e.rows;this.pageIndex=t,this.pageSize=e.rows,e.first=t}},{key:"exportCSV",value:function(e){var t=this;e._value=e._value.map((function(e){return Object.assign({},e,{createdDate:e.createdDate?t.datePipe.transform(e.createdDate,"MMM-dd-yyyy hh:mm a"):"",updatedDate:e.updatedDate?t.datePipe.transform(e.updatedDate,"MMM-dd-yyyy hh:mm a"):""})})),e.exportCSV()}},{key:"closeDeleteModal",value:function(){o("#memodownloadConfirmation").modal("hide")}},{key:"addMemo",value:function(){this.isEdit=!1,this.addList=[],this.addList.push({memoId:"",description:""})}},{key:"edit",value:function(e,t){this.isEdit=!0,this.addList=[e]}},{key:"deleteMemo",value:function(e){var t=this;this.communicationService.deleteCommonMemoList(e.memoId,this.userName).subscribe((function(e){t.alertService.showMessage(t.moduleName,"Deleted Succesfully",s.d.success),t.getAllMemoList()}),(function(e){t.errorMessageHandler()}))}},{key:"openHistory",value:function(e){var t=this;this.communicationService.getCOmmonMemoHistory(e.memoId).subscribe((function(e){t.documentauditHisory=e}),(function(e){t.errorMessageHandler()}))}},{key:"getColorCodeForHistory",value:function(e,t,a){var n=this.documentauditHisory,r=n.length;if(e>=0&&e<=r)return e+1===r||n[e+1][t]===a}},{key:"dismissModelHistory",value:function(){o("#contentHistDocs").modal("hide")}},{key:"deleteMemoConfirmation",value:function(e){this.deletingRow=e,o("#deleteRowConfirmation").modal("show")}},{key:"saveMemo",value:function(){var e=this;if(this.isEdit){o("#addNewMemo").modal("hide");var t=this.formData(this.addList[0]);this.isSpinnerVisible=!0,this.communicationService.updateCommonMemo(t).subscribe((function(t){e.isSpinnerVisible=!1,e.getAllMemoList()}),(function(t){e.errorMessageHandler()}))}else{o("#addNewMemo").modal("hide");var a=this.formData(this.addList[0]);this.isSpinnerVisible=!0,this.communicationService.saveCommonMemo(a).subscribe((function(t){e.isSpinnerVisible=!1,e.getAllMemoList()}),(function(t){e.errorMessageHandler()}))}this.addList=[]}},{key:"formData",value:function(e){var t={MemoCode:0,ModuleId:this.moduleId,ReferenceId:this.referenceId,MasterCompanyId:this.authService.currentUser.masterCompanyId,CreatedBy:"admin",UpdatedBy:"admin",CreatedDate:new Date,UpdatedDate:new Date,IsActive:!0,IsDeleted:!1,Description:e.description};return this.isEdit&&(t.MemoId=e.memoId),t}},{key:"restore",value:function(e,t){this.restorerecord=t,this.modal=this.modalService.open(e,{size:"sm",backdrop:"static",keyboard:!1})}},{key:"restoreRecord",value:function(){var e=this;this.communicationService.restoreMemo(this.restorerecord.memoId,!0,this.userName).subscribe((function(t){e.modal.close(),e.getDeleteListByStatus(!0),e.alertService.showMessage("Success","Successfully Updated Status",s.d.success)}),(function(t){e.errorMessageHandler()}))}},{key:"getViewData",value:function(e){this.viewdata=e}},{key:"dismissModelRestore",value:function(){this.modal.close()}},{key:"getDeleteListByStatus",value:function(e){this.deletedStatusInfo=e||!1,this.isSpinnerVisible=!0,this.getAllMemoList(),this.isSpinnerVisible=!1}},{key:"getAllMemoList",value:function(){var e=this;this.data=[],this.communicationService.getCommonMemoList(this.referenceId,this.moduleId,this.deletedStatusInfo).subscribe((function(t){t&&t.length>0?(t=t.map((function(t){return Object.assign({},t,{descriptionData:e.getString(t.description),createdDate:t.createdDate?e.datePipe.transform(t.createdDate,"MM/dd/yyyy hh:mm a"):"",updatedDate:t.updatedDate?e.datePipe.transform(t.updatedDate,"MM/dd/yyyy hh:mm a"):""})})),e.newdata=t.map((function(e,t){return e.SERIAL_NO=t+1,e})),e.data=e.newdata?e.newdata.reverse():[]):e.data=[],e.totalRecords=t.length,e.totalPages=Math.ceil(e.totalRecords/e.pageSize)}),(function(t){e.errorMessageHandler()}))}},{key:"pageIndexChange",value:function(e){this.pageSize=e.rows}},{key:"getHtml",value:function(e,t){return"description"==t?o.parseHTML(e)[0]:e}},{key:"getPageCount",value:function(e,t){return Math.ceil(e/t)}},{key:"errorMessageHandler",value:function(){this.isSpinnerVisible=!1}},{key:"getString",value:function(e){var t=document.createElement("div");return t.innerHTML=e,t.textContent||t.innerText||""}},{key:"dateFilterForTable",value:function(e,t){e&&(e=c(e).format("MM/DD/YYYY"),c(e).format("MM/DD/YY"),""!=e&&c(e,"MM/DD/YYYY",!0).isValid())}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),e}();u.ctorParameters=function(){return[{type:i.b},{type:l.a},{type:s.b},{type:d.a},{type:p.DatePipe},{type:i.c}]},n.b([Object(r.Input)()],u.prototype,"workOrderId",void 0),n.b([Object(r.Input)()],u.prototype,"isView",void 0),n.b([Object(r.Input)()],u.prototype,"savedWorkOrderData",void 0),n.b([Object(r.Input)()],u.prototype,"selectedPartNumber",void 0),n.b([Object(r.Input)()],u.prototype,"customerContactList",void 0),n.b([Object(r.Input)()],u.prototype,"subWorkOrderDetails",void 0),n.b([Object(r.Input)()],u.prototype,"isSubWorkOrder",void 0),n.b([Object(r.Input)()],u.prototype,"subWOPartNoId",void 0),n.b([Object(r.Input)()],u.prototype,"moduleId",void 0),n.b([Object(r.Input)()],u.prototype,"referenceId",void 0),u=n.b([Object(r.Component)({selector:"app-common-memo",template:n.c(a("6fG1")).default,styles:[n.c(a("Oy8R")).default]})],u);var m=a("Hocb"),h=a("OlR4"),v=function(){function e(t,a,n,r,i,o,s){_classCallCheck(this,e),this.activeModal=t,this.communicationService=a,this.commonService=n,this.alertService=r,this.datePipe=i,this.authService=o,this.modalService=s,this.isView=!1,this.savedWorkOrderData=[],this.selectedPartNumber={},this.phoneViewData={},this.isEdit=!1,this.pageSize=10,this.viewPageSize=10,this.pageIndex=0,this.viewPageIndex=0,this.totalRecords=0,this.viewTotalRecords=0,this.selectedOnly=!1,this.employees=[],this.employeeList=[],this.data=[],this.viewdata=[],this.headers=[{field:"phoneNo",header:"Phone"},{field:"contactBy",header:"Contacted By"},{field:"notes",header:"Notes"},{field:"createdDate",header:"Created Date"},{field:"createdBy",header:"Created By"},{field:"updatedDate",header:"Updated Date"},{field:"updatedBy",header:"Updated By"}],this.selectedColumns=[{field:"phoneNo",header:"Phone"},{field:"contactBy",header:"Contacted By"},{field:"notesData",header:"Notes"},{field:"createdDate",header:"Created Date"},{field:"createdBy",header:"Created By"},{field:"updatedDate",header:"Updated Date"},{field:"updatedBy",header:"Updated By"}],this.addList=[],this.moduleName="Communication",this.isSpinnerVisible=!1,this.ContactList=[],this.setEditArray=[],this.editTextData={},this.arrayContactlist=[],this.restorerecord={},this.deletedStatusInfo=!1,this.disableUpdateButton=!1,this.documentauditHisory=[]}return _createClass(e,[{key:"ngOnInit",value:function(){1==this.type?(this.headers.unshift({field:"customerContact",header:"Customer Contact"}),this.selectedColumns.unshift({field:"customerContact",header:"Customer Contact"})):(this.selectedColumns.unshift({field:"vendorContact",header:"Customer Contact"}),this.headers.unshift({field:"vendorContact",header:"Customer Contact"}))}},{key:"ngOnChanges",value:function(){this.getAllPhoneList(),0==this.isView&&(this.getAllEmployees(""),1==this.type?this.customerContacts(""):this.vendorContacts("")),this.moduleId=this.moduleId,this.referenceId=this.referenceId,this.ContactList=this.ContactList}},{key:"customerContacts",value:function(e){var t=this;this.setEditArray=[],1==this.isEdit?this.setEditArray.push(this.customerContact.customerContactId?this.customerContact.customerContactId:0):this.setEditArray.push(0);var a=e||"";this.commonService.autoDropListCustomerContacts(this.commonContactId,a,20,this.setEditArray.join()).subscribe((function(e){t.ContactList=e.map((function(e){return Object.assign({},e,{contactId:e.contactId,firstName:e.customerContactName})})),t.cusContactList=t.ContactList}),(function(e){}))}},{key:"vendorContacts",value:function(e){var t=this;this.setEditArray=[],1==this.isEdit?this.setEditArray.push():this.setEditArray.push(0);var a=e||"";this.commonService.autoDropListVendorContacts(this.commonContactId,a,20,this.setEditArray.join()).subscribe((function(e){t.ContactList=e.map((function(e){return Object.assign({},e,{contactId:e.contactId,firstName:e.vendoreContactName})})),t.cusContactList=t.ContactList}),(function(e){}))}},{key:"filterCustomerContact",value:function(e){1==this.type?void 0!==e.query&&null!==e.query?this.customerContacts(e.query):this.customerContacts(""):void 0!==e.query&&null!==e.query?this.vendorContacts(e.query):this.vendorContacts("")}},{key:"contactSelected",value:function(e){console.log("ev",e),this.addList[0].phoneNo=e.workPhone}},{key:"getmemo",value:function(){this.disableUpdateButton=!1}},{key:"edit",value:function(e,t){var a=this;this.isEdit=!0,this.disableUpdateButton=!0,console.log("edit Dt",e),this.editTextData=e,1==this.type?this.customerContact={contactId:e.customerContactId,firstName:e.customerContact}:this.customerContact={contactId:e.customerContactId,firstName:e.vendorContact},this.getAllEmployees(""),console.log("edit11 Dt",e),e.contactId==this.authService.currentEmployee.employeeId?e.contactId=this.authService.currentEmployee:setTimeout((function(){a.addList[0].contactId=Object(m.d)("employeeId",e.contactId,a.employees)}),1e3),this.addList=[Object.assign({},e)]}},{key:"getAllEmployees",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";this.arrayContactlist=[],1==this.isEdit?this.editTextData&&"string"==typeof this.editTextData.contactId?this.arrayContactlist.push(this.editTextData?this.editTextData.contactId:0):this.arrayContactlist.push(this.editTextData?this.editTextData.contactId.value:0):this.arrayContactlist.push(0),this.commonService.autoCompleteSmartDropDownEmployeeList("firstName",t,!0,this.arrayContactlist.join()).subscribe((function(t){e.employees=t.map((function(e){return Object.assign({},e,{employeeId:e.value,name:e.label})}))}),(function(t){e.errorMessageHandler()}))}},{key:"restore",value:function(e,t){this.restorerecord=t,this.modal=this.modalService.open(e,{size:"sm",backdrop:"static",keyboard:!1})}},{key:"restoreRecord",value:function(){var e=this;this.communicationService.restorePhone(this.restorerecord.communicationPhoneId,!0,this.userName).subscribe((function(t){e.modal.close(),e.getDeleteListByStatus(!0),e.alertService.showMessage("Success","Successfully Updated Status",s.d.success)}),(function(t){e.errorMessageHandler()}))}},{key:"dismissModelRestore",value:function(){this.modal.close()}},{key:"getDeleteListByStatus",value:function(e){this.deletedStatusInfo=e||!1,this.getAllPhoneList()}},{key:"getAllPhoneList",value:function(){var e=this;this.isSpinnerVisible=!0,this.communicationService.getCommonPhoneData(this.referenceId,this.moduleId,this.deletedStatusInfo,this.type).subscribe((function(t){t=t.map((function(t){return Object.assign({},t,{notesData:e.getString(t.notes)})})),e.isSpinnerVisible=!1,t&&0!=t.length&&(e.data=t.map((function(t){return Object.assign({},t,{createdDate:t.createdDate?e.datePipe.transform(t.createdDate,"MM/dd/yyyy hh:mm a"):"",updatedDate:t.updatedDate?e.datePipe.transform(t.updatedDate,"MM/dd/yyyy hh:mm a"):""})}))),e.totalRecords=t.length,e.totalPages=Math.ceil(e.totalRecords/e.pageSize)}),(function(t){e.errorMessageHandler()}))}},{key:"getString",value:function(e){var t=document.createElement("div");return t.innerHTML=e,t.textContent||t.innerText||""}},{key:"dismissModel",value:function(){this.activeModal.close()}},{key:"exportCSV",value:function(e){var t=this;e._value=e._value.map((function(e){return Object.assign({},e,{createdDate:e.createdDate?t.datePipe.transform(e.createdDate,"MMM-dd-yyyy hh:mm a"):"",updatedDate:e.updatedDate?t.datePipe.transform(e.updatedDate,"MMM-dd-yyyy hh:mm a"):""})})),e.exportCSV()}},{key:"closeDeleteModal",value:function(){o("#phonedownloadConfirmation").modal("hide")}},{key:"loadData",value:function(e){this.lazyLoadEventData=e;var t=parseInt(e.first)/e.rows;this.pageIndex=t,e.first=t}},{key:"addPhone",value:function(){var e=this;this.isEdit=!1,this.addList=[],this.addList.push({phoneNo:"",contactId:this.authService.currentEmployee,notes:""}),this.ContactList.length>0&&this.ContactList.forEach((function(t){e.customerContact=t,e.addList[0].phoneNo=t.workPhone.trim()}))}},{key:"savePhone",value:function(){var e=this;if(this.isEdit){var t=this.formData(this.addList);this.isSpinnerVisible=!0,this.communicationService.updateCommonPhone(t[0]).subscribe((function(t){e.disableUpdateButton=!0,e.isSpinnerVisible=!1,e.getAllPhoneList(),e.isEdit=!1}),(function(t){e.errorMessageHandler()}))}else{var a=this.formData(this.addList);this.isSpinnerVisible=!0,this.communicationService.saveCommonPhone(a[0]).subscribe((function(t){e.isSpinnerVisible=!1,e.getAllPhoneList()}),(function(t){e.errorMessageHandler()}))}this.addList=[],this.customerContact=null}},{key:"formData",value:function(e){var t={PhoneNo:e[0].phoneNo,Notes:e[0].notes,ContactById:this.getEmpId(e[0].contactId),WorkOrderPartNo:this.partNo,customerContactId:(this.type,this.customerContact.contactId),ModuleId:this.moduleId,ReferenceId:this.referenceId,MasterCompanyId:this.authService.currentUser.masterCompanyId,CreatedBy:"admin",UpdatedBy:"admin",CreatedDate:"2019-12-31T04:30:28.21",UpdatedDate:"2019-12-31T04:30:28.21",IsActive:!0,IsDeleted:!1,Phonetype:this.type};return this.isEdit&&(t.communicationPhoneId=e[0].communicationPhoneId),[t]}},{key:"getPhoneData",value:function(e){var t=this;this.communicationService.getPhoneData(this.workOrderId,this.partNo,this.moduleId,e.phoneNo).subscribe((function(e){t.viewdata=e,t.viewTotalRecords=e.length,t.viewTotalPages=Math.ceil(t.totalRecords/t.pageSize)}),(function(e){t.errorMessageHandler()}))}},{key:"getEmpId",value:function(e){return e.employeeId?e.employeeId:null}},{key:"filterEmployee",value:function(e){void 0!==e.query&&null!==e.query?this.getAllEmployees(e.query):this.getAllEmployees("")}},{key:"showDeletePhoneConfirmation",value:function(e){this.deletingRecord=e,o("#deleteRowConfirmation").modal("show")}},{key:"closeRestore",value:function(){o("#deleteRowConfirmation").modal("hide")}},{key:"deletePhone",value:function(e){var t=this;this.isSpinnerVisible=!0,this.communicationService.deleteCommonPhoneList(e.communicationPhoneId,this.userName).subscribe((function(e){t.isSpinnerVisible=!1,t.alertService.showMessage(t.moduleName,"Deleted Succesfully",s.d.success),t.getAllPhoneList()}),(function(e){t.errorMessageHandler()}))}},{key:"getPageCount",value:function(e,t){return Math.ceil(e/t)}},{key:"pageIndexChange",value:function(e){this.pageSize=e.rows}},{key:"viewPageIndexChange",value:function(e){this.viewPageSize=e.rows}},{key:"phoneView",value:function(e){this.phoneViewData=e}},{key:"dismissModelHistory",value:function(){o("#contentHistDocs").modal("hide")}},{key:"openHistory",value:function(e){var t=this;this.communicationService.getCOmmonPhoneHistory(e.communicationPhoneId,this.type).subscribe((function(e){t.documentauditHisory=e}),(function(e){t.errorMessageHandler()}))}},{key:"getColorCodeForHistory",value:function(e,t,a){var n=this.documentauditHisory,r=n.length;if(e>=0&&e<=r)return e+1===r||n[e+1][t]===a}},{key:"errorMessageHandler",value:function(){this.isSpinnerVisible=!1}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),e}();v.ctorParameters=function(){return[{type:i.b},{type:l.a},{type:h.a},{type:s.b},{type:p.DatePipe},{type:d.a},{type:i.c}]},n.b([Object(r.Input)()],v.prototype,"moduleId",void 0),n.b([Object(r.Input)()],v.prototype,"referenceId",void 0),n.b([Object(r.Input)()],v.prototype,"workOrderId",void 0),n.b([Object(r.Input)()],v.prototype,"isView",void 0),n.b([Object(r.Input)()],v.prototype,"savedWorkOrderData",void 0),n.b([Object(r.Input)()],v.prototype,"selectedPartNumber",void 0),n.b([Object(r.Input)()],v.prototype,"commonContactId",void 0),n.b([Object(r.Input)()],v.prototype,"type",void 0),v=n.b([Object(r.Component)({selector:"app-common-phone",template:n.c(a("LPWc")).default,styles:[n.c(a("VQwj")).default]})],v);var g=a("v6zA"),b=function(){function e(t,a,n,r,i,o,s){_classCallCheck(this,e),this.activeModal=t,this.communicationService=a,this.datePipe=n,this.modalService=r,this.commonService=i,this.alertService=o,this.authService=s,this.isView=!1,this.savedWorkOrderData=[],this.selectedPartNumber={},this.isSubWorkOrder=!1,this.disableSaveMemo=!0,this.pageSize=10,this.pageIndex=0,this.selectedOnly=!1,this.totalRecords=0,this.employees=[],this.employeeList=[],this.data=[],this.headers=[{field:"mobile",header:"Mobile"},{field:"contactBy",header:"Contacted By"},{field:"notes",header:"Notes"},{field:"createdDate",header:"Created Date"},{field:"createdBy",header:"Created By"},{field:"updatedDate",header:"Updated Date"},{field:"updatedBy",header:"Updated By"}],this.selectedColumns=[{field:"mobile",header:"Mobile"},{field:"contactBy",header:"Contacted By"},{field:"notesData",header:"Notes"},{field:"createdDate",header:"Created Date"},{field:"createdBy",header:"Created By"},{field:"updatedDate",header:"Updated Date"},{field:"updatedBy",header:"Updated By"}],this.addList=[],this.moduleName="Communication",this.viewdata={},this.viewPageSize=10,this.viewPageIndex=0,this.viewTotalRecords=0,this.isSpinnerVisible=!1,this.phonePattern=Object(g.e)(),this.editTextData={},this.arrayContactlist=[],this.updateDisabledText=!0,this.restorerecord={},this.deletedStatusInfo=!1,this.documentauditHisory=[]}return _createClass(e,[{key:"ngOnInit",value:function(){}},{key:"ngOnChanges",value:function(){this.getAllTextList(),0==this.isView&&this.getAllEmployees(),this.referenceId=this.referenceId,this.moduleId=this.moduleId}},{key:"dismissModel",value:function(){this.modal.close()}},{key:"loadData",value:function(e){this.lazyLoadEventData=e;var t=parseInt(e.first)/e.rows;this.pageIndex=t,this.pageSize=e.rows,e.first=t}},{key:"enableSaveMemo",value:function(){this.disableSaveMemo=!1}},{key:"parsedText",value:function(e){if(e)return(new DOMParser).parseFromString("<!doctype html><body>"+e,"text/html").body.textContent}},{key:"onClickMemo",value:function(){this.memoPopupContent=this.addList[0].notes,this.disableSaveMemo=!0}},{key:"onClickPopupSave",value:function(){this.addList[0].notes=this.memoPopupContent,this.memoPopupContent="",o("#text-memo-popup").modal("hide")}},{key:"closeMemoModel",value:function(){o("#text-memo-popup").modal("hide")}},{key:"addText",value:function(){this.isEdit=!1,this.addList=[],this.addList.push({mobile:"",contactId:this.authService.currentEmployee,notes:""})}},{key:"patternMobilevalidationWithSpl",value:function(e){var t=String.fromCharCode(e.charCode);8==e.keyCode||/[0-9\+\-()\ ]/.test(t)||e.preventDefault()}},{key:"edit",value:function(e,t){var a=this;this.isEdit=!0,this.editTextData=e,console.log("Chnages",this.editTextData),this.updateDisabledText=!0,this.getAllEmployees(""),e.contactId==this.authService.currentEmployee.employeeId?e.contactId=this.authService.currentEmployee:setTimeout((function(){a.addList[0].contactId=Object(m.d)("employeeId",e.contactId,a.employees)}),1e3),this.addList=[Object.assign({},e)]}},{key:"getAllEmployees",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";this.arrayContactlist=[],1==this.isEdit?this.editTextData&&"string"==typeof this.editTextData.contactId?this.arrayContactlist.push(this.editTextData?this.editTextData.contactId:0):this.arrayContactlist.push(this.editTextData?this.editTextData.contactId.value:0):this.arrayContactlist.push(0),this.commonService.autoCompleteSmartDropDownEmployeeList("firstName",t,!0,this.arrayContactlist.join()).subscribe((function(t){e.employees=t.map((function(e){return Object.assign({},e,{employeeId:e.value,name:e.label})}))}),(function(t){e.errorMessageHandler()}))}},{key:"exportCSV",value:function(e){var t=this;e._value=e._value.map((function(e){return Object.assign({},e,{createdDate:e.createdDate?t.datePipe.transform(e.createdDate,"MMM-dd-yyyy hh:mm a"):"",updatedDate:e.updatedDate?t.datePipe.transform(e.updatedDate,"MMM-dd-yyyy hh:mm a"):""})})),e.exportCSV()}},{key:"closeDeleteModal",value:function(){o("#textdownloadConfirmation").modal("hide")}},{key:"savePhone",value:function(){var e=this;if(this.updateDisabledText=!0,this.isEdit){var t=this.formData(this.addList);this.isSpinnerVisible=!0,this.communicationService.updateCommonText(t[0]).subscribe((function(t){e.isSpinnerVisible=!1,e.getAllTextList(),e.isEdit=!1}),(function(t){e.errorMessageHandler()}))}else{var a=this.formData(this.addList);this.isSpinnerVisible=!0,this.communicationService.saveCommonText(a[0]).subscribe((function(t){e.isSpinnerVisible=!1,e.getAllTextList()}),(function(t){e.errorMessageHandler()}))}o("#addNewText").modal("hide"),this.addList=[]}},{key:"formData",value:function(e){var t=this;return e.map((function(e){var a={Mobile:e.mobile,Notes:e.notes,ContactById:t.getEmpId(e.contactId),WorkOrderPartNo:t.partNo,ModuleId:t.moduleId,ReferenceId:t.referenceId,MasterCompanyId:t.authService.currentUser.masterCompanyId,CreatedBy:"admin",UpdatedBy:"admin",CreatedDate:"2019-12-31T04:30:28.21",UpdatedDate:"2019-12-31T04:30:28.21",IsActive:!0,IsDeleted:!1};return t.isEdit&&(a.communicationTextId=e.communicationTextId),a}))}},{key:"getEmpId",value:function(e){return e.employeeId?e.employeeId:null}},{key:"setvaliDate",value:function(){this.updateDisabledText=!1}},{key:"filterEmployee",value:function(e){void 0!==e.query&&null!==e.query?this.getAllEmployees(e.query):this.getAllEmployees("")}},{key:"restore",value:function(e,t){this.restorerecord=t,this.modal=this.modalService.open(e,{size:"sm",backdrop:"static",keyboard:!1})}},{key:"dismissModelRestore",value:function(){this.modal.close()}},{key:"restoreRecord",value:function(){var e=this;this.communicationService.restoreText(this.restorerecord.communicationTextId,!0,this.userName).subscribe((function(t){e.modal.close(),e.getDeleteListByStatus(!0),e.alertService.showMessage("Success","Successfully Updated Status",s.d.success)}),(function(t){e.errorMessageHandler()}))}},{key:"getDeleteListByStatus",value:function(e){this.deletedStatusInfo=e||!1,this.getAllTextList()}},{key:"getAllTextList",value:function(){var e=this;this.isSpinnerVisible=!0,this.communicationService.getCOmmonTextList(this.referenceId,this.moduleId,this.deletedStatusInfo).subscribe((function(t){t&&0!=t.length&&(t=t.map((function(t){return Object.assign({},t,{notesData:e.getString(t.notes),createdDate:t.createdDate?e.datePipe.transform(t.createdDate,"MM/dd/yyyy hh:mm a"):"",updatedDate:t.updatedDate?e.datePipe.transform(t.updatedDate,"MM/dd/yyyy hh:mm a"):""})}))),e.isSpinnerVisible=!1,e.data=t,e.totalRecords=t.length,e.totalPages=Math.ceil(e.totalRecords/e.pageSize)}),(function(t){e.errorMessageHandler()}))}},{key:"getString",value:function(e){var t=document.createElement("div");return t.innerHTML=e,t.textContent||t.innerText||""}},{key:"deleteText",value:function(e){var t=this;this.isSpinnerVisible=!0,this.communicationService.deleteCommonTextList(e.communicationTextId,this.userName).subscribe((function(e){t.isSpinnerVisible=!1,t.alertService.showMessage(t.moduleName,"Deleted Succesfully",s.d.success),t.getAllTextList()}),(function(e){t.errorMessageHandler()}))}},{key:"pageIndexChange",value:function(e){this.pageSize=e.rows}},{key:"getPageCount",value:function(e,t){return Math.ceil(e/t)}},{key:"viewPageIndexChange",value:function(e){this.viewPageSize=e.rows}},{key:"getViewData",value:function(e){this.viewdata=e}},{key:"dismissModelHistory",value:function(){o("#contentHistDocs").modal("hide")}},{key:"openHistory",value:function(e){var t=this;this.communicationService.getCOmmonTextHistory(e.communicationTextId).subscribe((function(e){t.documentauditHisory=e}))}},{key:"getColorCodeForHistory",value:function(e,t,a){var n=this.documentauditHisory,r=n.length;if(e>=0&&e<=r)return e+1===r||n[e+1][t]===a}},{key:"errorMessageHandler",value:function(){this.isSpinnerVisible=!1}},{key:"enableSave",value:function(){}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),e}();b.ctorParameters=function(){return[{type:i.b},{type:l.a},{type:p.DatePipe},{type:i.c},{type:h.a},{type:s.b},{type:d.a}]},n.b([Object(r.Input)()],b.prototype,"moduleId",void 0),n.b([Object(r.Input)()],b.prototype,"referenceId",void 0),n.b([Object(r.Input)()],b.prototype,"workOrderId",void 0),n.b([Object(r.Input)()],b.prototype,"isView",void 0),n.b([Object(r.Input)()],b.prototype,"savedWorkOrderData",void 0),n.b([Object(r.Input)()],b.prototype,"selectedPartNumber",void 0),n.b([Object(r.Input)()],b.prototype,"customerContactList",void 0),n.b([Object(r.Input)()],b.prototype,"subWorkOrderDetails",void 0),n.b([Object(r.Input)()],b.prototype,"isSubWorkOrder",void 0),n.b([Object(r.Input)()],b.prototype,"subWOPartNoId",void 0),b=n.b([Object(r.Component)({selector:"app-common-text",template:n.c(a("0l2l")).default,styles:[n.c(a("jyDa")).default]})],b);var y=a("JPLv"),f=a("Q3MU"),S=a("IBlc"),I=function(){function e(t,a,n,r,i,o,s,l,d){_classCallCheck(this,e),this.activeModal=t,this.communicationService=a,this.commonService=n,this.datePipe=r,this.authService=i,this.modalService=o,this.salesQuoteService=s,this.alertService=l,this.configurations=d,this.isView=!1,this.selectedPartNumber={},this.ContactList=[],this.emailPattern=Object(g.a)(),this.formData=new FormData,this.pageSize=10,this.pageIndex=0,this.totalRecords=0,this.totalPages=0,this.data=[],this.headers=[{field:"emailType",header:"Email Type"},{field:"toEmail",header:"To Email"},{field:"subject",header:"Subject"},{field:"contactBy",header:"Contacted By"},{field:"contactDate",header:"Contact Date"}],this.selectedColumns=this.headers,this.addList=[],this.selectedOnly=!1,this.employeeList=[],this.employeesOriginalData=[],this.emailViewData={},this.customerDetails={},this.moduleName="Communication",this.isSpinnerVisible=!1,this.setEditArray=[],this.arrayContactlist=[],this.restorerecord={},this.documentauditHisory=[],this.deletedStatusInfo=!1,this.isEditMode=!1}return _createClass(e,[{key:"ngOnInit",value:function(){1==this.type?this.headers.unshift({field:"customerContact",header:"Customer Contact"}):this.headers.unshift({field:"vendorContact",header:"Customer Contact"})}},{key:"ngOnChanges",value:function(){0==this.isView&&(this.getAllEmployees(""),this.getAllEmailType("")),this.getAllEmail(),this.moduleId=this.moduleId,this.referenceId=this.referenceId}},{key:"dismissModel",value:function(){this.modal.close()}},{key:"filterCustomerContact",value:function(e){1==this.type?void 0!==e.query&&null!==e.query?this.customerContacts(e.query):this.customerContacts(""):void 0!==e.query&&null!==e.query?this.vendorContacts(e.query):this.vendorContacts("")}},{key:"customerContacts",value:function(e){var t=this;this.setEditArray=[],this.setEditArray.push(0);var a=e||"";this.commonService.autoDropListCustomerContacts(this.commonContactId,a,20,this.setEditArray.join()).subscribe((function(e){t.ContactList=e.map((function(e){return Object.assign({},e,{contactId:e.contactId,firstName:e.customerContactName})})),t.cusContactList=t.ContactList}),(function(e){}))}},{key:"vendorContacts",value:function(e){var t=this;this.setEditArray=[],this.setEditArray.push(0);var a=e||"";this.commonService.autoDropListVendorContacts(this.commonContactId,a,20,this.setEditArray.join()).subscribe((function(e){t.ContactList=e.map((function(e){return Object.assign({},e,{contactId:e.vendorContactId,firstName:e.vendoreContactName})})),t.cusContactList=t.ContactList}),(function(e){}))}},{key:"loadData",value:function(e){this.lazyLoadEventData=e;var t=parseInt(e.first)/e.rows;this.pageIndex=t,this.pageSize=e.rows,e.first=t}},{key:"addMemo",value:function(){var e=this;this.isEditMode=!1,this.formData=new FormData,this.ContactList.length>0&&this.ContactList.forEach((function(t){console.log("cc",t),e.customerContact=t,e.contactSelected(t)})),this.bcc="",this.cc="",this.emailBody="",this.contactBy=this.authService.currentEmployee,this.subject="",this.emailTypes.forEach((function(t){"Manual"==t.label&&(e.emailType=t.value)})),this.fileUploadInput.clear(),this.addList.push({memoId:"",memo:""})}},{key:"contactSelected",value:function(e){console.log("even",e),this.toEmail=e.email?e.email:""}},{key:"showDeleteConfirmation",value:function(e){this.deletingRecord=e}},{key:"delete",value:function(e){var t=this;this.isSpinnerVisible=!0,this.communicationService.deleteCommonEmailList(e.emailId,this.userName).subscribe((function(){t.isSpinnerVisible=!1,t.alertService.showMessage(t.moduleName,"Deleted Succesfully",s.d.success),t.getAllEmail()}),(function(e){t.errorMessageHandler()}))}},{key:"fileUpload",value:function(e){var t,a=_createForOfIteratorHelper(e.files);try{for(a.s();!(t=a.n()).done;){var n=t.value;this.formData.append(n.name,n)}}catch(r){a.e(r)}finally{a.f()}}},{key:"removeFile",value:function(e){this.formData.delete(e.file.name)}},{key:"send",value:function(e){if(e)if("SalesQuote"==this.CurrentModuleName){var t=this.emailQuotePopup;this.getQuotePDF(),this.modal=this.modalService.open(t,{size:"sm"})}else if("SalesOrder"==this.CurrentModuleName){var a=this.emailQuotePopup;this.getSOPDF(),this.modal=this.modalService.open(a,{size:"sm"})}else this.triggerMail()}},{key:"triggerMailSalesQuote",value:function(){var e=this;this.formData=new FormData,null==this.cc&&(this.cc=""),null==this.bcc&&(this.bcc="");var t={WorkOrderPartNo:this.selectedPartNumber.workOrderPartNumberId,fromEmail:S.a.FROM_EMAIL_FOR_SENDING_MAIL,toEmail:this.toEmail,masterCompanyId:this.authService.currentUser.masterCompanyId,cc:this.cc,bcc:this.bcc,subject:this.subject,emailBody:this.emailBody,moduleId:this.moduleId,referenceId:this.referenceId,createdBy:this.userName,updatedBy:this.userName,createdDate:new Date,updatedDate:new Date,isActive:!0,isDeleted:!1,contactById:this.contactBy.employeeId,emailType:this.emailType,Type:this.type,customerContact:(this.type,this.customerContact.contactId)};for(var a in t)this.formData.append(a,t[a]);this.isSpinnerVisible=!0,("SalesQuote"==this.CurrentModuleName||"SalesOrder"==this.CurrentModuleName)&&(this.closeModal(),o("#addNewMemo").modal("hide")),this.communicationService.saveAndUpdateEmail(this.formData).subscribe((function(t){e.isSpinnerVisible=!1,e.contactBy=null,e.emailType=null,e.cc="",e.bcc="",e.toEmail="",e.emailBody="",e.subject="","SalesQuote"!=e.CurrentModuleName&&o("#addNewMemo").modal("hide"),e.alertService.showMessage("Success","Successfully Sent Email",s.d.success),e.getAllEmail(),e.fileUploadInput&&e.fileUploadInput.clear()}),(function(t){e.errorMessageHandler()}))}},{key:"triggerMail",value:function(){var e=this,t={WorkOrderPartNo:this.partNo,fromEmail:S.a.FROM_EMAIL_FOR_SENDING_MAIL,toEmail:this.toEmail,masterCompanyId:this.authService.currentUser.masterCompanyId,cc:this.cc,bcc:this.bcc,subject:this.subject,emailBody:this.emailBody,moduleId:this.moduleId,referenceId:this.referenceId,createdBy:this.userName,updatedBy:this.userName,createdDate:new Date,updatedDate:new Date,isActive:!0,isDeleted:!1,contactById:this.contactBy.employeeId,emailType:this.emailType,customerContactId:1==this.type?this.customerContact.customerContactId:this.customerContact.vendorContactId,Type:this.type};for(var a in t)this.formData.append(a,t[a]);this.isSpinnerVisible=!0,o("#addNewMemo").modal("hide"),this.communicationService.saveAndUpdateEmail(this.formData).subscribe((function(t){e.isSpinnerVisible=!1,e.contactBy=null,e.emailType=null,e.cc="",e.bcc="",e.toEmail="",e.emailBody="",e.subject="",e.alertService.showMessage("Success","Successfully Sent Email",s.d.success),e.getAllEmail(),"SalesQuote"==e.CurrentModuleName&&e.closeModal()}),(function(t){e.errorMessageHandler()}))}},{key:"emailView",value:function(e){var t=this;this.isSpinnerVisible=!0,this.communicationService.getEmailDataByEmailId(e.emailId).subscribe((function(e){t.isSpinnerVisible=!1,t.emailViewData=e}),(function(e){t.errorMessageHandler()}))}},{key:"downloadFileUpload",value:function(e){var t="".concat(this.configurations.baseUrl,"/api/FileUpload/downloadattachedfile?filePath=").concat(e);window.location.assign(t)}},{key:"exportCSV",value:function(e){var t=this;e._value=e._value.map((function(e){return Object.assign({},e,{contactDate:e.contactDate?t.datePipe.transform(e.contactDate,"MMM-dd-yyyy hh:mm a"):""})})),e.exportCSV()}},{key:"closeDeleteModal",value:function(){o("#emaildownloadConfirmation").modal("hide")}},{key:"getQuotePDF",value:function(){var e=this;this.isSpinnerVisible=!0,this.communicationService.soqsendmailpdfpreview(this.referenceId).subscribe((function(t){e.isSpinnerVisible=!1,e.pdfPath=t}),(function(t){e.errorMessageHandler()}))}},{key:"getSOPDF",value:function(){var e=this;this.isSpinnerVisible=!0,this.communicationService.sosendmailpdfpreview(this.referenceId).subscribe((function(t){e.isSpinnerVisible=!1,e.pdfPath=t}),(function(t){e.errorMessageHandler()}))}},{key:"getAllEmployees",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";this.arrayContactlist.push(0),this.commonService.autoCompleteSmartDropDownEmployeeList("firstName",t,!0,this.arrayContactlist.join()).subscribe((function(t){e.employeeList=t.map((function(e){return Object.assign({},e,{employeeId:e.value,name:e.label})}))}),(function(t){e.errorMessageHandler()}))}},{key:"filterEmployee",value:function(e){void 0!==e.query&&null!==e.query?this.getAllEmployees(e.query):this.getAllEmployees("")}},{key:"filterEmployee1",value:function(e){if(this.employeeList=this.employeesOriginalData,void 0!==e.query&&null!==e.query){var t=_toConsumableArray(this.employeesOriginalData.filter((function(t){return t.label.toLowerCase().includes(e.query.toLowerCase())})));this.employeeList=t}}},{key:"restore",value:function(e,t){this.restorerecord=t,this.modal=this.modalService.open(e,{size:"sm",backdrop:"static",keyboard:!1})}},{key:"restoreRecord",value:function(){var e=this;this.communicationService.restoreEmail(this.restorerecord.emailId,!0,this.userName).subscribe((function(t){e.modal.close(),e.getDeleteListByStatus(!0),e.alertService.showMessage("Success","Successfully Updated Status",s.d.success)}),(function(t){e.errorMessageHandler()}))}},{key:"openHistory",value:function(e){var t=this;this.communicationService.getCOmmonEmailHistory(e.emailId).subscribe((function(e){t.documentauditHisory=e}),(function(e){t.errorMessageHandler()}))}},{key:"getColorCodeForHistory",value:function(e,t,a){var n=this.documentauditHisory,r=n.length;if(e>=0&&e<=r)return e+1===r||n[e+1][t]===a}},{key:"dismissModelRestore",value:function(){this.modal.close()}},{key:"getDeleteListByStatus",value:function(e){this.deletedStatusInfo=e||!1,this.getAllEmail()}},{key:"getAllEmail",value:function(){var e=this;this.isSpinnerVisible=!0,this.communicationService.getCommonEmailList(this.referenceId,this.moduleId,this.deletedStatusInfo,this.type).subscribe((function(t){e.isSpinnerVisible=!1,t&&0!=t.length&&(e.data=t.map((function(t){return Object.assign({},t,{contactDate:t.contactDate?e.datePipe.transform(t.contactDate,"MM/dd/yyyy hh:mm a"):"",createdDate:t.createdDate?e.datePipe.transform(t.createdDate,"MM/dd/yyyy hh:mm a"):"",updatedDate:t.updatedDate?e.datePipe.transform(t.updatedDate,"MM/dd/yyyy hh:mm a"):""})})))}),(function(t){e.errorMessageHandler()}))}},{key:"getAllEmailType",value:function(e){var t=this;this.setEditArray=[],this.setEditArray.push(0);var a=e||"";this.commonService.autoSuggestionSmartDropDownList("EmailType","EmailTypeId","Name",a,!0,20,this.setEditArray.join()).subscribe((function(e){t.emailTypes=e}),(function(e){t.errorMessageHandler()}))}},{key:"editEmail",value:function(e){this.toEmail=e.toEmail,this.cc=e.cc,this.bcc=e.bcc,this.subject=e.subject,this.emailBody=e.emailBody,this.contactBy=e.contactBy,this.emailType=e.emailType,this.isEditMode=!0}},{key:"getPageCount",value:function(e,t){return Math.ceil(e/t)}},{key:"closeModal",value:function(){this.modal.close(),this.fileUploadInput&&this.fileUploadInput.clear()}},{key:"dismissModelHistory",value:function(){o("#contentHistDocs").modal("hide")}},{key:"checkValidEmails",value:function(){var e=!1,t=/^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/;if(this.cc||this.bcc){if(e=!0,this.cc){var a=this.cc.split(","),n=!1;if(a.forEach((function(e){t.test(e)||(n=!0)})),n)return!0}if(this.bcc){var r=this.bcc.split(","),i=!1;if(r.forEach((function(e){t.test(e)||(i=!0)})),i)return!0}e=!1}return e}},{key:"errorMessageHandler",value:function(){this.isSpinnerVisible=!1}},{key:"downloadFile",value:function(e){}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),e}();I.ctorParameters=function(){return[{type:i.b},{type:l.a},{type:h.a},{type:p.DatePipe},{type:d.a},{type:i.c},{type:f.a},{type:s.b},{type:y.a}]},n.b([Object(r.Input)()],I.prototype,"moduleId",void 0),n.b([Object(r.Input)()],I.prototype,"CurrentModuleName",void 0),n.b([Object(r.Input)()],I.prototype,"referenceId",void 0),n.b([Object(r.ViewChild)("fileUploadInput",{static:!1})],I.prototype,"fileUploadInput",void 0),n.b([Object(r.Input)()],I.prototype,"workOrderId",void 0),n.b([Object(r.Input)()],I.prototype,"isView",void 0),n.b([Object(r.Input)()],I.prototype,"selectedPartNumber",void 0),n.b([Object(r.Input)()],I.prototype,"type",void 0),n.b([Object(r.Input)()],I.prototype,"commonContactId",void 0),n.b([Object(r.ViewChild)("emailQuotePopup",{static:!1})],I.prototype,"emailQuotePopup",void 0),I=n.b([Object(r.Component)({selector:"app-common-email",template:n.c(a("Wf8N")).default,encapsulation:r.ViewEncapsulation.None,styles:[n.c(a("wOIX")).default]})],I);var T=a("8YFm"),C=a("UPO+"),A=a("Mz6y"),x=a("NGzr"),D=a("DgWh"),M=a("Jfay"),w=a("s7LF"),k=a("sa3O"),P=function(){function e(t,a){_classCallCheck(this,e),this.activeModal=t,this.commonService=a,this.isViewMode=!1,this.memoStyle=!1,this.emailstyle=!1,this.phoneStyle=!1,this.textStyle=!1,this.attachmoduleList=[]}return _createClass(e,[{key:"ngOnInit",value:function(){this.selectedTab(1),this.memoStyle=!0,this.idForContact=this.idForContact}},{key:"ngOnChanges",value:function(){this.moduleName=this.moduleName,this.referenceId=this.referenceId,this.selectedTab(1),this.getModuleList(),this.memoStyle=!0}},{key:"selectedTab",value:function(e){1==e?(this.memoStyle=!0,this.emailstyle=!1,this.phoneStyle=!1,this.textStyle=!1):2==e?(this.memoStyle=!1,this.emailstyle=!0,this.phoneStyle=!1,this.textStyle=!1):3==e?(this.memoStyle=!1,this.emailstyle=!1,this.phoneStyle=!0,this.textStyle=!1):4==e&&(this.memoStyle=!1,this.emailstyle=!1,this.phoneStyle=!1,this.textStyle=!0)}},{key:"getModuleList",value:function(){var e=this;this.commonService.smartDropDownList("Module","ModuleId","ModuleName").subscribe((function(t){e.attachmoduleList=t,e.attachmoduleList.forEach((function(t){t.label==e.moduleName&&(e.moduleId=t.value)}))}),(function(e){}))}}]),e}();P.ctorParameters=function(){return[{type:i.b},{type:h.a}]},n.b([Object(r.Input)()],P.prototype,"referenceId",void 0),n.b([Object(r.Input)()],P.prototype,"isViewMode",void 0),n.b([Object(r.Input)()],P.prototype,"moduleName",void 0),n.b([Object(r.Input)()],P.prototype,"idForContact",void 0),n.b([Object(r.Input)()],P.prototype,"type",void 0),P=n.b([Object(r.Component)({selector:"app-communication",template:n.c(a("QbUr")).default,encapsulation:r.ViewEncapsulation.None,styles:[n.c(a("5Eom")).default]})],P),a.d(t,"a",(function(){return N}));var N=function e(){_classCallCheck(this,e)};N=n.b([Object(r.NgModule)({declarations:[u,v,b,I,P],imports:[p.CommonModule,T.TableModule,A.a,x.FileUploadModule,C.a,D.EditorModule,M.MultiSelectModule,w.FormsModule,k.AutoCompleteModule],exports:[u,v,b,I,P]})],N)},Oy8R:function(e,t,a){"use strict";a.r(t),t.default=".p_textEditor {\n  margin: 0;\n  padding: 0;\n}\n\n.btn-edit {\n  position: relative;\n  top: 4px;\n}"},QbUr:function(e,t,a){"use strict";a.r(t),t.default='<div>\r\n    <div class="mt-2" style="margin-bottom: 12px;">\r\n        \x3c!-- <ul class="nav nav-pills"> --\x3e\r\n           <button class="btn btn-default grayCls"  [ngClass]="memoStyle ? \'btn-primary\' : \'\'" style="margin-right: 3px; " (click)="selectedTab(1)">Memo</button>\r\n           <button class="btn btn-default grayCls" [ngClass]="emailstyle ? \'btn-primary\' : \'\'" style="margin-right: 3px; " (click)="selectedTab(2)" >Email</button>\r\n           <button class="btn btn-default grayCls" [ngClass]="phoneStyle ? \'btn-primary\' : \'\'" style="margin-right: 3px; " (click)="selectedTab(3)">Phone</button>\r\n           <button class="btn btn-default grayCls" [ngClass]="textStyle ? \'btn-primary\' : \'\'" style="margin-right: 3px; " (click)="selectedTab(4)" >Text</button>\r\n        \r\n    </div>\r\n    <div *ngIf="moduleId && referenceId">\r\n       <div *ngIf="memoStyle">\r\n        <app-common-memo [isView]="isViewMode" [moduleId]="moduleId" [referenceId]="referenceId"></app-common-memo>\r\n       </div>\r\n       <div *ngIf="emailstyle">\r\n            \x3c!-- type ==1 for customer, type==2 for vendor contacts --\x3e\r\n        <app-common-email [isView]="isViewMode" [type]="type" [commonContactId]="idForContact" [CurrentModuleName]="moduleName" [moduleId]="moduleId" [referenceId]="referenceId"></app-common-email>\r\n       </div>\r\n       <div *ngIf="phoneStyle">\r\n           \x3c!-- type ==1 for customer, type==2 for vendor contacts --\x3e\r\n        <app-common-phone [isView]="isViewMode" [type]="type"  [moduleId]="moduleId" [commonContactId]="idForContact" [referenceId]="referenceId"></app-common-phone>\r\n       </div>\r\n       <div *ngIf="textStyle">\r\n        <app-common-text [isView]="isViewMode" [moduleId]="moduleId" [referenceId]="referenceId"></app-common-text>\r\n       </div>\r\n    </div>\r\n</div>'},VQwj:function(e,t,a){"use strict";a.r(t),t.default='.select-read-only {\n  border: none;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  text-indent: 1px;\n  text-overflow: "";\n  box-shadow: none !important;\n}\n\nselect-read-only {\n  background-color: white !important;\n}\n\nselect:disabled {\n  background-color: white !important;\n}\n\ninput[type=number], input[type=text], input[type=email], select {\n  height: 24px !important;\n  border-radius: 5px !important;\n}'},Wf8N:function(e,t,a){"use strict";a.r(t),t.default='<div class="card new-card">\r\n    \x3c!-- <div class="col-md-12">\r\n        <h4 class="po-head-sm">\r\n            Communication - Email\r\n            <a href="#" data-toggle="modal" data-target="#addNewMemo" (click)="addMemo()" *ngIf="!isView">\r\n                <i class="fa fa-plus-circle fa-lg"></i></a>\r\n        </h4>\r\n    </div> --\x3e\r\n    <div class="card-header header">\r\n        <div class="row">\r\n          <div class="col">\r\n            <h4 class="header-name">  Communication - Email </h4>\r\n          </div>\r\n          <div>\r\n            <button *ngIf="!isView"   \r\n              type="button"\r\n              class="btn-sm header-button"\r\n              data-toggle="modal" data-target="#addNewMemo" (click)="addMemo()">\r\n             Create Email\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n<div class="card-body header-body">\r\n    <p-table #dt class="rpo-table-cstm rro-table-cstm ptable-f10" [value]="data" [first]="0" [rows]="pageSize"\r\n        [paginator]="true" [pageLinks]="3" [rowsPerPageOptions]="[10, 20, 50, 100]" [columns]="selectedColumns"\r\n        selectionMode="multiple" [metaKeySelection]="true" [lazy]="false" [resizableColumns]="true"\r\n        [reorderableColumns]="true" [totalRecords]="totalRecords" [scrollable]="true" scrollHeight="450px">\r\n        \x3c!--(onLazyLoad)="loadData($event)"--\x3e\r\n        <ng-template pTemplate="caption">\r\n  \r\n            <div class="row">\r\n                <div class="col">\r\n                    <p-multiSelect [options]="headers" [(ngModel)]="selectedColumns" [ngModelOptions]="{ standalone: true }"\r\n                    optionLabel="header" selectedItemsLabel="{0} columns selected"\r\n                    class="multiselect-field"\r\n                    defaultLabel="Choose Columns"></p-multiSelect>\r\n              \r\n              \r\n                </div>\r\n                \r\n            \t<div class="col">\r\n                    <div\t\t\t\t\t\r\n                      class="global-search-field inner-addon right-addon inline-block"\r\n                    >\r\n                    <i class="fa fa-search"></i>\r\n                    <input type="text" pInputText size="50" class="form-control"\r\n                        (input)="dt.filterGlobal($event.target.value, \'contains\')" placeholder=" Filter"\r\n                       />\r\n                </div>\r\n            </div>\r\n            </div>\r\n            <div class="row">\r\n            <div class="col">\r\n                <button type="button" class="btn btn-primary exports-button" matTooltip="Download Data" matTooltipPosition="above"\r\n                pButton icon="fa-download" iconPos="left" label="Export Data"\r\n                data-toggle="modal" \r\n                (click)="selectedOnly = false; targetData = dt;"\r\n                 data-target="#emaildownloadConfirmation"></button>\r\n            <button type="button" class="btn btn-primary exports-button" matTooltip="Download Selected Data"\r\n                matTooltipPosition="above" pButton icon="fa-download" iconPos="left" label="Export Selected Data"\r\n                (click)="dt.exportCSV({ selectionOnly: true })"></button>\r\n            </div>\r\n            <div class="pull-right buttons-div-align">\r\n                <div class="col">\r\n                  <div class="col buttons-top-padding">\r\n                  <div class="form-group" style="float: right;"> \r\n                 <div class="checkbox-cstm pull-left checkbox-align">\r\n                        <label class="checkbox-label-align">\r\n                            <input type="checkbox" [(ngModel)]="deletedStatusInfo" name="cparent55" id="cparent55" (click)="getDeleteListByStatus($event.target.checked)" />\r\n                            <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                            Show  Deleted List\r\n                        </label>\r\n                    </div>\r\n                    </div>\r\n                    </div>\r\n\r\n              </div>\r\n          </div>\r\n          </div>\r\n        </ng-template>\r\n        <ng-template pTemplate="colgroup" let-columns>\r\n            <colgroup>\r\n                <col *ngFor="let col of columns" class="table-column-width">\r\n            </colgroup>\r\n        </ng-template>\r\n        <ng-template pTemplate="header" let-columns>\r\n            <tr>\r\n                <th class="table-column-width" *ngFor="let col of columns" pResizableColumn pReorderableColumn\r\n                    [pSortableColumn]="col.field">\r\n                    {{ col.header }}\r\n                    <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                </th>\r\n                <th class="table-actions-column">\r\n                    Actions\r\n                </th>\r\n            </tr>\r\n            <tr>\r\n                <th class="table-column-width" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                    <input class="table-header-input-width" pInputText type="text" class="incorn_border" (input)="\r\n                            dt.filter($event.target.value, col.field, \'contains\')\r\n                        " />\r\n                </th>\r\n                <th class="table-actions-column" ></th>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate="body" let-rowData let-columns="columns">\r\n            <tr [pSelectableRowDblClick]="rowData" [pSelectableRow]="rowData">\r\n                <td class="table-column-width" *ngFor="let col of columns" class="ui-resizable-column" pReorderableRowHandle>\r\n                    \x3c!-- {{rowData[col.field]}} --\x3e\r\n                    \x3c!-- <td *ngIf="col.field !=\'SERIAL_NO\' && col.field!=\'description\'"> --\x3e\r\n                        {{\r\n                            col.field == \'createdDate\'\r\n                              ? (rowData[col.field] | date: \'MM/dd/yyyy h:mm a\')\r\n                              : rowData[col.field] && col.field == \'contactDate\'\r\n                              ? (rowData[col.field] | date: \'MM/dd/yyyy h:mm a\')\r\n                              : rowData[col.field] \r\n                          }}\r\n                    \x3c!-- </td> --\x3e\r\n                </td>\r\n                <td class="action-icons-cstm table-column-width">\r\n                    \x3c!-- <button class="btn-edit ptable-wo-btns" mat-icon-button data-target="#addNewMemo" data-toggle="modal"\r\n                            (click)="editEmail(rowData)" matTooltip="Edit">\r\n                                <mat-icon>edit</mat-icon>\r\n                            </button> --\x3e\r\n                    <span ><a class="btn nobg btn-view-cstm" data-toggle="modal" data-target="#viewEmail"\r\n                            (click)="emailView(rowData)" matTooltip="View" matTooltipPosition="above"><i\r\n                                class="fa fa-eye"></i></a> </span>\r\n                    <span  *ngIf="deletedStatusInfo==false && !isView" data-toggle="modal" data-target="#deleteRowConfirmation"><a class="btn nobg btn-delete-cstm"\r\n                            (click)="showDeleteConfirmation(rowData)" matTooltip="Delete" matTooltipPosition="above"><i\r\n                                class="fa fa-trash"></i></a> </span>\r\n                    \x3c!-- <button class="btn btn-danger nobg" > (click)="data.splice(i, 1)"\r\n                                <a href="#" data-toggle="modal" data-target="#viewEmail" (click)="emailView(rowData)">\r\n                            <i _ngcontent-c313="" class="fa fa-eye view_icon_adjust"></i></a>\r\n                        </button> --\x3e\r\n                    \x3c!-- <button class="btn btn-danger nobg" (click)="addList.splice(i, 1)">\r\n                                <i class="fa fa-trash"></i>\r\n                            </button> --\x3e\r\n                            <span data-target="#contentHistDocs" data-toggle="modal"><a class="btn nobg" \r\n                                (click)="openHistory(rowData)"\r\n                                 matTooltip="History"  matTooltipPosition="above">\r\n                                 <i class="fa fa-history"></i></a></span>\r\n                            <span *ngIf="deletedStatusInfo==true && !isView">\r\n                                <a class="btn nobg" (click)="restore(restoreId,rowData);"  matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                </td>\r\n            </tr>\r\n        </ng-template>\r\n        \x3c!-- <ng-template pTemplate="summary" id="footer">\r\n                <label id="footer" class="footer">No\'of records:</label>\r\n                <input style="width: 5%;"\r\n                        [(ngModel)]="totalRecords"\r\n                        [disabled]="true"\r\n                        pInputText\r\n                        type="text" />\r\n                &nbsp;&nbsp;\r\n                <label id="footer" class="footer1">Pages Count:</label>\r\n                <input style="width: 5%;"\r\n                        [(ngModel)]="totalPages"\r\n                        [disabled]="true"\r\n                        pInputText\r\n                        type="text" />\r\n            </ng-template> --\x3e\r\n        <ng-template pTemplate="emptymessage" let-columns *ngIf="data.length == 0">\r\n            <tr>\r\n                <td colspan="7" class="no-records-cstm no-records-msg">\r\n                    No records found\r\n                </td>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate="summary" id="footer">\r\n            <label id="footer">Total:</label>\r\n            <input class="footer-input-width" [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText type="text" />\r\n            &nbsp;&nbsp;\r\n            <label id="footer">Pages Count:</label>\r\n            <input class="footer-input-width" [ngModel]="getPageCount(dt._totalRecords, pageSize)" [disabled]="true" pInputText\r\n                type="text" />\r\n        </ng-template>\r\n    </p-table>\r\n    <ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n    \r\n        <div class="modal-header">\r\n            <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n      \r\n            <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n                <span aria-hidden="true">&times;</span>\r\n            </button>\r\n        </div>\r\n        <div class="modal-body" *ngIf="restorerecord">\r\n            <strong>\r\n               To Email:\r\n                <span class="new-label">{{restorerecord.toEmail}}</span>\r\n            </strong>\r\n        </div>\r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-primary" (click)="restoreRecord()">Yes</button>\r\n            <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n        </div>\r\n      </ng-template> \r\n</div>\r\n</div>\r\n<div  id="contentHistDocs" #contentHistDocs class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-xlg">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n\r\n                <h4 class="modal-title">History of Email</h4>\r\n                <button type="button" class="close" aria-label="Close" (click)="dismissModelHistory()">\r\n                    <span aria-hidden="true">&times;</span>\r\n                </button>\r\n        \r\n        \r\n            </div>\r\n            <div class="modal-body">\r\n                \x3c!-- <div class="col-md-12 shadow-box-cstm">\r\n                    <div class="col-md-4">\r\n                        <p class="fs12">\r\n                            <label class="control-label labels-font-header"\r\n                             style="width: auto;">Legal Entity Name: </label>\r\n                            <span class="span-header-red"\r\n                             style="text-transform: capitalize"> {{legalEntityName }}\r\n                             </span>\r\n                        </p>\r\n                    </div>\r\n                    <div class="col-md-4">\r\n                        <p class="fs12">\r\n                            <label class="control-label labels-font-header"\r\n                             style="width: auto;">Company Code: </label>\r\n                            <span class="span-header-red" \r\n                            style="text-transform: capitalize"> {{legalEntityCode }} \r\n                        </span>\r\n                        </p>\r\n                    </div>\r\n                </div> --\x3e\r\n                <div class="table-responsive history_hg">\r\n                    <table class="table table-bordered">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Email Type</th>\r\n                                <th>To Email</th>\r\n                                <th>CC </th>\r\n                                <th>BCC </th>\r\n                                <th>Subject</th>\r\n                                <th>Contacted By</th>\r\n                                <th>Contact Date</th>\r\n                                <th><span *ngIf="type==1">Customer</span> <span *ngIf="type==2">Vendor</span> Contact</th>\r\n                                <th>Email Content</th>\r\n                                <th>File Name</th>\r\n                                <th>Created Date</th>\r\n                                <th>Created By</th>\r\n                                <th> Updated Date</th>\r\n                                <th>Updated By</th>\r\n                                <th>Is Deleted</th>\r\n\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor="let audit of documentauditHisory; let i = index;">\r\n                                <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'emailType\', audit.emailType)  ? \'black\' : \'red\'  }">{{audit.emailType}}</td>\r\n                                <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'toEmail\', audit.toEmail)  ? \'black\' : \'red\'  }">{{audit.toEmail}}</td>\r\n                                <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'cc\', audit.cc)  ? \'black\' : \'red\'  }">{{audit.cc}}</td>\r\n                                <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'bcc\', audit.bcc)  ? \'black\' : \'red\'  }">{{audit.bcc}}</td>\r\n                                <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'subject\', audit.subject)  ? \'black\' : \'red\'  }">{{audit.subject}}</td>\r\n                                <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'contactBy\', audit.contactBy)  ? \'black\' : \'red\'  }">{{audit.contactBy}}</td>\r\n                                <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'contactDate\', audit.contactDate)  ? \'black\' : \'red\'  }">{{audit.contactDate | date: \'MM/dd/yyyy h:mm a \'}}</td>\r\n                        \r\n                                <td *ngIf="type==1" [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'customerContact\', audit.customerContact)  ? \'black\' : \'red\'  }">{{audit.customerContact}}</td>\r\n                                <td *ngIf="type==2" [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'vendorContact\', audit.vendorContact)  ? \'black\' : \'red\'  }">{{audit.vendorContact}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'emailBody\', audit.emailBody)  ? \'black\' : \'red\'  }">\r\n                                    <p [innerHTML]="audit.emailBody"></p>\r\n                                </td>\r\n                                <td>\r\n                                    <tr *ngFor="let x of audit.attachmentDetails">\r\n                                        <a [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'fileName\', audit.fileName)  ? \'black\' : \'red\'  }" class="filelink" (click)="downloadFile(x)"> {{x.fileName}} <span *ngIf="audit.attachmentDetails && audit.attachmentDetails.length>0">,</span></a>\r\n                                    </tr>\r\n                \r\n                \r\n                                 \r\n                                    </td>\r\n                                <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'createdDate\', audit.createdDate)  ? \'black\' : \'red\'  }">{{audit.createdDate | date: \'MM/dd/yyyy h:mm a \'}}</td>\r\n                                <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'createdBy\', audit.createdBy)  ? \'black\' : \'red\'  }">{{audit.createdBy}}</td>\r\n                                <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'updatedDate\', audit.updatedDate)  ? \'black\' : \'red\'  }">{{audit.updatedDate | date: \'MM/dd/yyyy h:mm a \'}}</td>\r\n                                <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'updatedBy\', audit.updatedBy)  ? \'black\' : \'red\'  }">{{audit.updatedBy}}</td>\r\n\r\n                                <td style="text-align: center;">\r\n                                    <span class="value">\r\n                                      <label class="wauto">\r\n                                          <input type="checkbox" name="isDeleted" [checked]="audit.isDeleted == true" disabled>\r\n                                      </label>\r\n                                    </span>\r\n                                  </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" (click)="dismissModelHistory()">Close</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class="modal fade" id="emaildownloadConfirmation" role="dialog" data-backdrop="static" data-keyboard="false">\r\n\t<div class="modal-dialog modal-sm">\r\n\t\t<div class="modal-content">\r\n\t\t\t<div class="modal-header">\r\n\t\t\t\t<button type="button" class="close" (click)="closeDeleteModal()">&times;</button>\r\n\t\t\t\t<h4 class="modal-title">Are You Sure Want to Download?</h4>\r\n\t\t\t</div>\r\n\t\t\t<div class="modal-body" *ngIf="targetData">\r\n\t\t\t\t<strong>\r\n\t\t\t\t\t<span>\r\n\t\t\t\t\t\tYou are attempting to export {{targetData.totalRecords}} of records. \r\n\t\t\t\t\t</span> \r\n\t\t\t\t</strong>\r\n\t\t\t</div>\r\n\t\t\t<div class="modal-footer">\r\n\t\t\t\t<button type="button" class="btn btn-primary" (click)="(selectedOnly)?targetData.exportCSV({ selectionOnly: true }):exportCSV(targetData); closeDeleteModal();">Confirm</button>\r\n\t\t\t\t<button type="button" class="btn btn-danger" (click)="closeDeleteModal()">Cancel</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n<div id="addNewMemo" class="modal fade" role="dialog" data-backdrop="static">\r\n    <div class="modal-dialog" style="margin-top:0%;">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Add Email</h4>\r\n\r\n\r\n                \x3c!-- <div class="col-md-12 shadow-box-cstm">\r\n                    <div class="col-md-6">\r\n                        <p class="fs12">\r\n                            <label class="control-label labels-font-header" style="width: auto;">Customer Name:\r\n                            </label>\r\n                            <span class="span-header-red" style="text-transform: capitalize">\r\n                                {{customerDetails.customerName}}\r\n                            </span>\r\n                        </p>\r\n                    </div>\r\n                    <div class="col-md-6">\r\n                        <p class="fs12">\r\n                            <label class="control-label labels-font-header" style="width: auto;">Customer Code:\r\n                            </label>\r\n                            <span class="span-header-red" style="text-transform: capitalize">\r\n                                {{customerDetails.customerCode}}\r\n                            </span>\r\n                        </p>\r\n                    </div>\r\n                </div> --\x3e\r\n            </div>\r\n            <form #attachDocForm="ngForm" class="form-horizontal" ngNativeValidate>\r\n                <div class="modal-body">\r\n                    <div class="form-row">\r\n                        <div class="col-md-12">\r\n                            <div class="col-md-6">\r\n                                <div class="form-group col-md-12">\r\n                                    <label>Email Type <span class="clr-red">*</span></label>\r\n                                    <select [(ngModel)]="emailType" class="form-control" name="emailType" required>\r\n                                        <option value="">Select</option>\r\n                                        <option *ngFor="let emailTy of emailTypes" [value]="emailTy.value">\r\n                                            {{emailTy.label}}</option>\r\n                                    </select>\r\n                                </div>\r\n                                <div class="form-group col-md-12"> \r\n                                    <label class="col-md-12"><span *ngIf="type==1">Customer</span> <span *ngIf="type==2">Vendor</span> Contact <span class="clr-red">*</span></label>\r\n                                    <p-autoComplete field="firstName" [(ngModel)]="customerContact" required\r\n                                        name="cusContact" #cusContact="ngModel" errorMessage="Records not found"\r\n                                        [forceSelection]="true" [dropdown]="true" [suggestions]="cusContactList"\r\n                                        (completeMethod)="filterCustomerContact($event)" [size]="30" [minLength]="1"\r\n                                        (onSelect)="contactSelected($event)" class="p-autoComplete-ctsm">\r\n                                    </p-autoComplete>\r\n                                </div>\r\n                                <div class="form-group col-md-12">\r\n                                    <label>BCC</label>\r\n                                    <input class="form-control" type="email"  [pattern]="emailPattern" #bccEmail="ngModel"   name="bcc" [(ngModel)]="bcc"\r\n                                        multiple="true">\r\n\r\n                                       <div *ngIf="bccEmail.errors" [ngClass]="\'error\'"> \r\n                                            <div *ngIf="bccEmail.errors.pattern">\r\n                                                <span style="color:red">Email  not valid</span>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                            <div class="col-md-6">\r\n\r\n                                <div class="form-group col-md-12">\r\n                                    <label class="col-md-12">Contacted By <span class="clr-red">*</span></label>\r\n                                    \x3c!-- <select [(ngModel)]="contactBy" class="form-control" name="createdBy" required>\r\n                                    <option value="">Select</option>\r\n                                    <option *ngFor="let employee of employeeList" [value]="employee.employeeId">{{employee.firstName}}</option>\r\n                                </select> --\x3e\r\n                                    <p-autoComplete field="name" [(ngModel)]="contactBy" required name="employees"\r\n                                        #employees="ngModel" errorMessage="Records not found" [forceSelection]="true"\r\n                                        [dropdown]="true" [suggestions]="employeeList"\r\n                                        (completeMethod)="filterEmployee($event)" [size]="30" [minLength]="1"\r\n                                        [dropdown]="true" class="p-autoComplete-ctsm">\r\n                                    </p-autoComplete>\r\n                                </div>\r\n                                <div class="form-group col-md-12">\r\n                                    <label>Email To <span class="clr-red">*</span></label>\r\n                                    <input class="form-control" type="email" name="email" [(ngModel)]="toEmail" required\r\n                                        disabled>\r\n                                </div>\r\n                                <div class="form-group col-md-12" style="margin-top:-7px">\r\n                                    <label>CC</label>\r\n                                    <input class="form-control"  type="email" name="cc"  [pattern]="emailPattern" #ccEmail="ngModel" [(ngModel)]="cc" multiple="true">\r\n                                    <div *ngIf="ccEmail.errors" [ngClass]="\'error\'">  \r\n                                        <div *ngIf="ccEmail.errors.pattern">\r\n                                            <span style="color:red">Email  not valid</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class="col-md-12 ">\r\n                            <div class="form-group">\r\n                                <label class="col-md-12">Email Subject <span class="clr-red">*</span></label>\r\n                                <input class="form-control" type="text" [(ngModel)]="subject" name="subject" rows="1"\r\n                                    required>\r\n                            </div>\r\n\r\n                            <div class="col-md-12">\r\n                                <div class="form-group">\r\n                                    <label>Email Body</label>\r\n                                    <p-editor class="p-editor-cstm" [(ngModel)]="emailBody" style="overflow-y: auto;;"\r\n                                        [style]="{\'height\':\'150px\'}" name="emailBody" required></p-editor>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div class="col-md-12">\r\n                                <div class="form-group">\r\n                                    <label style="float: none;width: auto;">Attachments:</label>\r\n                                    <p-fileUpload #fileUploadInput name="fileupload[]" multiple="multiple"\r\n                                        [showCancelButton]="false" [showUploadButton]="false" customUpload="true"\r\n                                        (onSelect)="fileUpload($event)" (onRemove)="removeFile($event)"\r\n                                        class="form-control col-md-12 fileupload"></p-fileUpload>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    \x3c!-- || checkValidEmails() --\x3e\r\n                    <div class="modal-footer" style="padding-top:0px; padding-bottom:0px;">\r\n                        <button type="submit" class="btn btn-primary btn-primary" (click)="send(attachDocForm.valid)"\r\n                            style="padding: 6px 12px !important;margin-top: 10px;"\r\n                            [disabled]="!attachDocForm.valid || bccEmail.errors || ccEmail.errors">\r\n                            Send\r\n                        </button>\r\n                        <button type="button" class="btn btn-danger" data-dismiss="modal"\r\n                            style="padding: 6px 12px !important;margin-top: 10px;">Close</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div class="preloader" *ngIf="isSpinnerVisible">\r\n    <div class="loading">\r\n        <div class="lds-roller">\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div id="deleteRowConfirmation" class="modal fade" role="dialog" data-backdrop="static">\r\n    <div class="modal-dialog modal-sm">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <h4 class="modal-title">Are You Sure Want to Delete ?</h4>\r\n                <button type="button" class="close" aria-label="Close" data-dismiss="modal">\r\n                    <span aria-hidden="true">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class="modal-body" *ngIf="deletingRecord">\r\n                <strong>\r\n                   To Email:\r\n                    <span class="new-label">{{deletingRecord.toEmail}}</span>\r\n                </strong>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-primary" data-dismiss="modal"\r\n                    (click)="delete(deletingRecord)">Yes</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">No</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n<div id="viewEmail" class="modal fade" role="dialog" data-backdrop="static">\r\n    <div class="modal-dialog modal-sm">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title"> Email Details</h4>\r\n                \x3c!-- <div class="col-md-12 shadow-box-cstm">\r\n                    <div class="col-md-6">\r\n                        <p class="fs12">\r\n                            <label class="control-label labels-font-header" style="width: auto;">Customer Name:\r\n                            </label>\r\n                            <span class="span-header-red" style="text-transform: capitalize">\r\n                                {{customerDetails.customerName}}\r\n                            </span>\r\n                        </p>\r\n                    </div>\r\n                    <div class="col-md-6">\r\n                        <p class="fs12">\r\n                            <label class="control-label labels-font-header" style="width: auto;">Customer Code:\r\n                            </label>\r\n                            <span class="span-header-red" style="text-transform: capitalize">\r\n                                {{customerDetails.customerCode}}\r\n                            </span>\r\n                        </p>\r\n                    </div>\r\n                </div> --\x3e\r\n            </div>\r\n            <div class="modal-body">\r\n                <div class="col-sm-12">\r\n                    <p>\r\n                        <span class="label"><strong> Email Type <span class="clr-red">*</span> : </strong></span><span class="value">{{\r\n                            emailViewData.emailType\r\n                          }}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label"><strong>To Email  <span class="clr-red">*</span> : </strong></span><span class="value">{{\r\n                            emailViewData.toEmail\r\n                          }}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label"><strong> CC: </strong></span><span class="value">{{\r\n                                emailViewData.cc\r\n                            }}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label"><strong> BCC: </strong></span><span class="value">{{\r\n                                emailViewData.bcc\r\n                            }}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label"><strong>Subject <span class="clr-red">*</span>: </strong></span><span class="value">{{\r\n                                emailViewData.subject\r\n                            }}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label"><strong> Contacted By <span class="clr-red">*</span>: </strong></span><span class="value">{{\r\n                                emailViewData.contactBy\r\n                            }}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label"><strong> Contact Date: </strong></span><span class="value">{{\r\n                                emailViewData.contactDate | date: \'MM/dd/yyyy h:mm a \'\r\n                            }}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label"><strong> <span *ngIf="type==1">Customer</span><span *ngIf="type==2">Vendor</span> Contact : </strong></span><span class="value">\r\n                            <span *ngIf="type==1">  {{\r\n                                emailViewData.customerContact   \r\n                            }}</span>\r\n                            <span *ngIf="type==2"> {{\r\n                                emailViewData.vendorContact   \r\n                            }} </span>\r\n                           </span>\r\n                    </p>\r\n                    \r\n                    \x3c!-- <hr> --\x3e\r\n                    <p class="email-content">\r\n                        <span class="label" style="float: left;"><strong> Email Content: </strong></span>\r\n                        <span class="value" [innerHTML]="emailViewData.emailBody"></span>\r\n                    </p>\r\n                    <div>\r\n                        <label class="label"\r\n                            style="float:left;width: 30%; padding: 0;display: inline-block;">Attachments:</label>\r\n                        <ul style="list-style: none;">\r\n                            <li *ngFor="let attachment of emailViewData.attachmentDetails">\r\n                                {{attachment.fileName}} - <a class="filelink"\r\n                                    (click)="downloadFileUpload(attachment.link)">\r\n                                    {{ attachment.link }}</a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <div class="editor-buttons">\r\n                        <button type="button" class="btn btn-danger editor-buttons-margin" data-dismiss="modal">Close</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n    </div>\r\n\r\n    <ng-template #emailQuotePopup let-c="close" let-d="dismiss">\r\n        <div class="modal-header">\r\n            <button type="button" class="close" data-dismiss="modal" (click)="closeModal()">&times;</button>\r\n            <h4 class="modal-title">Confirmation</h4>\r\n        </div>\r\n        <div class="modal-body">\r\n            <h6 >\r\n                Are you sure you want to send this Quote to Customer?\r\n            </h6>\r\n            <a style="padding:0px" class="filelink btn btn-link" (click)="downloadFileUpload(pdfPath)" target="_blank" download>Preview\r\n                Quote</a>\r\n            \x3c!-- <a href="{{pdfPath}}" class="btn btn-link" target="_blank" >Preview Quote</a> --\x3e\r\n        </div>\r\n        <div class="editor-buttons">\r\n\r\n            <button type="button" class="btn btn-danger editor-buttons-margin" data-dismiss="modal" (click)="closeModal()">No</button>\r\n            <button type="button" class="btn btn-primary editor-buttons-margin" data-dismiss="modal"\r\n                (click)="triggerMailSalesQuote()">Yes</button>\r\n        </div>\r\n    </ng-template>'},"Y/47":function(e,t,a){"use strict";var n=a("mrSG"),r=a("8Y7J"),i=a("SVse"),o=function(){function e(){_classCallCheck(this,e)}return _createClass(e,[{key:"ngOnInit",value:function(){}}]),e}();o=n.b([Object(r.Component)({selector:"app-common-modules",template:n.c(a("JTuQ")).default,styles:[n.c(a("ZTpb")).default]})],o);var s,l=a("u9T3"),d=a("s7LF"),c=a("TSSN"),p=a("8YFm"),u=a("MCl+"),m=a("CYTX"),h=a("bv+N"),v=a("Jfay"),g=a("BY74"),b=a("I0ai"),y=a("3/N/"),f=a("sa3O"),S=a("Mz6y"),I=a("DgWh"),T=a("x0yz"),C=a("Q3MU"),A=a("ix9C"),x=a("EVdn"),D=a("iInd"),M=a("6W4t"),w=a("c0NH"),k=a("3LUQ"),P=a("OlR4"),N=a("0zL+"),V=a("lGQG"),O=a("slO+");!function(e){e.SalesOrderQuote="SOQ",e.PurchaseOrder="PO",e.SalesOrder="SO"}(s||(s={}));var L=a("Hocb"),E=a("rY54"),B=function(){function e(t,a,n,r,i,o,s){_classCallCheck(this,e),this.alertService=t,this.commonService=a,this.customerService=n,this._actRoute=r,this.authService=i,this.purchaseOrderService=o,this.salesQuoteService=s,this.firstNamesShipTo=[],this.firstNamesBillTo=[],this.shipToAddressList=[],this.shipToContactDataList=[],this.billToContactDataList=[],this.billToAddressList=[],this.sourcePoApprovalObj={},this.sourcePoApproval={},this.shipToAddress={},this.shipViaList=[],this.shipToSite=[],this.shipToContactData=[],this.vendorSelected=[],this.billToAddress={},this.isSpinnerVisible=!1,this.userTypes=[],this.userShipingList=[],this.userShipingIdList=[],this.userBillingList=[],this.userBillingIdList=[],this.isEditModeAdd=!1,this.enableAddSaveBtn=!1,this.isEditModeShipping=!1,this.isEditModeShippingPoOnly=!1,this.isEditModeBilling=!1,this.isEditModeBillingPoOnly=!1,this.isEditModeShipVia=!1,this.shippingModuleName="Company",this.billingingModuleName="Company",this.addressSiteNameHeader="",this.addressFormForShipping=new M.a,this.addressFormForBilling=new M.a,this.allCountriesList=[],this.countriesList=[],this.addShipViaFormForShipping=new w.a,this.allShipViaInfo=[],this.arrayBillingIdlist=[],this.changeName=!1,this.isSiteNameAlreadyExists=!1,this.editSiteName="",this.arrayShippingIdlist=[],this.isShippingSiteNameAlreadyExists=!1,this.tempAddshipViaMemo={},this.ShipViaHeader="",this.ShipViabutton=!1,this.ShipAddbutton=!1,this.billAddbutton=!1,this.defaultMSCOMPANYID=0}return _createClass(e,[{key:"ngOnInit",value:function(){var e=this;this.loadModuleListForVendorComp(),this.getCountriesList(),this.loadShippingViaList(),this.showIsPoOnlyButton=this.addressType==s.PurchaseOrder,this.sourcePoApproval.shipToUserTypeId=this.companyModuleId,this.sourcePoApproval.billToUserTypeId=this.companyModuleId,0!==this.id&&void 0!==this.id&&(this.addressType==s.PurchaseOrder?(this.ModuleID=E.a.PurchaseOrder,this.commonService.getAllAddEditID(this.id,this.ModuleID).subscribe((function(t){e.getShipToBillToDropDown(t)}))):this.addressType==s.SalesOrderQuote?(this.ModuleID=E.a.SalesQuate,this.commonService.getAllAddEditID(this.id,this.ModuleID).subscribe((function(t){e.getShipToBillToDropDown(t)}))):this.addressType==s.SalesOrder&&(this.ModuleID=E.a.SalesOrder,this.commonService.getAllAddEditID(this.id,this.ModuleID).subscribe((function(t){e.getShipToBillToDropDown(t)}))))}},{key:"getShipToBillToDropDown",value:function(e){var t=this,a=e,n=9,r=9;a&&a.length>0&&(a.forEach((function(e){"SHIP_TYPE"==e.label?(n=e.value,t.sourcePoApproval.shipToUserTypeId=e.value):"BILL_TYPE"==e.label?(r=e.value,t.sourcePoApproval.billToUserTypeId=e.value):"BILL_USERID"==e.label?t.userBillingIdList.push(e.value):"SHIP_USERID"==e.label?t.userShipingIdList.push(e.value):"MSCOMPANYID"==e.label&&(t.defaultMSCOMPANYID=e.value,t.userBillingIdList.push(e.value),t.userShipingIdList.push(e.value))})),this.isSpinnerVisible=!0,this.userShipingIdList&&0==this.userShipingIdList.length&&this.userShipingIdList.push(0),this.commonService.autoSuggestionSmartuserDropDownList(n,"",!0,20,this.userShipingIdList.join()).subscribe((function(e){t.userShipingList=e,t.userBillingIdList&&0==t.userBillingIdList.length&&t.userBillingIdList.push(0),t.commonService.autoSuggestionSmartuserDropDownList(r,"",!0,20,t.userBillingIdList.join()).subscribe((function(e){t.userBillingList=e,t.getAddressById(t.id),t.isSpinnerVisible=!1}),(function(e){t.isSpinnerVisible=!1;var a=e;t.errorMessageHandler(a)}))}),(function(e){t.isSpinnerVisible=!1;var a=e;t.errorMessageHandler(a)})))}},{key:"onAddShipMemo",value:function(){this.tempAddshipViaMemo=this.addShipViaFormForShipping.memo}},{key:"onSaveTextAreaInfo",value:function(){this.addShipViaFormForShipping.memo=this.tempAddshipViaMemo,this.ShipViabutton=!0,x("#ship-via-memo").modal("hide")}},{key:"filterBillingSite",value:function(e){if(this.lstfilterBillingSite=this.billingSieListOriginal,void 0!==e.query&&null!==e.query){var t=_toConsumableArray(this.billingSieListOriginal.filter((function(t){return t.siteName.toLowerCase().includes(e.query.toLowerCase())})));this.lstfilterBillingSite=t}}},{key:"checkShippingSiteNameExist",value:function(e){if(0==this.isEditModeShippingPoOnly&&0==this.isEditModeShipping){if(this.changeName=!0,this.isShippingSiteNameAlreadyExists=!1,this.ShipAddbutton=!0,null!=e&&null!=e&&this.shippingSieListOriginal&&0!=this.shippingSieListOriginal.length)for(var t=0;t<this.shippingSieListOriginal.length;t++)if((this.addressFormForShipping.siteName==this.shippingSieListOriginal[t].siteName||e.toLowerCase()==this.shippingSieListOriginal[t].siteName.toLowerCase())&&""!=this.addressFormForShipping.siteName)return this.isShippingSiteNameAlreadyExists=!0,void(this.ShipAddbutton=!1)}else if(this.changeName=!0,this.isShippingSiteNameAlreadyExists=!1,this.ShipAddbutton=!0,null!=e&&null!=e&&e!=this.editSiteName&&this.shippingSieListOriginal&&0!=this.shippingSieListOriginal.length)for(var a=0;a<this.shippingSieListOriginal.length;a++)if((this.addressFormForShipping.siteName==this.shippingSieListOriginal[a].siteName||e.toLowerCase()==this.shippingSieListOriginal[a].siteName.toLowerCase())&&""!=this.addressFormForShipping.siteName)return this.isShippingSiteNameAlreadyExists=!0,void(this.ShipAddbutton=!1)}},{key:"checkShippingSiteNameSelect",value:function(){0==this.isEditModeShippingPoOnly&&0==this.isEditModeShipping||this.editSiteName!=Object(L.a)("siteName",this.addressFormForShipping.siteName)?(this.isShippingSiteNameAlreadyExists=!0,this.ShipAddbutton=!1):(this.isShippingSiteNameAlreadyExists=!1,this.ShipAddbutton=!0)}},{key:"filterShippingSite",value:function(e){if(this.lstfilterShippingSite=this.shippingSieListOriginal,void 0!==e.query&&null!==e.query){var t=_toConsumableArray(this.shippingSieListOriginal.filter((function(t){return t.siteName.toLowerCase().includes(e.query.toLowerCase())})));this.lstfilterShippingSite=t}}},{key:"checkSiteNameExist",value:function(e){if(0==this.isEditModeBillingPoOnly&&0==this.isEditModeBilling){if(this.changeName=!0,this.isSiteNameAlreadyExists=!1,this.billAddbutton=!0,null!=e&&null!=e&&this.billingSieListOriginal&&0!=this.billingSieListOriginal.length)for(var t=0;t<this.billingSieListOriginal.length;t++)if((this.addressFormForBilling.siteName==this.billingSieListOriginal[t].siteName||e.toLowerCase()==this.billingSieListOriginal[t].siteName.toLowerCase())&&""!=this.addressFormForBilling.siteName)return this.isSiteNameAlreadyExists=!0,void(this.billAddbutton=!1)}else if(this.changeName=!0,this.isSiteNameAlreadyExists=!1,this.billAddbutton=!0,null!=e&&null!=e&&e!=this.editSiteName&&this.billingSieListOriginal&&0!=this.billingSieListOriginal.length)for(var a=0;a<this.billingSieListOriginal.length;a++)if((this.addressFormForBilling.siteName==this.billingSieListOriginal[a].siteName||e.toLowerCase()==this.billingSieListOriginal[a].siteName.toLowerCase())&&""!=this.addressFormForBilling.siteName)return this.isSiteNameAlreadyExists=!0,void(this.billAddbutton=!1)}},{key:"checkSiteNameSelect",value:function(){0==this.isEditModeBillingPoOnly&&0==this.isEditModeBilling||this.editSiteName!=Object(L.a)("siteName",this.addressFormForBilling.siteName)?(this.isSiteNameAlreadyExists=!0,this.billAddbutton=!1):(this.isSiteNameAlreadyExists=!1,this.billAddbutton=!0)}},{key:"loadShippingViaList",value:function(){var e=this;this.commonService.smartDropDownList("ShippingVia","ShippingViaId","Name").subscribe((function(t){e.allShipViaInfo=t}),(function(t){e.isSpinnerVisible=!1;var a=t;e.errorMessageHandler(a)}))}},{key:"getCountriesList",value:function(){var e=this;this.commonService.smartDropDownList("Countries","countries_id","nice_name").subscribe((function(t){e.allCountriesList=t}),(function(t){e.isSpinnerVisible=!1;var a=t;e.errorMessageHandler(a)}))}},{key:"filterCountries",value:function(e){if(this.countriesList=this.allCountriesList,void 0!==e.query&&null!==e.query){var t=_toConsumableArray(this.allCountriesList.filter((function(t){return t.label.toLowerCase().includes(e.query.toLowerCase())})));this.countriesList=t}}},{key:"loadModuleListForVendorComp",value:function(){var e=this;this.commonService.getModuleListByUserType(this.addressType).subscribe((function(t){e.userTypes=t,e.userTypes.map((function(t){"COMPANY"==t.moduleName.toUpperCase()?e.companyModuleId=t.moduleId:"VENDOR"==t.moduleName.toUpperCase()?e.vendorModuleId=t.moduleId:"CUSTOMER"==t.moduleName.toUpperCase()&&(e.customerModuleId=t.moduleId)}))}),(function(t){e.isSpinnerVisible=!1;var a=t;e.errorMessageHandler(a)}))}},{key:"errorMessageHandler",value:function(e){var t=e,a="";if(t.message){if(t.error&&t.error.errors&&t.error.errors.length>0)for(var n=0;n<t.error.errors.length;n++)a=a+t.error.errors[n].message+"<br/>";this.alertService.showMessage(t.error.message,a,k.d.error)}else this.alertService.showMessage("Error",e.error,k.d.error)}},{key:"onModuleTypeChange",value:function(){9==this.sourcePoApproval.shipToUserTypeId?this.shippingModuleName="Company":2==this.sourcePoApproval.shipToUserTypeId?this.shippingModuleName="Vendor":1==this.sourcePoApproval.shipToUserTypeId&&(this.shippingModuleName="Customer")}},{key:"onModuleBillTypeChange",value:function(){9==this.sourcePoApproval.billToUserTypeId?this.billingingModuleName="Company":2==this.sourcePoApproval.billToUserTypeId?this.billingingModuleName="Vendor":1==this.sourcePoApproval.billToUserTypeId&&(this.billingingModuleName="Customer")}},{key:"clearInputShipTo",value:function(){this.sourcePoApproval.shipToUserId=0,this.sourcePoApproval.shipToAddressId=0,this.sourcePoApproval.shipToContactId=0,this.sourcePoApproval.shipToMemo="",this.sourcePoApproval.shipViaId=0,this.sourcePoApproval.shippingViaId=0,this.sourcePoApproval.shippingAccountNo="",this.shipToAddress={},this.shipViaList=[],this.shipToSite=[],this.vendorSelected=[],this.companySiteList_Shipping=[]}},{key:"clearInputBillTo",value:function(){this.sourcePoApproval.billToUserId=0,this.sourcePoApproval.billToAddressId=0,this.sourcePoApproval.billToContactId=0,this.billToAddress={},this.sourcePoApproval.billToMemo="",this.billToSite=[],this.vendorSelectedForBillTo=[],this.companySiteList_Billing=[]}},{key:"clearInputOnClickUserIdShipTo",value:function(){this.sourcePoApproval.shipToSiteId=0,this.sourcePoApproval.shipToAddressId=0,this.sourcePoApproval.shipToContactId=0,this.shipToAddress={},this.shipViaList=[],this.shipToSite=[],this.vendorSelected=[]}},{key:"clearInputOnClickUserIdBillTo",value:function(){this.sourcePoApproval.billToSiteId=0,this.sourcePoApproval.billToAddressId=0,this.sourcePoApproval.billToContactId=0,this.billToSite=[],this.vendorSelected=[]}},{key:"shipViaChange",value:function(){this.ShipViabutton=!0}},{key:"shipAddChange",value:function(){this.ShipAddbutton=!0}},{key:"billAddChange",value:function(){this.billAddbutton=!0}},{key:"onEditShipVia",value:function(e,t){if("Add"==e)this.ShipViaHeader="Add Ship Via",this.resetAddressShipViaForm(),this.ShipViabutton=!0;else{if(this.ShipViaHeader="Edit Ship Via",this.shipViaList&&0!=this.shipViaList.length)for(var a=0;a<this.shipViaList.length;a++)this.shipViaList[a].shippingViaId==t&&(this.addShipViaFormForShipping.ShippingViaId=this.shipViaList[a].shippingViaId,this.addShipViaFormForShipping.shipViaId=this.shipViaList[a].shipViaId,this.addShipViaFormForShipping.shipVia=this.shipViaList[a].name,this.addShipViaFormForShipping.shippingAccountInfo=this.shipViaList[a].shippingAccountInfo,this.addShipViaFormForShipping.shippingId="",this.addShipViaFormForShipping.shippingURL="",this.addShipViaFormForShipping.memo=this.shipViaList[a].memo,this.addShipViaFormForShipping.isPrimary=this.shipViaList[a].isPrimary);this.ShipViabutton=!1,this.isEditModeShipVia=!0}}},{key:"saveShipViaForShipTo",value:function(){return n.a(this,void 0,void 0,regeneratorRuntime.mark((function e(){var t,a,n=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(this.sourcePoApproval.shipViaId=0,this.sourcePoApproval.shippingAccountNo="",t=Object.assign({},this.addShipViaFormForShipping,{name:Object(L.g)("label","value",this.addShipViaFormForShipping.shipViaId,this.allShipViaInfo),createdBy:this.userName,updatedBy:this.userName,masterCompanyId:this.currentUserMasterCompanyId,isActive:!0,UserType:parseInt(this.sourcePoApproval.shipToUserTypeId)}),a=Object.assign({},t,{ReferenceId:this.sourcePoApproval.shipToUserId.userID,AddressId:this.sourcePoApproval.shipToSiteId?this.sourcePoApproval.shipToSiteId:0}),!this.isEditModeShipVia){e.next=7;break}return e.next=5,this.commonService.createShipVia(a).subscribe((function(e){n.onShipToSelected(n.sourcePoApproval.shipToUserId,0,0,0,0,e.shipViaId),n.enableAddSaveBtn=!0,n.alertService.showMessage("Success","Updated Ship Via Information Sucessfully",k.d.success)}),(function(e){n.isSpinnerVisible=!1;var t=e;n.errorMessageHandler(t)}));case 5:e.next=9;break;case 7:return e.next=9,this.commonService.createShipVia(a).subscribe((function(e){n.onShipToSelected(n.sourcePoApproval.shipToUserId,0,0,0,0,e.shipViaId),n.enableAddSaveBtn=!0,n.alertService.showMessage("Success","Saved Ship Via Information Sucessfully ",k.d.success)}),(function(e){n.isSpinnerVisible=!1;var t=e;n.errorMessageHandler(t)}));case 9:x("#shipToShipVia").modal("hide");case 10:case"end":return e.stop()}}),e,this)})))}},{key:"parsedText",value:function(e){if(e)return(new DOMParser).parseFromString("<!doctype html><body>"+e,"text/html").body.textContent}},{key:"getShipViaDetailsForShipTo",value:function(e){var t=this;this.commonService.getShipViaDetailsByModule(this.sourcePoApproval.shipToUserTypeId,this.shipToSelectedvalue).subscribe((function(a){if(t.shipViaList=a,t.shipViaList&&0!=t.shipViaList.length)for(var n=0;n<t.shipViaList.length;n++)t.shipViaList[n].isPrimary&&(t.sourcePoApproval.shipViaId=t.shipViaList[n].shipViaId,t.getShipViaDetailsold(t.sourcePoApproval.shipViaId));e&&(t.sourcePoApproval.shipViaId=e,t.getShipViaDetailsold(e))}),(function(e){t.isSpinnerVisible=!1;var a=e;t.errorMessageHandler(a)}))}},{key:"getShipViaDetailsold",value:function(e){var t=this;this.sourcePoApproval.shippingAccountNo="";var a=this.sourcePoApproval.shipToUserTypeId?parseInt(this.sourcePoApproval.shipToUserTypeId):0,n=e?Object(L.g)("shippingViaId","shipViaId",e,this.shipViaList):0;0!=n&&null!=n&&this.commonService.getShipViaDetailsById(n,a).subscribe((function(e){var a=e;t.sourcePoApproval.shippingAccountNo=a.shippingAccountInfo,t.sourcePoApproval.shipVia=a.shipVia}),(function(e){t.isSpinnerVisible=!1;var a=e;t.errorMessageHandler(a)}))}},{key:"checkValidOnChange",value:function(e,t){null!=e&&0!=e&&"companyId"==t&&(this.managementValidCheck=!1),null!=e&&0!=e&&"shipToUserTypeId"==t&&(this.shipToUserTypeValidCheck=!1),null!=e&&0!=e&&"shipToSiteId"==t&&(this.shipToSiteNameValidCheck=!1),null!=e&&0!=e&&"shipViaId"==t&&(this.shipViaValidCheck=!1),null!=e&&0!=e&&"billToUserTypeId"==t&&(this.billToUserTypeValidCheck=!1),null!=e&&0!=e&&"billToSiteId"==t&&(this.billToSiteNameValidCheck=!1)}},{key:"clearShipToContact",value:function(){}},{key:"onShipToSelectedEdit",value:function(e,t,a){var n=this,r=t>0?t:this.sourcePoApproval.shipToUserTypeId,i=a>0?a:e.userID;i>0&&this.commonService.getaddressdetailsbyuser(r,i,"Ship",this.id).subscribe((function(e){n.shipViaList=e.shipVia,n.shipToAddressList=e.address,n.shipToAddress=e.address[0],n.shipToContactDataList=e.contacts,9==r?n.shippingModuleName="Company":2==r?n.shippingModuleName="Vendor":1==r&&(n.shippingModuleName="Customer"),n.shipToSite=e.site,n.shipToSite&&0!=n.shipToSite.length&&(n.shippingSieListOriginal=n.shipToSite.map((function(e){return{siteName:e.siteName,siteId:e.siteId}}))),n.sourcePoApproval.shipToSiteId&&n.onShipToGetAddress(n.sourcePoApproval.shipToSiteId),n.sourcePoApproval.shippingViaId&&n.getShipViaDetails(n.sourcePoApproval.shippingViaId)}),(function(e){n.isSpinnerVisible=!1;var t=e;n.errorMessageHandler(t)}))}},{key:"onBillToSelectedEdit",value:function(e,t,a){var n=this,r=t>0?t:this.sourcePoApproval.billToUserTypeId,i=a>0?a:e.userID;i>0&&this.commonService.getaddressdetailsbyuser(r,i,"Bill",this.id).subscribe((function(e){n.billToAddressList=e.address,n.billToAddress=e.address[0],n.billToContactDataList=e.contacts,9==r?n.billingingModuleName="Company":2==r?n.billingingModuleName="Vendor":1==r&&(n.billingingModuleName="Customer"),n.billToSite=e.site,n.sourcePoApproval.billToSiteId&&n.onBillToGetAddress(n.sourcePoApproval.billToSiteId),n.billToSite&&0!=n.billToSite.length&&(n.billingSieListOriginal=n.billToSite.map((function(e){return{siteName:e.siteName,siteId:e.siteId}})))}),(function(e){n.isSpinnerVisible=!1;var t=e;n.errorMessageHandler(t)}))}},{key:"onShipToSelected",value:function(e,t,a,n,r,i){var o=this;this.clearInputOnClickUserIdShipTo();var s=t>0?t:this.sourcePoApproval.shipToUserTypeId,l=a>0?a:e.userID;l>0&&this.commonService.getaddressdetailsbyuser(s,l,"Ship",this.id).subscribe((function(e){if(o.shipViaList=e.shipVia,o.shipToAddressList=e.address,o.shipToContactDataList=e.contacts,9==s?o.shippingModuleName="Company":2==s?o.shippingModuleName="Vendor":1==s&&(o.shippingModuleName="Customer"),o.shipToSite=e.site,n>0){if(o.shipToSite&&0!=o.shipToSite.length)for(var t=0;t<o.shipToSite.length;t++)o.shipToSite[t].siteId==n&&(o.sourcePoApproval.shipToSiteId=o.shipToSite[t].siteId,o.sourcePoApproval.shipToAddressId=o.shipToSite[t].addressId,o.onShipToGetAddress(o.shipToSite[t].siteId))}else if(o.shipToSite&&0!=o.shipToSite.length)for(t=0;t<o.shipToSite.length;t++)o.shipToSite[t].isPrimary&&(o.sourcePoApproval.shipToSiteId=o.shipToSite[t].siteId,o.sourcePoApproval.shipToAddressId=o.shipToSite[t].addressId,o.onShipToGetAddress(o.shipToSite[t].siteId));if(o.shipToContactDataList&&o.shipToContactDataList.length>0&&(o.sourcePoApproval.shipToContactId=o.shipToContactDataList[0].contactId),o.shipViaList&&o.shipViaList.length>0&&(o.sourcePoApproval.shippingViaId=o.shipViaList[0].shippingViaId,o.getShipViaDetails(o.sourcePoApproval.shippingViaId)),i>0&&o.shipViaList&&0!=o.shipViaList.length)for(var a=0;a<o.shipViaList.length;a++)o.shipViaList[a].shipViaId==i&&(o.sourcePoApproval.shippingViaId=o.shipViaList[a].shippingViaId,o.sourcePoApproval.shipViaId=o.shipViaList[a].shipViaId,o.sourcePoApproval.shipVia=o.shipViaList[a].name,o.sourcePoApproval.shippingAccountNo=o.shipViaList[a].shippingAccountInfo);o.shipToSite&&0!=o.shipToSite.length&&(o.shippingSieListOriginal=o.shipToSite.map((function(e){return{siteName:e.siteName,siteId:e.siteId}}))),o.enableAddSaveBtn=!0}),(function(e){o.isSpinnerVisible=!1;var t=e;o.errorMessageHandler(t)}))}},{key:"saveShipToShipViaDetailsToPO",value:function(){}},{key:"closeMemoModel",value:function(){x("#ship-via-memo").modal("hide")}},{key:"onBillToSelected",value:function(e,t,a,n,r){var i=this;this.clearInputOnClickUserIdBillTo();var o=t>0?t:this.sourcePoApproval.billToUserTypeId,s=a>0?a:e.userID;s>0&&this.commonService.getaddressdetailsbyuser(o,s,"Bill",this.id).subscribe((function(e){if(i.billToAddressList=e.address,i.billToContactDataList=e.contacts,9==o?i.billingingModuleName="Company":2==o?i.billingingModuleName="Vendor":1==o&&(i.billingingModuleName="Customer"),i.billToSite=e.site,n>0){if(i.billToSite&&0!=i.billToSite.length)for(var t=0;t<i.billToSite.length;t++)i.billToSite[t].siteId==n&&(i.sourcePoApproval.billToSiteId=i.billToSite[t].siteId,i.sourcePoApproval.billToAddressId=i.billToSite[t].addressId,i.onBillToGetAddress(i.billToSite[t].siteId))}else if(i.billToSite&&0!=i.billToSite.length)for(t=0;t<i.billToSite.length;t++)i.billToSite[t].isPrimary&&(i.sourcePoApproval.billToSiteId=i.billToSite[t].siteId,i.sourcePoApproval.billToAddressId=i.billToSite[t].addressId,i.onBillToGetAddress(i.billToSite[t].siteId));i.billToContactDataList&&i.billToContactDataList.length>0&&(i.sourcePoApproval.billToContactId=i.billToContactDataList[0].contactId),i.billingSieListOriginal=i.billToSite.map((function(e){return{siteName:e.siteName,siteId:e.siteId}})),i.enableAddSaveBtn=!0}),(function(e){i.isSpinnerVisible=!1;var t=e;i.errorMessageHandler(t)}))}},{key:"onShipToGetAddress",value:function(e){if(this.shipToAddressList&&0!=this.shipToAddressList.length)for(var t=0;t<this.shipToAddressList.length;t++){if(this.shipToAddressList[t].siteID==e)return this.shipToAddress=this.shipToAddressList[t],this.sourcePoApproval.shipAddIsPoOnly=this.shipToAddressList[t].isPoOnly,this.sourcePoApproval.shipToSiteName=this.shipToAddressList[t].siteName,this.sourcePoApproval.shipToAddressId=this.shipToAddressList[t].addressId,this.sourcePoApproval.shipToAddress1=this.shipToAddressList[t].address1,this.sourcePoApproval.shipToAddress2=this.shipToAddressList[t].address2,this.sourcePoApproval.shipToCity=this.shipToAddressList[t].city,this.sourcePoApproval.shipToStateOrProvince=this.shipToAddressList[t].stateOrProvince,this.sourcePoApproval.shipToPostalCode=this.shipToAddressList[t].postalCode,this.sourcePoApproval.shipToCountryId=Object(L.e)("value",this.shipToAddressList[t].countryId,this.allCountriesList),void(this.sourcePoApproval.shipToCountry=this.shipToAddressList[t].country);this.shipToAddress={},this.sourcePoApproval.shipAddIsPoOnly=!1,this.sourcePoApproval.shipToSiteName="",this.sourcePoApproval.shipToAddressId=0,this.sourcePoApproval.shipToAddress1="",this.sourcePoApproval.shipToAddress2="",this.sourcePoApproval.shipToCity="",this.sourcePoApproval.shipToStateOrProvince="",this.sourcePoApproval.shipToPostalCode="",this.sourcePoApproval.shipToCountryId=0,this.sourcePoApproval.shipToCountry=""}}},{key:"onBillToGetAddress",value:function(e){if(this.billToAddressList&&0!=this.billToAddressList.length)for(var t=0;t<this.billToAddressList.length;t++){if(this.billToAddressList[t].siteID==e)return this.billToAddress=this.billToAddressList[t],this.sourcePoApproval.billAddIsPoOnly=this.billToAddressList[t].isPoOnly,this.sourcePoApproval.billToSiteName=this.billToAddressList[t].siteName,this.sourcePoApproval.billToAddressId=this.billToAddressList[t].addressId,this.sourcePoApproval.billToAddress1=this.billToAddressList[t].address1,this.sourcePoApproval.billToAddress2=this.billToAddressList[t].address2,this.sourcePoApproval.billToCity=this.billToAddressList[t].city,this.sourcePoApproval.billToStateOrProvince=this.billToAddressList[t].stateOrProvince,this.sourcePoApproval.billToPostalCode=this.billToAddressList[t].postalCode,this.sourcePoApproval.billToCountryId=Object(L.e)("value",this.billToAddressList[t].countryId,this.allCountriesList),void(this.sourcePoApproval.billToCountry=this.billToAddressList[t].country);this.billToAddress={},this.sourcePoApproval.billAddIsPoOnly=!1,this.sourcePoApproval.billToSiteName="",this.sourcePoApproval.billToAddressId=0,this.sourcePoApproval.billToAddress1="",this.sourcePoApproval.billToAddress2="",this.sourcePoApproval.billToCity="",this.sourcePoApproval.billToStateOrProvince="",this.sourcePoApproval.billToPostalCode="",this.sourcePoApproval.billToCountryId=0,this.sourcePoApproval.billToCountry=""}}},{key:"filterContactsForShipTo",value:function(e){if(this.firstNamesShipTo=this.shipToContactDataList,void 0!==e.query&&null!==e.query){var t=_toConsumableArray(this.shipToContactDataList.filter((function(t){return t.name.toLowerCase().includes(e.query.toLowerCase())})));this.firstNamesShipTo=t}}},{key:"filterUsersForShiping",value:function(e,t){void 0!==e.query&&null!==e.query&&this.getUserShipingList(e.query,t)}},{key:"getUserShipingList",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",a=arguments.length>1?arguments[1]:void 0;this.userShipingIdList&&0==this.userShipingIdList.length&&this.userShipingIdList.push(0),this.commonService.autoSuggestionSmartuserDropDownList(a,t,!0,20,this.userShipingIdList.join()).subscribe((function(t){e.userShipingList=t}),(function(t){e.isSpinnerVisible=!1;var a=t;e.errorMessageHandler(a)}))}},{key:"filterUsersForBilling",value:function(e,t){void 0!==e.query&&null!==e.query&&this.getUserBillingList(e.query,t)}},{key:"getUserBillingList",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",a=arguments.length>1?arguments[1]:void 0;this.userBillingIdList&&0==this.userBillingIdList.length&&this.userBillingIdList.push(0),this.commonService.autoSuggestionSmartuserDropDownList(a,t,!0,20,this.userBillingIdList.join()).subscribe((function(t){e.userBillingList=t}),(function(t){e.isSpinnerVisible=!1;var a=t;e.errorMessageHandler(a)}))}},{key:"clearBillToContact",value:function(){}},{key:"getAddressById",value:function(e){var t=this;this.isSpinnerVisible=!0,this.commonService.getAddressById(e,this.addressType,this.ModuleID).subscribe((function(e){t.sourcePoApproval={shipToPOAddressId:e[0].ShipToPOAddressId,shipToUserTypeId:e[0].ShipToUserType,shipToSiteId:e[0].ShipToSiteId,shipToSiteName:e[0].ShipToSiteName,shipAddIsPoOnly:e[0].ShipAddIsPoOnly,shipToContactId:e[0].ShipToContactId,shipToContact:e[0].ShipToContact,shipToMemo:e[0].ShipToMemo,shipToAddressId:e[0].ShipToAddressId,shipToAddress1:e[0].ShipToAddress1,shipToAddress2:e[0].ShipToAddress2,shipToCity:e[0].ShipToCity,shipToStateOrProvince:e[0].ShipToState,shipToPostalCode:e[0].ShipToPostalCode,shipToCountryId:e[0].ShipToCountryId?Object(L.e)("value",e[0].ShipToCountryId,t.allCountriesList):0,shipToCountry:e[0].ShipToCountryName,poShipViaId:e[0].POShipViaId,billToPOAddressId:e[0].BillToPOAddressId,billToUserTypeId:e[0].BillToUserType,billToSiteId:e[0].BillToSiteId,billToSiteName:e[0].BillToSiteName,billAddIsPoOnly:e[0].BillAddIsPoOnly,billToContactId:e[0].BillToContactId,billToContactName:e[0].BillToContactName,billToMemo:e[0].BillToMemo,billToAddressId:e[0].BillToAddressId,billToAddress1:e[0].BillToAddress1,billToAddress2:e[0].BillToAddress2,billToCity:e[0].BillToCity,billToStateOrProvince:e[0].BillToState,billToPostalCode:e[0].BillToPostalCode,billToCountryId:e[0].BillToCountryId?Object(L.e)("value",e[0].BillToCountryId,t.allCountriesList):0,billToCountry:e[0].BillToCountryName,shippingViaId:e[0].ShippingViaId,shipViaId:e[0].ShipViaId,shipVia:e[0].ShipVia,shippingCost:Object(L.b)(e[0].ShippingCost,2),handlingCost:Object(L.b)(e[0].HandlingCost,2),shippingAccountNo:e[0].ShippingAccountNo},t.shipToAddress={address1:t.sourcePoApproval.shipToAddress1,address2:t.sourcePoApproval.shipToAddress2,city:t.sourcePoApproval.shipToCity,stateOrProvince:t.sourcePoApproval.shipToStateOrProvince,country:t.sourcePoApproval.ShipToCountry,countryId:Object(L.h)("value",t.sourcePoApproval.ShipToCountryId),postalCode:t.sourcePoApproval.shipToPostalCode},t.billToAddress={address1:t.sourcePoApproval.billToAddress1,address2:t.sourcePoApproval.billToAddress2,city:t.sourcePoApproval.billToCity,stateOrProvince:t.sourcePoApproval.billToStateOrProvince,country:t.sourcePoApproval.billToCountry,countryId:Object(L.h)("value",t.sourcePoApproval.billToCountryId),postalCode:t.sourcePoApproval.billToPostalCode},t.sourcePoApproval&&t.sourcePoApproval.shipToUsertypeId&&(t.sourcePoApproval.shipToUsertypeId=t.sourcePoApproval.shipToUsertypeId),t.sourcePoApproval&&t.sourcePoApproval.billToUsertypeId&&(t.sourcePoApproval.billToUsertypeId=t.sourcePoApproval.billToUsertypeId),e[0].ShipToUserId&&e[0].ShipToUserId>0&&e[0].ShipToUserType&&e[0].ShipToUserType>0&&(t.sourcePoApproval.shipToUserId=Object(L.d)("userID",e[0].ShipToUserId,t.userShipingList),t.onShipToSelectedEdit(null,e[0].ShipToUserType,e[0].ShipToUserId)),e[0].BillToUserId&&e[0].BillToUserId>0&&e[0].BillToUserType&&e[0].BillToUserType>0&&(t.sourcePoApproval.billToUserId=Object(L.d)("userID",e[0].BillToUserId,t.userBillingList),t.onBillToSelectedEdit(null,e[0].BillToUserType,e[0].BillToUserId)),t.sourcePoApproval&&e[0].ShipToPOAddressId>0?(t.isEditModeAdd=!0,t.isSpinnerVisible=!1):(t.isEditModeAdd=!1,t.sourcePoApproval.shipToUserTypeId=t.companyModuleId,t.sourcePoApproval.billToUserTypeId=t.companyModuleId,t.defaultMSCOMPANYID>0&&(t.sourcePoApproval.shipToUserId=Object(L.d)("userID",t.defaultMSCOMPANYID,t.userShipingList),t.sourcePoApproval.billToUserId=Object(L.d)("userID",t.defaultMSCOMPANYID,t.userBillingList),t.sourcePoApproval.billToUserId&&t.sourcePoApproval.billToUserId.userID&&t.sourcePoApproval.billToUserId.userID>0&&t.onBillToSelected(t.sourcePoApproval.billToUserId),t.sourcePoApproval.shipToUserId&&t.sourcePoApproval.shipToUserId.userID&&t.sourcePoApproval.shipToUserId.userID>0&&t.onShipToSelected(t.sourcePoApproval.shipToUserId))),t.isSpinnerVisible=!1}),(function(e){t.isSpinnerVisible=!1;var a=e;t.errorMessageHandler(a)}))}},{key:"resetAddressShippingForm",value:function(){this.addressFormForShipping=new M.a,this.isEditModeShipping=!1,this.isEditModeShippingPoOnly=!1}},{key:"resetAddressBillingForm",value:function(){this.addressFormForBilling=new M.a,this.isEditModeBilling=!1,this.isEditModeBillingPoOnly=!1}},{key:"getShipToUserIdEdit",value:function(e){this.getUserShipingList(e,e.moduleId)}},{key:"enableAddSave",value:function(){this.enableAddSaveBtn=!0}},{key:"onClickBillSiteName",value:function(e,t){if(this.resetAddressBillingForm(),"Add"===e&&(this.addressSiteNameHeader="Add Ship To "+this.billingingModuleName+" Details",this.billAddbutton=!0,this.editSiteName="",this.isEditModeBillingPoOnly=!1,this.isEditModeBilling=!1),"Edit"===e&&(this.addressSiteNameHeader="Edit Ship To "+this.billingingModuleName+" Details",this.billAddbutton=!1,this.sourcePoApproval.billAddIsPoOnly?this.isEditModeBillingPoOnly=!0:this.isEditModeBilling=!0,this.billToAddressList&&0!=this.billToAddressList.length))for(var a=0;a<this.billToAddressList.length;a++)if(this.billToAddressList[a].siteID==this.sourcePoApproval.billToSiteId)return this.addressFormForBilling.isPrimary=this.billToAddressList[a].isPrimary,this.addressFormForBilling.siteId=this.billToAddressList[a].siteID,this.editSiteName=this.billToAddressList[a].siteName,this.addressFormForBilling.siteName=Object(L.e)("siteName",this.billToAddressList[a].siteName,this.billingSieListOriginal),this.addressFormForBilling.addressID=this.billToAddressList[a].addressId,this.addressFormForBilling.address1=this.billToAddressList[a].address1,this.addressFormForBilling.address2=this.billToAddressList[a].address2,this.addressFormForBilling.city=this.billToAddressList[a].city,this.addressFormForBilling.stateOrProvince=this.billToAddressList[a].stateOrProvince,this.addressFormForBilling.postalCode=this.billToAddressList[a].postalCode,void(this.addressFormForBilling.countryId=Object(L.e)("value",this.billToAddressList[a].countryId,this.allCountriesList))}},{key:"onClickShipSiteName",value:function(e,t){if(this.resetAddressShippingForm(),"Add"===e&&(this.addressSiteNameHeader="Add Ship To "+this.shippingModuleName+" Details",this.ShipAddbutton=!0,this.editSiteName="",this.isEditModeShippingPoOnly=!1,this.isEditModeShipping=!1),"Edit"===e&&(this.ShipAddbutton=!1,this.addressSiteNameHeader="Edit Ship To "+this.shippingModuleName+" Details",this.sourcePoApproval.shipAddIsPoOnly?this.isEditModeShippingPoOnly=!0:this.isEditModeShipping=!0,this.shipToAddressList&&0!=this.shipToAddressList.length))for(var a=0;a<this.shipToAddressList.length;a++)if(this.shipToAddressList[a].siteID==this.sourcePoApproval.shipToSiteId)return this.addressFormForShipping.isPrimary=this.shipToAddressList[a].isPrimary,this.addressFormForShipping.siteId=this.shipToAddressList[a].siteID,this.editSiteName=this.shipToAddressList[a].siteName,this.addressFormForShipping.siteName=Object(L.e)("siteName",this.shipToAddressList[a].siteName,this.shippingSieListOriginal),this.addressFormForShipping.addressID=this.shipToAddressList[a].addressId,this.addressFormForShipping.address1=this.shipToAddressList[a].address1,this.addressFormForShipping.address2=this.shipToAddressList[a].address2,this.addressFormForShipping.city=this.shipToAddressList[a].city,this.addressFormForShipping.stateOrProvince=this.shipToAddressList[a].stateOrProvince,this.addressFormForShipping.postalCode=this.shipToAddressList[a].postalCode,void(this.addressFormForShipping.countryId=Object(L.e)("value",this.shipToAddressList[a].countryId,this.allCountriesList))}},{key:"saveShippingAddressToPO",value:function(){var e=this,t=Object.assign({},this.addressFormForShipping,{createdBy:this.userName,updatedBy:this.userName,masterCompanyId:this.currentUserMasterCompanyId,isActive:!0}),a=Object.assign({},t,{purchaseOrderID:this.id,isPoOnly:!0,siteName:Object(L.a)("siteName",t.siteName),userTypeId:this.sourcePoApproval.shipToUserTypeId,userId:this.sourcePoApproval.shipToUserId.userID,countryId:Object(L.h)("value",t.countryId)});this.isEditModeShippingPoOnly?this.commonService.createAllAddres(a).subscribe((function(t){t?(e.onShipToSelected(e.sourcePoApproval.shipToUserId,0,0,t),e.alertService.showMessage("Success","Shipping Information Updated Successfully",k.d.success)):e.alertService.showMessage("Error","Eroor While Saving Shipping Address",k.d.error)}),(function(t){e.isSpinnerVisible=!1;var a=t;e.errorMessageHandler(a)})):this.commonService.createAllAddres(a).subscribe((function(t){t?(e.onShipToSelected(e.sourcePoApproval.shipToUserId,0,0,t,!0),e.alertService.showMessage("Success","Saved Shipping Information Successfully",k.d.success)):e.alertService.showMessage("Error","Eroor While Saving Shipping Address",k.d.error)}),(function(t){e.isSpinnerVisible=!1;var a=t;e.errorMessageHandler(a)}))}},{key:"saveShippingAddress",value:function(){var e=this,t=Object.assign({},this.addressFormForShipping,{createdBy:this.userName,updatedBy:this.userName,masterCompanyId:this.currentUserMasterCompanyId,isActive:!0}),a=Object.assign({},t,{userTypeId:this.sourcePoApproval.shipToUserTypeId,userId:this.sourcePoApproval.shipToUserId.userID,siteName:Object(L.a)("siteName",t.siteName),countryId:Object(L.h)("value",t.countryId)});this.isEditModeShipping?this.commonService.createAllAddres(a).subscribe((function(t){t?(e.onShipToSelected(e.sourcePoApproval.shipToUserId,0,0,t),e.alertService.showMessage("Success","Shipping Information Updated Successfully",k.d.success)):e.alertService.showMessage("Error","Eroor While Saving Shipping Address",k.d.error)}),(function(t){e.isSpinnerVisible=!1;var a=t;e.errorMessageHandler(a)})):this.commonService.createAllAddres(a).subscribe((function(t){t?(e.onShipToSelected(e.sourcePoApproval.shipToUserId,0,0,t),e.alertService.showMessage("Success","Saved Shipping Information Successfully",k.d.success)):e.alertService.showMessage("Error","Eroor While Saving Shipping Address",k.d.error)}),(function(t){e.isSpinnerVisible=!1;var a=t;e.errorMessageHandler(a)}))}},{key:"saveBillingAddress",value:function(){var e=this,t=Object.assign({},this.addressFormForBilling,{createdBy:this.userName,updatedBy:this.userName,masterCompanyId:this.currentUserMasterCompanyId,isActive:!0}),a=Object.assign({},t,{siteName:Object(L.a)("siteName",t.siteName),userTypeId:this.sourcePoApproval.billToUserTypeId,userId:this.sourcePoApproval.billToUserId.userID,countryId:Object(L.h)("value",t.countryId),addressType:"Bill"});this.isEditModeBilling?this.commonService.createAllAddres(a).subscribe((function(t){t?(e.onBillToSelected(e.sourcePoApproval.billToUserId,0,0,t),e.alertService.showMessage("Success","Shipping Information Updated Successfully",k.d.success)):e.alertService.showMessage("Error","Eroor While Saving Shipping Address",k.d.error)}),(function(t){e.isSpinnerVisible=!1;var a=t;e.errorMessageHandler(a)})):this.commonService.createAllAddres(a).subscribe((function(t){t?(e.onBillToSelected(e.sourcePoApproval.billToUserId,0,0,t),e.alertService.showMessage("Success","Saved Shipping Information Successfully",k.d.success)):e.alertService.showMessage("Error","Eroor While Saving Shipping Address",k.d.error)}),(function(t){e.isSpinnerVisible=!1;var a=t;e.errorMessageHandler(a)}))}},{key:"saveBillingAddressToPO",value:function(){var e=this,t=Object.assign({},this.addressFormForBilling,{createdBy:this.userName,updatedBy:this.userName,masterCompanyId:this.currentUserMasterCompanyId,isActive:!0}),a=Object.assign({},t,{purchaseOrderID:this.id,isPoOnly:!0,siteName:Object(L.a)("siteName",t.siteName),userTypeId:this.sourcePoApproval.billToUserTypeId,userId:this.sourcePoApproval.billToUserId.userID,countryId:Object(L.h)("value",t.countryId),addressType:"Bill"});this.isEditModeShippingPoOnly?this.commonService.createAllAddres(a).subscribe((function(t){t?(e.onBillToSelected(e.sourcePoApproval.billToUserId,0,0,t),e.alertService.showMessage("Success","Shipping Information Updated Successfully",k.d.success)):e.alertService.showMessage("Error","Eroor While Saving Shipping Address",k.d.error)}),(function(t){e.isSpinnerVisible=!1;var a=t;e.errorMessageHandler(a)})):this.commonService.createAllAddres(a).subscribe((function(t){t?(e.onBillToSelected(e.sourcePoApproval.billToUserId,0,0,t,!0),e.alertService.showMessage("Success","Saved Shipping Information Successfully",k.d.success)):e.alertService.showMessage("Error","Eroor While Saving Shipping Address",k.d.error)}),(function(t){e.isSpinnerVisible=!1;var a=t;e.errorMessageHandler(a)}))}},{key:"onChangeShippingHandlingCost",value:function(e){this.sourcePoApproval[e]=this.sourcePoApproval[e]?Object(L.b)(this.sourcePoApproval[e],2):"0.00"}},{key:"getShipViaDetails",value:function(e){if(this.shipViaList&&0!=this.shipViaList.length)for(var t=0;t<this.shipViaList.length;t++)this.shipViaList[t].shippingViaId==e&&(this.sourcePoApproval.shippingViaId=this.shipViaList[t].shippingViaId,this.sourcePoApproval.shipViaId=this.shipViaList[t].shipViaId,this.sourcePoApproval.shipVia=this.shipViaList[t].name,this.sourcePoApproval.shippingAccountNo=this.shipViaList[t].shippingAccountInfo)}},{key:"resetAddressShipViaForm",value:function(){this.addShipViaFormForShipping=new w.a,this.isEditModeShipVia=!1}},{key:"postSiteNameForBilling",value:function(e,t){if(void 0!==e&&void 0!==t)return e=parseInt(e),Object(L.g)("siteName","siteId",t,this.billToSite)}},{key:"postSiteNameForShipping",value:function(e,t){if(void 0!==e&&void 0!==t)return e=parseInt(e),Object(L.g)("siteName","siteId",t,this.shipToSite)}},{key:"savePurchaseOrderAddress",value:function(){if(this.createPOAddressForm.invalid||0==this.sourcePoApproval.shipToUserTypeId||null==this.sourcePoApproval.shipToUserTypeId||0==this.sourcePoApproval.shipToUserId.userID||null==this.sourcePoApproval.shipToUserId.userID||0==this.sourcePoApproval.shipToSiteId||null==this.sourcePoApproval.shipToSiteId||0==this.sourcePoApproval.shipToContactId||null==this.sourcePoApproval.shipToContactId||0==this.sourcePoApproval.shippingViaId||null==this.sourcePoApproval.shippingViaId||0==this.sourcePoApproval.billToUserTypeId||null==this.sourcePoApproval.billToUserTypeId||0==this.sourcePoApproval.billToUserId.userID||null==this.sourcePoApproval.billToUserId.userID||0==this.sourcePoApproval.billToSiteId||null==this.sourcePoApproval.billToSiteId||0==this.sourcePoApproval.billToContactId||null==this.sourcePoApproval.billToContactId)this.alertService.showMessage("Address","Please enter required highlighted fields for Address!",k.d.error),this.inputValidCheckAdd=!0,0==this.sourcePoApproval.shipToUserTypeId&&(this.shipToUserTypeValidCheck=!0),0==this.sourcePoApproval.shipToSiteId&&(this.shipToSiteNameValidCheck=!0),0==this.sourcePoApproval.shippingViaId&&(this.shipViaValidCheck=!0),0==this.sourcePoApproval.billToUserTypeId&&(this.billToUserTypeValidCheck=!0),0==this.sourcePoApproval.billToAddressId&&(this.billToSiteNameValidCheck=!0);else{this.isSpinnerVisible=!0,this.getShipViaDetails(this.sourcePoApproval.shippingViaId),this.sourcePoApprovalObj={purchaseOrderId:this.id,moduleId:this.ModuleID,shipToPOAddressId:this.sourcePoApproval.shipToPOAddressId?this.sourcePoApproval.shipToPOAddressId:0,shipToUserTypeId:this.sourcePoApproval.shipToUserTypeId?parseInt(this.sourcePoApproval.shipToUserTypeId):0,shipToUserId:this.sourcePoApproval.shipToUserId&&this.sourcePoApproval.shipToUserId.userID?this.sourcePoApproval.shipToUserId.userID:0,shipToSiteId:this.sourcePoApproval.shipToSiteId?this.sourcePoApproval.shipToSiteId:0,shipToSiteName:this.postSiteNameForShipping(this.sourcePoApproval.shipToUserTypeId,this.sourcePoApproval.shipToSiteId),shipToMemo:this.sourcePoApproval.shipToMemo?this.sourcePoApproval.shipToMemo:"",shipToContactId:this.sourcePoApproval.shipToContactId?Object(L.a)("contactId",this.sourcePoApproval.shipToContactId):0,shipToContact:this.sourcePoApproval.shipToContactId?Object(L.g)("name","contactId",this.sourcePoApproval.shipToContactId,this.shipToContactDataList):"",shipAddIsPoOnly:this.sourcePoApproval.shipAddIsPoOnly,shipToAddressId:this.shipToAddress.addressId?this.shipToAddress.addressId:0,shipToAddress1:this.shipToAddress.address1,shipToAddress2:this.shipToAddress.address2,shipToAddress3:this.shipToAddress.address3,shipToCity:this.shipToAddress.city,shipToStateOrProvince:this.shipToAddress.stateOrProvince,shipToPostalCode:this.shipToAddress.postalCode,shipToCountry:this.shipToAddress.country,shipToCountryId:this.shipToAddress.countryId,billToPOAddressId:this.sourcePoApproval.billToPOAddressId?this.sourcePoApproval.billToPOAddressId:0,billToUserTypeId:this.sourcePoApproval.billToUserTypeId?parseInt(this.sourcePoApproval.billToUserTypeId):0,billToUserId:this.sourcePoApproval.billToUserId&&this.sourcePoApproval.billToUserId.userID?this.sourcePoApproval.billToUserId.userID:0,billToSiteId:this.sourcePoApproval.billToSiteId?this.sourcePoApproval.billToSiteId:0,billToSiteName:this.postSiteNameForBilling(this.sourcePoApproval.billToUserTypeId,this.sourcePoApproval.billToSiteId),billToMemo:this.sourcePoApproval.billToMemo?this.sourcePoApproval.billToMemo:"",billToContactId:this.sourcePoApproval.billToContactId?Object(L.a)("contactId",this.sourcePoApproval.billToContactId):0,billToContact:this.sourcePoApproval.billToContactId?Object(L.g)("name","contactId",this.sourcePoApproval.billToContactId,this.billToContactDataList):"",billAddIsPoOnly:this.sourcePoApproval.billAddIsPoOnly,billToAddressId:this.billToAddress.addressId?this.billToAddress.addressId:0,billToAddress1:this.billToAddress.address1,billToAddress2:this.billToAddress.address2,billToCity:this.billToAddress.city,billToStateOrProvince:this.billToAddress.stateOrProvince,billToPostalCode:this.billToAddress.postalCode,billToCountry:this.billToAddress.country,billToCountryId:this.billToAddress.countryId,poShipViaId:this.sourcePoApproval.poShipViaId?this.sourcePoApproval.poShipViaId:0,shipViaId:this.sourcePoApproval.shipViaId,shippingCost:this.sourcePoApproval.shippingCost?parseFloat(this.sourcePoApproval.shippingCost.toString().replace(/\,/g,"")):0,handlingCost:this.sourcePoApproval.handlingCost?parseFloat(this.sourcePoApproval.handlingCost.toString().replace(/\,/g,"")):0,shippingViaId:this.sourcePoApproval.shippingViaId,shipVia:this.sourcePoApproval.shipVia,shippingAccountNo:this.sourcePoApproval.shippingAccountNo,MasterCompanyId:this.currentUserMasterCompanyId,createdBy:this.userName,updatedBy:this.userName};var e=Object.assign({},this.sourcePoApprovalObj,{purchaseOrderId:parseInt(this.id)});this.SaveAllAddress(e),this.isSpinnerVisible=!1}}},{key:"SaveAllAddress",value:function(e){var t=this;this.commonService.saveAllAddress(Object.assign({},e)).subscribe((function(e){e.value.shipToPOAddressId&&e.value.shipToPOAddressId>0?(t.sourcePoApproval={shipToPOAddressId:e.value.shipToPOAddressId,shipToUserTypeId:e.value.shipToUserType,shipToUserId:Object(L.d)("userID",e.value.shipToUserId,t.userShipingList),shipToSiteId:e.value.shipToSiteId,shipToSiteName:e.value.shipToSiteName,shipAddIsPoOnly:e.value.shipAddIsPoOnly,shipToContactId:e.value.shipToContactId,shipToContact:e.value.shipToContact,shipToMemo:e.value.shipToMemo,shipToAddressId:e.value.shipToAddressId,shipToAddress1:e.value.shipToAddress1,shipToAddress2:e.value.shipToAddress2,shipToCity:e.value.shipToCity,shipToStateOrProvince:e.value.shipToState,shipToPostalCode:e.value.shipToPostalCode,ShipToCountryId:e.value.shipToCountryId?Object(L.e)("value",e.value.shipToCountryId,t.allCountriesList):0,poShipViaId:e.value.poShipViaId,billToPOAddressId:e.value.billToPOAddressId,billToUserTypeId:e.value.billToUserType,billToUserId:Object(L.d)("userID",e.value.billToUserId,t.userBillingList),billToSiteId:e.value.billToSiteId,billToSiteName:e.value.billToSiteName,billAddIsPoOnly:e.value.billAddIsPoOnly,billToContactId:e.value.billToContactId,billToContactName:e.value.billToContactName,billToMemo:e.value.billToMemo,billToAddressId:e.value.billToAddressId,billToAddress1:e.value.billToAddress1,billToAddress2:e.value.billToAddress2,billToCity:e.value.billToCity,billToStateOrProvince:e.value.billToState,billToPostalCode:e.value.billToPostalCode,billToCountryId:e.value.billToCountryId?Object(L.e)("value",e.value.billToCountryId,t.allCountriesList):0,shippingViaId:e.value.shippingViaId,shipViaId:e.value.shipViaId,shipVia:e.value.shipVia,shippingCost:Object(L.b)(e.value.shippingCost,2),handlingCost:Object(L.b)(e.value.handlingCost,2),shippingAccountNo:e.value.ShippingAccountNo},t.isEditModeAdd=!0):t.isEditModeAdd=!1,t.isSpinnerVisible=!1,t.enableAddSaveBtn=!1,t.getShipViaDetails(t.sourcePoApproval.shippingViaId),t.alertService.showMessage("Success","Address Saved Successfully",k.d.success)}),(function(e){t.isSpinnerVisible=!1;var a=e;t.errorMessageHandler(a)}))}},{key:"SavePurchaseOrderNew",value:function(e){var t=this;this.purchaseOrderService.savePurchaseOrderAddress(Object.assign({},e)).subscribe((function(e){e.value.shipToPOAddressId&&e.value.shipToPOAddressId>0?(t.sourcePoApproval={shipToPOAddressId:e.value.shipToPOAddressId,shipToUserTypeId:e.value.shipToUserType,shipToUserId:Object(L.d)("userID",e.value.shipToUserId,t.userShipingList),shipToSiteId:e.value.shipToSiteId,shipToSiteName:e.value.shipToSiteName,shipAddIsPoOnly:e.value.shipAddIsPoOnly,shipToContactId:e.value.shipToContactId,shipToContact:e.value.shipToContact,shipToMemo:e.value.shipToMemo,shipToAddressId:e.value.shipToAddressId,shipToAddress1:e.value.shipToAddress1,shipToAddress2:e.value.shipToAddress2,shipToCity:e.value.shipToCity,shipToStateOrProvince:e.value.shipToState,shipToPostalCode:e.value.shipToPostalCode,ShipToCountryId:e.value.shipToCountryId?Object(L.e)("value",e.value.shipToCountryId,t.allCountriesList):0,poShipViaId:e.value.poShipViaId,billToPOAddressId:e.value.billToPOAddressId,billToUserTypeId:e.value.billToUserType,billToUserId:Object(L.d)("userID",e.value.billToUserId,t.userBillingList),billToSiteId:e.value.billToSiteId,billToSiteName:e.value.billToSiteName,billAddIsPoOnly:e.value.billAddIsPoOnly,billToContactId:e.value.billToContactId,billToContactName:e.value.billToContactName,billToMemo:e.value.billToMemo,billToAddressId:e.value.billToAddressId,billToAddress1:e.value.billToAddress1,billToAddress2:e.value.billToAddress2,billToCity:e.value.billToCity,billToStateOrProvince:e.value.billToState,billToPostalCode:e.value.billToPostalCode,billToCountryId:e.value.billToCountryId?Object(L.e)("value",e.value.billToCountryId,t.allCountriesList):0,shippingViaId:e.value.shippingViaId,shipViaId:e.value.shipViaId,shipVia:e.value.shipVia,shippingCost:Object(L.b)(e.value.shippingCost,2),handlingCost:Object(L.b)(e.value.handlingCost,2),shippingAccountNo:e.value.ShippingAccountNo},t.isEditModeAdd=!0):t.isEditModeAdd=!1,t.isSpinnerVisible=!1,t.enableAddSaveBtn=!1,t.getShipViaDetails(t.sourcePoApproval.shippingViaId),t.alertService.showMessage("Success","Address Saved Successfully",k.d.success)}),(function(e){t.isSpinnerVisible=!1;var a=e;t.errorMessageHandler(a)}))}},{key:"SaveSalesOrderQuoteNew",value:function(e){var t=this;this.salesQuoteService.saveSalesOrderQuoteAddress(Object.assign({},e)).subscribe((function(e){e.value.shipToPOAddressId&&e.value.shipToPOAddressId>0?(t.sourcePoApproval={shipToPOAddressId:e.value.shipToPOAddressId,shipToUserTypeId:e.value.shipToUserType,shipToUserId:Object(L.d)("userID",e.value.shipToUserId,t.userShipingList),shipToSiteId:e.value.shipToSiteId,shipToSiteName:e.value.shipToSiteName,shipAddIsPoOnly:e.value.shipAddIsPoOnly,shipToContactId:e.value.shipToContactId,shipToContact:e.value.shipToContact,shipToMemo:e.value.shipToMemo,shipToAddressId:e.value.shipToAddressId,shipToAddress1:e.value.shipToAddress1,shipToAddress2:e.value.shipToAddress2,shipToCity:e.value.shipToCity,shipToStateOrProvince:e.value.shipToState,shipToPostalCode:e.value.shipToPostalCode,ShipToCountryId:e.value.shipToCountryId?Object(L.e)("value",e.value.shipToCountryId,t.allCountriesList):0,poShipViaId:e.value.poShipViaId,billToPOAddressId:e.value.billToPOAddressId,billToUserTypeId:e.value.billToUserType,billToUserId:Object(L.d)("userID",e.value.billToUserId,t.userBillingList),billToSiteId:e.value.billToSiteId,billToSiteName:e.value.billToSiteName,billAddIsPoOnly:e.value.billAddIsPoOnly,billToContactId:e.value.billToContactId,billToContactName:e.value.billToContactName,billToMemo:e.value.billToMemo,billToAddressId:e.value.billToAddressId,billToAddress1:e.value.billToAddress1,billToAddress2:e.value.billToAddress2,billToCity:e.value.billToCity,billToStateOrProvince:e.value.billToState,billToPostalCode:e.value.billToPostalCode,billToCountryId:e.value.billToCountryId?Object(L.e)("value",e.value.billToCountryId,t.allCountriesList):0,shippingViaId:e.value.shippingViaId,shipViaId:e.value.shipViaId,shipVia:e.value.shipVia,shippingCost:Object(L.b)(e.value.shippingCost,2),handlingCost:Object(L.b)(e.value.handlingCost,2),shippingAccountNo:e.value.ShippingAccountNo},t.isEditModeAdd=!0):t.isEditModeAdd=!1,t.isSpinnerVisible=!1,t.enableAddSaveBtn=!1,t.getShipViaDetails(t.sourcePoApproval.shippingViaId),t.alertService.showMessage("Success","Saved Address Successfully",k.d.success)}),(function(e){t.isSpinnerVisible=!1}))}},{key:"onClickBillMemo",value:function(){this.addressMemoLabel="Edit Bill",this.tempMemo=this.sourcePoApproval.billToMemo}},{key:"onClickShipMemo",value:function(){this.addressMemoLabel="Edit Ship",this.tempMemo=this.sourcePoApproval.shipToMemo}},{key:"onSaveAddressMemo",value:function(){"Edit Ship"==this.addressMemoLabel&&(this.sourcePoApproval.shipToMemo=this.tempMemo),"Edit Bill"==this.addressMemoLabel&&(this.sourcePoApproval.billToMemo=this.tempMemo),this.enableAddSaveBtn=!0}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}},{key:"currentUserMasterCompanyId",get:function(){return this.authService.currentUser?this.authService.currentUser.masterCompanyId:null}}]),e}();B.ctorParameters=function(){return[{type:k.b},{type:P.a},{type:N.a},{type:D.ActivatedRoute},{type:V.a},{type:O.a},{type:C.a}]},n.b([Object(r.Input)()],B.prototype,"addressType",void 0),n.b([Object(r.Input)()],B.prototype,"id",void 0),n.b([Object(r.ViewChild)("createPOAddressForm",{static:!1})],B.prototype,"createPOAddressForm",void 0),B=n.b([Object(r.Component)({selector:"app-address-component",template:n.c(a("FPgC")).default,styles:[n.c(a("ZDLp")).default]})],B);var F=a("G0yt"),U=a("XvK8"),H=function(){function e(t,a,n,r,i,o){_classCallCheck(this,e),this.poapprovalService=t,this.datePipe=a,this.modalService=n,this.authService=r,this.commonService=i,this.alertService=o,this.currentDeletedstatus=!1,this.currentStatus="Active",this.arrayEmplsit=[],this.enableSaveBtn=!1,this.checked=!0,this.unchecked=!1,this.pageIndex=0,this.totalRecords=0,this.totalRecordsemp=0,this.totalPages=0,this.poApprovalData=[],this.arrayLegalEntitylsit=[],this.maincompanylist=[],this.bulist=[],this.departmentList=[],this.divisionlist=[],this.taskID=3,this.poTaskID=3,this.soqTaskID=6,this.rowDataToDelete={},this.isSpinnerVisible=!1,this.pageSizeemp=5,this.pageSize=10,this.employeeNames=[],this.auditHistory=[],this.emplColumns=[{field:"employee",header:"Employee"},{field:"seqNo",header:"Seq No"}],this.newDataObject={approvalRuleId:0,approvalTaskId:null,ruleNumberId:0,amountId:null,value:null,lowerValue:null,upperValue:null,companyId:0,buId:0,divisionId:0,departmentId:0,enforceApproval:!1,approver:this.employeeNames,managementStructureId:this.currentUserManagementStructureId,memo:"",masterCompanyId:this.currentUserMasterCompanyId,createdBy:this.userName,updatedBy:this.userName,createdDate:new Date,updatedDate:new Date,isActive:!0,isDeleted:!1},this.dropdownSettings={},this.headers=[{field:"taskName",header:"Task Name"},{field:"ruleNo",header:"Rule No"},{field:"amount",header:"Amount"},{field:"value",header:"Value"},{field:"lowerValue",header:"Lower Value"},{field:"upperValue",header:"Upper Value"},{field:"companyName",header:"Level 01"},{field:"buName",header:"Level 02"},{field:"deptName",header:"Level 03"},{field:"divName",header:"Level 04"},{field:"approver",header:"Approver"},{field:"createdDate",header:"Created Date"},{field:"createdBy",header:"Created By"},{field:"updatedDate",header:"Updated Date"},{field:"updatedBy",header:"Updated By"}],this.selectedColumns=this.headers,this.isEdit=!1}return _createClass(e,[{key:"onSaveChange",value:function(){this.enableSaveBtn=!0}},{key:"ngOnInit",value:function(){this.dropdownSettings={singleSelection:!1,idField:"value",textField:"label",selectAllText:"Select All",unSelectAllText:"UnSelect All",itemsShowLimit:1,allowSearchFilter:!1},this.getRuleNumber(),this.getPoAmountList(),this.creatingData=Object.assign({},this.newDataObject),"PO"==this.moduleType?this.moduleName="Purchase Order":"SOQ"==this.moduleType?this.moduleName="Sales Order Quote":"SO"==this.moduleType?this.moduleName="Sales Order":"RO"==this.moduleType&&(this.moduleName="Repair Order"),this.getTaskNames()}},{key:"filterapprover",value:function(e){void 0!==e.query&&null!==e.query&&this.employeedata(e.query,this.creatingData.managementStructureId)}},{key:"closeHistoryModal",value:function(){x("#approvalHistory").modal("hide")}},{key:"handleChange",value:function(e,t){this.onSaveChange(),this.alertService.showMessage("Success","Approver Status change Successfully",k.d.success)}},{key:"makePrimary",value:function(e){this.employeeNames.forEach((function(t){t.employeeId==e?(t.isPrimary=!0,t.seqNo=1):t.isPrimary=!1}));var t=1;this.employeeNames.forEach((function(e){1==e.isPrimary?e.seqNo=1:(t+=1,e.seqNo=t)})),this.onSaveChange()}},{key:"openDeletesemployee",value:function(e,t,a){this.tagIndex=a,this.tagRowData=t,this.modal=this.modalService.open(e,{size:"sm",backdrop:"static",keyboard:!1})}},{key:"onAddApprover",value:function(){var e=this;if(this.employeelist&&this.employeelist.value&&this.employeelist.value>0){var t=!0,a=!1,n=1;if(this.employeeNames.forEach((function(n){n.employeeId==e.employeelist.value&&(a=!0),1==n.isPrimary&&(t=!1)})),a)return void this.alertService.showMessage("Error","Employee Already Exists",k.d.error);t||(n=Math.max.apply(Math,this.employeeNames.map((function(e){return e.seqNo}))),n+=1),this.employeeNames.push({approverId:0,isPrimary:t,approvalRuleId:this.creatingData.approvalRuleId,seqNo:n,employeeId:this.employeelist.value,employee:this.employeelist.label,createdBy:this.userName,updatedBy:this.userName,createdDate:new Date,updatedDate:new Date,isActive:!0,isDeleted:!1}),this.employeeNames.map((function(e){return Object.assign({},e)})),this.totalRecordsemp=this.employeeNames.length,this.alertService.showMessage("Success","Employee Added Successfully",k.d.success),this.onSaveChange()}}},{key:"onDeleteTagName",value:function(){this.employeeNames.splice(this.tagIndex,1),this.modal.close(),this.alertService.showMessage("Success","Employee Deleted Successfully",k.d.success),this.onSaveChange()}},{key:"dismissModel",value:function(){this.modal.close()}},{key:"onClickMemo",value:function(){this.memoPopupContent=this.creatingData.memo}},{key:"onClickPopupSave",value:function(){this.creatingData.memo=this.memoPopupContent,this.memoPopupContent="",x("#memo-popup").modal("hide")}},{key:"closeMemoModel",value:function(){x("#memo-popup").modal("hide")}},{key:"parsedText",value:function(e){if(e)return(new DOMParser).parseFromString("<!doctype html><body>"+e,"text/html").body.textContent}},{key:"getTaxPageCount",value:function(e,t){return e&&t&&e>t?Math.ceil(e/t):1}},{key:"getManagementStructureDetails",value:function(e){var t=this,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;a=0==a?this.employeeId:a,n=this.isEdit?n=e:0,this.commonService.getManagmentStrctureData(e,a,n).subscribe((function(e){if(e){var a=e;a[0]&&"Level1"==a[0].level?(t.maincompanylist=a[0].lstManagmentStrcture,t.creatingData.companyId=a[0].managementStructureId,t.creatingData.managementStructureId=a[0].managementStructureId,t.creatingData.buId=0,t.creatingData.divisionId=0,t.creatingData.departmentId=0,t.bulist=[],t.divisionlist=[],t.departmentList=[]):(t.creatingData.companyId=0,t.creatingData.buId=0,t.creatingData.divisionId=0,t.creatingData.departmentId=0,t.maincompanylist=[],t.bulist=[],t.divisionlist=[],t.departmentList=[]),a[1]&&"Level2"==a[1].level?(t.bulist=a[1].lstManagmentStrcture,t.creatingData.buId=a[1].managementStructureId,t.creatingData.managementStructureId=a[1].managementStructureId,t.creatingData.divisionId=0,t.creatingData.departmentId=0,t.divisionlist=[],t.departmentList=[]):(a[1]&&"NEXT"==a[1].level&&(t.bulist=a[1].lstManagmentStrcture),t.creatingData.buId=0,t.creatingData.divisionId=0,t.creatingData.departmentId=0,t.divisionlist=[],t.departmentList=[]),a[2]&&"Level3"==a[2].level?(t.divisionlist=a[2].lstManagmentStrcture,t.creatingData.divisionId=a[2].managementStructureId,t.creatingData.managementStructureId=a[2].managementStructureId,t.creatingData.departmentId=0,t.departmentList=[]):(a[2]&&"NEXT"==a[2].level&&(t.divisionlist=a[2].lstManagmentStrcture),t.creatingData.divisionId=0,t.creatingData.departmentId=0,t.departmentList=[]),a[3]&&"Level4"==a[3].level?(t.departmentList=a[3].lstManagmentStrcture,t.creatingData.departmentId=a[3].managementStructureId,t.creatingData.managementStructureId=a[3].managementStructureId):(t.creatingData.departmentId=0,a[3]&&"NEXT"==a[3].level&&(t.departmentList=a[3].lstManagmentStrcture))}}),(function(e){t.isSpinnerVisible=!1;var a=e;t.errorMessageHandler(a)}))}},{key:"employeedata",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];0==this.arrayEmplsit.length&&this.arrayEmplsit.push(0),this.arrayEmplsit.push(null==this.employeeId?0:this.employeeId),this.commonService.autoCompleteDropdownsEmployeeByMS(t,!0,20,this.arrayEmplsit.join(),a).subscribe((function(t){e.approverList=t,n&&e.employeeNames.forEach((function(t){t.employee=Object(L.g)("label","value",t.employeeId,e.approverList)}))}),(function(t){var a=t;e.errorMessageHandler(a)}))}},{key:"getBUList",value:function(e){var t=this;this.creatingData.buId=0,this.creatingData.divisionId=0,this.creatingData.departmentId=0,this.bulist=[],this.divisionlist=[],this.departmentList=[],0!=e&&null!=e&&null!=e?(this.creatingData.managementStructureId=e,this.creatingData.companyId=e,this.commonService.getManagementStructurelevelWithEmployee(e,this.employeeId).subscribe((function(e){t.bulist=e}))):(this.creatingData.managementStructureId=0,this.creatingData.companyId=0),this.employeedata("",this.creatingData.managementStructureId),this.onSaveChange()}},{key:"getDivisionlist",value:function(e){var t=this;this.divisionlist=[],this.departmentList=[],this.creatingData.divisionId=0,this.creatingData.departmentId=0,0!=e&&null!=e&&null!=e?(this.creatingData.managementStructureId=e,this.creatingData.buId=e,this.commonService.getManagementStructurelevelWithEmployee(e,this.employeeId).subscribe((function(e){t.divisionlist=e}))):this.creatingData.managementStructureId=this.creatingData.companyId,this.employeedata("",this.creatingData.managementStructureId),this.onSaveChange()}},{key:"getDepartmentlist",value:function(e){var t=this;this.creatingData.departmentId=0,this.departmentList=[],0!=e&&null!=e&&null!=e?(this.creatingData.divisionId=e,this.creatingData.managementStructureId=e,this.commonService.getManagementStructurelevelWithEmployee(e,this.employeeId).subscribe((function(e){t.departmentList=e}))):(this.creatingData.managementStructureId=this.creatingData.buId,this.creatingData.divisionId=0),this.employeedata("",this.creatingData.managementStructureId),this.onSaveChange()}},{key:"getDepartmentId",value:function(e){0!=e&&null!=e&&null!=e?(this.creatingData.managementStructureId=e,this.creatingData.departmentId=e):(this.creatingData.managementStructureId=this.creatingData.divisionId,this.creatingData.departmentId=0),this.employeedata("",this.creatingData.managementStructureId),this.onSaveChange()}},{key:"errorMessageHandler",value:function(e){this.alertService.showMessage("Error",e.error,k.d.error)}},{key:"addNewApproval",value:function(){this.creatingData=Object.assign({},this.newDataObject),"PO"==this.moduleType&&(this.moduleName="Purchase Order",this.creatingData.approvalTaskId=this.taskID),"SOQ"==this.moduleType&&(this.moduleName="Sales Order Quote",this.creatingData.approvalTaskId=this.taskID),"RO"==this.moduleType&&(this.moduleName="Repair Order",this.creatingData.approvalTaskId=this.taskID),"SO"==this.moduleType&&(this.moduleName="Sales Order",this.creatingData.approvalTaskId=this.taskID),this.getManagementStructureDetails(this.currentUserManagementStructureId,this.employeeId),this.creatingData.managementStructureId=this.currentUserManagementStructureId,this.arrayEmplsit=[],this.employeedata("",this.currentUserManagementStructureId),this.employeeNames=[]}},{key:"getTaskNames",value:function(){return n.a(this,void 0,void 0,regeneratorRuntime.mark((function e(){var t=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return this.isSpinnerVisible=!0,e.next=3,this.commonService.smartDropDownList("ApprovalTask","ApprovalTaskId","Name").subscribe((function(e){t.taskNameList=e,e.forEach((function(e){("PO Approval"==e.label&&"PO"==t.moduleType||"Sales Quote Approval"==e.label&&"SOQ"==t.moduleType||"RO Approval"==e.label&&"RO"==t.moduleType||"SO Approval"==e.label&&"SO"==t.moduleType)&&(t.taskID=e.value)})),t.creatingData.approvalTaskId=t.taskID,t.getPoApprovalList(t.taskID),t.isSpinnerVisible=!1}),(function(e){t.isSpinnerVisible=!1}));case 3:case"end":return e.stop()}}),e,this)})))}},{key:"getRuleNumber",value:function(){return n.a(this,void 0,void 0,regeneratorRuntime.mark((function e(){var t=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.commonService.smartDropDownList("ApprovalRuleNo","ApprovalRuleNoId","RuleNo").subscribe((function(e){t.ruleNumList=e}));case 2:case"end":return e.stop()}}),e,this)})))}},{key:"getPoAmountList",value:function(){return n.a(this,void 0,void 0,regeneratorRuntime.mark((function e(){var t=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.commonService.smartDropDownList("ApprovalAmount","ApprovalAmountId","Name").subscribe((function(e){t.approvalAmountList=e}));case 2:case"end":return e.stop()}}),e,this)})))}},{key:"savePoApproval",value:function(){var e=this;this.creatingData.approver=this.employeeNames,this.creatingData.updatedBy=this.userName,this.creatingData.updatedDate=new Date;var t=0;this.employeeNames.forEach((function(e){e.isActive&&t++})),5==this.creatingData.amountId&&this.creatingData.lowerValue&&this.creatingData.upperValue&&Number(this.creatingData.lowerValue)>Number(this.creatingData.upperValue)?this.alertService.showMessage("Error","Upper Value Should be grater than lower Value.",k.d.error):0!=t?(5==this.creatingData.amountId?this.creatingData.value=0:(this.creatingData.lowerValue=0,this.creatingData.upperValue=0),this.poapprovalService.createapprovalrulecommon(this.creatingData).subscribe((function(t){e.alertService.showMessage("Success","Record ".concat(e.isEdit?"Updated":"Created"," successfully"),k.d.success),e.getPoApprovalList(e.taskID),x("#addNewPOApproval").modal("hide")}))):this.alertService.showMessage("Error","Aleast one Active Approver Required.",k.d.error)}},{key:"getDeleteListByStatus",value:function(e){this.currentDeletedstatus=e,this.getPoApprovalList(this.taskID)}},{key:"changeRuleStatus",value:function(e){var t=this;this.isSpinnerVisible=!0,this.poapprovalService.updateActionforActive(e.approvalRuleId,e.isActive,this.userName).subscribe((function(e){t.isSpinnerVisible=!1,t.getPoApprovalList(t.taskID),t.alertService.showMessage("Success","Approval Rule Status change Successfully",k.d.success)}),(function(e){t.isSpinnerVisible=!1}))}},{key:"getruleByStatus",value:function(e){this.currentStatus=e,this.getPoApprovalList(this.taskID)}},{key:"getPoApprovalList",value:function(e){var t=this;this.isSpinnerVisible=!0,this.poapprovalService.getAllApprovalDataByTaskId(e,this.currentDeletedstatus,this.currentStatus).subscribe((function(e){t.poApprovalData=e.map((function(e){return Object.assign({},e,{createdDate:e.createdDate?t.datePipe.transform(e.createdDate,"MM/dd/yyyy hh:mm a"):"",updatedDate:e.updatedDate?t.datePipe.transform(e.updatedDate,"MM/dd/yyyy hh:mm a"):""})})),t.totalRecords=e.length,t.totalPages=Math.ceil(t.totalRecords/t.pageSize),t.isSpinnerVisible=!1}),(function(e){t.isSpinnerVisible=!1}))}},{key:"pageIndexChange",value:function(e){this.pageSize=e.rows}},{key:"getPageCount",value:function(e,t){return Math.ceil(e/t)}},{key:"view",value:function(e){var t=this;this.isSpinnerVisible=!0,this.isEdit=!0,this.creatingData=Object.assign({},this.newDataObject),this.poapprovalService.getapprovalrulebyidwithEmployee(e.approvalRuleId).subscribe((function(e){t.creatingData=e,t.employeeNames=t.creatingData.approver,t.ApprovalRuleName=Object(L.g)("label","value",t.creatingData.approvalTaskId,t.taskNameList),t.ApprovalNumber=Object(L.g)("label","value",t.creatingData.ruleNumberId,t.ruleNumList),t.AmountName=Object(L.g)("label","value",t.creatingData.amountId,t.approvalAmountList),t.arrayEmplsit=[],t.creatingData.approver.forEach((function(e){t.arrayEmplsit.push(e.employeeId)})),t.employeedata("",t.creatingData.managementStructureId,!0),t.getManagementStructureDetails(t.creatingData.managementStructureId,t.employeeId,t.creatingData.managementStructureId),t.creatingData.lowerValue=t.creatingData.lowerValue?Object(L.b)(t.creatingData.lowerValue,2):0,t.creatingData.upperValue=t.creatingData.upperValue?Object(L.b)(t.creatingData.upperValue,2):0,t.creatingData.value=t.creatingData.value?Object(L.b)(t.creatingData.value,2):0,t.isSpinnerVisible=!1,t.enableSaveBtn=!1}),(function(e){t.isSpinnerVisible=!0}))}},{key:"edit",value:function(e){var t=this;this.isSpinnerVisible=!0,this.isEdit=!0,this.creatingData=Object.assign({},this.newDataObject),this.poapprovalService.getapprovalrulebyidwithEmployee(e.approvalRuleId).subscribe((function(e){t.creatingData=e,t.employeeNames=t.creatingData.approver,t.arrayEmplsit=[],t.creatingData.approver.forEach((function(e){t.arrayEmplsit.push(e.employeeId)})),t.employeedata("",t.creatingData.managementStructureId,!0),t.getManagementStructureDetails(t.creatingData.managementStructureId,t.employeeId,t.creatingData.managementStructureId),t.creatingData.lowerValue=t.creatingData.lowerValue?Object(L.b)(t.creatingData.lowerValue,2):0,t.creatingData.upperValue=t.creatingData.upperValue?Object(L.b)(t.creatingData.upperValue,2):0,t.creatingData.value=t.creatingData.value?Object(L.b)(t.creatingData.value,2):0,t.isSpinnerVisible=!1,t.enableSaveBtn=!1}),(function(e){t.isSpinnerVisible=!0}))}},{key:"onChangevalue",value:function(e){this.creatingData[e]=this.creatingData[e]?Object(L.b)(this.creatingData[e],2):0,"upperValue"==e&&this.creatingData.lowerValue&&this.creatingData.upperValue&&Number(this.creatingData.lowerValue)>Number(this.creatingData.upperValue)&&(this.alertService.showMessage("Error","Upper Value Should be grater than lower Value.",k.d.error),this.creatingData.upperValue=0)}},{key:"changePage",value:function(e){this.pageSizeemp=e.rows}},{key:"closeDeleteModal",value:function(){x("#poApprovalDelete").modal("hide")}},{key:"delete",value:function(e){this.rowDataToDelete=e,x("#poApprovalDelete").modal("show")}},{key:"Restore",value:function(e){this.rowDataToDelete=e,x("#poApprovalRestore").modal("show")}},{key:"closeRestore",value:function(){x("#poApprovalRestore").modal("hide")}},{key:"RestorePoApproval",value:function(){var e=this,t=this.rowDataToDelete.approvalRuleId;this.poapprovalService.restoreApprovalById(t,this.userName).subscribe((function(t){e.alertService.showMessage("Success","Rule Resored successfully",k.d.success),e.getPoApprovalList(e.taskID)}))}},{key:"getColorCodeForHistory",value:function(e,t,a){var n=this.auditHistory,r=n.length;if(e>=0&&e<=r)return e+1===r||n[e+1][t]===a}},{key:"getAuditHistoryById",value:function(e){var t=this;this.isSpinnerVisible=!0,this.poapprovalService.getApprovalRuleHistorycommon(e.approvalRuleId).subscribe((function(e){t.auditHistory=e,t.isSpinnerVisible=!1}),(function(e){t.isSpinnerVisible=!1}))}},{key:"deletePoApproval",value:function(){var e=this,t=this.rowDataToDelete.approvalRuleId;this.poapprovalService.deleteApprovalById(t,this.userName).subscribe((function(t){e.alertService.showMessage("Success","Rule Deleted successfully",k.d.success),e.getPoApprovalList(e.taskID)}))}},{key:"handleChanges",value:function(e,t){}},{key:"currentUserMasterCompanyId",get:function(){return this.authService.currentUser?this.authService.currentUser.masterCompanyId:null}},{key:"employeeId",get:function(){return this.authService.currentUser?this.authService.currentUser.employeeId:0}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}},{key:"currentUserManagementStructureId",get:function(){return this.authService.currentUser?this.authService.currentUser.managementStructureId:null}}]),e}();H.ctorParameters=function(){return[{type:U.a},{type:i.DatePipe},{type:F.c},{type:V.a},{type:P.a},{type:k.b}]},n.b([Object(r.Input)()],H.prototype,"moduleType",void 0),H=n.b([Object(r.Component)({selector:"app-all-approval-rule",template:n.c(a("YUwi")).default,providers:[i.DatePipe],styles:[n.c(a("Kppz")).default]})],H);var R=function(){function e(){_classCallCheck(this,e)}return _createClass(e,[{key:"ngOnInit",value:function(){console.log("header1",this.auditHistoryHeader),console.log("data",this.auditHistory)}},{key:"getColorCodeForHistory",value:function(e,t,a){var n=this.auditHistory,r=n.length;if(e>=0&&e<=r)return e+1===r||n[e+1][t]===a}}]),e}();n.b([Object(r.Input)()],R.prototype,"auditHistoryHeader",void 0),n.b([Object(r.Input)()],R.prototype,"auditHistory",void 0),R=n.b([Object(r.Component)({selector:"app-audit-component",template:n.c(a("Aa4m")).default,styles:[n.c(a("dg+g")).default]})],R),a.d(t,"a",(function(){return j}));var j=function e(){_classCallCheck(this,e)};j=n.b([Object(r.NgModule)({imports:[i.CommonModule,i.CommonModule,l.a,d.FormsModule,d.ReactiveFormsModule,c.b,i.CommonModule,p.TableModule,u.ButtonModule,m.SelectButtonModule,h.InputTextModule,v.MultiSelectModule,b.InputSwitchModule,y.CheckboxModule,f.AutoCompleteModule,g.TabViewModule,S.a,I.EditorModule,T.a],declarations:[o,B,H,R],exports:[B,H,R],providers:[C.a,A.a]})],j)},YUwi:function(e,t,a){"use strict";a.r(t),t.default='<div>\r\n    <div class="card new-card">\r\n        <div class="card-header bg-primary new-card-header">\r\n            <div class="row">\r\n                <div class="col">\r\n                    <h4 class="new-card-heading">{{moduleName}} Approval Rule</h4>\r\n                </div>\r\n                <div>\r\n                    <button type="button" class="btn-sm new-btn-primary" data-toggle="modal"\r\n                        data-target="#addNewPOApproval" (click)="addNewApproval()" *ngIf="!isView">\r\n                        Create Approval Rule\r\n                    </button>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class="card-body new-card-body">\r\n\r\n        <p-table #dt class="rpo-table-cstm rro-table-cstm" [value]="poApprovalData" [metaKeySelection]="true"\r\n            [first]="0" [style]="{ width: \'100%\' }" (onPage)="pageIndexChange($event)" [rows]="pageSize"\r\n            [paginator]="true" [pageLinks]="3" [rowsPerPageOptions]="[10, 20, 50, 100]" [columns]="selectedColumns"\r\n            selectionMode="multiple" [resizableColumns]="true" [reorderableColumns]="true" [totalRecords]="totalRecords"\r\n            [scrollable]="true" scrollHeight="450px">\r\n\r\n            <ng-template pTemplate="caption" let-columns>\r\n                \x3c!-- <div style="text-align: right; min-height: 30px;"> --\x3e\r\n                <div class="row">\r\n                    <div class="col">\r\n\r\n                        <p-multiSelect [options]="headers" [(ngModel)]="selectedColumns"\r\n                            [ngModelOptions]="{ standalone: true }" optionLabel="header"\r\n                            selectedItemsLabel="{0} columns selected" [style]="{ minWidth: \'200px\' }"\r\n                            defaultLabel="Choose Columns" style="float:left"></p-multiSelect>\r\n                    </div>\r\n                    <div class="col">\r\n                        <div style="width: auto !important; float: right;"\r\n                            class="inner-addon right-addon w50 inline-block g-filter-search-cstm">\r\n                            <i class="fa fa-search"></i>\r\n                            <input type="text" pInputText size="50" class="form-control"\r\n                                (input)="dt.filterGlobal($event.target.value, \'contains\')" placeholder=" Filter"\r\n                                style="height: 28px !important;" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="row">\r\n                    <div class="col">\r\n                        <button type="button" class="btn btn-primary new-table-button" matTooltip="Download Data"\r\n                            matTooltipPosition="above" pButton icon="fa-download" iconPos="left" label="Export Data"\r\n                            (click)="dt.exportCSV()" style="padding:5px 10px !important;"></button>\r\n                    </div>\r\n                    <div class="col">\r\n                        <div class="">\r\n                            <div class="col" style="width: 395px; float: right; padding-top: 3px;">\r\n                                <div class="form-group">\r\n                                    <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                        <label class="radio-cstm wauto">\r\n                                            <input type="radio" name="RuleEmpStatus" class="form-control" value="Active"\r\n                                                (click)="getruleByStatus(\'Active\')" checked [(ngModel)]="currentStatus" />\r\n                                            <span class="checkmark"></span>Active\r\n                                        </label>\r\n                                    </div>\r\n                                    <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                        <label class="radio-cstm wauto">\r\n                                            <input type="radio" name="RuleEmpStatus" class="form-control" value="InActive"\r\n                                                (click)="getruleByStatus(\'InActive\')" [(ngModel)]="currentStatus" />\r\n                                            <span class="checkmark"></span>In-Active\r\n                                        </label>\r\n                                    </div>\r\n                                    <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                        <label class="radio-cstm wauto">\r\n                                            <input type="radio" name="RuleEmpStatus" class="form-control" value="All"\r\n                                                (click)="getruleByStatus(\'All\')" [(ngModel)]="currentStatus" />\r\n                                            <span class="checkmark"></span>All\r\n                                        </label>\r\n                                    </div>\r\n                                    <div class="checkbox-cstm" style="margin-left: 0; text-align: right;">\r\n                                        <label style="width: auto !important; margin-top: 3px;">\r\n                                            <input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent"\r\n                                                id="cparent" (click)="getDeleteListByStatus($event.target.checked)" />\r\n                                            <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                            Show Deleted List\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </ng-template>\r\n            <ng-template pTemplate="colgroup" let-columns>\r\n                <colgroup>\r\n                    <col *ngFor="let col of columns" style="width:130px" />\r\n                </colgroup>\r\n            </ng-template>\r\n            <ng-template pTemplate="header" let-columns>\r\n                <tr>\r\n\r\n                    <ng-container *ngFor="let col of columns" style="width:150px">\r\n                        <th class="text-center"\r\n                            *ngIf="col.field!=\'companyName\' && col.field!=\'buName\' && col.field!=\'deptName\' && col.field!=\'divName\'"\r\n                            pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n                            {{col.header}}\r\n                            <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                        </th>\r\n                        <th class="text-center" *ngIf="col.field==\'companyName\'" colspan="4" pResizableColumn\r\n                            pReorderableColumn [pSortableColumn]="col.field">\r\n                            Management Structure\r\n                        </th>\r\n                    </ng-container>\r\n                    <th style="width:140px;position:sticky;" *ngIf="selectedColumns.length > 0 && !isView">\r\n                        Action\r\n                    </th>\r\n                </tr>\r\n                <tr>\r\n                    <th style="width:auto" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                        <input style="width:100%;" *ngIf="col.field != \'createdDate\' && col.field != \'updatedDate\'"\r\n                            pInputText type="text" (input)="dt.filter($event.target.value, col.field, \'contains\')" />\r\n                        <input type="date" style="width:100%" class="hidePlaceHolder" *ngIf="col.field == \'createdDate\'"\r\n                            name="createdDate" (change)="dt.filter($event.target.value, col.field, \'contains\')" />\r\n                        <input type="date" style="width:100%" class="hidePlaceHolder" *ngIf="col.field == \'updatedDate\'"\r\n                            name="updatedDate" (change)="dt.filter($event.target.value, col.field, \'contains\')" />\r\n                    </th>\r\n                    <th style="width: 140px;position:sticky;"></th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                <tr [pSelectableRowDblClick]="rowData" [pSelectableRow]="rowData">\r\n                    <ng-container *ngFor="let col of columns">\r\n                        <td class="uiTable_td_ovrflw_control">\r\n                            {{\r\n                                col.field == \'createdDate\'\r\n                                  ? (rowData[col.field] | date: \'MM/dd/yyyy h:mm a\')\r\n                                  : rowData[col.field] && col.field == \'updatedDate\'\r\n                                  ? (rowData[col.field] | date: \'MM/dd/yyyy h:mm a\')\r\n                                  : rowData[col.field] \r\n                              }}\r\n                        </td>\r\n                    </ng-container>\r\n                    <td style="width:140px;position:sticky; border: 1px solid #c8c8c8;" class="action-icons-cstm"\r\n                        *ngIf="!isView">\r\n                        \x3c!-- <button class="btn-edit ptable-wo-btns buton_back_bordernon" mat-icon-button data-target="#addNewMemo" data-toggle="modal"\r\n                      (click)="edit(rowData, i)" matTooltip="Edit">\r\n                          <mat-icon>edit</mat-icon>\r\n                      </button> --\x3e\r\n                        \x3c!-- <button class="btn btn-danger nobg" (click)="deleteMemo(rowData)">\r\n                          <i class="fa fa-trash" style="font-size: 14px;"></i>\r\n                      </button> --\x3e\r\n                      <p-inputSwitch\r\n                        [disabled]="currentDeletedstatus"\r\n                        [(ngModel)]="rowData[\'isActive\']"\r\n                        name="isActive{{ rowIndex }}"\r\n                        matTooltip="{{ rowData[\'isActive\'] ? \'Active\' : \'In Active\' }}"\r\n                        matTooltipPosition="above"\r\n                        (onChange)="changeRuleStatus(rowData)"\r\n                    ></p-inputSwitch>\r\n                        <span data-toggle="modal" data-target="#viewPOApproval"><a class="btn nobg btn-edit-cstm"\r\n                                (click)="view(rowData)" matTooltip="View" matTooltipPosition="above"\r\n                                data-dismiss="modal"><i class="fa fa-eye"></i></a> </span>\r\n                        <span *ngIf="!currentDeletedstatus" data-toggle="modal" data-target="#addNewPOApproval"><a\r\n                                class="btn nobg btn-edit-cstm" (click)="edit(rowData)" matTooltip="Edit"\r\n                                matTooltipPosition="above" data-dismiss="modal"><i class="fa fa-pencil"></i></a> </span>\r\n\r\n                        <span *ngIf="!currentDeletedstatus" data-toggle="modal" data-target="#poApprovalDelete"><a\r\n                                class="btn nobg btn-delete-cstm" (click)="delete(rowData)" matTooltip="Delete"\r\n                                matTooltipPosition="above"><i class="fa fa-trash"></i></a> </span>\r\n                        <span *ngIf="currentDeletedstatus" data-toggle="modal" data-target="#poApprovalRestore"><a\r\n                                class="btn nobg btn-delete-cstm" (click)="Restore(rowData)" matTooltip="Restore"\r\n                                matTooltipPosition="above"><i class="fa fa-undo"></i></a> </span>\r\n\r\n                        <span data-toggle="modal" data-target="#approvalHistory">\r\n                            <a class="btn nobg btn-hist-cstm" (click)="getAuditHistoryById(rowData)"\r\n                                matTooltip="History" matTooltipPosition="above"><i class="fa fa-history"></i></a>\r\n                        </span>\r\n                    </td>\r\n                </tr>\r\n\r\n            </ng-template>\r\n            <ng-template pTemplate="emptymessage" let-columns *ngIf="poApprovalData.length == 0">\r\n                <tr>\r\n                    <td [attr.colspan]="15" class="no-records-cstm">\r\n                        No records found\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate="summary" id="footer">\r\n                <label id="footer">Total:</label>\r\n                <input style="width: 5%;" [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText type="text" />\r\n                &nbsp;&nbsp;\r\n                <label id="footer">Pages Count:</label>\r\n                <input style="width: 5%;" [ngModel]="getPageCount(dt._totalRecords, pageSize)" [disabled]="true"\r\n                    pInputText type="text" />\r\n            </ng-template>\r\n        </p-table>\r\n\r\n    </div>\r\n</div>\r\n\r\n\x3c!-- <ng-template #contentDelete let-c="close" let-d="dismiss">\r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Delete?</h4>\r\n        <button type="button" class="close" aria-label="Close"\r\n            (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class="modal-body">                               \r\n        <strong>\r\n            Employee Name:\r\n            <span class="new-label">{{tagRowData.employee}}</span>\r\n        </strong>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-success"\r\n            (click)="onDeleteTagName()">Yes</button>\r\n        <button type="button" class="btn btn-danger"\r\n            (click)="dismissModel()">No</button>\r\n    </div>\r\n</ng-template> --\x3e\r\n<div class="modal fade" id="poApprovalDelete" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-sm">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" (click)="closeDeleteModal()">&times;</button>\r\n                <h4 class="modal-title">Are You Sure Want to Delete?</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <strong>\r\n                    Rule Number :\r\n                    <span class="new-label">\r\n                        {{rowDataToDelete.ruleNo}}\r\n                    </span>\r\n                </strong>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-primary"\r\n                    (click)="deletePoApproval(); closeDeleteModal();">Yes</button>\r\n                <button type="button" class="btn btn-danger" (click)="closeDeleteModal()">No</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class="modal fade" id="poApprovalRestore" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-sm">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" (click)="closeRestore()">&times;</button>\r\n                <h4 class="modal-title">Are You Sure Want to Restore ?</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <strong>\r\n                    Rule Number :\r\n                    <span class="new-label">\r\n                        {{rowDataToDelete.ruleNo}}\r\n                    </span>\r\n                </strong>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-primary"\r\n                    (click)="RestorePoApproval(); closeRestore();">Yes</button>\r\n                <button type="button" class="btn btn-danger" (click)="closeRestore()">No</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div id="addNewPOApproval" class="modal fade" role="dialog" data-backdrop="static">\r\n    <div class="modal-dialog modal-lg">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal" (click)="isEdit = false;">&times;</button>\r\n                <h4 class="modal-title">{{ isEdit ? \'Edit\' : \'Add\'  }} Approval Rule</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <form #poApprovalForm="ngForm">\r\n                    <div class="col-md-3" style="padding-left: 6px; padding-right: 6px;">\r\n                        <div class="form-group">\r\n                            <label style="width:auto">Approval Rule<span class="clr-red">*</span></label>\r\n                            <select disabled="true" [(ngModel)]="creatingData.approvalTaskId"\r\n                                (ngModelChange)="onSaveChange()" name="taskName" required>\r\n                                <option value="0">Select</option>\r\n                                <option *ngFor="let task of taskNameList" [value]="task.value">{{task.label}}</option>\r\n                            </select>\r\n                        </div>\r\n                        <div class="form-group">\r\n                            <span class="label">Memo </span>\r\n                            \x3c!-- <input type="text" class="form-control text-right" \r\n                     (ngModelChange)="onSaveChange()" \r\n                      [(ngModel)]="creatingData.memo" />  --\x3e\r\n\r\n                            <div class="col-sm-11">\r\n                                <span>\r\n                                    <div class="form-group memo-popup-cstm mat_emo">\r\n                                        <div (ngModelChange)="onSaveChange()" [innerHTML]="creatingData.memo"\r\n                                            matTooltipPosition="above" [matTooltip]="parsedText(creatingData.memo)"\r\n                                            class="form-control" style="width: 100%;" class="text_editor_box"></div>\r\n                                    </div>\r\n                                </span>\r\n                            </div>\r\n                            <div class="col-sm-1" style="margin-top:-5px">\r\n                                <span>\r\n                                    <a class="btn nobg btn-edit-cstm" data-toggle="modal"\r\n                                        (ngModelChange)="onSaveChange()" data-target="#memo-popup"\r\n                                        (click)="onClickMemo()" matTooltip="Add Memo" matTooltipPosition="above">\r\n                                        <i class="fa fa-pencil"></i>\r\n                                    </a>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class="form-group">\r\n                            <label>Rule Number <span class="clr-red">*</span></label>\r\n                            <select [(ngModel)]="creatingData.ruleNumberId" (ngModelChange)="onSaveChange()"\r\n                                name="ruleNum" required>\r\n                                <option value="0">Select</option>\r\n                                <option *ngFor="let rule of ruleNumList" [value]="rule.value">{{rule.label}}</option>\r\n                            </select>\r\n                        </div>\r\n                        \x3c!-- <div class="form-group">\r\n                    <label>Operator *</label>\r\n                    <select [(ngModel)]="creatingData.operatorId" name="operator" required>\r\n                        <option value="null">Select</option>\r\n                        <option value="1">And</option>\r\n                        <option value="2">Or</option>\r\n                    </select>\r\n                </div>  --\x3e\r\n\r\n                    </div>\r\n                    <div class="col-3" style="padding-left: 6px; padding-right: 6px;">\r\n                        <div class="form-group">\r\n                            <label style="margin-top: -8px;">Amount <span class="clr-red">*</span></label>\r\n                            <select [(ngModel)]="creatingData.amountId" (ngModelChange)="onSaveChange()" name="amount"\r\n                                required>\r\n                                <option value="null">Select</option>\r\n                                <option *ngFor="let approvalAmount of approvalAmountList"\r\n                                    [value]="approvalAmount.value">{{approvalAmount.label}}</option>\r\n                            </select>\r\n                        </div>\r\n                        <div class="form-group" *ngIf="creatingData.amountId == 5">\r\n                            <label>Lower Value <span class="clr-red">*</span></label>\r\n                            <input type="text" class="form-control text-right" (ngModelChange)="onSaveChange()"\r\n                                pKeyFilter="money" [(ngModel)]="creatingData.lowerValue"\r\n                                (change)="onChangevalue(\'lowerValue\');" name="lowerValue" required />\r\n                        </div>\r\n                        <div class="form-group" *ngIf="creatingData.amountId == 5">\r\n                            <label>Upper Value <span class="clr-red">*</span></label>\r\n                            <input type="text" class="form-control text-right" (ngModelChange)="onSaveChange()"\r\n                                pKeyFilter="money" [(ngModel)]="creatingData.upperValue"\r\n                                (change)="onChangevalue(\'upperValue\');" name="upperValue" required />\r\n                        </div>\r\n                        <div class="form-group" *ngIf="creatingData.amountId && creatingData.amountId != 5">\r\n                            <label>Value <span class="clr-red">*</span></label>\r\n                            <input type="text" class="form-control text-right" (ngModelChange)="onSaveChange()"\r\n                                (click)="onAddApprover();" pKeyFilter="money" [(ngModel)]="creatingData.value"\r\n                                name="value" (change)="onChangevalue(\'value\');" required />\r\n                        </div>\r\n                        <div class="form-group">\r\n                            <label>Approver</label>\r\n                            <div class="inner-addon right-addon inline-block">\r\n                                <p-autoComplete field="label" class="pautocomp-cstm" [(ngModel)]="employeelist"\r\n                                    title="Add Approver" name="approverId" [suggestions]="approverList"\r\n                                    (completeMethod)="filterapprover($event)" [size]="30" [minLength]="1"\r\n                                    [dropdown]="true" errorMessage="Records not found" [forceSelection]="true"\r\n                                    #approverId="ngModel">\r\n                                </p-autoComplete>\r\n                                <button type="button" class="btn btn-primary but_stl"\r\n                                    (click)="onAddApprover();">Add</button>\r\n                            </div>\r\n                            \x3c!-- <select [(ngModel)]="creatingData.approverId" name="approver" required>\r\n                        <option value="null">Select</option>\r\n                        <option *ngFor="let approver of approverList" [value]="approver.value">{{approver.label}}</option>\r\n                    </select>    --\x3e\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-3" style="padding-left: 6px; padding-right: 6px;">\r\n                        <div class="card">\r\n                            <div class="card-header" style="padding: 10px 12px;">\r\n                                <h5 style="margin-bottom: 0; font-size: 12px;">Management Structure <span\r\n                                        class="clr-red">*</span></h5>\r\n                            </div>\r\n                            <div class="card-body" style="padding: 12px 12px 4px;">\r\n                                <div class="form-group">\r\n                                    <select style="border-radius: 5px !important;" class="form-control"\r\n                                        name="primaryCompany" [(ngModel)]="creatingData.companyId"\r\n                                        (change)="getBUList(creatingData.companyId);" #mCompanyName required>\r\n                                        <option value="0">Select</option>\r\n                                        <option *ngFor="let name of maincompanylist" [ngValue]="name.value">\r\n                                            {{name.label}}</option>\r\n                                    </select>\r\n                                    <div *ngIf="mCompanyName.invalid && (mCompanyName.dirty || mCompanyName.touched)"\r\n                                        class="alert alert-danger alert-danger-cstm">\r\n                                        <div *ngIf="mCompanyName.errors.required">\r\n                                            <small> Company Name is required </small>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <select style="border-radius: 5px !important;" [(ngModel)]="creatingData.buId"\r\n                                        name="primaryBU" (change)="getDivisionlist(creatingData.buId)"\r\n                                        class="form-control">\r\n                                        <option value="0">Select</option>\r\n                                        <option *ngFor="let name of bulist" [ngValue]="name.value">{{name.label}}\r\n                                        </option>\r\n                                    </select>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <select style="border-radius: 5px !important;" class="form-control"\r\n                                        [(ngModel)]="creatingData.divisionId" name="primaryDivision"\r\n                                        (change)="getDepartmentlist(creatingData.divisionId)">\r\n                                        <option value="0">Select</option>\r\n                                        <option *ngFor="let name of divisionlist" [ngValue]="name.value">{{name.label}}\r\n                                        </option>\r\n                                    </select>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <select style="border-radius: 5px !important;" class="form-control"\r\n                                        [(ngModel)]="creatingData.departmentId" name="primaryDept"\r\n                                        (change)="getDepartmentId(creatingData.departmentId)">\r\n                                        <option value="0">Select</option>\r\n                                        <option *ngFor="let name of departmentList" [ngValue]="name.value">\r\n                                            {{name.label}}</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-3"></div>\r\n                    <div class="col-12">\r\n                        <p-table #ptabletagName class="rpo-table-cstm rro-table-cstm tab-table-cstm tag_t"\r\n                            [paginator]="true" [pageLinks]="3"\r\n                             [rowsPerPageOptions]="[5,10,20,50,100]"\r\n                            [scrollable]="true" scrollHeight="250px" \r\n                            [(value)]="employeeNames" [rows]="pageSizeemp"\r\n                            [first]="0" (onPage)="changePage($event)" \r\n                            [columns]="emplColumns"\r\n                            [totalRecords]="totalRecordsemp">\r\n                            <ng-template pTemplate="header" let-columns>\r\n                                <tr>\r\n                                    <th style="width: 50px; text-align: center;">\r\n                                        Flag\r\n                                    </th>\r\n                                    <th style="width: 120px;" *ngFor="let col of columns">\r\n                                        {{ col.header }}\r\n                                    </th>\r\n                                    <th style="width: 120px; text-align: center;">\r\n                                        Primary\r\n                                    </th>\r\n                                    <th style="width: 120px; position:sticky;text-align:center;">\r\n                                        Action\r\n                                    </th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td style="width: 50px; text-align: center;">\r\n                                    </td>\r\n                                    <th style="width: 120px;" style="width:auto" *ngFor="let col of columns"\r\n                                        [ngSwitch]="col.field">\r\n                                        <input [disabled]="col.field == \'isPrimary\'" style="width:100%;" pInputText\r\n                                            type="text" (input)="\r\n                                    ptabletagName.filter($event.target.value, col.field, \'contains\')\r\n                                    " />\r\n                                    </th>\r\n                                    <th style="width: 120px; text-align: center;">\r\n                                    </th>\r\n                                    <th style="width: 120px; position:sticky;text-align:center;">\r\n                                    </th>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="body" let-rowData let-columns="columns" let-i="rowIndex">\r\n                                <tr>\r\n                                    <td style="width: 50px; text-align: center;">\r\n                                        <span class="flag">\r\n                                            <i *ngIf="rowData.isPrimary == true" [ngStyle]="{\r\n                                            color: rowData.isPrimary == true ? \'green\' : \'none\'\r\n                                          }" class="fa fa-flag" matTooltip="Primary" matTooltipPosition="above"\r\n                                                aria-hidden="true"></i>\r\n                                        </span>\r\n                                    </td>\r\n                                    <td style="width: 120px; text-align:left;" *ngFor="let col of columns">\r\n                                        {{ col.field != \'isPrimary\' ? rowData[col.field] : \'\'}}\r\n                                    </td>\r\n                                    <td style="width: 120px; text-align: center;">\r\n                                        <input *ngIf="rowData.isPrimary" disabled type="checkbox" name="isPrimary"\r\n                                            checked>\r\n                                        <input *ngIf="!rowData.isPrimary" (click)="makePrimary(rowData.employeeId)"\r\n                                            type="checkbox" name="isPrimary">\r\n                                    </td>\r\n                                    <td style="width: 120px; position:sticky;text-align:center;">\r\n                                        <p-inputSwitch [(ngModel)]="rowData[\'isActive\']" name="isActive{{i}}"\r\n                                            onLabel="on" offLabel="off"\r\n                                            matTooltip="{{ rowData[\'isActive\'] ? \'Active\' : \'In Active\'}}"\r\n                                            matTooltipPosition="above" (onChange)="handleChange(rowData,$event)">\r\n                                        </p-inputSwitch>\r\n                                        <span *ngIf="!rowData.isPrimary">\r\n                                            <a class="btn nobg btn-delete-cstm"\r\n                                                (click)="openDeletesemployee(contentDeleteTag,rowData,i)"\r\n                                                matTooltip="Remove" matTooltipPosition="above"><i\r\n                                                    class="fa fa-trash"></i></a>\r\n                                        </span>\r\n                                        <span *ngIf="rowData.isPrimary">\r\n                                            <a class="btn nobg btn-delete-cstm" matTooltipPosition="above"><i\r\n                                                    style="color: gray;" class="fa fa-trash"></i></a>\r\n                                        </span>\r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="emptymessage" let-columns *ngIf="employeeNames.length == 0">\r\n                                <tr>\r\n                                    <td [attr.colspan]="4" style="color: red; font-weight: bold; text-align: center">\r\n                                        No records found\r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="summary" id="footer">\r\n                                <label id="footer" class="footer">Total: </label>\r\n                                <input style="width: 5%;" [value]="employeeNames.length" name="totalRecords" disabled\r\n                                    pInputText type="text" />\r\n\r\n                                &nbsp;&nbsp;\r\n                                <label id="footer" class="footer1">Pages Count:</label>\r\n\r\n                                <input style="width: 5%;" [ngModel]="getTaxPageCount(employeeNames.length,pageSizeemp)"\r\n                                    name="page count tax" disabled pInputText type="text" />\r\n                            </ng-template>\r\n                            <ng-template #contentDeleteTag let-c="close" let-d="dismiss">\r\n                                <div class="modal-header">\r\n                                    <h4 class="modal-title">Are You Sure Want to Delete?</h4>\r\n                                    <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n                                        <span aria-hidden="true">&times;</span>\r\n                                    </button>\r\n                                </div>\r\n                                <div class="modal-body">\r\n                                    <strong>\r\n                                        Employee Name:\r\n                                        <span class="new-label">{{tagRowData.employee}}</span>\r\n                                    </strong>\r\n                                </div>\r\n                                <div class="modal-footer">\r\n                                    <button type="button" class="btn btn-success"\r\n                                        (click)="onDeleteTagName()">Yes</button>\r\n                                    <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n                                </div>\r\n                            </ng-template>\r\n                        </p-table>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <div style="float:right">\r\n                    <button class="btn btn-primary btn-primary" (click)="savePoApproval()"\r\n                        style="padding: 6px 12px !important;margin-top: 10px;"\r\n                        [disabled]="!poApprovalForm.valid || employeeNames.length == 0 || creatingData.managementStructureId == 0 || creatingData.approvalTaskId == 0 || creatingData.ruleNumberId == 0 || !enableSaveBtn">\r\n                        {{(isEdit)?\'Update\':\'Save\'}}\r\n                    </button>\r\n                    <button type="button" class="btn btn-danger" data-dismiss="modal"\r\n                        style="padding: 6px 12px !important;margin-top: 10px;" (click)="isEdit = false;">Close</button>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n            <div class="modal fade" id="memo-popup" role="dialog" data-backdrop="static">\r\n                <div class="modal-dialog modal-sm">\r\n                    <div class="modal-content">\r\n                        <div class="modal-header">\r\n                            <button type="button" class="close" data-dismiss="modal">\r\n                                &times;\r\n                            </button>\r\n                            <h4 class="modal-title">Edit Memo</h4>\r\n                        </div>\r\n                        <div class="modal-body">\r\n                            <table class="table table-bordered table-fixed workflow-table-material">\r\n                                <thead>\r\n                                    <th style="color: #fff;">Memo</th>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td style="white-space: inherit">\r\n                                            <p-editor spellcheck="true" [(ngModel)]="memoPopupContent"\r\n                                                [style]="{ height: \'320px\' }" name="memoPopupContent"\r\n                                                (ngModelChange)="onSaveChange()" required></p-editor>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                            <div style="float: right;">\r\n                                <button type="button" class="btn btn-primary"\r\n                                    style="padding: 6px 12px !important; margin-top: 10px;"\r\n                                    (click)="onClickPopupSave()">\r\n                                    Save\r\n                                </button>\r\n                                <button type="button" class="btn btn-danger" (click)="closeMemoModel()"\r\n                                    style="padding: 6px 12px !important; margin-top: 10px;">\r\n                                    Close\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div class="preloader" style="z-index: 10000;" *ngIf="isSpinnerVisible">\r\n                <div class="loading">\r\n                    <div class="lds-roller">\r\n                        <div>\r\n                        </div>\r\n                        <div></div>\r\n                        <div></div>\r\n                        <div></div>\r\n                        <div></div>\r\n                        <div></div>\r\n                        <div></div>\r\n                        <div></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <app-spinner *ngIf="isSpinnerVisible"></app-spinner>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n<div id="approvalHistory" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-xl">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" (click)="closeHistoryModal()">&times;</button>\r\n                <h4 class="modal-title">History of {{moduleName}} Approval Rule</h4>\r\n            </div>\r\n            <div class="modal-body" *ngIf="auditHistory">\r\n                <div class="table-responsive">\r\n                    <table class="table table-bordered" *ngIf="auditHistory.length> 0 else noDatavailable">\r\n                        <thead>\r\n                            <tr>\r\n                                <th rowspan="2">Task Name</th>\r\n                                <th rowspan="2">Rule No</th>\r\n                                <th rowspan="2">Amount</th>\r\n                                <th rowspan="2">Value</th>\r\n                                <th rowspan="2">Lower Value</th>\r\n                                <th rowspan="2">Upper Value</th>\r\n                                <th>Memo</th>\r\n                                <th colspan="4" rowspan="2">Management Structure</th>\r\n                                <th rowspan="2">Approver</th>\r\n                                <th rowspan="2">Created Date</th>\r\n                                <th rowspan="2">Created By</th>\r\n                                <th rowspan="2">Updated Date</th>\r\n                                <th rowspan="2">Updated By</th>\r\n                                <th rowspan="2">Is Active</th>\r\n                                <th rowspan="2">Is Deleted</th>\r\n\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody class="audithistory-cstm">\r\n                            \x3c!--*ngIf="auditHistory.length> 0"--\x3e\r\n                            <tr *ngFor="let audit of auditHistory; let i = index;">\r\n                                \x3c!-- auditHistory[i>0 ? i-1 : i] --\x3e\r\n                                <td\r\n                                    [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'taskName\', audit.taskName)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.taskName}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'ruleNo\', audit.ruleNo)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.ruleNo}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'amount\', audit.amount)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.amount}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'value\', audit.value)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.value}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'lowerValue\', audit.lowerValue)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.lowerValue}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'upperValue\', audit.upperValue)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.upperValue}}</td>\r\n\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'memo\', audit.memo) ? \'black\' : \'red\'}">\r\n                                    <p class="p_editor" [innerHTML]="audit.memo"></p>\r\n                                </td>\r\n\r\n                                <td class="min-w-100"\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'companyName\', audit.companyName) ? \'black\' : \'red\'}">\r\n                                    {{ audit.companyName }}</td>\r\n                                <td class="min-w-100"\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'buName\', audit.buName) ? \'black\' : \'red\'}">\r\n                                    {{ audit.buName }}</td>\r\n                                <td class="min-w-100"\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'divName\', audit.divName) ? \'black\' : \'red\'}">\r\n                                    {{ audit.divName }}</td>\r\n                                <td class="min-w-100"\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'deptName\', audit.deptName) ? \'black\' : \'red\'}">\r\n                                    {{ audit.deptName }}</td>\r\n\r\n\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'approver\', audit.approver)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.approver}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'createdDate\', audit.createdDate)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.createdDate | date: \'MM/dd/yyyy h:mm a \'}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'createdBy\', audit.createdBy)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.createdBy}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'updatedDate\', audit.updatedDate)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.updatedDate | date: \'MM/dd/yyyy h:mm a \'}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'updatedBy\', audit.updatedBy)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.updatedBy}}</td>\r\n                                <td>\r\n                                    <p style="background-color: #fff !important;"> <input type="checkbox"\r\n                                            name="isActive" [(ngModel)]="audit.isActive" disabled></p>\r\n                                </td>\r\n                                <td>\r\n                                    <p style="background-color: #fff !important;"> <input type="checkbox"\r\n                                            name="isActive" [(ngModel)]="audit.isDeleted" disabled></p>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <ng-template #noDatavailable>\r\n                        <div class="text-center">\r\n                            \x3c!-- <img src="../../../../assets/images/binoculars.png" style="height: 100px; width: 100px;"> --\x3e\r\n                            <h4 style="color: #ff5663;">No History Found </h4>\r\n                        </div>\r\n                    </ng-template>\r\n                </div>\r\n            </div>\r\n            <div class="preloader" style="z-index: 10000;" *ngIf="isSpinnerVisible">\r\n                <div class="loading">\r\n                    <div class="lds-roller">\r\n                        <div>\r\n                        </div>\r\n                        <div></div>\r\n                        <div></div>\r\n                        <div></div>\r\n                        <div></div>\r\n                        <div></div>\r\n                        <div></div>\r\n                        <div></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <app-spinner *ngIf="isSpinnerVisible"></app-spinner>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" (click)="closeHistoryModal()">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n<div id="viewPOApproval" class="modal fade" style="z-index: 11000;" role="dialog" data-backdrop="static">\r\n    <div class="modal-dialog modal-lg">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Approval Rule1</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <form #poApprovalForm1="ngForm">\r\n                    <div class="col-md-4" style="padding-left: 6px; padding-right: 6px;">\r\n                        \x3c!-- <div class="form-group">\r\n                            <label style="margin-top: -8px;">Approval Rule<span class="clr-red">*</span></label>\r\n                            <select disabled="true" [(ngModel)]="creatingData.approvalTaskId"\r\n                                (ngModelChange)="onSaveChange()" name="taskName" required>\r\n                                <option value="0">Select</option>\r\n                                <option *ngFor="let task of taskNameList" [value]="task.value">{{task.label}}</option>\r\n                            </select>\r\n                        </div> --\x3e\r\n                        <p><span class="label"><b>Approval Rule <span class="clr-red">*</span> : </b></span>\r\n                            <span class="value">\r\n                                {{creatingData.approvalTaskId ? ApprovalRuleName : \'-\'}}\r\n                            </span></p>\r\n                        \x3c!-- <div class="form-group">\r\n                            <span class="label">Memo </span>\r\n                           \r\n                            <div class="col-sm-12">\r\n                                <span>\r\n                                    <div class="form-group memo-popup-cstm mat_emo">\r\n                                        <div (ngModelChange)="onSaveChange()" [innerHTML]="creatingData.memo"\r\n                                            matTooltipPosition="above"  disabled="true" [matTooltip]="parsedText(creatingData.memo)"\r\n                                            class="form-control" style="width: 100%;" class="text_editor_box"></div>\r\n                                    </div>\r\n                                </span>\r\n                            </div>                            \r\n                        </div> --\x3e\r\n                        <p>\r\n                            <span class="label"><b>Memo: </b></span>\r\n                            <span class="value">\r\n                                <p class="p-0 m-0 p_textEditor" [innerHTML]="creatingData.memo"> </p>\r\n                            </span>\r\n                        </p>\r\n                        \x3c!-- <div class="form-group">\r\n                            <label>Rule Number <span class="clr-red">*</span></label>\r\n                            <select [(ngModel)]="creatingData.ruleNumberId"  disabled="true" (ngModelChange)="onSaveChange()"\r\n                                name="ruleNum" required>\r\n                                <option value="0">Select</option>\r\n                                <option *ngFor="let rule of ruleNumList" [value]="rule.value">{{rule.label}}</option>\r\n                            </select>\r\n                        </div> --\x3e\r\n\r\n                        <p><span class="label"><b>Rule number <span class="clr-red">*</span> : </b></span>\r\n                            <span class="value">\r\n                                {{creatingData.ruleNumberId ? ApprovalRuleName : \'-\'}}\r\n                            </span></p>\r\n                        \x3c!-- <div class="form-group">\r\n                        <label>Operator *</label>\r\n                        <select [(ngModel)]="creatingData.operatorId" name="operator" required>\r\n                            <option value="null">Select</option>\r\n                            <option value="1">And</option>\r\n                            <option value="2">Or</option>\r\n                        </select>\r\n                    </div>  --\x3e\r\n\r\n\r\n                        \x3c!-- <div class="form-group">\r\n                            <label style="margin-top: -8px;">Amount <span class="clr-red">*</span></label>\r\n                            <select [(ngModel)]="creatingData.amountId"  disabled="true" (ngModelChange)="onSaveChange()" name="amount"\r\n                                required>\r\n                                <option value="null">Select</option>\r\n                                <option *ngFor="let approvalAmount of approvalAmountList"\r\n                                    [value]="approvalAmount.value">{{approvalAmount.label}}</option>\r\n                            </select>\r\n                        </div> --\x3e\r\n                        <p><span class="label"><b>Amount <span class="clr-red">*</span> : </b></span>\r\n                            <span class="value">\r\n                                {{creatingData.amountId ? AmountName : \'-\'}}\r\n                            </span></p>\r\n\r\n                        \x3c!-- <div class="form-group" *ngIf="creatingData.amountId == 5">\r\n                            <label>Lower Value <span class="clr-red">*</span></label>\r\n                            <input type="text" class="form-control text-right"  disabled="true" (ngModelChange)="onSaveChange()"\r\n                                pKeyFilter="money" [(ngModel)]="creatingData.lowerValue"\r\n                                (change)="onChangevalue(\'lowerValue\');" name="lowerValue" required />\r\n                        </div> --\x3e\r\n                        <p *ngIf="creatingData.amountId == 5"><span class="label"><b>Lower Value <span\r\n                                        class="clr-red">*</span> : </b></span>\r\n                            <span class="value">\r\n                                {{creatingData.lowerValue ? creatingData.lowerValue : \'-\'}}\r\n                            </span></p>\r\n\r\n                        \x3c!-- <div class="form-group" *ngIf="creatingData.amountId == 5">\r\n                            <label>Upper Value <span class="clr-red">*</span></label>\r\n                            <input type="text" class="form-control text-right"  disabled="true" (ngModelChange)="onSaveChange()"\r\n                                pKeyFilter="money" [(ngModel)]="creatingData.upperValue"\r\n                                (change)="onChangevalue(\'upperValue\');" name="upperValue" required />\r\n                        </div> --\x3e\r\n                        <p *ngIf="creatingData.amountId == 5"><span class="label"><b>Upper Value <span\r\n                                        class="clr-red">*</span> : </b></span>\r\n                            <span class="value">\r\n                                {{creatingData.upperValue ? creatingData.upperValue : \'-\'}}\r\n                            </span></p>\r\n                        \x3c!-- <div class="form-group" *ngIf="creatingData.amountId && creatingData.amountId != 5">\r\n                            <label>Value <span class="clr-red">*</span></label>\r\n                            <input type="text" class="form-control text-right"  disabled="true" (click)="onAddApprover();"\r\n                                pKeyFilter="money" [(ngModel)]="creatingData.value" name="value"\r\n                                (change)="onChangevalue(\'value\');" required />\r\n                        </div>     --\x3e\r\n                        <p *ngIf="creatingData.amountId && creatingData.amountId != 5">\r\n                            <span class="label"><b>Value <span class="clr-red">*</span> : </b></span>\r\n                            <span class="value">\r\n                                {{creatingData.value ? creatingData.value : \'-\'}}\r\n                            </span></p>\r\n                    </div>\r\n\r\n                    <div class="col-3" style="padding-left: 6px; padding-right: 6px;">\r\n                        <div class="card">\r\n                            <div class="card-header" style="padding: 10px 12px;">\r\n                                <h5 style="margin-bottom: 0; font-size: 12px;">Management Structure <span\r\n                                        class="clr-red">*</span></h5>\r\n                            </div>\r\n                            <div class="card-body" style="padding: 12px 12px 4px;">\r\n                                <div class="form-group">\r\n                                    <select style="border-radius: 5px !important;" class="form-control"\r\n                                        name="primaryCompany" [disabled]="true" [(ngModel)]="creatingData.companyId"\r\n                                        (change)="getBUList(creatingData.companyId);" #mCompanyName required>\r\n                                        <option value="0">Select</option>\r\n                                        <option *ngFor="let name of maincompanylist" [ngValue]="name.value">\r\n                                            {{name.label}}</option>\r\n                                    </select>\r\n                                    <div *ngIf="mCompanyName.invalid && (mCompanyName.dirty || mCompanyName.touched)"\r\n                                        class="alert alert-danger alert-danger-cstm">\r\n                                        <div *ngIf="mCompanyName.errors.required">\r\n                                            <small> Company Name is required </small>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <select style="border-radius: 5px !important;" [(ngModel)]="creatingData.buId"\r\n                                        name="primaryBU" [disabled]="true" (change)="getDivisionlist(creatingData.buId)"\r\n                                        class="form-control">\r\n                                        <option value="0">Select</option>\r\n                                        <option *ngFor="let name of bulist" [ngValue]="name.value">{{name.label}}\r\n                                        </option>\r\n                                    </select>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <select style="border-radius: 5px !important;" class="form-control"\r\n                                        [(ngModel)]="creatingData.divisionId" [disabled]="true" name="primaryDivision"\r\n                                        (change)="getDepartmentlist(creatingData.divisionId)">\r\n                                        <option value="0">Select</option>\r\n                                        <option *ngFor="let name of divisionlist" [ngValue]="name.value">{{name.label}}\r\n                                        </option>\r\n                                    </select>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <select style="border-radius: 5px !important;" class="form-control"\r\n                                        [(ngModel)]="creatingData.departmentId" [disabled]="true" name="primaryDept"\r\n                                        (change)="getDepartmentId(creatingData.departmentId)">\r\n                                        <option value="0">Select</option>\r\n                                        <option *ngFor="let name of departmentList" [ngValue]="name.value">\r\n                                            {{name.label}}</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-3"></div>\r\n                    <div class="col-12">\r\n                        <p-table #ptabletagName class="rpo-table-cstm rro-table-cstm tab-table-cstm tag_t"\r\n                            [paginator]="true" [pageLinks]="3" [rowsPerPageOptions]="[5,10,20,50,100]"\r\n                            [scrollable]="true" scrollHeight="250px" [(value)]="employeeNames" [rows]="pageSizeemp"\r\n                            [first]="0" (onPage)="changePage($event)" [columns]="emplColumns"\r\n                            [totalRecords]="totalRecordsemp">\r\n                            <ng-template pTemplate="header" let-columns>\r\n                                <tr>\r\n                                    <th style="width: 50px; text-align: center;">\r\n                                        Flag\r\n                                    </th>\r\n                                    <th style="width: 120px;" *ngFor="let col of columns">\r\n                                        {{ col.header }}\r\n                                    </th>\r\n                                    <th style="width: 120px; text-align: center;">\r\n                                        Primary\r\n                                    </th>\r\n                                    <th style="width: 120px; position:sticky;text-align:center;">\r\n                                        Action\r\n                                    </th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td style="width: 50px; text-align: center;">\r\n                                    </td>\r\n                                    <th style="width: 120px;" style="width:auto" *ngFor="let col of columns"\r\n                                        [ngSwitch]="col.field">\r\n                                        <input [disabled]="col.field == \'isPrimary\'" style="width:100%;" pInputText\r\n                                            type="text" (input)="\r\n                                        ptabletagName.filter($event.target.value, col.field, \'contains\')\r\n                                        " />\r\n                                    </th>\r\n                                    <th style="width: 120px; text-align: center;">\r\n                                    </th>\r\n                                    <th style="width: 120px; position:sticky;text-align:center;">\r\n                                    </th>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="body" let-rowData let-columns="columns" let-i="rowIndex">\r\n                                <tr>\r\n                                    <td style="width: 50px; text-align: center;">\r\n                                        <span class="flag">\r\n                                            <i *ngIf="rowData.isPrimary == true" [ngStyle]="{\r\n                                                color: rowData.isPrimary == true ? \'green\' : \'none\'\r\n                                              }" class="fa fa-flag" matTooltip="Primary" matTooltipPosition="above"\r\n                                                aria-hidden="true"></i>\r\n                                        </span>\r\n                                    </td>\r\n                                    <td style="width: 120px; text-align:left;" *ngFor="let col of columns">\r\n                                        {{ col.field != \'isPrimary\' ? rowData[col.field] : \'\' &&\r\n                                    col.field==\'employee\'?rowData[col.field]:\'\'}}\r\n                                    </td>\r\n                                    <td style="width: 120px; text-align: center;">\r\n                                        <input *ngIf="rowData.isPrimary" disabled type="checkbox" name="isPrimary"\r\n                                            checked>\r\n                                        <input *ngIf="!rowData.isPrimary" disabled type="checkbox" name="isPrimary">\r\n                                    </td>\r\n                                    <td style="width: 120px; position:sticky;text-align:center;">\r\n                                        <p-inputSwitch [disabled]="true" [(ngModel)]="rowData[\'isActive\']"\r\n                                            name="isActive{{i}}"\r\n                                            matTooltip="{{ rowData[\'isActive\'] ? \'Active\' : \'In Active\'}}"\r\n                                            matTooltipPosition="above" (onChange)="handleChanges(rowData, $event)">\r\n                                        </p-inputSwitch>\r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="emptymessage" let-columns *ngIf="employeeNames.length == 0">\r\n                                <tr>\r\n                                    <td [attr.colspan]="4" style="color: red; font-weight: bold; text-align: center">\r\n                                        No records found\r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="summary" id="footer">\r\n                                <label id="footer" class="footer">Total: </label>\r\n                                <input style="width: 5%;" [value]="employeeNames.length" name="totalRecords" disabled\r\n                                    pInputText type="text" />\r\n\r\n                                &nbsp;&nbsp;\r\n                                <label id="footer" class="footer1">Pages Count:</label>\r\n\r\n                                <input style="width: 5%;" [ngModel]="getTaxPageCount(employeeNames.length,pageSizeemp)"\r\n                                    name="page count tax" disabled pInputText type="text" />\r\n                            </ng-template>\r\n                        </p-table>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <div style="float:right">\r\n                    <button type="button" class="btn btn-danger" data-dismiss="modal"\r\n                        style="padding: 6px 12px !important;margin-top: 10px;" (click)="isEdit = false;">Close</button>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n            <div class="modal fade" id="memo-popup" role="dialog" data-backdrop="static">\r\n                <div class="modal-dialog modal-sm">\r\n                    <div class="modal-content">\r\n                        <div class="modal-header">\r\n                            <button type="button" class="close" data-dismiss="modal">\r\n                                &times;\r\n                            </button>\r\n                            <h4 class="modal-title">Edit Memo</h4>\r\n                        </div>\r\n                        <div class="modal-body">\r\n                            <table class="table table-bordered table-fixed workflow-table-material">\r\n                                <thead>\r\n                                    <th style="color: #fff;">Memo</th>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td style="white-space: inherit">\r\n                                            <p-editor spellcheck="true" [(ngModel)]="memoPopupContent"\r\n                                                [style]="{ height: \'320px\' }" name="memoPopupContent"\r\n                                                (ngModelChange)="onSaveChange()" required></p-editor>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                            <div style="float: right;">\r\n                                <button type="button" class="btn btn-primary"\r\n                                    style="padding: 6px 12px !important; margin-top: 10px;"\r\n                                    (click)="onClickPopupSave()">\r\n                                    Save\r\n                                </button>\r\n                                <button type="button" class="btn btn-danger" (click)="closeMemoModel()"\r\n                                    style="padding: 6px 12px !important; margin-top: 10px;">\r\n                                    Close\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div class="preloader" style="z-index: 10000;" *ngIf="isSpinnerVisible">\r\n                <div class="loading">\r\n                    <div class="lds-roller">\r\n                        <div>\r\n                        </div>\r\n                        <div></div>\r\n                        <div></div>\r\n                        <div></div>\r\n                        <div></div>\r\n                        <div></div>\r\n                        <div></div>\r\n                        <div></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <app-spinner *ngIf="isSpinnerVisible"></app-spinner>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n<div class="preloader" style="z-index: 10000;" *ngIf="isSpinnerVisible">\r\n    <div class="loading">\r\n        <div class="lds-roller">\r\n            <div>\r\n            </div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<app-spinner *ngIf="isSpinnerVisible"></app-spinner>'},ZDLp:function(e,t,a){"use strict";a.r(t),t.default=".red {\n  background-color: #ED2939 !important;\n}\n\n.gray-background {\n  background-color: #c9c9c9 !important;\n}\n\n.btn-header-list {\n  text-align: right;\n  margin-right: -20px !important;\n  margin-top: 15px;\n  margin-bottom: 0px !important;\n}\n\nlabel {\n  text-align: left;\n  width: 150px;\n  margin-right: 0;\n  font-weight: normal;\n}\n\ninput[type=text], input[type=number], select {\n  height: 24px !important;\n  border-radius: 5px !important;\n}\n\ntextarea {\n  border-radius: 5px !important;\n}\n\n.head-notes {\n  height: 25px !important;\n}\n\n.inner-addon .ui-autocomplete-input {\n  width: 100% !important;\n}\n\n.po-head {\n  font-weight: bold;\n  font-size: 16px;\n  color: #295d92;\n}\n\n.partsList-table-tr th {\n  min-width: 100px;\n}\n\n.addpn-btn {\n  padding: 5px 10px !important;\n  font-size: 13px;\n}\n\na.fa.fa-plus-circle {\n  color: green !important;\n}\n\n.partsList-modal .form-group {\n  margin-bottom: 6px !important;\n}\n\n.rpo-table-cstm th {\n  padding: 8px 5px !important;\n}\n\n.child-add-icon {\n  cursor: pointer;\n  margin: 2px -12px;\n}\n\n.child-add-icon a:before, .child-add-icon i:before {\n  font-size: 16px;\n}\n\n.approver-details-cstm {\n  margin-top: 7px;\n}\n\n.approver-details-cstm p {\n  float: left;\n  margin-right: 40px;\n}\n\n.approver-tab-cstm .col-md-3 {\n  padding-right: 40px;\n  margin-right: 0;\n}\n\n.approver-tab-cstm .form-row {\n  margin-top: 10px;\n}\n\n.pas-table-cstm thead tr th {\n  text-align: center;\n}\n\n.ui-tabview .ui-tabview-panel {\n  overflow: initial !important;\n}\n\n.approvers-table tr th {\n  padding: 5px 10px;\n  text-align: center;\n}\n\n.approvers-table tr td {\n  padding: 5px;\n}\n\n.approverslist-table tr th {\n  padding: 5px 10px;\n  text-align: center;\n  min-width: 80px;\n}\n\n.approverslist-table tr td {\n  padding: 5px;\n}\n\n@media (min-width: 768px) {\n  .col-md-3 {\n    max-width: 22%;\n    margin-right: 15px;\n  }\n\n  .col-md-4 {\n    max-width: 31.5%;\n    margin-right: 15px;\n  }\n\n  .col-md-9 {\n    max-width: 70%;\n    margin-right: 15px;\n  }\n\n  #addContactInfo .col-md-6 {\n    max-width: 44%;\n    margin-right: 15px;\n  }\n}\n\n.vendorCapes-generalInfo .label {\n  width: 100px !important;\n}\n\n.vendorCapes-generalInfo .value {\n  width: calc(100% - 100px) !important;\n}"},ZTpb:function(e,t,a){"use strict";a.r(t),t.default=""},"dg+g":function(e,t,a){"use strict";a.r(t),t.default=".tableFixHead {\n  overflow-y: auto;\n  height: 450px;\n}\n\n.tableFixHead thead th {\n  position: -webkit-sticky;\n  position: sticky;\n  top: 0;\n}\n\ntable {\n  border-collapse: collapse;\n  width: 100%;\n}\n\nth,\ntd {\n  padding: 8px 16px;\n  border: 1px solid #ccc;\n}\n\nth {\n  background: #4298ff !important;\n}"},jyDa:function(e,t,a){"use strict";a.r(t),t.default='.select-read-only {\n  border: none;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  text-indent: 1px;\n  text-overflow: "";\n  box-shadow: none !important;\n}\n\nselect-read-only {\n  background-color: white !important;\n}\n\nselect:disabled {\n  background-color: white !important;\n}'},kFbg:function(e,t,a){"use strict";a.d(t,"a",(function(){return n}));var n=function e(){_classCallCheck(this,e),this.docName="",this.docMemo="",this.docDescription=""}},rY54:function(e,t,a){"use strict";var n;a.d(t,"a",(function(){return n})),function(e){e[e.Customer=1]="Customer",e[e.Vendor=2]="Vendor",e[e.Manufacturer=3]="Manufacturer",e[e.Others=4]="Others",e[e.Revision=5]="Revision",e[e.Version=6]="Version",e[e.SalesQuate=7]="SalesQuate",e[e.Employee=8]="Employee",e[e.Company=9]="Company",e[e.SalesOrder=10]="SalesOrder",e[e.SOPickTicket=11]="SOPickTicket",e[e.PurchaseOrder=13]="PurchaseOrder"}(n||(n={}))},wOIX:function(e,t,a){"use strict";a.r(t),t.default=".coustomTable tr th {\n  font-weight: 600 !important;\n  font-size: 10.5px !important;\n  color: #fff !important;\n  background-color: #4298ff;\n  border: 1px solid #3a7fd2;\n  letter-spacing: 0.3px;\n  line-height: 25px;\n  text-align: center;\n}\n\n.coustomTable tr td {\n  padding: 5px 2px !important;\n  white-space: nowrap;\n  color: #222;\n  background: inherit;\n  border: 1px solid #c8c8c8;\n  font-size: 11px !important;\n}\n\n.workflow-table-material {\n  padding-bottom: 50%;\n}\n\n.fileupload {\n  overflow: scroll;\n}\n\ninput[type=number], input[type=text], input[type=email], select {\n  height: 24px !important;\n  border-radius: 5px !important;\n}\n\n.modal-body p {\n  overflow: auto !important;\n}\n\n.form-horizontal b {\n  top: auto !important;\n}\n\n.email-content {\n  max-height: 300px;\n  overflow: scroll;\n}\n\n.email-content span p {\n  overflow: scroll;\n}"}}]);